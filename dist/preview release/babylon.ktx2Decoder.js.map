{"version":3,"sources":["webpack://BABYLONJS/ktx2Decoder/src/webpack/universalModuleDefinition","webpack://BABYLONJS/ktx2Decoder/src/webpack/bootstrap","webpack://BABYLONJS/node_modules/tslib/tslib.es6.js","webpack://BABYLONJS/ktx2Decoder/src/(webpack)/buildin/global.js","webpack://BABYLONJS/ktx2Decoder/src/Misc/dataReader.ts","webpack://BABYLONJS/ktx2Decoder/src/Misc/index.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/index.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/liteTranscoder.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_ASTC.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_BC7.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_SRGB.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_UNORM.ts","webpack://BABYLONJS/ktx2Decoder/src/Transcoders/mscTranscoder.ts","webpack://BABYLONJS/ktx2Decoder/src/index.ts","webpack://BABYLONJS/ktx2Decoder/src/ktx2Decoder.ts","webpack://BABYLONJS/ktx2Decoder/src/ktx2FileReader.ts","webpack://BABYLONJS/ktx2Decoder/src/legacy/legacy.ts","webpack://BABYLONJS/ktx2Decoder/src/transcodeDecisionTree.ts","webpack://BABYLONJS/ktx2Decoder/src/transcoder.ts","webpack://BABYLONJS/ktx2Decoder/src/transcoderManager.ts","webpack://BABYLONJS/ktx2Decoder/src/wasmMemoryManager.ts","webpack://BABYLONJS/ktx2Decoder/src/zstddec.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;AACvG;AACA;;AAEO;AACP;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAk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","file":"babylon.ktx2Decoder.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"KTX2DECODER\"] = factory();\n\telse\n\t\troot[\"KTX2DECODER\"] = factory();\n})((typeof self !== \"undefined\" ? self : typeof global !== \"undefined\" ? global : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./legacy/legacy.ts\");\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * Utility class for reading from a data buffer\r\n */\r\nexport class DataReader {\r\n    /**\r\n     * The current byte offset from the beginning of the data buffer.\r\n     */\r\n    public get byteOffset() {\r\n        return this._dataByteOffset;\r\n    }\r\n\r\n    private _dataView: DataView;\r\n    private _dataByteOffset: number;\r\n\r\n    /**\r\n     * Constructor\r\n     * @param buffer The buffer to set\r\n     * @param byteOffset The starting offset in the buffer\r\n     * @param byteLength The byte length of the buffer\r\n     */\r\n    constructor(buffer: ArrayBuffer | ArrayBufferView, byteOffset?: number, byteLength?: number) {\r\n        if ((buffer as ArrayBufferView).buffer) {\r\n            this._dataView = new DataView((buffer as ArrayBufferView).buffer, (buffer as ArrayBufferView).byteOffset + (byteOffset ?? 0), byteLength ?? (buffer as ArrayBufferView).byteLength);\r\n        } else {\r\n            this._dataView = new DataView(buffer as ArrayBuffer, byteOffset ?? 0, byteLength ?? (buffer as ArrayBuffer).byteLength);\r\n        }\r\n\r\n        this._dataByteOffset = 0;\r\n    }\r\n\r\n    /**\r\n     * Read a unsigned 8-bit integer from the currently loaded data range.\r\n     * @returns The 8-bit integer read\r\n     */\r\n    public readUint8(): number {\r\n        const value = this._dataView.getUint8(this._dataByteOffset);\r\n        this._dataByteOffset += 1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Read a signed 8-bit integer from the currently loaded data range.\r\n     * @returns The 8-bit integer read\r\n     */\r\n    public readInt8(): number {\r\n        const value = this._dataView.getInt8(this._dataByteOffset);\r\n        this._dataByteOffset += 1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Read a unsigned 16-bit integer from the currently loaded data range.\r\n     * @returns The 16-bit integer read\r\n     */\r\n    public readUint16(): number {\r\n        const value = this._dataView.getUint16(this._dataByteOffset, true);\r\n        this._dataByteOffset += 2;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Read a signed 16-bit integer from the currently loaded data range.\r\n     * @returns The 16-bit integer read\r\n     */\r\n    public readInt16(): number {\r\n        const value = this._dataView.getInt16(this._dataByteOffset, true);\r\n        this._dataByteOffset += 2;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Read a unsigned 32-bit integer from the currently loaded data range.\r\n     * @returns The 32-bit integer read\r\n     */\r\n    public readUint32(): number {\r\n        const value = this._dataView.getUint32(this._dataByteOffset, true);\r\n        this._dataByteOffset += 4;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Read a signed 32-bit integer from the currently loaded data range.\r\n     * @returns The 32-bit integer read\r\n     */\r\n    public readInt32(): number {\r\n        const value = this._dataView.getInt32(this._dataByteOffset, true);\r\n        this._dataByteOffset += 4;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Read a unsigned 32-bit integer from the currently loaded data range.\r\n     * @returns The 32-bit integer read\r\n     */\r\n    public readUint64(): number {\r\n        // split 64-bit number into two 32-bit (4-byte) parts\r\n        const left = this._dataView.getUint32(this._dataByteOffset, true);\r\n        const right = this._dataView.getUint32(this._dataByteOffset + 4, true);\r\n\r\n        // combine the two 32-bit values\r\n        const combined = true ? left + (2 ** 32 * right) : (2 ** 32 * left) + right;\r\n\r\n        /*if (!Number.isSafeInteger(combined)) {\r\n            console.warn('DataReader: ' + combined + ' exceeds MAX_SAFE_INTEGER. Precision may be lost.');\r\n        }*/\r\n\r\n        this._dataByteOffset += 8;\r\n        return combined;\r\n    }\r\n\r\n    /**\r\n     * Read a byte array from the currently loaded data range.\r\n     * @param byteLength The byte length to read\r\n     * @returns The byte array read\r\n     */\r\n    public readUint8Array(byteLength: number): Uint8Array {\r\n        const value = new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + this._dataByteOffset, byteLength);\r\n        this._dataByteOffset += byteLength;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Skips the given byte length the currently loaded data range.\r\n     * @param byteLength The byte length to skip\r\n     * @returns This instance\r\n     */\r\n    public skipBytes(byteLength: number) {\r\n        this._dataByteOffset += byteLength;\r\n        return this;\r\n    }\r\n}\r\n","export * from \"./dataReader\";\r\n","export * from \"./liteTranscoder\";\r\nexport * from \"./liteTranscoder_UASTC_ASTC\";\r\nexport * from \"./liteTranscoder_UASTC_BC7\";\r\nexport * from \"./liteTranscoder_UASTC_RGBA_UNORM\";\r\nexport * from \"./liteTranscoder_UASTC_RGBA_SRGB\";\r\nexport * from \"./mscTranscoder\";\r\n","import { Transcoder, sourceTextureFormat, transcodeTarget } from '../transcoder';\r\nimport { WASMMemoryManager } from '../wasmMemoryManager';\r\nimport { KTX2FileReader, IKTX2_ImageDesc } from '../ktx2FileReader';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class LiteTranscoder extends Transcoder {\r\n\r\n    private _modulePath: string;\r\n    private _modulePromise: Promise<{ module: any }>;\r\n    private _memoryManager: WASMMemoryManager;\r\n    protected _transcodeInPlace: boolean;\r\n\r\n    protected _loadModule(): Promise<{ module: any }> {\r\n        if (this._modulePromise) {\r\n            return this._modulePromise;\r\n        }\r\n\r\n        this._modulePromise = WASMMemoryManager.LoadWASM(this._modulePath).then((wasmBinary) => {\r\n            return new Promise((resolve) => {\r\n                WebAssembly.instantiate(wasmBinary as ArrayBuffer, { env: { memory: this._memoryManager.wasmMemory } }).then((moduleWrapper) => {\r\n                    resolve({ module: moduleWrapper.instance.exports });\r\n                });\r\n            });\r\n        });\r\n\r\n        return this._modulePromise;\r\n    }\r\n\r\n    protected get memoryManager(): WASMMemoryManager {\r\n        return this._memoryManager;\r\n    }\r\n\r\n    protected setModulePath(modulePath: string): void {\r\n        this._modulePath = modulePath;\r\n    }\r\n\r\n    public initialize(): void {\r\n        this._transcodeInPlace = true;\r\n    }\r\n\r\n    public needMemoryManager(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public setMemoryManager(memoryMgr: WASMMemoryManager): void {\r\n        this._memoryManager = memoryMgr;\r\n    }\r\n\r\n    public transcode(src: sourceTextureFormat, dst: transcodeTarget, level: number, width: number, height: number, uncompressedByteLength: number, ktx2Reader: KTX2FileReader, imageDesc: IKTX2_ImageDesc | null, encodedData: Uint8Array): Promise<Uint8Array | null> {\r\n        return this._loadModule().then((moduleWrapper: any) => {\r\n            const transcoder: any = moduleWrapper.module;\r\n            const [textureView, uncompressedTextureView, nBlocks] = this._prepareTranscoding(width, height, uncompressedByteLength, encodedData);\r\n\r\n            return transcoder.transcode(nBlocks) === 0 ? (this._transcodeInPlace ? textureView.slice() : uncompressedTextureView!.slice()) : null;\r\n        });\r\n    }\r\n\r\n    protected _prepareTranscoding(width: number, height: number, uncompressedByteLength: number, encodedData: Uint8Array, forceRGBA = false): [Uint8Array, Uint8Array | null, number] {\r\n        const nBlocks = ((width + 3) >> 2) * ((height + 3) >> 2);\r\n\r\n        if (forceRGBA) {\r\n            uncompressedByteLength = width * ((height + 3) >> 2) * 4 * 4;\r\n        }\r\n\r\n        const texMemoryPages = ((nBlocks * 16 + 65535 + (this._transcodeInPlace ? 0 : uncompressedByteLength)) >> 16) + 1;\r\n\r\n        const textureView = this.memoryManager.getMemoryView(texMemoryPages, 65536, nBlocks * 16);\r\n\r\n        const uncompressedTextureView = this._transcodeInPlace ? null : new Uint8Array(this._memoryManager.wasmMemory.buffer, 65536 + nBlocks * 16, forceRGBA ? width * height * 4 : uncompressedByteLength);\r\n\r\n        textureView.set(encodedData);\r\n\r\n        return [textureView, uncompressedTextureView, nBlocks]\r\n    }\r\n}\r\n","import { sourceTextureFormat, transcodeTarget } from '../transcoder';\r\nimport { LiteTranscoder } from './liteTranscoder';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class LiteTranscoder_UASTC_ASTC extends LiteTranscoder {\r\n    /**\r\n     * URL to use when loading the wasm module for the transcoder\r\n     */\r\n    public static WasmModuleURL = \"https://preview.babylonjs.com/ktx2Transcoders/uastc_astc.wasm\";\r\n\r\n    public static CanTranscode(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean): boolean {\r\n        return src === sourceTextureFormat.UASTC4x4 && dst === transcodeTarget.ASTC_4x4_RGBA;\r\n    }\r\n\r\n    public static Name = \"UniversalTranscoder_UASTC_ASTC\";\r\n\r\n    public getName(): string {\r\n        return LiteTranscoder_UASTC_ASTC.Name;\r\n    }\r\n\r\n    public initialize(): void {\r\n        super.initialize();\r\n        this.setModulePath(LiteTranscoder_UASTC_ASTC.WasmModuleURL);\r\n    }\r\n}\r\n","import { sourceTextureFormat, transcodeTarget } from '../transcoder';\r\nimport { LiteTranscoder } from './liteTranscoder';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class LiteTranscoder_UASTC_BC7 extends LiteTranscoder {\r\n    /**\r\n     * URL to use when loading the wasm module for the transcoder\r\n     */\r\n    public static WasmModuleURL = \"https://preview.babylonjs.com/ktx2Transcoders/uastc_bc7.wasm\";\r\n\r\n    public static CanTranscode(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean): boolean {\r\n        return src === sourceTextureFormat.UASTC4x4 && dst === transcodeTarget.BC7_RGBA;\r\n    }\r\n\r\n    public static Name = \"UniversalTranscoder_UASTC_BC7\";\r\n\r\n    public getName(): string {\r\n        return LiteTranscoder_UASTC_BC7.Name;\r\n    }\r\n\r\n    public initialize(): void {\r\n        super.initialize();\r\n        this.setModulePath(LiteTranscoder_UASTC_BC7.WasmModuleURL);\r\n    }\r\n}\r\n","import { sourceTextureFormat, transcodeTarget } from '../transcoder';\r\nimport { LiteTranscoder } from './liteTranscoder';\r\nimport { KTX2FileReader, IKTX2_ImageDesc } from '../ktx2FileReader';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class LiteTranscoder_UASTC_RGBA_SRGB extends LiteTranscoder {\r\n    /**\r\n     * URL to use when loading the wasm module for the transcoder (srgb)\r\n     */\r\n    public static WasmModuleURL = \"https://preview.babylonjs.com/ktx2Transcoders/uastc_rgba32_srgb.wasm\";\r\n\r\n    public static CanTranscode(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean): boolean {\r\n        return src === sourceTextureFormat.UASTC4x4 && dst === transcodeTarget.RGBA32 && isInGammaSpace;\r\n    }\r\n\r\n    public static Name = \"UniversalTranscoder_UASTC_RGBA_SRGB\";\r\n\r\n    public getName(): string {\r\n        return LiteTranscoder_UASTC_RGBA_SRGB.Name;\r\n    }\r\n\r\n    public initialize(): void {\r\n        super.initialize();\r\n        this._transcodeInPlace = false;\r\n        this.setModulePath(LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL);\r\n    }\r\n\r\n    public transcode(src: sourceTextureFormat, dst: transcodeTarget, level: number, width: number, height: number, uncompressedByteLength: number, ktx2Reader: KTX2FileReader, imageDesc: IKTX2_ImageDesc | null, encodedData: Uint8Array): Promise<Uint8Array | null> {\r\n        return this._loadModule().then((moduleWrapper: any) => {\r\n            const transcoder: any = moduleWrapper.module;\r\n            const [, uncompressedTextureView,] = this._prepareTranscoding(width, height, uncompressedByteLength, encodedData, true);\r\n\r\n            return transcoder.decodeRGBA32(width, height) === 0 ? uncompressedTextureView!.slice() : null;\r\n        });\r\n    }\r\n}\r\n","import { sourceTextureFormat, transcodeTarget } from '../transcoder';\r\nimport { LiteTranscoder } from './liteTranscoder';\r\nimport { KTX2FileReader, IKTX2_ImageDesc } from '../ktx2FileReader';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class LiteTranscoder_UASTC_RGBA_UNORM extends LiteTranscoder {\r\n    /**\r\n     * URL to use when loading the wasm module for the transcoder (unorm)\r\n     */\r\n    public static WasmModuleURL = \"https://preview.babylonjs.com/ktx2Transcoders/uastc_rgba32_unorm.wasm\";\r\n\r\n    public static CanTranscode(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean): boolean {\r\n        return src === sourceTextureFormat.UASTC4x4 && dst === transcodeTarget.RGBA32 && !isInGammaSpace;\r\n    }\r\n\r\n    public static Name = \"UniversalTranscoder_UASTC_RGBA_UNORM\";\r\n\r\n    public getName(): string {\r\n        return LiteTranscoder_UASTC_RGBA_UNORM.Name;\r\n    }\r\n\r\n    public initialize(): void {\r\n        super.initialize();\r\n        this._transcodeInPlace = false;\r\n        this.setModulePath(LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL);\r\n    }\r\n\r\n    public transcode(src: sourceTextureFormat, dst: transcodeTarget, level: number, width: number, height: number, uncompressedByteLength: number, ktx2Reader: KTX2FileReader, imageDesc: IKTX2_ImageDesc | null, encodedData: Uint8Array): Promise<Uint8Array | null> {\r\n        return this._loadModule().then((moduleWrapper: any) => {\r\n            const transcoder: any = moduleWrapper.module;\r\n            const [, uncompressedTextureView,] = this._prepareTranscoding(width, height, uncompressedByteLength, encodedData, true);\r\n\r\n            return transcoder.decodeRGBA32(width, height) === 0 ? uncompressedTextureView!.slice() : null;\r\n        });\r\n    }\r\n}\r\n","import { Transcoder, sourceTextureFormat, transcodeTarget } from '../transcoder';\r\nimport { KTX2FileReader, IKTX2_ImageDesc } from '../ktx2FileReader';\r\nimport { WASMMemoryManager } from '../wasmMemoryManager';\r\n\r\ndeclare var MSC_TRANSCODER: any;\r\n\r\ndeclare function importScripts(...urls: string[]): void;\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class MSCTranscoder extends Transcoder {\r\n    /**\r\n     * URL to use when loading the MSC transcoder\r\n     */\r\n    public static JSModuleURL = \"https://preview.babylonjs.com/ktx2Transcoders/msc_basis_transcoder.js\";\r\n    /**\r\n     * URL to use when loading the wasm module for the transcoder\r\n     */\r\n    public static WasmModuleURL = \"https://preview.babylonjs.com/ktx2Transcoders/msc_basis_transcoder.wasm\";\r\n\r\n    public static UseFromWorkerThread = true;\r\n\r\n    public static Name = \"MSCTranscoder\";\r\n\r\n    public getName(): string {\r\n        return MSCTranscoder.Name;\r\n    }\r\n\r\n    private _mscBasisTranscoderPromise: Promise<void>;\r\n    private _mscBasisModule: any;\r\n\r\n    private _getMSCBasisTranscoder(): Promise<void> {\r\n        if (this._mscBasisTranscoderPromise) {\r\n            return this._mscBasisTranscoderPromise;\r\n        }\r\n\r\n        this._mscBasisTranscoderPromise = WASMMemoryManager.LoadWASM(MSCTranscoder.WasmModuleURL).then((wasmBinary) => {\r\n            if (MSCTranscoder.UseFromWorkerThread) {\r\n                importScripts(MSCTranscoder.JSModuleURL);\r\n            }\r\n            // Worker Number = 0 and MSC_TRANSCODER has not been loaded yet.\r\n            else if (typeof(MSC_TRANSCODER) === \"undefined\") {\r\n                return new Promise((resolve, reject) => {\r\n                    const head = document.getElementsByTagName(\"head\")[0];\r\n                    const script = document.createElement(\"script\");\r\n                    script.setAttribute(\"type\", \"text/javascript\");\r\n                    script.setAttribute(\"src\", MSCTranscoder.JSModuleURL);\r\n\r\n                    script.onload = () => {\r\n                        MSC_TRANSCODER({ wasmBinary }).then((basisModule: any) => {\r\n                            basisModule.initTranscoders();\r\n                            this._mscBasisModule = basisModule;\r\n                            resolve();\r\n                        });\r\n                    };\r\n\r\n                    script.onerror = () => {\r\n                        reject(\"Can not load MSC_TRANSCODER script.\");\r\n                    };\r\n\r\n                    head.appendChild(script);\r\n                });\r\n            }\r\n\r\n            return new Promise((resolve) => {\r\n                MSC_TRANSCODER({ wasmBinary }).then((basisModule: any) => {\r\n                    basisModule.initTranscoders();\r\n                    this._mscBasisModule = basisModule;\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n\r\n        return this._mscBasisTranscoderPromise;\r\n    }\r\n\r\n    public static CanTranscode(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean): boolean {\r\n        return true;\r\n    }\r\n\r\n    public transcode(src: sourceTextureFormat, dst: transcodeTarget, level: number, width: number, height: number, uncompressedByteLength: number, ktx2Reader: KTX2FileReader, imageDesc: IKTX2_ImageDesc | null, encodedData: Uint8Array): Promise<Uint8Array | null> {\r\n        const isVideo = false;\r\n\r\n        return this._getMSCBasisTranscoder().then(() => {\r\n            const basisModule = this._mscBasisModule;\r\n\r\n            let transcoder: any;\r\n            let imageInfo: any;\r\n            let result: any;\r\n            let textureData: any = null;\r\n\r\n            try {\r\n                transcoder = src === sourceTextureFormat.UASTC4x4 ? new basisModule.UastcImageTranscoder() : new basisModule.BasisLzEtc1sImageTranscoder();\r\n                const texFormat = src === sourceTextureFormat.UASTC4x4 ? basisModule.TextureFormat.UASTC4x4 : basisModule.TextureFormat.ETC1S;\r\n\r\n                imageInfo = new basisModule.ImageInfo(texFormat, width, height, level);\r\n\r\n                const targetFormat = basisModule.TranscodeTarget[transcodeTarget[dst]]; // works because the labels of the sourceTextureFormat enum are the same as the property names used in TranscodeTarget!\r\n\r\n                if (!basisModule.isFormatSupported(targetFormat, texFormat)) {\r\n                    throw new Error(`MSCTranscoder: Transcoding from \"${sourceTextureFormat[src]}\" to \"${transcodeTarget[dst]}\" not supported by current transcoder build.`);\r\n                }\r\n\r\n                if (src === sourceTextureFormat.ETC1S) {\r\n                    const sgd = ktx2Reader.supercompressionGlobalData;\r\n\r\n                    transcoder.decodePalettes(sgd.endpointCount, sgd.endpointsData, sgd.selectorCount, sgd.selectorsData);\r\n                    transcoder.decodeTables(sgd.tablesData);\r\n\r\n                    imageInfo.flags = imageDesc!.imageFlags;\r\n                    imageInfo.rgbByteOffset = 0;\r\n                    imageInfo.rgbByteLength = imageDesc!.rgbSliceByteLength;\r\n                    imageInfo.alphaByteOffset = imageDesc!.alphaSliceByteOffset > 0 ? imageDesc!.rgbSliceByteLength : 0;\r\n                    imageInfo.alphaByteLength = imageDesc!.alphaSliceByteLength;\r\n\r\n                    result = transcoder.transcodeImage(targetFormat, encodedData, imageInfo, 0, isVideo);\r\n                } else {\r\n                    imageInfo.flags = 0;\r\n                    imageInfo.rgbByteOffset = 0;\r\n                    imageInfo.rgbByteLength = uncompressedByteLength;\r\n                    imageInfo.alphaByteOffset = 0;\r\n                    imageInfo.alphaByteLength = 0;\r\n\r\n                    result = transcoder.transcodeImage(targetFormat, encodedData, imageInfo, 0, ktx2Reader.hasAlpha, isVideo);\r\n                }\r\n            }\r\n            finally {\r\n                if (transcoder) {\r\n                    transcoder.delete();\r\n                }\r\n\r\n                if (imageInfo) {\r\n                    imageInfo.delete();\r\n                }\r\n\r\n                if (result && result.transcodedImage) {\r\n                    textureData = result.transcodedImage.get_typed_memory_view().slice();\r\n                    result.transcodedImage.delete();\r\n                }\r\n            }\r\n\r\n            return textureData;\r\n        });\r\n    }\r\n}\r\n","export * from \"./ktx2Decoder\";\r\nexport * from \"./ktx2FileReader\";\r\nexport * from \"./transcoder\";\r\nexport * from \"./transcoderManager\";\r\nexport * from \"./wasmMemoryManager\";\r\nexport * from \"./zstddec\";\r\nexport * from \"./Misc/index\";\r\nexport * from \"./Transcoders/index\";\r\n","/**\r\n * Resources used for the implementation:\r\n *  - 3js KTX2 loader: https://github.com/mrdoob/three.js/blob/dfb5c23ce126ec845e4aa240599915fef5375797/examples/jsm/loaders/KTX2Loader.js\r\n *  - Universal Texture Transcoders: https://github.com/KhronosGroup/Universal-Texture-Transcoders\r\n *  - KTX2 specification: http://github.khronos.org/KTX-Specification/\r\n *  - KTX2 binaries to convert files: https://github.com/KhronosGroup/KTX-Software/releases\r\n *  - KTX specification: https://www.khronos.org/registry/DataFormat/specs/1.3/dataformat.1.3.html\r\n *  - KTX-Software: https://github.com/KhronosGroup/KTX-Software\r\n */\r\n\r\nimport { KTX2FileReader, SupercompressionScheme, IKTX2_ImageDesc } from './ktx2FileReader';\r\nimport { TranscoderManager } from './transcoderManager';\r\nimport { LiteTranscoder_UASTC_ASTC } from './Transcoders/liteTranscoder_UASTC_ASTC';\r\nimport { LiteTranscoder_UASTC_BC7 } from './Transcoders/liteTranscoder_UASTC_BC7';\r\nimport { LiteTranscoder_UASTC_RGBA_UNORM } from './Transcoders/liteTranscoder_UASTC_RGBA_UNORM';\r\nimport { LiteTranscoder_UASTC_RGBA_SRGB } from './Transcoders/liteTranscoder_UASTC_RGBA_SRGB';\r\nimport { MSCTranscoder } from './Transcoders/mscTranscoder';\r\nimport { transcodeTarget, sourceTextureFormat } from './transcoder';\r\nimport { ZSTDDecoder } from './zstddec';\r\nimport { TranscodeDecisionTree } from \"./transcodeDecisionTree\";\r\n\r\nexport interface IDecodedData {\r\n    width: number;\r\n    height: number;\r\n    transcodedFormat: number;\r\n    mipmaps: Array<IMipmap>;\r\n    isInGammaSpace: boolean;\r\n    hasAlpha: boolean;\r\n    errors?: string;\r\n    transcoderName?: string;\r\n}\r\n\r\nexport interface IMipmap {\r\n    data: Uint8Array | null;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface ICompressedFormatCapabilities {\r\n    astc?: boolean;\r\n    bptc?: boolean;\r\n    s3tc?: boolean;\r\n    pvrtc?: boolean;\r\n    etc2?: boolean;\r\n    etc1?: boolean;\r\n}\r\n\r\nexport interface IKTX2DecoderOptions {\r\n    /** use RGBA format if ASTC and BC7 are not available as transcoded format */\r\n    useRGBAIfASTCBC7NotAvailableWhenUASTC?: boolean;\r\n\r\n    /** force to always use RGBA for transcoded format */\r\n    forceRGBA?: boolean;\r\n\r\n    /**\r\n     * list of transcoders to bypass when looking for a suitable transcoder. The available transcoders are:\r\n     *      UniversalTranscoder_UASTC_ASTC\r\n     *      UniversalTranscoder_UASTC_BC7\r\n     *      UniversalTranscoder_UASTC_RGBA_UNORM\r\n     *      UniversalTranscoder_UASTC_RGBA_SRGB\r\n     *      MSCTranscoder\r\n    */\r\n    bypassTranscoders?: string[];\r\n}\r\n\r\nconst isPowerOfTwo = (value: number) => {\r\n    return (value & (value - 1)) === 0 && value !== 0;\r\n};\r\n\r\n/**\r\n * Class for decoding KTX2 files\r\n *\r\n */\r\nexport class KTX2Decoder {\r\n\r\n    private _transcoderMgr: TranscoderManager;\r\n    private _zstdDecoder: ZSTDDecoder;\r\n\r\n    constructor() {\r\n        this._transcoderMgr = new TranscoderManager();\r\n    }\r\n\r\n    public decode(data: Uint8Array, caps: ICompressedFormatCapabilities, options?: IKTX2DecoderOptions): Promise<IDecodedData | null> {\r\n        return Promise.resolve().then(() => {\r\n            const kfr = new KTX2FileReader(data);\r\n\r\n            if (!kfr.isValid()) {\r\n                throw new Error(\"Invalid KT2 file: wrong signature\");\r\n            }\r\n\r\n            kfr.parse();\r\n\r\n            if (kfr.needZSTDDecoder) {\r\n                if (!this._zstdDecoder) {\r\n                    this._zstdDecoder = new ZSTDDecoder();\r\n                }\r\n\r\n                return this._zstdDecoder.init().then(() => {\r\n                    return this._decodeData(kfr, caps, options);\r\n                });\r\n            }\r\n\r\n            return this._decodeData(kfr, caps, options);\r\n        });\r\n    }\r\n\r\n    private _decodeData(kfr: KTX2FileReader, caps: ICompressedFormatCapabilities, options?: IKTX2DecoderOptions): Promise<IDecodedData> {\r\n        const width = kfr.header.pixelWidth;\r\n        const height = kfr.header.pixelHeight;\r\n        const srcTexFormat = kfr.textureFormat;\r\n\r\n        const decisionTree = new TranscodeDecisionTree(srcTexFormat, kfr.hasAlpha, isPowerOfTwo(width) && isPowerOfTwo(height), caps, options);\r\n\r\n        let transcodeFormat = decisionTree.transcodeFormat;\r\n        let engineFormat = decisionTree.engineFormat;\r\n        let roundToMultiple4 = decisionTree.roundToMultiple4;\r\n\r\n        const transcoder = this._transcoderMgr.findTranscoder(srcTexFormat, transcodeFormat, kfr.isInGammaSpace, options?.bypassTranscoders);\r\n\r\n        if (transcoder === null) {\r\n            throw new Error(`no transcoder found to transcode source texture format \"${sourceTextureFormat[srcTexFormat]}\" to format \"${transcodeTarget[transcodeFormat]}\"`);\r\n        }\r\n\r\n        const mipmaps: Array<IMipmap> = [];\r\n        const dataPromises: Array<Promise<Uint8Array | null>> = [];\r\n        const decodedData: IDecodedData = { width: 0, height: 0, transcodedFormat: engineFormat, mipmaps, isInGammaSpace: kfr.isInGammaSpace, hasAlpha: kfr.hasAlpha, transcoderName: transcoder.getName() };\r\n\r\n        let firstImageDescIndex = 0;\r\n\r\n        for (let level = 0; level < kfr.header.levelCount; level++) {\r\n            if (level > 0) {\r\n                firstImageDescIndex += Math.max(kfr.header.layerCount, 1) * kfr.header.faceCount * Math.max(kfr.header.pixelDepth >> (level - 1), 1);\r\n            }\r\n\r\n            const levelWidth = Math.floor(width / (1 << level)) || 1;\r\n            const levelHeight = Math.floor(height / (1 << level)) || 1;\r\n\r\n            const numImagesInLevel = kfr.header.faceCount; // note that cubemap are not supported yet (see KTX2FileReader), so faceCount == 1\r\n            const levelImageByteLength = ((levelWidth + 3) >> 2) * ((levelHeight + 3) >> 2) * kfr.dfdBlock.bytesPlane[0];\r\n\r\n            const levelUncompressedByteLength = kfr.levels[level].uncompressedByteLength;\r\n\r\n            let levelDataBuffer = kfr.data.buffer;\r\n\r\n            let levelDataOffset = kfr.levels[level].byteOffset + kfr.data.byteOffset;\r\n            let imageOffsetInLevel = 0;\r\n\r\n            if (kfr.header.supercompressionScheme === SupercompressionScheme.ZStandard) {\r\n                levelDataBuffer = this._zstdDecoder.decode(new Uint8Array(levelDataBuffer, levelDataOffset, kfr.levels[level].byteLength), levelUncompressedByteLength);\r\n                levelDataOffset = 0;\r\n            }\r\n\r\n            if (level === 0) {\r\n                decodedData.width = roundToMultiple4 ? (levelWidth + 3) & ~3 : levelWidth;\r\n                decodedData.height = roundToMultiple4 ? (levelHeight + 3) & ~3 : levelHeight;\r\n            }\r\n\r\n            for (let imageIndex = 0; imageIndex < numImagesInLevel; imageIndex++) {\r\n                let encodedData: Uint8Array;\r\n                let imageDesc: IKTX2_ImageDesc | null = null;\r\n\r\n                if (kfr.header.supercompressionScheme === SupercompressionScheme.BasisLZ) {\r\n                    imageDesc = kfr.supercompressionGlobalData.imageDescs![firstImageDescIndex + imageIndex];\r\n\r\n                    encodedData = new Uint8Array(levelDataBuffer, levelDataOffset + imageDesc.rgbSliceByteOffset, imageDesc.rgbSliceByteLength + imageDesc.alphaSliceByteLength);\r\n                } else {\r\n                    encodedData = new Uint8Array(levelDataBuffer, levelDataOffset + imageOffsetInLevel, levelImageByteLength);\r\n\r\n                    imageOffsetInLevel += levelImageByteLength;\r\n                }\r\n\r\n                const mipmap: IMipmap = {\r\n                    data: null,\r\n                    width: levelWidth,\r\n                    height: levelHeight,\r\n                };\r\n\r\n                const transcodedData = transcoder.transcode(srcTexFormat, transcodeFormat, level, levelWidth, levelHeight, levelUncompressedByteLength, kfr, imageDesc, encodedData)\r\n                    .then((data) => {\r\n                        mipmap.data = data;\r\n                        return data;\r\n                    })\r\n                    .catch((reason) => {\r\n                        decodedData.errors = decodedData.errors ?? \"\";\r\n                        decodedData.errors += reason + \"\\n\" + reason.stack + \"\\n\";\r\n                        return null;\r\n                    });\r\n\r\n                dataPromises.push(transcodedData);\r\n\r\n                mipmaps.push(mipmap);\r\n            }\r\n        }\r\n\r\n        return Promise.all(dataPromises).then(() => {\r\n            return decodedData;\r\n        });\r\n    }\r\n}\r\n\r\n// Put in the order you want the transcoders to be used in priority\r\nTranscoderManager.RegisterTranscoder(LiteTranscoder_UASTC_ASTC);\r\nTranscoderManager.RegisterTranscoder(LiteTranscoder_UASTC_BC7);\r\nTranscoderManager.RegisterTranscoder(LiteTranscoder_UASTC_RGBA_UNORM);\r\nTranscoderManager.RegisterTranscoder(LiteTranscoder_UASTC_RGBA_SRGB);\r\nTranscoderManager.RegisterTranscoder(MSCTranscoder); // catch all transcoder - will throw an error if the format can't be transcoded\r\n","import { DataReader } from './Misc/dataReader';\r\nimport { sourceTextureFormat } from './transcoder';\r\n\r\n/** @hidden */\r\nexport enum SupercompressionScheme {\r\n    None = 0,\r\n    BasisLZ = 1,\r\n    ZStandard = 2,\r\n    ZLib = 3\r\n}\r\n\r\nconst enum DFDModel {\r\n    ETC1S = 163,\r\n    UASTC = 166\r\n}\r\n\r\nconst enum DFDChannel_ETC1S {\r\n    RGB = 0,\r\n    RRR = 3,\r\n    GGG = 4,\r\n    AAA = 15\r\n\r\n}\r\n\r\nconst enum DFDChannel_UASTC {\r\n    RGB = 0,\r\n    RGBA = 3,\r\n    RRR = 4,\r\n    RRRG = 5\r\n}\r\n\r\nconst enum DFDTransferFunction {\r\n    linear = 1,\r\n    sRGB = 2\r\n}\r\n\r\n/** @hidden */\r\nexport interface IKTX2_Header {\r\n    vkFormat: number;\r\n    typeSize: number;\r\n    pixelWidth: number;\r\n    pixelHeight: number;\r\n    pixelDepth: number;\r\n    layerCount: number;\r\n    faceCount: number;\r\n    levelCount: number;\r\n    supercompressionScheme: number;\r\n    dfdByteOffset: number;\r\n    dfdByteLength: number;\r\n    kvdByteOffset: number;\r\n    kvdByteLength: number;\r\n    sgdByteOffset: number;\r\n    sgdByteLength: number;\r\n}\r\n\r\n/** @hidden */\r\nexport interface IKTX2_Level {\r\n    byteOffset: number;\r\n    byteLength: number;\r\n    uncompressedByteLength: number;\r\n}\r\n\r\ninterface IKTX2_Sample {\r\n    bitOffset: number;\r\n    bitLength: number;\r\n    channelType: number;\r\n    channelFlags: number;\r\n    samplePosition: number[];\r\n    sampleLower: number;\r\n    sampleUpper: number;\r\n}\r\n\r\n/** @hidden */\r\nexport interface IKTX2_DFD {\r\n    vendorId: number;\r\n    descriptorType: number;\r\n    versionNumber: number;\r\n    descriptorBlockSize: number;\r\n    colorModel: number;\r\n    colorPrimaries: number;\r\n    transferFunction: number;\r\n    flags: number;\r\n    texelBlockDimension: {\r\n        x: number;\r\n        y: number;\r\n        z: number;\r\n        w: number;\r\n    };\r\n    bytesPlane: Array<number>;\r\n    numSamples: number;\r\n    samples: Array<IKTX2_Sample>;\r\n}\r\n\r\n/** @hidden */\r\nexport interface IKTX2_ImageDesc {\r\n    imageFlags: number;\r\n    rgbSliceByteOffset: number;\r\n    rgbSliceByteLength: number;\r\n    alphaSliceByteOffset: number;\r\n    alphaSliceByteLength: number;\r\n}\r\n\r\n/** @hidden */\r\nexport interface IKTX2_SupercompressionGlobalData {\r\n    endpointCount?: number;\r\n    selectorCount?: number;\r\n    endpointsByteLength?: number;\r\n    selectorsByteLength?: number;\r\n    tablesByteLength?: number;\r\n    extendedByteLength?: number;\r\n    imageDescs?: Array<IKTX2_ImageDesc>;\r\n    endpointsData?: Uint8Array;\r\n    selectorsData?: Uint8Array;\r\n    tablesData?: Uint8Array;\r\n    extendedData?: Uint8Array;\r\n}\r\n\r\nexport class KTX2FileReader {\r\n\r\n    private _data: Uint8Array;\r\n    private _header: IKTX2_Header;\r\n    private _levels: Array<IKTX2_Level>;\r\n    private _dfdBlock: IKTX2_DFD;\r\n    private _supercompressionGlobalData: IKTX2_SupercompressionGlobalData;\r\n\r\n    /**\r\n     * Will throw an exception if the file can't be parsed\r\n     */\r\n    constructor(data: Uint8Array) {\r\n        this._data = data;\r\n    }\r\n\r\n    public get data(): Uint8Array {\r\n        return this._data;\r\n    }\r\n\r\n    public get header(): IKTX2_Header {\r\n        return this._header;\r\n    }\r\n\r\n    public get levels(): Array<IKTX2_Level> {\r\n        return this._levels;\r\n    }\r\n\r\n    public get dfdBlock(): IKTX2_DFD {\r\n        return this._dfdBlock;\r\n    }\r\n\r\n    public get supercompressionGlobalData(): IKTX2_SupercompressionGlobalData {\r\n        return this._supercompressionGlobalData;\r\n    }\r\n\r\n    public isValid() {\r\n        return KTX2FileReader.IsValid(this._data);\r\n    }\r\n\r\n    public parse() {\r\n        let offsetInFile = 12; // skip the header\r\n\r\n        /**\r\n         * Get the header\r\n         */\r\n        const hdrReader = new DataReader(this._data, offsetInFile, 17 * 4);\r\n\r\n        const header = this._header = {\r\n            vkFormat: hdrReader.readUint32(),\r\n            typeSize: hdrReader.readUint32(),\r\n            pixelWidth: hdrReader.readUint32(),\r\n            pixelHeight: hdrReader.readUint32(),\r\n            pixelDepth: hdrReader.readUint32(),\r\n            layerCount: hdrReader.readUint32(),\r\n            faceCount: hdrReader.readUint32(),\r\n            levelCount: hdrReader.readUint32(),\r\n            supercompressionScheme: hdrReader.readUint32(),\r\n\r\n            dfdByteOffset: hdrReader.readUint32(),\r\n            dfdByteLength: hdrReader.readUint32(),\r\n            kvdByteOffset: hdrReader.readUint32(),\r\n            kvdByteLength: hdrReader.readUint32(),\r\n            sgdByteOffset: hdrReader.readUint64(),\r\n            sgdByteLength: hdrReader.readUint64(),\r\n        };\r\n\r\n        if (header.pixelDepth > 0) {\r\n            throw new Error(`Failed to parse KTX2 file - Only 2D textures are currently supported.`);\r\n        }\r\n\r\n        if (header.layerCount > 1) {\r\n            throw new Error(`Failed to parse KTX2 file - Array textures are not currently supported.`);\r\n        }\r\n\r\n        if (header.faceCount > 1) {\r\n            throw new Error(`Failed to parse KTX2 file - Cube textures are not currently supported.`);\r\n        }\r\n\r\n        offsetInFile += hdrReader.byteOffset;\r\n\r\n        /**\r\n         * Get the levels\r\n         */\r\n        let levelCount = Math.max(1, header.levelCount);\r\n\r\n        const levelReader = new DataReader(this._data, offsetInFile, levelCount * 3 * (2 * 4));\r\n\r\n        const levels: Array<IKTX2_Level> = this._levels = [];\r\n\r\n        while (levelCount--) {\r\n            levels.push({\r\n                byteOffset: levelReader.readUint64(),\r\n                byteLength: levelReader.readUint64(),\r\n                uncompressedByteLength: levelReader.readUint64(),\r\n            });\r\n        }\r\n\r\n        offsetInFile += levelReader.byteOffset;\r\n\r\n        /**\r\n         * Get the data format descriptor (DFD) blocks\r\n         */\r\n        const dfdReader = new DataReader(this._data, header.dfdByteOffset, header.dfdByteLength);\r\n\r\n        const dfdBlock = this._dfdBlock = {\r\n            vendorId: dfdReader.skipBytes(4 /* skip totalSize */).readUint16(),\r\n            descriptorType: dfdReader.readUint16(),\r\n            versionNumber: dfdReader.readUint16(),\r\n            descriptorBlockSize: dfdReader.readUint16(),\r\n            colorModel: dfdReader.readUint8(),\r\n            colorPrimaries: dfdReader.readUint8(),\r\n            transferFunction: dfdReader.readUint8(),\r\n            flags: dfdReader.readUint8(),\r\n            texelBlockDimension: {\r\n                x: dfdReader.readUint8() + 1,\r\n                y: dfdReader.readUint8() + 1,\r\n                z: dfdReader.readUint8() + 1,\r\n                w: dfdReader.readUint8() + 1,\r\n            },\r\n            bytesPlane: [\r\n                dfdReader.readUint8(), /* bytesPlane0 */\r\n                dfdReader.readUint8(), /* bytesPlane1 */\r\n                dfdReader.readUint8(), /* bytesPlane2 */\r\n                dfdReader.readUint8(), /* bytesPlane3 */\r\n                dfdReader.readUint8(), /* bytesPlane4 */\r\n                dfdReader.readUint8(), /* bytesPlane5 */\r\n                dfdReader.readUint8(), /* bytesPlane6 */\r\n                dfdReader.readUint8(), /* bytesPlane7 */\r\n            ],\r\n            numSamples: 0,\r\n            samples: new Array<IKTX2_Sample>(),\r\n        };\r\n\r\n        dfdBlock.numSamples = (dfdBlock.descriptorBlockSize - 24) / 16;\r\n\r\n        for (let i = 0; i < dfdBlock.numSamples; i++) {\r\n            const sample = {\r\n                bitOffset: dfdReader.readUint16(),\r\n                bitLength: dfdReader.readUint8() + 1,\r\n                channelType: dfdReader.readUint8(),\r\n                channelFlags: 0,\r\n                samplePosition: [\r\n                    dfdReader.readUint8(), /* samplePosition0 */\r\n                    dfdReader.readUint8(), /* samplePosition1 */\r\n                    dfdReader.readUint8(), /* samplePosition2 */\r\n                    dfdReader.readUint8(), /* samplePosition3 */\r\n                ],\r\n                sampleLower: dfdReader.readUint32(),\r\n                sampleUpper: dfdReader.readUint32(),\r\n            };\r\n\r\n            sample.channelFlags = (sample.channelType & 0xF0) >> 4;\r\n            sample.channelType = sample.channelType & 0x0F;\r\n\r\n            dfdBlock.samples.push(sample);\r\n        }\r\n\r\n        /**\r\n         * Get the Supercompression Global Data (sgd)\r\n         */\r\n        const sgd: IKTX2_SupercompressionGlobalData = this._supercompressionGlobalData = {};\r\n\r\n        if (header.sgdByteLength > 0) {\r\n            const sgdReader = new DataReader(this._data, header.sgdByteOffset, header.sgdByteLength);\r\n\r\n            sgd.endpointCount = sgdReader.readUint16();\r\n            sgd.selectorCount = sgdReader.readUint16();\r\n            sgd.endpointsByteLength = sgdReader.readUint32();\r\n            sgd.selectorsByteLength = sgdReader.readUint32();\r\n            sgd.tablesByteLength = sgdReader.readUint32();\r\n            sgd.extendedByteLength = sgdReader.readUint32();\r\n            sgd.imageDescs = [];\r\n\r\n            const imageCount = this._getImageCount();\r\n\r\n            for (let i = 0; i < imageCount; i++) {\r\n                sgd.imageDescs.push({\r\n                    imageFlags: sgdReader.readUint32(),\r\n                    rgbSliceByteOffset: sgdReader.readUint32(),\r\n                    rgbSliceByteLength: sgdReader.readUint32(),\r\n                    alphaSliceByteOffset: sgdReader.readUint32(),\r\n                    alphaSliceByteLength: sgdReader.readUint32(),\r\n                });\r\n            }\r\n\r\n            const endpointsByteOffset = header.sgdByteOffset + sgdReader.byteOffset;\r\n            const selectorsByteOffset = endpointsByteOffset + sgd.endpointsByteLength;\r\n            const tablesByteOffset = selectorsByteOffset + sgd.selectorsByteLength;\r\n            const extendedByteOffset = tablesByteOffset + sgd.tablesByteLength;\r\n\r\n            sgd.endpointsData = new Uint8Array(this._data.buffer, this._data.byteOffset + endpointsByteOffset, sgd.endpointsByteLength);\r\n            sgd.selectorsData = new Uint8Array(this._data.buffer, this._data.byteOffset + selectorsByteOffset, sgd.selectorsByteLength);\r\n            sgd.tablesData = new Uint8Array(this._data.buffer, this._data.byteOffset + tablesByteOffset, sgd.tablesByteLength);\r\n            sgd.extendedData = new Uint8Array(this._data.buffer, this._data.byteOffset + extendedByteOffset, sgd.extendedByteLength);\r\n        }\r\n\r\n    }\r\n\r\n    private _getImageCount(): number {\r\n        let layerPixelDepth = Math.max(this._header.pixelDepth, 1);\r\n        for (let i = 1; i < this._header.levelCount; i++) {\r\n            layerPixelDepth += Math.max(this._header.pixelDepth >> i, 1);\r\n        }\r\n\r\n        return Math.max(this._header.layerCount, 1) * this._header.faceCount * layerPixelDepth;\r\n    }\r\n\r\n    public get textureFormat(): sourceTextureFormat {\r\n        return this._dfdBlock.colorModel === DFDModel.UASTC ? sourceTextureFormat.UASTC4x4 : sourceTextureFormat.ETC1S;\r\n    }\r\n\r\n    public get hasAlpha(): boolean {\r\n        const tformat = this.textureFormat;\r\n\r\n        switch (tformat) {\r\n            case sourceTextureFormat.ETC1S:\r\n                return this._dfdBlock.numSamples === 2 && (this._dfdBlock.samples[0].channelType === DFDChannel_ETC1S.AAA || this._dfdBlock.samples[1].channelType === DFDChannel_ETC1S.AAA);\r\n\r\n            case sourceTextureFormat.UASTC4x4:\r\n                return this._dfdBlock.samples[0].channelType === DFDChannel_UASTC.RGBA;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public get needZSTDDecoder(): boolean {\r\n        return this._header.supercompressionScheme === SupercompressionScheme.ZStandard;\r\n    }\r\n\r\n    public get isInGammaSpace(): boolean {\r\n        return this._dfdBlock.transferFunction === DFDTransferFunction.sRGB;\r\n    }\r\n\r\n    public static IsValid(data: ArrayBufferView): boolean {\r\n        if (data.byteLength >= 12) {\r\n            // '«', 'K', 'T', 'X', ' ', '2', '0', '»', '\\r', '\\n', '\\x1A', '\\n'\r\n            const identifier = new Uint8Array(data.buffer, data.byteOffset, 12);\r\n            if (identifier[0] === 0xAB && identifier[1] === 0x4B && identifier[2] === 0x54 && identifier[3] === 0x58 && identifier[4] === 0x20 && identifier[5] === 0x32 &&\r\n                identifier[6] === 0x30 && identifier[7] === 0xBB && identifier[8] === 0x0D && identifier[9] === 0x0A && identifier[10] === 0x1A && identifier[11] === 0x0A) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { KTX2Decoder } from \"../index\";\r\n\r\nvar globalObject = (typeof global !== 'undefined') ? global : ((typeof window !== 'undefined') ? window : undefined);\r\nif (typeof globalObject !== \"undefined\") {\r\n    (<any>globalObject).KTX2DECODER = KTX2Decoder;\r\n}\r\n\r\nexport * from \"../index\";","import { sourceTextureFormat, transcodeTarget } from './transcoder';\r\n\r\nconst COMPRESSED_RGBA_BPTC_UNORM_EXT = 0x8E8C;\r\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0;\r\nconst COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\r\nconst COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\r\nconst COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;\r\nconst COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;\r\nconst COMPRESSED_RGBA8_ETC2_EAC = 0x9278;\r\nconst COMPRESSED_RGB8_ETC2 = 0x9274;\r\nconst COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;\r\nconst RGBA8Format = 0x8058;\r\n\r\ninterface ILeaf {\r\n    transcodeFormat: number;\r\n    engineFormat: number;\r\n    roundToMultiple4?: boolean;\r\n}\r\n\r\ninterface INode {\r\n    cap?: string;\r\n    option?: string;\r\n    alpha?: boolean;\r\n    needsPowerOfTwo?: boolean;\r\n    yes?: INode | ILeaf;\r\n    no?: INode | ILeaf;\r\n}\r\n\r\ninterface IDecisionTree {\r\n    [textureFormat: string]: INode;\r\n}\r\n\r\nconst DecisionTree: IDecisionTree = {\r\n\r\n    ETC1S: {\r\n        option: \"forceRGBA\",\r\n        yes: {\r\n            transcodeFormat: transcodeTarget.RGBA32,\r\n            engineFormat: RGBA8Format,\r\n            roundToMultiple4: false,\r\n        },\r\n        no: {\r\n            cap: \"etc2\",\r\n            yes: {\r\n                alpha: true,\r\n                yes: {\r\n                    transcodeFormat: transcodeTarget.ETC2_RGBA,\r\n                    engineFormat: COMPRESSED_RGBA8_ETC2_EAC,\r\n                },\r\n                no: {\r\n                    transcodeFormat: transcodeTarget.ETC1_RGB,\r\n                    engineFormat: COMPRESSED_RGB8_ETC2,\r\n                },\r\n            },\r\n            no: {\r\n                cap: \"etc1\",\r\n                alpha: false,\r\n                yes: {\r\n                    transcodeFormat: transcodeTarget.ETC1_RGB,\r\n                    engineFormat: COMPRESSED_RGB_ETC1_WEBGL,\r\n                },\r\n                no: {\r\n                    cap: \"bptc\",\r\n                    yes: {\r\n                        transcodeFormat: transcodeTarget.BC7_RGBA,\r\n                        engineFormat: COMPRESSED_RGBA_BPTC_UNORM_EXT,\r\n                    },\r\n                    no: {\r\n                        cap: \"s3tc\",\r\n                        yes: {\r\n                            alpha: true,\r\n                            yes: {\r\n                                transcodeFormat: transcodeTarget.BC3_RGBA,\r\n                                engineFormat: COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n                            },\r\n                            no: {\r\n                                transcodeFormat: transcodeTarget.BC1_RGB,\r\n                                engineFormat: COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n                            },\r\n                        },\r\n                        no: {\r\n                            cap: \"pvrtc\",\r\n                            needsPowerOfTwo: true,\r\n                            yes: {\r\n                                alpha: true,\r\n                                yes: {\r\n                                    transcodeFormat: transcodeTarget.PVRTC1_4_RGBA,\r\n                                    engineFormat: COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\r\n                                },\r\n                                no: {\r\n                                    transcodeFormat: transcodeTarget.PVRTC1_4_RGB,\r\n                                    engineFormat: COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\r\n                                },\r\n                            },\r\n                            no: {\r\n                                transcodeFormat: transcodeTarget.RGBA32,\r\n                                engineFormat: RGBA8Format,\r\n                                roundToMultiple4: false,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n\r\n    UASTC: {\r\n        option: \"forceRGBA\",\r\n        yes: {\r\n            transcodeFormat: transcodeTarget.RGBA32,\r\n            engineFormat: RGBA8Format,\r\n            roundToMultiple4: false,\r\n        },\r\n        no: {\r\n            cap: \"astc\",\r\n            yes: {\r\n                transcodeFormat: transcodeTarget.ASTC_4x4_RGBA,\r\n                engineFormat: COMPRESSED_RGBA_ASTC_4x4_KHR,\r\n            },\r\n            no: {\r\n                cap: \"bptc\",\r\n                yes: {\r\n                    transcodeFormat: transcodeTarget.BC7_RGBA,\r\n                    engineFormat: COMPRESSED_RGBA_BPTC_UNORM_EXT,\r\n                },\r\n                no: {\r\n                    option: \"useRGBAIfASTCBC7NotAvailableWhenUASTC\",\r\n                    yes: {\r\n                        transcodeFormat: transcodeTarget.RGBA32,\r\n                        engineFormat: RGBA8Format,\r\n                        roundToMultiple4: false,\r\n                    },\r\n                    no: {\r\n                        cap: \"etc2\",\r\n                        yes: {\r\n                            alpha: true,\r\n                            yes: {\r\n                                transcodeFormat: transcodeTarget.ETC2_RGBA,\r\n                                engineFormat: COMPRESSED_RGBA8_ETC2_EAC,\r\n                            },\r\n                            no: {\r\n                                transcodeFormat: transcodeTarget.ETC1_RGB,\r\n                                engineFormat: COMPRESSED_RGB8_ETC2,\r\n                            },\r\n                        },\r\n                        no: {\r\n                            cap: \"etc1\",\r\n                            yes: {\r\n                                transcodeFormat: transcodeTarget.ETC1_RGB,\r\n                                engineFormat: COMPRESSED_RGB_ETC1_WEBGL,\r\n                            },\r\n                            no: {\r\n                                cap: \"s3tc\",\r\n                                yes: {\r\n                                    alpha: true,\r\n                                    yes: {\r\n                                        transcodeFormat: transcodeTarget.BC3_RGBA,\r\n                                        engineFormat: COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n                                    },\r\n                                    no: {\r\n                                        transcodeFormat: transcodeTarget.BC1_RGB,\r\n                                        engineFormat: COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n                                    },\r\n                                },\r\n                                no: {\r\n                                    cap: \"pvrtc\",\r\n                                    needsPowerOfTwo: true,\r\n                                    yes: {\r\n                                        alpha: true,\r\n                                        yes: {\r\n                                            transcodeFormat: transcodeTarget.PVRTC1_4_RGBA,\r\n                                            engineFormat: COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\r\n                                        },\r\n                                        no: {\r\n                                            transcodeFormat: transcodeTarget.PVRTC1_4_RGB,\r\n                                            engineFormat: COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\r\n                                        },\r\n                                    },\r\n                                    no: {\r\n                                        transcodeFormat: transcodeTarget.RGBA32,\r\n                                        engineFormat: RGBA8Format,\r\n                                        roundToMultiple4: false,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport class TranscodeDecisionTree {\r\n\r\n    private static _IsLeafNode(node: INode | ILeaf): node is ILeaf {\r\n        return (node as ILeaf).transcodeFormat !== undefined;\r\n    }\r\n\r\n    private _hasAlpha: boolean;\r\n    private _isPowerOfTwo: boolean;\r\n    private _caps: any;\r\n    private _options: any;\r\n    private _transcodeFormat: number;\r\n    private _engineFormat: number;\r\n    private _roundToMultiple4: boolean;\r\n\r\n    public get transcodeFormat() {\r\n        return this._transcodeFormat;\r\n    }\r\n\r\n    public get engineFormat() {\r\n        return this._engineFormat;\r\n    }\r\n\r\n    public get roundToMultiple4() {\r\n        return this._roundToMultiple4;\r\n    }\r\n\r\n    constructor(textureFormat: sourceTextureFormat, hasAlpha: boolean, isPowerOfTwo: boolean, caps: any, options?: any) {\r\n        this._hasAlpha = hasAlpha;\r\n        this._isPowerOfTwo = isPowerOfTwo;\r\n        this._caps = caps;\r\n        this._options = options ?? {};\r\n\r\n        this._parseNode(textureFormat === sourceTextureFormat.UASTC4x4 ? DecisionTree.UASTC : DecisionTree.ETC1S);\r\n    }\r\n\r\n    private _parseNode(node: INode | ILeaf): void {\r\n        if (TranscodeDecisionTree._IsLeafNode(node)) {\r\n            this._transcodeFormat = node.transcodeFormat;\r\n            this._engineFormat = node.engineFormat;\r\n            this._roundToMultiple4 = node.roundToMultiple4 ?? true;\r\n        } else {\r\n            let condition = true;\r\n\r\n            if (node.cap !== undefined) {\r\n                condition = condition && this._caps[node.cap];\r\n            }\r\n            if (node.option !== undefined) {\r\n                condition = condition && this._options[node.option];\r\n            }\r\n            if (node.alpha !== undefined) {\r\n                condition = condition && this._hasAlpha === node.alpha;\r\n            }\r\n            if (node.needsPowerOfTwo !== undefined) {\r\n                condition = condition && this._isPowerOfTwo === node.needsPowerOfTwo;\r\n            }\r\n\r\n            this._parseNode(condition ? node.yes! : node.no!);\r\n        }\r\n    }\r\n}\r\n","import { WASMMemoryManager } from './wasmMemoryManager';\r\nimport { KTX2FileReader, IKTX2_ImageDesc } from './ktx2FileReader';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport enum sourceTextureFormat {\r\n    ETC1S,\r\n    UASTC4x4\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport enum transcodeTarget {\r\n    ASTC_4x4_RGBA,\r\n    BC7_RGBA,\r\n    BC3_RGBA,\r\n    BC1_RGB,\r\n    PVRTC1_4_RGBA,\r\n    PVRTC1_4_RGB,\r\n    ETC2_RGBA,\r\n    ETC1_RGB,\r\n    RGBA32\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class Transcoder {\r\n\r\n    public static CanTranscode(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean): boolean {\r\n        return false;\r\n    }\r\n\r\n    public static Name = \"Transcoder\";\r\n\r\n    public getName(): string {\r\n        return Transcoder.Name;\r\n    }\r\n\r\n    public initialize(): void {\r\n    }\r\n\r\n    public needMemoryManager(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public setMemoryManager(memoryMgr: WASMMemoryManager): void {\r\n    }\r\n\r\n    public transcode(src: sourceTextureFormat, dst: transcodeTarget, level: number, width: number, height: number, uncompressedByteLength: number, ktx2Reader: KTX2FileReader, imageDesc: IKTX2_ImageDesc | null, encodedData: Uint8Array): Promise<Uint8Array | null> {\r\n        return Promise.resolve(null);\r\n    }\r\n}\r\n","import { transcodeTarget, sourceTextureFormat, Transcoder } from './transcoder';\r\nimport { WASMMemoryManager } from './wasmMemoryManager';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class TranscoderManager {\r\n\r\n    public static _Transcoders: Array<typeof Transcoder> = [];\r\n\r\n    public static RegisterTranscoder(transcoder: typeof Transcoder) {\r\n        TranscoderManager._Transcoders.push(transcoder);\r\n    }\r\n\r\n    private static _transcoderInstances: { [key: string]: Array<Transcoder> } = {};\r\n\r\n    private _wasmMemoryManager: WASMMemoryManager;\r\n\r\n    public findTranscoder(src: sourceTextureFormat, dst: transcodeTarget, isInGammaSpace: boolean, bypass?: string[]): Transcoder | null {\r\n        let transcoder: Transcoder | null = null;\r\n\r\n        const key = sourceTextureFormat[src] + \"_\" + transcodeTarget[dst];\r\n\r\n        for (let i = 0; i < TranscoderManager._Transcoders.length; ++i) {\r\n            if (TranscoderManager._Transcoders[i].CanTranscode(src, dst, isInGammaSpace) && (!bypass || bypass.indexOf(TranscoderManager._Transcoders[i].Name) < 0)) {\r\n                transcoder = this._getExistingTranscoder(key, TranscoderManager._Transcoders[i].Name);\r\n                if (!transcoder) {\r\n                    transcoder = new TranscoderManager._Transcoders[i]();\r\n                    transcoder!.initialize();\r\n                    if (transcoder!.needMemoryManager()) {\r\n                        if (!this._wasmMemoryManager) {\r\n                            this._wasmMemoryManager = new WASMMemoryManager();\r\n                        }\r\n                        transcoder!.setMemoryManager(this._wasmMemoryManager);\r\n                    }\r\n                    if (!TranscoderManager._transcoderInstances[key]) {\r\n                        TranscoderManager._transcoderInstances[key] = [];\r\n                    }\r\n                    TranscoderManager._transcoderInstances[key].push(transcoder);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return transcoder;\r\n    }\r\n\r\n    private _getExistingTranscoder(key: string, transcoderName: string): Transcoder | null {\r\n        let transcoders = TranscoderManager._transcoderInstances[key];\r\n\r\n        if (transcoders) {\r\n            for (let t = 0; t < transcoders.length; ++t) {\r\n                const transcoder = transcoders[t];\r\n                if (transcoderName === transcoder.getName()) {\r\n                    return transcoder;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","declare function postMessage(message: any, transfer?: any[]): void;\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class WASMMemoryManager {\r\n\r\n    public static LoadBinariesFromCurrentThread = true;\r\n    public static InitialMemoryPages = (1 * 1024 * 1024) >> 16; // 1 Mbytes\r\n\r\n    private static _RequestId = 0;\r\n\r\n    public static LoadWASM(path: string): Promise<ArrayBuffer> {\r\n        if (this.LoadBinariesFromCurrentThread) {\r\n            return new Promise((resolve, reject) => {\r\n                fetch(path)\r\n                    .then((response) => {\r\n                        if (response.ok) {\r\n                            return response.arrayBuffer();\r\n                        }\r\n                        throw new Error(`Could not fetch the wasm component from \"${path}\": ${response.status} - ${response.statusText}`);\r\n                    })\r\n                    .then((wasmBinary) => resolve(wasmBinary))\r\n                    .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n            });\r\n        }\r\n\r\n        const id = this._RequestId++;\r\n\r\n        return new Promise((resolve) => {\r\n            const wasmLoadedHandler = (msg: any) => {\r\n                if (msg.data.action === \"wasmLoaded\" && msg.data.id === id) {\r\n                    self.removeEventListener(\"message\", wasmLoadedHandler);\r\n                    resolve(msg.data.wasmBinary);\r\n                }\r\n            };\r\n\r\n            self.addEventListener(\"message\", wasmLoadedHandler);\r\n\r\n            postMessage({ action: \"loadWASM\", path: path, id: id });\r\n        });\r\n    }\r\n\r\n    private _memory: WebAssembly.Memory;\r\n    private _numPages: number;\r\n    private _memoryView: Uint8Array;\r\n    private _memoryViewByteLength: number;\r\n    private _memoryViewOffset: number;\r\n\r\n    constructor(initialMemoryPages: number = WASMMemoryManager.InitialMemoryPages) {\r\n        this._numPages = initialMemoryPages;\r\n\r\n        this._memory = new WebAssembly.Memory({ initial: this._numPages });\r\n        this._memoryViewByteLength = this._numPages << 16;\r\n        this._memoryViewOffset = 0;\r\n        this._memoryView = new Uint8Array(this._memory.buffer, this._memoryViewOffset, this._memoryViewByteLength);\r\n    }\r\n\r\n    public get wasmMemory(): WebAssembly.Memory {\r\n        return this._memory;\r\n    }\r\n\r\n    public getMemoryView(numPages: number, offset: number = 0, byteLength?: number): Uint8Array {\r\n        byteLength = byteLength ?? numPages << 16;\r\n\r\n        if (this._numPages < numPages) {\r\n            this._memory.grow(numPages - this._numPages);\r\n            this._numPages = numPages;\r\n            this._memoryView = new Uint8Array(this._memory.buffer, offset, byteLength);\r\n            this._memoryViewByteLength = byteLength;\r\n            this._memoryViewOffset = offset;\r\n        } else {\r\n            this._memoryView = new Uint8Array(this._memory.buffer, offset, byteLength);\r\n            this._memoryViewByteLength = byteLength;\r\n            this._memoryViewOffset = offset;\r\n        }\r\n\r\n        return this._memoryView;\r\n    }\r\n}\r\n","/**\r\n * From https://github.com/donmccurdy/zstddec by Don McCurdy\r\n */\r\ninterface DecoderExports {\r\n    memory: Uint8Array;\r\n\r\n    ZSTD_findDecompressedSize: (compressedPtr: number, compressedSize: number) => number;\r\n    ZSTD_decompress: (uncompressedPtr: number, uncompressedSize: number, compressedPtr: number, compressedSize: number) => number;\r\n    malloc: (ptr: number) => number;\r\n    free: (ptr: number) => void;\r\n}\r\n\r\nlet init: Promise<void>;\r\nlet instance: { exports: DecoderExports };\r\nlet heap: Uint8Array;\r\n\r\nconst IMPORT_OBJECT = {\r\n\r\n    env: {\r\n\r\n        emscripten_notify_memory_growth: function (index: number): void {\r\n\r\n            heap = new Uint8Array(instance.exports.memory.buffer);\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * ZSTD (Zstandard) decoder.\r\n */\r\nexport class ZSTDDecoder {\r\n\r\n    public static WasmModuleURL = \"https://preview.babylonjs.com/zstddec.wasm\";\r\n\r\n    init(): Promise<void> {\r\n\r\n        if (init) { return init; }\r\n\r\n        if (typeof fetch !== 'undefined') {\r\n\r\n            // Web.\r\n\r\n            init = fetch(ZSTDDecoder.WasmModuleURL)\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.arrayBuffer();\r\n                    }\r\n                    throw new Error(`Could not fetch the wasm component for the Zstandard decompression lib: ${response.status} - ${response.statusText}`);\r\n                })\r\n                .then((arrayBuffer) => WebAssembly.instantiate(arrayBuffer, IMPORT_OBJECT))\r\n                .then(this._init);\r\n\r\n        } else {\r\n\r\n            // Node.js.\r\n\r\n            init = WebAssembly\r\n                .instantiateStreaming(fetch(ZSTDDecoder.WasmModuleURL), IMPORT_OBJECT)\r\n                .then(this._init);\r\n\r\n        }\r\n\r\n        return init;\r\n\r\n    }\r\n\r\n    _init(result: WebAssembly.WebAssemblyInstantiatedSource): void {\r\n\r\n        instance = result.instance as unknown as { exports: DecoderExports };\r\n\r\n        IMPORT_OBJECT.env.emscripten_notify_memory_growth(0); // initialize heap.\r\n\r\n    }\r\n\r\n    decode(array: Uint8Array, uncompressedSize = 0): Uint8Array {\r\n\r\n        if (!instance) { throw new Error(`ZSTDDecoder: Await .init() before decoding.`); }\r\n\r\n        // Write compressed data into WASM memory.\r\n        const compressedSize = array.byteLength;\r\n        const compressedPtr = instance.exports.malloc(compressedSize);\r\n        heap.set(array, compressedPtr);\r\n\r\n        // Decompress into WASM memory.\r\n        uncompressedSize = uncompressedSize || Number(instance.exports.ZSTD_findDecompressedSize(compressedPtr, compressedSize));\r\n        const uncompressedPtr = instance.exports.malloc(uncompressedSize);\r\n        const actualSize = instance.exports.ZSTD_decompress(uncompressedPtr, uncompressedSize, compressedPtr, compressedSize);\r\n\r\n        // Read decompressed data and free WASM memory.\r\n        const dec = heap.slice(uncompressedPtr, uncompressedPtr + actualSize);\r\n        instance.exports.free(compressedPtr);\r\n        instance.exports.free(uncompressedPtr);\r\n\r\n        return dec;\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * BSD License\r\n *\r\n * For Zstandard software\r\n *\r\n * Copyright (c) 2016-present, Yann Collet, Facebook, Inc. All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *    list of conditions and the following disclaimer.\r\n *\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n *  * Neither the name Facebook nor the names of its contributors may be used to\r\n *    endorse or promote products derived from this software without specific\r\n *    prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\r\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n"],"sourceRoot":""}