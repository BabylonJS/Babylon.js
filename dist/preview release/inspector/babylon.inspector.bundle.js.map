{"version":3,"sources":["webpack://INSPECTOR/webpack/universalModuleDefinition","webpack://INSPECTOR/webpack/bootstrap","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}","webpack://INSPECTOR/../dist/preview release/split.js","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs-loaders\",\"commonjs2\":\"babylonjs-loaders\",\"amd\":\"babylonjs-loaders\"}","webpack://INSPECTOR/./src/adapters/Adapter.ts","webpack://INSPECTOR/./src/details/Property.ts","webpack://INSPECTOR/./src/scheduler/Scheduler.ts","webpack://INSPECTOR/./src/gui/BasicElement.ts","webpack://INSPECTOR/./src/gui/ColorPickerElement.ts","webpack://INSPECTOR/./src/gui/CubeTextureElement.ts","webpack://INSPECTOR/./src/gui/HDRCubeTextureElement.ts","webpack://INSPECTOR/./src/gui/TextureElement.ts","webpack://INSPECTOR/./src/properties.ts","webpack://INSPECTOR/./src/details/PropertyLine.ts","webpack://INSPECTOR/./src/properties_gui.ts","webpack://INSPECTOR/./src/gui/Tooltip.ts","webpack://INSPECTOR/./src/tools/AbstractTool.ts","webpack://INSPECTOR/./src/tools/RefreshTool.ts","webpack://INSPECTOR/./src/tools/LabelTool.ts","webpack://INSPECTOR/./src/tools/PickTool.ts","webpack://INSPECTOR/./src/tools/PopupTool.ts","webpack://INSPECTOR/./src/tools/FullscreenTool.ts","webpack://INSPECTOR/./src/tools/PauseScheduleTool.ts","webpack://INSPECTOR/./src/tools/DisposeTool.ts","webpack://INSPECTOR/./src/tools/Toolbar.ts","webpack://INSPECTOR/./src/treetools/AbstractTreeTool.ts","webpack://INSPECTOR/./src/treetools/BoundingBox.ts","webpack://INSPECTOR/./src/treetools/Checkbox.ts","webpack://INSPECTOR/./src/treetools/DebugArea.ts","webpack://INSPECTOR/./src/treetools/Info.ts","webpack://INSPECTOR/./src/adapters/MeshAdapter.ts","webpack://INSPECTOR/./src/tree/TreeItem.ts","webpack://INSPECTOR/./src/gui/SearchBar.ts","webpack://INSPECTOR/./src/details/DetailPanel.ts","webpack://INSPECTOR/./src/tabs/Tab.ts","webpack://INSPECTOR/./src/tabs/PropertyTab.ts","webpack://INSPECTOR/./src/tabs/CameraTab.ts","webpack://INSPECTOR/./src/tabs/ConsoleTab.ts","webpack://INSPECTOR/./src/tabs/GLTFTab.ts","webpack://INSPECTOR/./src/adapters/GUIAdapter.ts","webpack://INSPECTOR/./src/tabs/GUITab.ts","webpack://INSPECTOR/./src/adapters/LightAdapter.ts","webpack://INSPECTOR/./src/tabs/LightTab.ts","webpack://INSPECTOR/./src/adapters/MaterialAdapter.ts","webpack://INSPECTOR/./src/tabs/MaterialTab.ts","webpack://INSPECTOR/./src/tabs/MeshTab.ts","webpack://INSPECTOR/./src/adapters/PhysicsImpostorAdapter.ts","webpack://INSPECTOR/./src/tabs/PhysicsTab.ts","webpack://INSPECTOR/./src/tabs/SceneTab.ts","webpack://INSPECTOR/./src/treetools/SoundInteractions.ts","webpack://INSPECTOR/./src/adapters/SoundAdapter.ts","webpack://INSPECTOR/./src/tabs/SoundTab.ts","webpack://INSPECTOR/./src/tabs/StatsTab.ts","webpack://INSPECTOR/./src/adapters/TextureAdapter.ts","webpack://INSPECTOR/./src/tabs/TextureTab.ts","webpack://INSPECTOR/./src/tabs/ToolsTab.ts","webpack://INSPECTOR/./src/tabs/TabBar.ts","webpack://INSPECTOR/./src/Inspector.ts","webpack://INSPECTOR/./src/helpers/Helpers.ts","webpack://INSPECTOR/./src/treetools/CameraPOV.ts","webpack://INSPECTOR/./src/adapters/CameraAdapter.ts","webpack://INSPECTOR/./src/gui/ColorElement.ts","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs-serializers\",\"commonjs2\":\"babylonjs-serializers\",\"amd\":\"babylonjs-serializers\"}","webpack://INSPECTOR/./src/legacy.ts","webpack://INSPECTOR/../Tools/gulp/node_modules/webpack/buildin/global.js","webpack://INSPECTOR/./sass/main.scss?fc85","webpack://INSPECTOR/./sass/main.scss","webpack://INSPECTOR/./node_modules/css-loader/lib/css-base.js","webpack://INSPECTOR/./node_modules/style-loader/lib/addStyles.js","webpack://INSPECTOR/./node_modules/style-loader/lib/urls.js","webpack://INSPECTOR/external {\"root\":[\"BABYLON\",\"GUI\"],\"commonjs\":\"babylonjs-gui\",\"commonjs2\":\"babylonjs-gui\",\"amd\":\"babylonjs-gui\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__12__","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","oe","err","console","error","jsonpArray","oldJsonpFunction","slice","s","this","e","attachEvent","document","createElement","style","cssText","a","String","querySelector","u","g","h","z","S","f","v","gutterSize","minSize","snapOffset","direction","cursor","blockDrag","y","b","dragging","onDragStart","preventDefault","move","stop","parent","E","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","gutter","G","onDragEnd","touches","start","aMin","aGutterSize","size","bMin","bGutterSize","w","onDrag","getComputedStyle","parseFloat","percentage","Math","min","x","sizes","M","parentNode","D","Array","isArray","k","U","L","O","B","C","F","isFirst","isLast","A","className","insertBefore","setSizes","collapse","destroy","removeChild","Split","Adapter_Adapter","Adapter","obj","_obj","correspondsTo","_name","external_root_BABYLON_commonjs_babylonjs_commonjs2_babylonjs_amd_babylonjs_","RandomId","Property_Property","Property","prop","parentObj","_property","_parentObj","newValue","undefined","debugLayer","onPropertyChangedObservable","notifyObservers","initialValue","getScene","Helpers_Helpers","GET_TYPE","newObj","Scheduler","pause","_updatableProperties","interval","setInterval","_update","REFRESH_TIME","getInstance","_instance","add","remove","index","indexOf","splice","_i","_a","update","dispose","clearInterval","BasicElement_BasicElement","BasicElement","_div","CreateDiv","toHtml","_build","ColorPickerElement_ColorPickerElement","_super","ColorPickerElement","color","propertyLine","_this","scheduler","backgroundColor","_toRgba","pline","_input","CreateInput","type","opacity","width","height","toHexString","addEventListener","FromHexString","toPrecision","validateInput","appendChild","__extends","CubeTextureElement_CubeTextureElement","CubeTextureElement","tex","_pause","_textureDiv","_canvas","CreateElement","_textureUrl","_showViewer","CubeTextureElement_extends","url","_engine","_cube","material","_initEngine","_populateScene","hdrTexture","_scene","coordinatesMode","SKYBOX_MODE","CreateBox","hdrSkyboxMaterial","backFaceCulling","reflectionTexture","disableLighting","registerBeforeRender","rotation","clearColor","runRenderLoop","render","setAttribute","display","HDRCubeTextureElement_HDRCubeTextureElement","HDRCubeTextureElement","HDRCubeTextureElement_extends","microSurface","TextureElement_TextureElement","TextureElement","imgDiv","sizeDiv","textContent","getBaseSize","backgroundImage","TextureElement_extends","PROPERTIES","format","type_not_defined","properties","Vector2","vec","Trunc","Vector3","Color3","slider","max","step","Color4","Quaternion","Size","Texture","RenderTargetTexture","DynamicTexture","BaseTexture","CubeTexture","HDRCubeTexture","Sound","ArcRotateCamera","alpha","PI","beta","fov","FreeCamera","Scene","TransformNode","AbstractMesh","Mesh","visibility","StandardMaterial","mat","PBRMaterial","PhysicsImpostor","ImageProcessingConfiguration","ColorCurves","PropertyFormatter","PropertyLine_PropertyLine","PropertyLine","level","_children","_elements","_level","_parent","marginLeft","_valueDiv","_isSliderType","_displayValueContent","_createElements","elem","_updateValue","_checkboxInput","_rangeInput","_isSimple","_initInput","_displayInputHandler","_focusOutInputHandler","_validateInputHandler","_escapeInputHandler","classList","_addDetails","_displayInput","_validateInput","_escapeInput","_onMouseDownHandler","_onMouseDown","_onMouseDragHandler","_onMouseDrag","_onMouseUpHandler","_onMouseUp","removeEventListener","keyCode","forceupdate","updateObject","_removeInputWithoutValidating","CleanDiv","valueTxt","focus","IsBrowserIE","child","_b","_c","childNodes","nodeValue","hexLineString","rValue","parseInt","rValueRound","round","gValue","gValueRound","bValue","bValueRound","aValue","aValueRound","hex","hexLineInfos","valHexR","toString","valHexG","valHexB","valHexA","unshift","join","_SIMPLE_TYPE","closeDetails","contains","toggle","objToDetail","propToDisplay","GetAllLinesPropertiesAsString","sort","reverse","propToDisplay_1","_MARGIN_LEFT","hexLinePropCheck","hexLineCheck","propToDisplay_2","valHex","hexLineProp","hexLine","_d","_e","nextSibling","diff","_prevY","clientY","_preValue","childElementCount","checked","_getSliderProperty","_rangeHandler","_textValue","innerText","paddingLeft","constructor","guiLoaded","loadGUIProperties","GUI","PROPERTIES_GUI","ValueAndUnit","valueAndUnit","Control","control","Button","button","ColorPicker","colorPicker","Checkbox","checkbox","Ellipse","ellipse","Image","image","Line","line","RadioButton","radioButton","Rectangle","rectangle","Slider","StackPanel","stackPanel","TextBlock","textBlock","Container","container","Tooltip_Tooltip","tip","attachTo","_elem","parentElement","_infoDiv","AbstractTool_AbstractTool","AbstractTool","iconSet","icon","inspector","tooltip","_inspector","Inspector_Inspector","DOCUMENT","action","getPixelWidth","WINDOW","marginRight","left","substr","right","clientWidth","_updateIcon","RefreshTool","RefreshTool_extends","refresh","LabelTool_LabelTool","LabelTool","_isDisplayed","_advancedTexture","_labelInitialized","scene","LabelTool_extends","_checkGUILoaded","_initializeLabels","GUIObject","AdvancedDynamicTexture","CreateFullscreenUI","meshes","_createLabel","onNewMeshAddedObservable","onMeshRemovedObservable","_removeLabel","mesh","IsSystemName","rect1","background","addControl","label","text","fontSize","linkWithMesh","_rootContainer","children","_linkedMesh","removeControl","isVisible","PickTool","_isActive","_pickHandler","_pickMesh","PickTool_extends","_deactivate","getEngine","getRenderingCanvas","evt","pos","_updatePointerPosition","pi","pick","pickedMesh","displayObjectDetails","canvasRect","getRenderingCanvasClientRect","clientX","top","PopupTool","PopupTool_extends","openPopup","FullscreenTool","FullscreenTool_extends","element","requestFullscreen","webkitRequestFullScreen","requestFullScreen","body","PauseScheduleTool_PauseScheduleTool","PauseScheduleTool","_isPause","PauseScheduleTool_extends","DisposeTool","DisposeTool_extends","Toolbar_Toolbar","Toolbar","_tools","_addTools","Toolbar_extends","popupMode","IsBrowserEdge","sum","AbstractTreeTool_AbstractTreeTool","AbstractTreeTool","_on","_addEvents","stopPropagation","BoundingBox","isBoxVisible","_check","BoundingBox_extends","setBoxVisible","Checkbox_extends","dontEnable","setVisible","DebugArea","DebugArea_extends","debug","Info_Info","Info","getInfo","Info_extends","MeshAdapter_MeshAdapter","MeshAdapter","MeshAdapter_extends","id","str","getProperties","GetAllLinesProperties","getTools","tools","getTotalVertices","setEnabled","isEnabled","showBoundingBox","enable","_axesViewer","_drawAxis","onBeforeRenderObservable","onBeforeRenderObserver","computeWorldMatrix","AxesViewer","matrix","getWorldMatrix","extend","getBoundingInfo","boundingBox","extendSizeWorld","scaleLines","position","TransformNormal","TreeItem_TreeItem","TreeItem","tab","_tab","_adapter","TreeItem_extends","compareTo","item","str1","str2","localeCompare","numeric","fold","unfold","adapterId","adapter","tool","_lineContent","_addEvent","getDetails","select","_isFolded","active","getDiv","SearchBar_SearchBar","SearchBar","_propTab","filter","_inputElement","placeholder","SearchBar_extends","reset","SearchBar_SearchBarDetails","SearchBarDetails","_detailTab","searchByName","DetailPanel_DetailPanel","DetailPanel","dr","_detailRows","_sortDirection","DetailPanel_extends","detailsRow","clean","_addSearchBarDetails","_details","_createHeaderRow","_headerRow","_items","_sortDetails","cleanRow","_addSearchDetails","searchDetails","_searchDetails","searchName","rows","row","_items_1","_direction","elems","querySelectorAll","query","isString","forEach","detail1","detail2","createDiv","cssClass","div","spanName","charAt","toUpperCase","spanDirection","Tab_Tab","Tab","tabbar","_tabbar","Tab_extends","isActive","switchTab","getPanel","_panel","PropertyTab_PropertyTab","PropertyTab","insp","_treeItems","_searchBar","_treePanel","_detailsPanel","split","PropertyTab_extends","items","_getTree","item1","item2","items_1","displayDetails","activateNode","details","getItemFor","searchObjectInTree","treeItem","it","toLowerCase","CameraTab_CameraTab","CameraTab","CameraTab_extends","arr","cameras","camera","CameraAdapter_CameraAdapter","ConsoleTab_ConsoleTab","ConsoleTab","consolePanel","bjsPanel","title","_consolePanelContent","_bjsPanelContent","innerHTML","LogCache","OnNewCacheEntry","entry","scrollTop","scrollHeight","ConsoleTab_extends","log","_oldConsoleLog","warn","_oldConsoleWarn","_oldConsoleError","_addConsoleLog","_addConsoleWarn","_addConsoleError","_message","message","caller","replace","params","arguments","callerFunc","GLTFTab_GLTFTab","GLTFTab","_actions","event","_closeDetailsPanel","external_root_BABYLON_commonjs_babylonjs_loaders_commonjs2_babylonjs_loaders_amd_babylonjs_loaders_","GLTFLoader","_addImport","external_root_BABYLON_commonjs_babylonjs_serializers_commonjs2_babylonjs_serializers_amd_babylonjs_serializers_","_addExport","GLTFTab_extends","_Initialize","OnPluginActivatedObservable","loader","_ApplyLoaderDefaults","onValidatedObservable","results","_ValidationResults","_OnValidationResultsUpdated","importActions","_GetLoaderDefaultsAsync","then","defaults","loaderAction","_showLoaderDefaults","extensionName","extensionDefaults","extensions","extensionAction","_showLoaderExtensionDefaults","enabled","validationTitle","validationAction","_ShowValidationResults","uri","BABYLON","Tools","GetFilename","_FormatValidationResultsShort","count","issueType","issues","numErrors","numWarnings","numInfos","numHints","actionDiv","iconSpan","win","open","JSON","stringify","whiteSpace","fontFamily","_LoaderDefaults","onExtensionLoadedObservable","extension","_GetPublic","result","Promise","resolve","engine","importMeshAsync","_openDetailsPanel","_split","detailsPanel","keys","exportActions","GLBAsync","shouldExportTransformNode","transformNode","_IsSkyBox","glb","downloadFiles","GUIAdapter_GUIAdapter","GUIAdapter","GUIAdapter_extends","GUITab_GUITab","GUITab","GUITab_extends","createNode","descendants","node","descendants_1","textures","LightAdapter_LightAdapter","LightAdapter","LightAdapter_extends","LightTab_LightTab","LightTab","LightTab_extends","lights","light","MaterialAdapter_MaterialAdapter","MaterialAdapter","MaterialAdapter_extends","MaterialTab_MaterialTab","MaterialTab","MaterialTab_extends","materials","MeshTab_MeshTab","MeshTab","MeshTab_extends","alreadyIn","getDescendants","notFound","instances","meshWithoutAnyParent","transformNodes","tn","meshWithoutAnyParent_1","PhysicsImpostorAdapter_PhysicsImpostorAdapter","PhysicsImpostorAdapter","viewer","_isVisible","_viewer","PhysicsImpostorAdapter_extends","physicsImposter","showImpostor","hideImpostor","PhysicsTab_PhysicsTab","PhysicsTab","PhysicsTab_extends","isPhysicsEnabled","PhysicsViewer","physicsImpostor","SceneTab_SceneTab","SceneTab","_skeletonViewers","props_1","propString","point","wireframe","solid","forcePointsCloud","forceWireframe","_generateRadioAction","_generateActionLine","DiffuseTextureEnabled","AmbientTextureEnabled","SpecularTextureEnabled","EmissiveTextureEnabled","BumpTextureEnabled","OpacityTextureEnabled","ReflectionTextureEnabled","RefractionTextureEnabled","ColorGradingTextureEnabled","LightmapTextureEnabled","FresnelEnabled","animationsEnabled","collisionsEnabled","fogEnabled","lensFlaresEnabled","lightsEnabled","particlesEnabled","postProcessesEnabled","probesEnabled","proceduralTexturesEnabled","renderTargetsEnabled","shadowsEnabled","skeletonsEnabled","spritesEnabled","texturesEnabled","headphones","normalSpeaker","audioEnabled","headphone","skeleton","found","sIndex","SkeletonViewer","SceneTab_extends","initValue","isActivated","arr_2","arr_1","SoundInteractions","playSound","SoundInteractions_extends","_playSound","setPlaying","SoundAdapter_SoundAdapter","SoundAdapter","SoundAdapter_extends","callback","isPlaying","play","onEndedObservable","addOnce","SoundTab_SoundTab","SoundTab","SoundTab_extends","soundTracks","soundCollection","StatsTab_StatsTab","StatsTab","_glInfo","getGlInfo","_connectToInstrumentation","fpsSpan","updateFct","Format","getFps","versionSpan","Version","_updateLoopHandler","_refreshRateCounter","refreshRate","_createStatLabel","elemValue","_sceneInstrumentation","drawCallsCounter","current","textureCollisionsCounter","getActiveMeshes","getActiveIndices","getActiveBones","getActiveParticles","activeMeshesEvaluationTimeCounter","renderTargetsRenderTimeCounter","particlesRenderTimeCounter","spritesRenderTimeCounter","animationsTimeCounter","physicsTimeCounter","renderTimeCounter","frameTimeCounter","interFrameTimeCounter","_engineInstrumentation","gpuFrameTimeCounter","average","getRenderWidth","getRenderHeight","getCaps","standardDerivatives","s3tc","instancedArrays","textureFloat","uintIndices","fragmentDepthSupported","highPrecisionShaderSupported","drawBuffersExtension","vertexArrayObject","timerQuery","isStencilEnable","maxTexturesImageUnits","maxTextureSize","maxAnisotropy","webGLVersion","version","renderer","StatsTab_extends","captureActiveMeshesEvaluationTime","captureRenderTargetsRenderTime","captureFrameTime","captureRenderTime","captureInterFrameTime","captureParticlesRenderTime","captureSpritesRenderTime","capturePhysicsTime","captureAnimationsTime","captureGPUFrameTime","content","Infinity","unregisterAfterRender","registerAfterRender","TextureAdapter_TextureAdapter","TextureAdapter","TextureAdapter_extends","TextureTab_TextureTab","TextureTab","_imagePanel","TextureTab_extends","DDSPreview","texture","imageExtension","pop","img","src","canvas","insertPreview","previewCanvas","outline","webkitTapHighlightColor","TextureTab_DDSPreview","imgs_1","engine_1","size_1","getSize","screenShotTexture","clone","activeCamera","onBeforeRender","onAfterRender","onAfterRenderObservable","faceIndex","DumpFramebuffer","incrementRenderId","resetCachedMaterial","pixels","readPixels","ctx","getContext","tmp","buffer","Uint8ClampedArray","ImageData","set","imgData","createImageData","putImageData","base64Image","toDataURL","AdapterItem","getElementById","Engine","_run","HemisphericLight","intensity","_camera","Zero","attachControl","resize","executeWhenReady","_tex","_mat","_mesh","previewMeshPlane","CreatePlane","rotate","invertZ","uScale","diffuseTexture","emissiveTexture","specularTexture","previewMeshBox","_cubeTex","ToolsTab_ToolsTab","ToolsTab","_videoRecorder","errorElemm_1","inputElement","accept","onchange","files","target","file","isFileDDS","isFileEnv","ReadFile","blob","Blob","URL","createObjectURL","environmentTexture","CreateFromPrefilteredData","premultipliedAlpha","onclick","CreateEnvTextureAsync","Download","catch","CreateScreenshot","precision","IsSupported","videoRecorderElement_1","isRecording","stopRecording","startRecording","ToolsTab_extends","TabBar_TabBar","TabBar","initialTab","_tabs","_invisibleTabs","_visibleTabs","_meshTab","audioEngine","_toolBar","getTabIndex","TabBar_extends","_moreTabsIcon","_moreTabsPanel","topPanel","_addInvisibleTabToPanel","activeTab","getActiveTab","switchMeshTab","getActiveTabIndex","updateWidth","parentSize","currentSize","lastTab","Inspector","popup","newColors","_popupMode","onGUILoaded","LoadScript","_initialTab","_parentElement","canvasParent","canvasComputedStyle","_canvasStyle","Css","bottom","padding","paddingBottom","paddingTop","paddingRight","margin","marginBottom","marginTop","_c2diwrapper","_buildInspector","widthPx","heightPx","leftPx","innerWidth","maxWidth","parent_1","_getRelativeParent","pWidth","pheight","clientHeight","replaceChild","SEND_EVENT","bColor","bColorl1","backgroundColorLighter","bColorl2","backgroundColorLighter2","bColorl3","backgroundColorLighter3","colorTop","colorBot","styles","lookForAbsoluteOrRelative","computedStyle","_topPanel","_tabPanel","filterItem","firstTime","cloneNode","links","link","rel","href","head","alert","Helpers","classname","GetClassName","_GetFnName","_CheckIfTypeExists","_GetTypeFor","test","navigator","userAgent","typeBlock","fn","match","eventName","createEvent","initEvent","Event","dispatchEvent","nb","toFixed","firstChild","cssAttribute","LoadFile","lastIndexOf","propertiesLines","infos","dontTakeThis","props","substring","Capitalize","CameraPOV_CameraPOV","CameraPOV","cameraPOV","getCurrentActiveCamera","CameraPOV_extends","_gotoPOV","actives","setPOV","CameraAdapter","CameraAdapter_extends","switchActiveCamera","ColorElement_ColorElement","ColorElement","ColorElement_extends","globalObject","global","INSPECTOR","_index__WEBPACK_IMPORTED_MODULE_0__","Function","eval","options","hmr","transform","insertInto","locals","useSourceMap","list","map","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","stylesInDom","isOldIE","memo","apply","memoize","all","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","Error","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","el","styleIndex","applyToSingletonTag","revokeObjectURL","createLinkElement","autoFixUrls","convertToAbsoluteUrls","oldSrc","styleSheet","createTextNode","DEBUG","newList","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1"],"mappings":"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","file":"babylon.inspector.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"), require(\"babylonjs-loaders\"), require(\"babylonjs-serializers\"), require(\"babylonjs-gui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-inspector\", [\"babylonjs\", \"babylonjs-loaders\", \"babylonjs-serializers\", \"babylonjs-gui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-inspector\"] = factory(require(\"babylonjs\"), require(\"babylonjs-loaders\"), require(\"babylonjs-serializers\"), require(\"babylonjs-gui\"));\n\telse\n\t\troot[\"INSPECTOR\"] = factory(root[\"BABYLON\"], root[\"BABYLON\"], root[\"BABYLON\"], root[\"BABYLON\"][\"GUI\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__12__) {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".babylon.inspector.bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\"use strict\"; (function () { var t = this, e = t.attachEvent && !t[r], i = t.document, r = \"addEventListener\", s = \"removeEventListener\", n = \"getBoundingClientRect\", o = function () { for (var t, e = [\"\", \"-webkit-\", \"-moz-\", \"-o-\"], r = 0; r < e.length; r++)if (t = i.createElement(\"div\"), t.style.cssText = \"width:\" + e[r] + \"calc(9px)\", t.style.length) return e[r] + \"calc\" }(), a = function (t) { return \"string\" == typeof t || t instanceof String ? i.querySelector(t) : t }, l = function (l, c) { var u, g, h, p, d, z, S, f, v = []; c = void 0 !== c ? c : {}, void 0 === c.gutterSize && (c.gutterSize = 10), void 0 === c.minSize && (c.minSize = 100), void 0 === c.snapOffset && (c.snapOffset = 30), void 0 === c.direction && (c.direction = \"horizontal\"), \"horizontal\" == c.direction ? (u = \"width\", h = \"clientWidth\", p = \"clientX\", d = \"left\", z = \"gutter gutter-horizontal\", S = \"paddingLeft\", f = \"paddingRight\", c.cursor || (c.cursor = \"ew-resize\")) : \"vertical\" == c.direction && (u = \"height\", h = \"clientHeight\", p = \"clientY\", d = \"top\", z = \"gutter gutter-vertical\", S = \"paddingTop\", f = \"paddingBottom\", c.cursor || (c.cursor = \"ns-resize\")), c.blockDrag && (z += \" blocked\"); var y = function (e) { if (!c.blockDrag) { var i = this, s = i.a, n = i.b; !i.dragging && c.onDragStart && c.onDragStart(), e.preventDefault(), i.dragging = !0, i.move = b.bind(i), i.stop = m.bind(i), t[r](\"mouseup\", i.stop), t[r](\"touchend\", i.stop), t[r](\"touchcancel\", i.stop), i.parent[r](\"mousemove\", i.move), i.parent[r](\"touchmove\", i.move), s[r](\"selectstart\", E), s[r](\"dragstart\", E), n[r](\"selectstart\", E), n[r](\"dragstart\", E), s.style.userSelect = \"none\", s.style.webkitUserSelect = \"none\", s.style.MozUserSelect = \"none\", s.style.pointerEvents = \"none\", n.style.userSelect = \"none\", n.style.webkitUserSelect = \"none\", n.style.MozUserSelect = \"none\", n.style.pointerEvents = \"none\", i.gutter.style.cursor = c.cursor, i.parent.style.cursor = c.cursor, G.call(i) } }, m = function () { if (!c.blockDrag) { var e = this, i = e.a, r = e.b; e.dragging && c.onDragEnd && c.onDragEnd(), e.dragging = !1, t[s](\"mouseup\", e.stop), t[s](\"touchend\", e.stop), t[s](\"touchcancel\", e.stop), e.parent[s](\"mousemove\", e.move), e.parent[s](\"touchmove\", e.move), delete e.stop, delete e.move, i[s](\"selectstart\", E), i[s](\"dragstart\", E), r[s](\"selectstart\", E), r[s](\"dragstart\", E), i.style.userSelect = \"\", i.style.webkitUserSelect = \"\", i.style.MozUserSelect = \"\", i.style.pointerEvents = \"\", r.style.userSelect = \"\", r.style.webkitUserSelect = \"\", r.style.MozUserSelect = \"\", r.style.pointerEvents = \"\", e.gutter.style.cursor = \"\", e.parent.style.cursor = \"\" } }, b = function (t) { var e; this.dragging && (e = \"touches\" in t ? t.touches[0][p] - this.start : t[p] - this.start, e > this.aMin + c.snapOffset + this.aGutterSize ? e < this.size - (this.bMin + c.snapOffset + this.bGutterSize) || (e = this.size - (this.bMin + this.bGutterSize)) : e = this.aMin + this.aGutterSize, w.call(this, e), c.onDrag && c.onDrag()) }, G = function () { var e = t.getComputedStyle(this.parent), i = this.parent[h] - parseFloat(e[S]) - parseFloat(e[f]); this.size = this.a[n]()[u] + this.b[n]()[u] + this.aGutterSize + this.bGutterSize, this.percentage = Math.min(this.size / i * 100, 100), this.start = this.a[n]()[d] }, w = function (t) { this.a.style[u] = o + \"(\" + t / this.size * this.percentage + \"% - \" + this.aGutterSize + \"px)\", this.b.style[u] = o + \"(\" + (this.percentage - t / this.size * this.percentage) + \"% - \" + this.bGutterSize + \"px)\" }, x = function (t, i, r) { \"string\" == typeof i || i instanceof String || (i = e ? c.sizes[g] + \"%\" : o + \"(\" + i + \"% - \" + r + \"px)\"), t.style[u] = i }, E = function () { return !1 }, M = a(l[0]).parentNode; if (!c.sizes) { var D = 100 / l.length; for (c.sizes = [], g = 0; g < l.length; g++)c.sizes.push(D) } if (!Array.isArray(c.minSize)) { var k = []; for (g = 0; g < l.length; g++)k.push(c.minSize); c.minSize = k } for (g = 0; g < l.length; g++) { var U, L = a(l[g]), O = 1 == g, B = g == l.length - 1, C = c.sizes[g], F = c.gutterSize; if (g > 0 && (U = { a: a(l[g - 1]), b: L, aMin: c.minSize[g - 1], bMin: c.minSize[g], dragging: !1, parent: M, isFirst: O, isLast: B, direction: c.direction }, U.aGutterSize = c.gutterSize, U.bGutterSize = c.gutterSize, O && (U.aGutterSize = c.gutterSize / 2), B && (U.bGutterSize = c.gutterSize / 2)), !e) { if (g > 0) { var A = i.createElement(\"div\"); A.className = z, A.style[u] = c.gutterSize + \"px\", A[r](\"mousedown\", y.bind(U)), A[r](\"touchstart\", y.bind(U)), M.insertBefore(A, L), U.gutter = A } (0 === g || g == l.length - 1) && (F = c.gutterSize / 2) } x(L, C, F), g > 0 && v.push(U) } return { setSizes: function (t) { for (var e = 0; e < t.length; e++)if (e > 0) { var i = v[e - 1]; x(i.a, t[e - 1], i.aGutterSize), x(i.b, t[e], i.bGutterSize) } }, collapse: function (t) { var e; t === v.length ? (e = v[t - 1], G.call(e), w.call(e, e.size - e.bGutterSize)) : (e = v[t], G.call(e), w.call(e, e.aGutterSize)) }, destroy: function () { for (var t = 0; t < v.length; t++)v[t].parent.removeChild(v[t].gutter), v[t].a.style[u] = \"\", v[t].b.style[u] = \"\" } } }; \"undefined\" != typeof exports ? (\"undefined\" != typeof module && module.exports && (exports = module.exports = l), exports.Split = l) : t.Split = l }).call(window);","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import { Geometry } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\n\r\n\r\nexport abstract class Adapter {\r\n\r\n    protected _obj: any;\r\n    // a unique name for this adapter, to retrieve its own key in the local storage\r\n    private static _name: string = Geometry.RandomId();\r\n\r\n    constructor(obj: any) {\r\n        this._obj = obj;\r\n    }\r\n\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public abstract id(): string;\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public abstract type(): string;\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public abstract getProperties(): Array<PropertyLine>;\r\n\r\n    /** Returns true if the given object correspond to this  */\r\n    public correspondsTo(obj: any) {\r\n        return obj === this._obj;\r\n    }\r\n\r\n    /** Returns the adapter unique name */\r\n    public get name(): string {\r\n        return Adapter._name;\r\n    }\r\n\r\n    /**\r\n     * Returns the actual object used for this adapter\r\n     */\r\n    public get object(): any {\r\n        return this._obj;\r\n    }\r\n\r\n    /** Returns the list of tools available for this adapter */\r\n    public abstract getTools(): Array<AbstractTreeTool>;\r\n}\r\n","import { Scene } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\n\r\n/**\r\n * A property is a link between a data (string) and an object.\r\n */\r\nexport class Property {\r\n\r\n    /** The property name */\r\n    private _property: string;\r\n    /** The obj this property refers to */\r\n    private _obj: any;\r\n    /** The obj parent  */\r\n    private _parentObj: any;\r\n\r\n    constructor(prop: string, obj: any, parentObj?: any) {\r\n        this._property = prop;\r\n        this._obj = obj;\r\n        this._parentObj = parentObj || null;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._property;\r\n    }\r\n\r\n    public get value(): any {\r\n        return this._obj[this._property];\r\n    }\r\n    public set value(newValue: any) {\r\n        if (newValue != undefined && this._obj[this._property] != undefined) {\r\n            if (this._obj instanceof Scene) {\r\n                (<Scene>this._obj).debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                    object: this._obj,\r\n                    property: this._property,\r\n                    value: newValue,\r\n                    initialValue: (<any>this._obj)[this._property]\r\n                });\r\n            }\r\n            else {\r\n                if (this._parentObj != null) {\r\n                    // Object that have \"children\" properties : Color, Vector, imageProcessingConfiguration\r\n\r\n                    if (this._parentObj instanceof Scene) {\r\n                        (<Scene>this._parentObj).debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                            object: this._parentObj,\r\n                            property: this._property,\r\n                            value: newValue,\r\n                            initialValue: (<any>this._obj)[this._property]\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._parentObj.getScene().debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                            object: this._parentObj,\r\n                            property: this._property,\r\n                            value: newValue,\r\n                            initialValue: this._obj[this._property]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this._obj.getScene().debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                        object: this._obj,\r\n                        property: this._property,\r\n                        value: newValue,\r\n                        initialValue: this._obj[this._property]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        this._obj[this._property] = newValue;\r\n    }\r\n\r\n    public get type(): string {\r\n        return Helpers.GET_TYPE(this.value);\r\n    }\r\n\r\n    public get obj(): any {\r\n        return this._obj;\r\n    }\r\n    public set obj(newObj: any) {\r\n        this._obj = newObj;\r\n    }\r\n\r\n}\r\n","import { PropertyLine } from \"../details/PropertyLine\";\r\n\r\n\r\nexport class Scheduler {\r\n\r\n    private static _instance: Scheduler;\r\n\r\n    /** Is this scheduler in pause ? */\r\n    public pause: boolean = false;\r\n\r\n    /** All properties are refreshed every 250ms */\r\n    public static REFRESH_TIME: number = 250;\r\n\r\n    /** The list of data to update */\r\n    private _updatableProperties: Array<PropertyLine> = [];\r\n\r\n    private interval: number;\r\n\r\n    constructor() {\r\n        this.interval = setInterval(this._update.bind(this), Scheduler.REFRESH_TIME);\r\n    }\r\n\r\n    public static getInstance(): Scheduler {\r\n        if (!Scheduler._instance) {\r\n            Scheduler._instance = new Scheduler();\r\n        }\r\n        return Scheduler._instance;\r\n    }\r\n\r\n    /** Add a property line to be updated every X ms */\r\n    public add(prop: PropertyLine) {\r\n        this._updatableProperties.push(prop);\r\n    }\r\n\r\n    /** Removes the given property from the list of properties to update */\r\n    public remove(prop: PropertyLine) {\r\n        let index = this._updatableProperties.indexOf(prop);\r\n        if (index != -1) {\r\n            this._updatableProperties.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private _update() {\r\n        // If not in pause, update \r\n        if (!this.pause) {\r\n            for (let prop of this._updatableProperties) {\r\n                prop.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        window.clearInterval(this.interval);\r\n    }\r\n}\r\n","import { Helpers } from \"../helpers/Helpers\";\r\n\r\n/**\r\n * Represents a html div element. \r\n * The div is built when an instance of BasicElement is created.\r\n */\r\nexport abstract class BasicElement {\r\n\r\n    protected _div: HTMLDivElement;\r\n\r\n    constructor() {\r\n        this._div = Helpers.CreateDiv();\r\n    }\r\n\r\n    /**\r\n     * Returns the div element\r\n     */\r\n    public toHtml(): HTMLDivElement {\r\n        return this._div;\r\n    }\r\n\r\n    /**\r\n     * Build the html element\r\n     */\r\n    protected _build() { };\r\n\r\n    public abstract update(data?: any): void;\r\n\r\n    /** Default dispose method if needed */\r\n    public dispose() { };\r\n\r\n}\r\n","import { Color3, Color4 } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n * Represents a html div element. \r\n * The div is built when an instance of BasicElement is created.\r\n */\r\nexport class ColorPickerElement extends BasicElement {\r\n\r\n    protected _input: HTMLInputElement;\r\n    private pline: PropertyLine;\r\n\r\n    constructor(color: Color4 | Color3, propertyLine: PropertyLine) {\r\n        super();\r\n        let scheduler = Scheduler.getInstance();\r\n        this._div.className = 'color-element';\r\n        this._div.style.backgroundColor = this._toRgba(color);\r\n        this.pline = propertyLine;\r\n\r\n        this._input = Helpers.CreateInput();\r\n        this._input.type = 'color';\r\n        this._input.style.opacity = \"0\";\r\n        this._input.style.width = '10px';\r\n        this._input.style.height = '15px';\r\n        this._input.value = color.toHexString();\r\n\r\n        this._input.addEventListener('input', (e) => {\r\n            let color = Color3.FromHexString(this._input.value);\r\n            color.r = parseFloat(color.r.toPrecision(2));\r\n            color.g = parseFloat(color.g.toPrecision(2));\r\n            color.b = parseFloat(color.b.toPrecision(2));\r\n            this.pline.validateInput(color);\r\n            scheduler.pause = false;\r\n        });\r\n\r\n        this._div.appendChild(this._input);\r\n\r\n        this._input.addEventListener('click', (e) => {\r\n            scheduler.pause = true;\r\n        });\r\n    }\r\n\r\n    public update(color?: Color4 | Color3) {\r\n        if (color) {\r\n            this._div.style.backgroundColor = this._toRgba(color);\r\n            this._input.value = color.toHexString();\r\n        }\r\n    }\r\n\r\n    private _toRgba(color: Color4 | Color3): string {\r\n        if (color) {\r\n            let r = (color.r * 255) | 0;\r\n            let g = (color.g * 255) | 0;\r\n            let b = (color.b * 255) | 0;\r\n            let a = 1;\r\n            if (color instanceof Color4) {\r\n                a = (color as Color4).a;\r\n            }\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { Color4, CubeTexture, Engine, Mesh, Scene, StandardMaterial, Texture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div. A new canvas is created, with a new js scene, containing only the \r\n* cube texture in a cube\r\n*/\r\nexport class CubeTextureElement extends BasicElement {\r\n\r\n    /** The big div displaying the full image */\r\n    private _textureDiv: HTMLElement;\r\n\r\n    private _engine: Engine;\r\n    protected _scene: Scene;\r\n    protected _cube: Mesh;\r\n    private _canvas: HTMLCanvasElement;\r\n    protected _textureUrl: string;\r\n\r\n    // On pause the engine will not render anything\r\n    private _pause: boolean = false;\r\n\r\n    /** The texture given as a parameter should be cube. */\r\n    constructor(tex: Texture) {\r\n        super();\r\n        this._div.className = 'fa fa-search texture-element';\r\n\r\n        // Create the texture viewer\r\n        this._textureDiv = Helpers.CreateDiv('texture-viewer', this._div);\r\n        // canvas\r\n        this._canvas = Helpers.CreateElement('canvas', 'texture-viewer-img', this._textureDiv) as HTMLCanvasElement;\r\n\r\n        if (tex) {\r\n            this._textureUrl = tex.name;\r\n        }\r\n\r\n        this._div.addEventListener('mouseover', this._showViewer.bind(this, 'flex'));\r\n        this._div.addEventListener('mouseout', this._showViewer.bind(this, 'none'));\r\n\r\n    }\r\n\r\n    public update(tex?: Texture) {\r\n        if (tex && tex.url === this._textureUrl) {\r\n            // Nothing to do, as the old texture is the same as the old one\r\n        } else {\r\n            if (tex) {\r\n                this._textureUrl = tex.name;\r\n            }\r\n            if (this._engine) {\r\n                // Dispose old material and cube\r\n                if (this._cube.material) {\r\n                    this._cube.material.dispose(true, true);\r\n                }\r\n                this._cube.dispose();\r\n            } else {\r\n                this._initEngine();\r\n            }\r\n            // and create it again\r\n            this._populateScene();\r\n        }\r\n    }\r\n\r\n    /** Creates the box  */\r\n    protected _populateScene() {\r\n        // Create the hdr texture\r\n        let hdrTexture = new CubeTexture(this._textureUrl, this._scene);\r\n        hdrTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._cube = Mesh.CreateBox(\"hdrSkyBox\", 10.0, this._scene);\r\n        let hdrSkyboxMaterial = new StandardMaterial(\"skyBox\", this._scene);\r\n        hdrSkyboxMaterial.backFaceCulling = false;\r\n        hdrSkyboxMaterial.reflectionTexture = hdrTexture;\r\n        hdrSkyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n        hdrSkyboxMaterial.disableLighting = true;\r\n        this._cube.material = hdrSkyboxMaterial;\r\n        this._cube.registerBeforeRender(() => {\r\n            this._cube.rotation.y += 0.01;\r\n        })\r\n    }\r\n\r\n    /** Init the babylon engine */\r\n    private _initEngine() {\r\n        this._engine = new Engine(this._canvas);\r\n        this._scene = new Scene(this._engine);\r\n        this._scene.clearColor = new Color4(0, 0, 0, 0);\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            if (!this._pause) {\r\n                this._scene.render();\r\n            }\r\n        });\r\n\r\n        this._canvas.setAttribute('width', '110');\r\n        this._canvas.setAttribute('height', '110');\r\n    }\r\n\r\n    private _showViewer(mode: string) {\r\n        // If displaying...\r\n        if (mode != 'none') {\r\n            // ... and the canvas is not initialized                \r\n            if (!this._engine) {\r\n                this._initEngine();\r\n                this._populateScene();\r\n            }\r\n            // In every cases, unpause the engine\r\n            this._pause = false;\r\n        } else {\r\n            // hide : pause the engine\r\n            this._pause = true;\r\n        }\r\n        this._textureDiv.style.display = mode;\r\n    }\r\n\r\n    /** Removes properly the babylon engine */\r\n    public dispose() {\r\n        if (this._engine) {\r\n            this._engine.dispose();\r\n            (<any>this._engine) = null;\r\n        }\r\n    }\r\n}\r\n","import { HDRCubeTexture, Mesh, PBRMaterial, Texture } from \"babylonjs\";\r\nimport { CubeTextureElement } from \"./CubeTextureElement\";\r\n\r\n/**\r\n* Display a very small div. A new canvas is created, with a new js scene, containing only the \r\n* cube texture in a cube\r\n*/\r\nexport class HDRCubeTextureElement extends CubeTextureElement {\r\n\r\n\r\n    /** The texture given as a parameter should be cube. */\r\n    constructor(tex: Texture) {\r\n        super(tex);\r\n    }\r\n\r\n    /** Creates the box  */\r\n    protected _populateScene() {\r\n        // Create the hdr texture\r\n        let hdrTexture = new HDRCubeTexture(this._textureUrl, this._scene, 512);\r\n        hdrTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._cube = Mesh.CreateBox(\"hdrSkyBox\", 10.0, this._scene);\r\n        let hdrSkyboxMaterial = new PBRMaterial(\"skyBox\", this._scene);\r\n        hdrSkyboxMaterial.backFaceCulling = false;\r\n        hdrSkyboxMaterial.reflectionTexture = hdrTexture;\r\n        hdrSkyboxMaterial.microSurface = 1.0;\r\n        hdrSkyboxMaterial.disableLighting = true;\r\n        this._cube.material = hdrSkyboxMaterial;\r\n        this._cube.registerBeforeRender(() => {\r\n            this._cube.rotation.y += 0.01;\r\n        })\r\n    }\r\n}\r\n","import { Texture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div corresponding to the given texture. On mouse over, display the full image\r\n*/\r\nexport class TextureElement extends BasicElement {\r\n\r\n    /** The big div displaying the full image */\r\n    private _textureDiv: HTMLElement;\r\n\r\n    constructor(tex: Texture) {\r\n        super();\r\n        this._div.className = 'fa fa-search texture-element';\r\n\r\n        // Create the texture viewer\r\n        this._textureDiv = Helpers.CreateDiv('texture-viewer', this._div);\r\n        // Img\r\n        let imgDiv = Helpers.CreateDiv('texture-viewer-img', this._textureDiv);\r\n\r\n        // Texture size\r\n        let sizeDiv = Helpers.CreateDiv(null, this._textureDiv);\r\n\r\n        if (tex) {\r\n            sizeDiv.textContent = `${tex.getBaseSize().width}px x ${tex.getBaseSize().height}px`;\r\n            imgDiv.style.backgroundImage = `url('${tex.url}')`;\r\n            imgDiv.style.width = `${tex.getBaseSize().width}px`;\r\n            imgDiv.style.height = `${tex.getBaseSize().height}px`;\r\n        }\r\n\r\n        this._div.addEventListener('mouseover', this._showViewer.bind(this, 'flex'));\r\n        this._div.addEventListener('mouseout', this._showViewer.bind(this, 'none'));\r\n\r\n    }\r\n\r\n    public update(tex?: Texture) {\r\n\r\n    }\r\n\r\n    private _showViewer(mode: string) {\r\n        this._textureDiv.style.display = mode;\r\n    }\r\n}\r\n","import { Helpers } from \"./helpers/Helpers\";\r\nimport { Vector2, Vector3, Color3, Color4, Quaternion, Size, Texture, RenderTargetTexture, DynamicTexture, BaseTexture, CubeTexture, HDRCubeTexture, Sound, ArcRotateCamera, FreeCamera, Scene, TransformNode, AbstractMesh, Mesh, StandardMaterial, PBRMaterial, PhysicsImpostor, ImageProcessingConfiguration, ColorCurves } from \"babylonjs\";\r\n\r\nexport const PROPERTIES = {\r\n\r\n    /** Format the given object : \r\n     * If a format function exists, returns the result of this function.\r\n     * If this function doesn't exists, return the object type instead\r\n     */\r\n    format: (obj: any): any => {\r\n        let type = Helpers.GET_TYPE(obj) || 'type_not_defined';\r\n        if ((<any>PROPERTIES)[type] && (<any>PROPERTIES)[type].format) {\r\n            return (<any>PROPERTIES)[type].format(obj);\r\n        } else {\r\n            return Helpers.GET_TYPE(obj);\r\n        }\r\n    },\r\n    'type_not_defined': {\r\n        properties: new Array(),\r\n        format: () => ''\r\n    },\r\n    'Vector2': {\r\n        type: Vector2,\r\n        format: (vec: Vector2) => { return `x:${Helpers.Trunc(vec.x)}, y:${Helpers.Trunc(vec.y)}`; }\r\n    },\r\n    'Vector3': {\r\n        type: Vector3,\r\n        format: (vec: Vector3) => { return `x:${Helpers.Trunc(vec.x)}, y:${Helpers.Trunc(vec.y)}, z:${Helpers.Trunc(vec.z)}` }\r\n    },\r\n    'Color3': {\r\n        type: Color3,\r\n        format: (color: Color3) => { return `R:${color.r.toPrecision(2)}, G:${color.g.toPrecision(2)}, B:${color.b.toPrecision(2)}` },\r\n        slider: {\r\n            r: { min: 0, max: 1, step: 0.01 },\r\n            g: { min: 0, max: 1, step: 0.01 },\r\n            b: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'Color4': {\r\n        type: Color4,\r\n        format: (color: Color4) => { return `R:${color.r}, G:${color.g}, B:${color.b}` },\r\n        slider: {\r\n            r: { min: 0, max: 1, step: 0.01 },\r\n            g: { min: 0, max: 1, step: 0.01 },\r\n            b: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'Quaternion': {\r\n        type: Quaternion\r\n    },\r\n    'Size': {\r\n        type: Size,\r\n        format: (size: Size) => { return `Size - w:${Helpers.Trunc(size.width)}, h:${Helpers.Trunc(size.height)}` }\r\n    },\r\n    'Texture': {\r\n        type: Texture,\r\n        format: (tex: Texture) => { return tex.name }\r\n    },\r\n    'RenderTargetTexture': {\r\n        type: RenderTargetTexture\r\n    },\r\n    'DynamicTexture': {\r\n        type: DynamicTexture\r\n    },\r\n    'BaseTexture': {\r\n        type: BaseTexture\r\n    },\r\n    'CubeTexture': {\r\n        type: CubeTexture\r\n    },\r\n    'HDRCubeTexture': {\r\n        type: HDRCubeTexture\r\n    },\r\n    'Sound': {\r\n        type: Sound\r\n    },\r\n    'ArcRotateCamera': {\r\n        type: ArcRotateCamera,\r\n        slider: {\r\n            alpha: { min: 0, max: 2 * Math.PI, step: 0.01 },\r\n            beta: { min: -Math.PI, max: Math.PI, step: 0.01 },\r\n            fov: { min: 0, max: 180, step: 1 }\r\n        }\r\n    },\r\n    'FreeCamera': {\r\n        type: FreeCamera,\r\n        slider: {\r\n            fov: { min: 0, max: 180, step: 1 }\r\n        }\r\n    },\r\n    'Scene': {\r\n        type: Scene,\r\n    },\r\n    'TransformNode': {\r\n        type: TransformNode,\r\n        format: (m: TransformNode): string => { return m.name; }\r\n    },\r\n    'AbstractMesh': {\r\n        type: AbstractMesh,\r\n        format: (m: AbstractMesh): string => { return m.name; }\r\n    },\r\n    'Mesh': {\r\n        type: Mesh,\r\n        format: (m: Mesh): string => { return m.name; },\r\n        slider: {\r\n            visibility: { min: 0, max: 1, step: 0.1 }\r\n        }\r\n    },\r\n    'StandardMaterial': {\r\n        type: StandardMaterial,\r\n        format: (mat: StandardMaterial): string => { return mat.name; },\r\n        slider: {\r\n            alpha: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'PBRMaterial': {\r\n        type: PBRMaterial,\r\n        slider: {\r\n            alpha: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'PhysicsImpostor': {\r\n        type: PhysicsImpostor\r\n    },\r\n    'ImageProcessingConfiguration': {\r\n        type: ImageProcessingConfiguration\r\n    },\r\n    'ColorCurves': {\r\n        type: ColorCurves\r\n    }\r\n}\r\n","import { Nullable } from \"babylonjs\";\r\nimport { BasicElement } from \"../gui/BasicElement\";\r\nimport { ColorPickerElement } from \"../gui/ColorPickerElement\";\r\nimport { CubeTextureElement } from \"../gui/CubeTextureElement\";\r\nimport { HDRCubeTextureElement } from \"../gui/HDRCubeTextureElement\";\r\nimport { TextureElement } from \"../gui/TextureElement\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PROPERTIES } from \"../properties\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { Property } from \"./Property\";\r\n\r\nexport class PropertyFormatter {\r\n\r\n    /**\r\n     * Format the value of the given property of the given object.\r\n     */\r\n    public static format(obj: any, prop: string): string {\r\n        // Get original value;\r\n        let value = obj[prop];\r\n        // test if type PrimitiveAlignment is available (only included in canvas2d)           \r\n        return value;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A property line represents a line in the detail panel. This line is composed of : \r\n * - a name (the property name)\r\n * - a value if this property is of a type 'simple' : string, number, boolean, color, texture\r\n * - the type of the value if this property is of a complex type (Vector2, Size, ...)\r\n * - a ID if defined (otherwise an empty string is displayed)\r\n * The original object is sent to the value object who will update it at will.\r\n * \r\n * A property line can contain OTHER property line objects in the case of a complex type.\r\n * If this instance has no link to other instances, its type is ALWAYS a simple one (see above).\r\n * \r\n */\r\nexport class PropertyLine {\r\n\r\n    // The property can be of any type (Property internally can have any type), relative to this._obj\r\n    private _property: Property;\r\n    //The HTML element corresponding to this line\r\n    private _div: HTMLElement;\r\n    // The div containing the value to display. Used to update dynamically the property\r\n    private _valueDiv: HTMLElement;\r\n    // If the type is complex, this property will have child to update\r\n    private _children: Array<PropertyLine> = [];\r\n    // Array representing the simple type. All others are considered 'complex'\r\n    private static _SIMPLE_TYPE = ['number', 'string', 'boolean'];\r\n    // The number of pixel at each children step\r\n    private static _MARGIN_LEFT = 15;\r\n    // The margin-left used to display to row\r\n    private _level: number;\r\n    /** The list of viewer element displayed at the end of the line (color, texture...) */\r\n    private _elements: Array<BasicElement> = [];\r\n    /** The property parent of this one. Used to update the value of this property and to retrieve the correct object */\r\n    private _parent: Nullable<PropertyLine>;\r\n    /** The input element to display if this property is 'simple' in order to update it */\r\n    private _input: HTMLInputElement;\r\n    /** Display input handler (stored to be removed afterwards) */\r\n    private _displayInputHandler: EventListener;\r\n    /** Handler used to validate the input by pressing 'enter' */\r\n    private _validateInputHandler: EventListener;\r\n    /** Handler used to validate the input by pressing 'esc' */\r\n    private _escapeInputHandler: EventListener;\r\n    /** Handler used on focus out */\r\n    private _focusOutInputHandler: EventListener;\r\n    /** Handler used to get mouse position */\r\n    private _onMouseDownHandler: EventListener;\r\n    private _onMouseDragHandler: EventListener;\r\n    private _onMouseUpHandler: EventListener;\r\n\r\n    private _textValue: HTMLElement;\r\n    /** Save previous Y mouse position */\r\n    private _prevY: number;\r\n    /**Save value while slider is on */\r\n    private _preValue: number;\r\n\r\n    constructor(prop: Property, parent: Nullable<PropertyLine> = null, level: number = 0) {\r\n        this._property = prop;\r\n        this._level = level;\r\n        this._parent = parent;\r\n\r\n        this._div = Helpers.CreateDiv('row');\r\n        this._div.style.marginLeft = `${this._level}px`;\r\n\r\n        // Property name\r\n        let propName: HTMLElement = Helpers.CreateDiv('prop-name', this._div);\r\n        propName.textContent = `${this.name}`;\r\n\r\n        // Value\r\n        this._valueDiv = Helpers.CreateDiv('prop-value', this._div);\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.textContent = this._displayValueContent() || '-'; // Init value text node\r\n        }\r\n\r\n        this._createElements();\r\n\r\n        for (let elem of this._elements) {\r\n            this._valueDiv.appendChild(elem.toHtml());\r\n        }\r\n\r\n        this._updateValue();\r\n        // If the property type is not simple, add click event to unfold its children\r\n        if (typeof this.value === 'boolean') {\r\n            this._checkboxInput();\r\n        } else if (this._isSliderType()) {\r\n            this._rangeInput();\r\n        } else if (!this._isSimple()) {\r\n            this._valueDiv.classList.add('clickable');\r\n            this._valueDiv.addEventListener('click', this._addDetails.bind(this));\r\n        } else {\r\n            this._initInput();\r\n            this._valueDiv.addEventListener('click', this._displayInputHandler);\r\n            this._input.addEventListener('focusout', this._focusOutInputHandler);\r\n            this._input.addEventListener('keydown', this._validateInputHandler);\r\n            this._input.addEventListener('keydown', this._escapeInputHandler);\r\n        }\r\n        // Add this property to the scheduler\r\n        Scheduler.getInstance().add(this);\r\n    }\r\n\r\n    /** \r\n     * Init the input element and al its handler : \r\n     * - a click in the window remove the input and restore the old property value\r\n     * - enters updates the property\r\n     */\r\n    private _initInput() {\r\n        // Create the input element\r\n        this._input = document.createElement('input') as HTMLInputElement;\r\n        this._input.setAttribute('type', 'text');\r\n\r\n        // if the property is 'simple', add an event listener to create an input\r\n        this._displayInputHandler = this._displayInput.bind(this);\r\n        this._validateInputHandler = this._validateInput.bind(this);\r\n        this._escapeInputHandler = this._escapeInput.bind(this);\r\n        this._focusOutInputHandler = this.update.bind(this);\r\n\r\n        this._onMouseDownHandler = this._onMouseDown.bind(this);\r\n        this._onMouseDragHandler = this._onMouseDrag.bind(this);\r\n        this._onMouseUpHandler = this._onMouseUp.bind(this);\r\n    }\r\n\r\n    /** \r\n     * On enter : validates the new value and removes the input\r\n     * On escape : removes the input\r\n     */\r\n    private _validateInput(e: KeyboardEvent) {\r\n        this._input.removeEventListener('focusout', this._focusOutInputHandler);\r\n        if (e.keyCode == 13) { // Enter\r\n            this.validateInput(this._input.value);\r\n        } else if (e.keyCode == 9) { // Tab\r\n            e.preventDefault();\r\n            this.validateInput(this._input.value);\r\n        } else if (e.keyCode == 27) { // Esc : remove input\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    public validateInput(value: any, forceupdate: boolean = true): void {\r\n        this.updateObject();\r\n        if (typeof this._property.value === 'number') {\r\n            this._property.value = parseFloat(value);\r\n        } else {\r\n            this._property.value = value;\r\n        }\r\n        // Remove input\r\n        if (forceupdate) {\r\n            this.update();\r\n            // resume scheduler\r\n            Scheduler.getInstance().pause = false;\r\n        }\r\n    }\r\n\r\n    /** \r\n     * On escape : removes the input\r\n     */\r\n    private _escapeInput(e: KeyboardEvent) {\r\n        // Remove focus out handler\r\n        this._input.removeEventListener('focusout', this._focusOutInputHandler);\r\n        if (e.keyCode == 27) {\r\n            // Esc : remove input\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /** Removes the input without validating the new value */\r\n    private _removeInputWithoutValidating() {\r\n        Helpers.CleanDiv(this._valueDiv);\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.textContent = \"-\";\r\n        }\r\n        // restore elements\r\n        for (let elem of this._elements) {\r\n            this._valueDiv.appendChild(elem.toHtml());\r\n        }\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.addEventListener('click', this._displayInputHandler);\r\n        }\r\n    }\r\n\r\n    /** Replaces the default display with an input */\r\n    private _displayInput(e: any) {\r\n        // Remove the displayInput event listener\r\n        this._valueDiv.removeEventListener('click', this._displayInputHandler);\r\n        // Set input value\r\n        let valueTxt = this._valueDiv.textContent;\r\n        this._valueDiv.textContent = \"\";\r\n        this._input.value = valueTxt || \"\";\r\n        this._valueDiv.appendChild(this._input);\r\n        this._input.focus();\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._input.addEventListener('focusout', this._focusOutInputHandler);\r\n        } else if (typeof this.value === 'number') {\r\n            this._input.addEventListener('mousedown', this._onMouseDownHandler);\r\n        }\r\n\r\n        // Pause the scheduler\r\n        Scheduler.getInstance().pause = true;\r\n    }\r\n\r\n    /** Retrieve the correct object from its parent. \r\n     * If no parent exists, returns the property value.\r\n     * This method is used at each update in case the property object is removed from the original object \r\n     * (example : mesh.position = new Vector3 ; the original vector3 object is deleted from the mesh).\r\n    */\r\n    public updateObject() {\r\n        if (this._parent) {\r\n            this._property.obj = this._parent.updateObject();\r\n        }\r\n\r\n\r\n        return this._property.value;\r\n    }\r\n\r\n    // Returns the property name\r\n    public get name(): string {\r\n        // let arrayName = Helpers.Capitalize(this._property.name).match(/[A-Z][a-z]+|[0-9]+/g)\r\n        // if (arrayName) {\r\n        //     return arrayName.join(\" \");\r\n        // }\r\n        return this._property.name;\r\n    }\r\n\r\n    // Returns the value of the property\r\n    public get value(): any {\r\n        return PropertyFormatter.format(this._property.obj, this._property.name);\r\n    }\r\n\r\n    // Returns the type of the property\r\n    public get type(): string {\r\n        return this._property.type;\r\n    }\r\n\r\n    /**\r\n     * Creates elements that wil be displayed on a property line, depending on the\r\n     * type of the property.\r\n     */\r\n    private _createElements() {\r\n        // Colors\r\n        if (this.type == 'Color3' || this.type == 'Color4') {\r\n            if (!Helpers.IsBrowserIE()) {\r\n                this._elements.push(new ColorPickerElement(this.value, this));\r\n            }\r\n        }\r\n        // Texture\r\n        if (this.type == 'Texture') {\r\n            this._elements.push(new TextureElement(this.value));\r\n        }\r\n        // HDR Texture\r\n        if (this.type == 'HDRCubeTexture') {\r\n            this._elements.push(new HDRCubeTextureElement(this.value));\r\n        }\r\n        if (this.type == 'CubeTexture') {\r\n            this._elements.push(new CubeTextureElement(this.value));\r\n        }\r\n    }\r\n\r\n    // Returns the text displayed on the left of the property name : \r\n    // - If the type is simple, display its value\r\n    // - If the type is complex, but instance of Vector2, Size, display the type and its tostring\r\n    // - If the type is another one, display the Type\r\n    private _displayValueContent() {\r\n        let value = this.value;\r\n        // If the value is a number, truncate it if needed\r\n        if (typeof value === 'number') {\r\n            return Helpers.Trunc(value);\r\n        }\r\n\r\n        // If it's a string or a boolean, display its value\r\n        if (typeof value === 'string' || typeof value === 'boolean') {\r\n            return value;\r\n        }\r\n        return PROPERTIES.format(value);\r\n    }\r\n\r\n    /** Delete properly this property line. \r\n     * Removes itself from the scheduler.\r\n     * Dispose all viewer element (color, texture...)\r\n     */\r\n    public dispose() {\r\n        Scheduler.getInstance().remove(this);\r\n        for (let child of this._children) {\r\n            Scheduler.getInstance().remove(child);\r\n        }\r\n        for (let elem of this._elements) {\r\n            elem.dispose();\r\n        }\r\n        this._elements = [];\r\n    }\r\n\r\n    /** Updates the content of _valueDiv with the value of the property, \r\n     * and all HTML element correpsonding to this type.\r\n     * Elements are updated as well\r\n     */\r\n    private _updateValue() {\r\n        // Update the property object first\r\n        this.updateObject();\r\n        // Then update its value\r\n        // this._valueDiv.textContent = \" \"; // TOFIX this removes the elements after\r\n        if (typeof this.value === 'boolean') {\r\n            this._checkboxInput();\r\n        } else if (this._isSliderType()) { // Add slider when parent have slider property\r\n            this._rangeInput();\r\n        } else {\r\n            this._valueDiv.childNodes[0].nodeValue = this._displayValueContent();\r\n\r\n            //Doing the Hexa convertion\r\n            if ((this._property.type == \"Color3\" && this._children.length == 5 && this._children[1].value == true) || (this._property.type == \"Color4\" && this._children.length == 6 && this._children[1].value == true)) {\r\n                if (this._children[0] != undefined && this._children[0].name == \"hex\") {\r\n                    let hexLineString = this._children[0].value;\r\n                    let rValue = (parseInt((hexLineString.slice(1, 3)), 16)) * (1 / 255);\r\n                    let rValueRound = Math.round(100 * rValue) / 100;\r\n                    this.value.r = rValueRound;\r\n                    let gValue = (parseInt((hexLineString.slice(3, 5)), 16)) * (1 / 255);\r\n                    let gValueRound = Math.round(100 * gValue) / 100;\r\n                    this.value.g = gValueRound;\r\n                    let bValue = (parseInt((hexLineString.slice(5, 7)), 16)) * (1 / 255);\r\n                    let bValueRound = Math.round(100 * bValue) / 100;\r\n                    this.value.b = bValueRound;\r\n                    if (this._children[2].name == \"a\") {\r\n                        let aValue = (parseInt((hexLineString.slice(7, 9)), 16)) * (1 / 255);\r\n                        let aValueRound = Math.round(100 * aValue) / 100;\r\n                        this.value.a = aValueRound;\r\n                    }\r\n                }\r\n            } else if (this._property.type == \"Color3\" || this._property.type == \"Color4\") {\r\n                if (this._property.value.hex != undefined && this._property.value.hex != null) {\r\n                    let hexLineInfos = [];\r\n                    let valHexR = ((this._property.value.r * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexR);\r\n                    if (valHexR == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    let valHexG = ((this._property.value.g * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexG);\r\n                    if (valHexG == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    let valHexB = ((this._property.value.b * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexB);\r\n                    if (valHexB == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    if (this._property.value.a != undefined) {\r\n                        let valHexA = ((this._property.value.a * 255) | 0).toString(16);\r\n                        hexLineInfos.push(valHexA);\r\n                        if (valHexA == \"0\") {\r\n                            hexLineInfos.push(\"0\");\r\n                        }\r\n                    }\r\n                    hexLineInfos.unshift(\"#\");\r\n                    let hexLineString = hexLineInfos.join(\"\");\r\n                    this._property.value.hex = hexLineString;\r\n                    hexLineInfos.length = 0;\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n        for (let elem of this._elements) {\r\n            elem.update(this.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the property division with the new property value. \r\n     * If this property is complex, update its child, otherwise update its text content\r\n     */\r\n    public update() {\r\n        this._removeInputWithoutValidating();\r\n        this._updateValue();\r\n    }\r\n\r\n    /**\r\n     * Returns true if the type of this property is simple, false otherwise.\r\n     * Returns true if the value is null\r\n     */\r\n    private _isSimple(): boolean {\r\n        if (this.value != null && this.type !== 'type_not_defined') {\r\n            if (PropertyLine._SIMPLE_TYPE.indexOf(this.type) == -1) {\r\n                // complex type : return the type name\r\n                return false;\r\n            } else {\r\n                // simple type : return value\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._div;\r\n    }\r\n\r\n    public closeDetails() {\r\n        if (this._div.classList.contains('unfolded')) {\r\n            // Remove class unfolded\r\n            this._div.classList.remove('unfolded');\r\n            // remove html children\r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.removeChild(child.toHtml());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add sub properties in case of a complex type\r\n     */\r\n    private _addDetails() {\r\n        if (this._div.classList.contains('unfolded')) {\r\n            // Remove class unfolded\r\n            this._div.classList.remove('unfolded');\r\n            // remove html children\r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.removeChild(child.toHtml());\r\n                }\r\n            }\r\n        } else {\r\n            // if children does not exists, generate it\r\n            this._div.classList.toggle('unfolded');\r\n            if (this._children.length == 0) {\r\n\r\n                let objToDetail = this.value;\r\n\r\n                // Display all properties that are not functions\r\n                let propToDisplay = Helpers.GetAllLinesPropertiesAsString(objToDetail);\r\n                // special case for color3\r\n                if ((propToDisplay.indexOf('r') && propToDisplay.indexOf('g') && propToDisplay.indexOf('b')) == 0) {\r\n                    propToDisplay.sort();\r\n                } else {\r\n                    propToDisplay.sort().reverse();\r\n                }\r\n                for (let prop of propToDisplay) {\r\n                    let infos = new Property(prop, this._property.value, this._property.obj);\r\n                    let child = new PropertyLine(infos, this, this._level + PropertyLine._MARGIN_LEFT);\r\n                    this._children.push(child);\r\n                }\r\n                //Add the Hexa converter\r\n                if ((propToDisplay.indexOf('r') && propToDisplay.indexOf('g') && propToDisplay.indexOf('b') && propToDisplay.indexOf('a')) == 0) {\r\n                    let hexLineInfos = [];\r\n                    let hexLinePropCheck = new Property(\"hexEnable\", this._property.value, this._property.obj);\r\n                    hexLinePropCheck.value = false;\r\n                    let hexLineCheck = new PropertyLine(hexLinePropCheck, this, this._level + PropertyLine._MARGIN_LEFT);\r\n                    this._children.unshift(hexLineCheck);\r\n                    for (let prop of propToDisplay) {\r\n                        let infos = new Property(prop, this._property.value, this._property.obj);\r\n                        let valHex = ((infos.value * 255) | 0).toString(16);\r\n                        hexLineInfos.push(valHex);\r\n                        if (valHex == \"0\") {\r\n                            hexLineInfos.push(\"0\");\r\n                        }\r\n                    }\r\n                    hexLineInfos.push(\"#\");\r\n                    hexLineInfos.reverse();\r\n                    let hexLineString = hexLineInfos.join(\"\");\r\n\r\n                    let hexLineProp = new Property(\"hex\", this._property.value, this._property.obj);\r\n                    hexLineProp.value = hexLineString;\r\n                    let hexLine = new PropertyLine(hexLineProp, this, this._level + PropertyLine._MARGIN_LEFT);\r\n\r\n                    this._children.unshift(hexLine);\r\n                }\r\n            }\r\n            // otherwise display it    \r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.insertBefore(child.toHtml(), this._div.nextSibling);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh mouse position on y axis\r\n     * @param e \r\n     */\r\n    private _onMouseDrag(e: MouseEvent): void {\r\n        const diff = this._prevY - e.clientY;\r\n        this._input.value = (this._preValue + diff).toString();\r\n    }\r\n\r\n    /**\r\n     * Save new value from slider\r\n     * @param e \r\n     */\r\n    private _onMouseUp(e: MouseEvent): void {\r\n        window.removeEventListener('mousemove', this._onMouseDragHandler);\r\n        window.removeEventListener('mouseup', this._onMouseUpHandler);\r\n        this._prevY = e.clientY;\r\n    }\r\n\r\n    /**\r\n     * Start record mouse position\r\n     * @param e \r\n     */\r\n    private _onMouseDown(e: MouseEvent): void {\r\n        this._prevY = e.clientY;\r\n        this._preValue = this.value;\r\n        window.addEventListener('mousemove', this._onMouseDragHandler);\r\n        window.addEventListener('mouseup', this._onMouseUpHandler);\r\n    }\r\n\r\n    /**\r\n     * Create input entry\r\n     */\r\n    private _checkboxInput() {\r\n        if (this._valueDiv.childElementCount < 1) { // Prevent display two checkbox\r\n            this._input = Helpers.CreateInput('checkbox-element', this._valueDiv);\r\n            this._input.type = 'checkbox'\r\n            this._input.checked = this.value;\r\n            this._input.addEventListener('change', () => {\r\n                Scheduler.getInstance().pause = true;\r\n                this.validateInput(!this.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    private _rangeInput() {\r\n        if (this._valueDiv.childElementCount < 1) { // Prevent display two input range\r\n            this._input = Helpers.CreateInput('slider-element', this._valueDiv);\r\n            this._input.type = 'range';\r\n            this._input.style.display = 'inline-block';\r\n            this._input.min = this._getSliderProperty().min;\r\n            this._input.max = this._getSliderProperty().max;\r\n            this._input.step = this._getSliderProperty().step;\r\n            this._input.value = this.value;\r\n\r\n            this._validateInputHandler = this._rangeHandler.bind(this)\r\n            this._input.addEventListener('input', this._validateInputHandler)\r\n            this._input.addEventListener('change', () => {\r\n                Scheduler.getInstance().pause = false;\r\n            })\r\n\r\n            this._textValue = Helpers.CreateDiv('value-text', this._valueDiv);\r\n            this._textValue.innerText = Helpers.Trunc(this.value).toString();\r\n            this._textValue.style.paddingLeft = '10px';\r\n            this._textValue.style.display = 'inline-block';\r\n        }\r\n    }\r\n\r\n    private _rangeHandler() {\r\n        Scheduler.getInstance().pause = true;\r\n        //this._input.style.backgroundSize = ((parseFloat(this._input.value) - parseFloat(this._input.min)) * 100 / ( parseFloat(this._input.max) - parseFloat(this._input.min))) + '% 100%'\r\n        this._textValue.innerText = this._input.value;\r\n        this.validateInput(this._input.value, false);\r\n    }\r\n\r\n    private _isSliderType() { //Check if property have slider definition\r\n        return this._property &&\r\n            PROPERTIES.hasOwnProperty(this._property.obj.constructor.name) &&\r\n            (<any>PROPERTIES)[this._property.obj.constructor.name].hasOwnProperty('slider') &&\r\n            (<any>PROPERTIES)[this._property.obj.constructor.name].slider.hasOwnProperty(this.name);\r\n    }\r\n\r\n    private _getSliderProperty() {\r\n        return (<any>PROPERTIES)[this._property.obj.constructor.name].slider[this.name]\r\n    }\r\n}\r\n","\r\nimport { PROPERTIES } from \"./properties\";\r\n\r\nexport type GUITyping = any;\r\n\r\nexport let guiLoaded: boolean = false;\r\n/**\r\n  * Function that add gui objects properties to the variable PROPERTIES\r\n  */\r\nexport function loadGUIProperties(GUI: GUITyping) {\r\n\r\n    guiLoaded = !!GUI;\r\n\r\n    if (guiLoaded) {\r\n\r\n        let PROPERTIES_GUI = {\r\n            'ValueAndUnit': {\r\n                type: GUI.ValueAndUnit,\r\n                properties: ['_value', 'unit'],\r\n                format: (valueAndUnit: import(\"babylonjs-gui\").ValueAndUnit) => { return valueAndUnit }\r\n            },\r\n            'Control': {\r\n                type: GUI.Control,\r\n                properties: [\r\n                    '_alpha',\r\n                    '_fontFamily',\r\n                    '_color',\r\n                    '_scaleX',\r\n                    '_scaleY',\r\n                    '_rotation',\r\n                    '_currentMeasure',\r\n                    '_width',\r\n                    '_height',\r\n                    '_left',\r\n                    '_top',\r\n                    '_linkedMesh',\r\n                    'isHitTestVisible',\r\n                    'isPointerBlocker',\r\n                ],\r\n                format: (control: import(\"babylonjs-gui\").Control) => { return control.name }\r\n            },\r\n            'Button': {\r\n                type: GUI.Button,\r\n                properties: new Array(),\r\n                format: (button: import(\"babylonjs-gui\").Button) => { return button.name }\r\n            },\r\n            'ColorPicker': {\r\n                type: GUI.ColorPicker,\r\n                properties: ['_value'],\r\n                format: (colorPicker: import(\"babylonjs-gui\").ColorPicker) => { return colorPicker.name }\r\n            },\r\n            'Checkbox': {\r\n                type: GUI.Checkbox,\r\n                properties: ['_isChecked', '_background'],\r\n                format: (checkbox: import(\"babylonjs-gui\").Checkbox) => { return checkbox.name }\r\n            },\r\n            'Ellipse': {\r\n                type: GUI.Ellipse,\r\n                properties: ['_thickness'],\r\n                format: (ellipse: import(\"babylonjs-gui\").Ellipse) => { return ellipse.name }\r\n            },\r\n            'Image': {\r\n                type: GUI.Image,\r\n                properties: [\r\n                    '_imageWidth',\r\n                    '_imageHeight',\r\n                    '_loaded',\r\n                    '_source',\r\n                ],\r\n                format: (image: import(\"babylonjs-gui\").Image) => { return image.name }\r\n            },\r\n            'Line': {\r\n                type: GUI.Line,\r\n                properties: ['_lineWidth',\r\n                    '_background',\r\n                    '_x1',\r\n                    '_y1',\r\n                    '_x2',\r\n                    '_y2',\r\n                ],\r\n                format: (line: import(\"babylonjs-gui\").Line) => { return line.name }\r\n            },\r\n            'RadioButton': {\r\n                type: GUI.RadioButton,\r\n                properties: ['_isChecked', '_background'],\r\n                format: (radioButton: import(\"babylonjs-gui\").RadioButton) => { return radioButton.name }\r\n            },\r\n            'Rectangle': {\r\n                type: GUI.Rectangle,\r\n                properties: ['_thickness', '_cornerRadius'],\r\n                format: (rectangle: import(\"babylonjs-gui\").Rectangle) => { return rectangle.name }\r\n            },\r\n            'Slider': {\r\n                type: GUI.Slider,\r\n                properties: [\r\n                    '_minimum',\r\n                    '_maximum',\r\n                    '_value',\r\n                    '_background',\r\n                    '_borderColor',\r\n                ],\r\n                format: (slider: import(\"babylonjs-gui\").Slider) => { return slider.name }\r\n            },\r\n            'StackPanel': {\r\n                type: GUI.StackPanel,\r\n                properties: ['_isVertical'],\r\n                format: (stackPanel: import(\"babylonjs-gui\").StackPanel) => { return stackPanel.name }\r\n            },\r\n            'TextBlock': {\r\n                type: GUI.TextBlock,\r\n                properties: ['_text', '_textWrapping'],\r\n                format: (textBlock: import(\"babylonjs-gui\").TextBlock) => { return textBlock.name }\r\n            },\r\n            'Container': {\r\n                type: GUI.Container,\r\n                properties: ['_background'],\r\n                format: (container: import(\"babylonjs-gui\").Container) => { return container.name }\r\n            },\r\n        }\r\n\r\n        for (let prop in PROPERTIES_GUI) {\r\n            (<any>PROPERTIES)[prop] = (<any>PROPERTIES_GUI)[prop];\r\n        }\r\n    }\r\n} \r\n","import { Nullable } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\n\r\n\r\n/**\r\n * Creates a tooltip for the parent of the given html element\r\n */\r\nexport class Tooltip {\r\n\r\n    /** The tooltip is displayed for this element */\r\n    private _elem: HTMLElement;\r\n\r\n    /** The tooltip div */\r\n    private _infoDiv: HTMLDivElement;\r\n\r\n    constructor(elem: HTMLElement, tip: string, attachTo: Nullable<HTMLElement> = null) {\r\n\r\n        this._elem = elem;\r\n        if (!attachTo) {\r\n            attachTo = this._elem.parentElement;\r\n        }\r\n        this._infoDiv = Helpers.CreateDiv('tooltip', <HTMLElement>attachTo) as HTMLDivElement;\r\n\r\n\r\n        this._elem.addEventListener('mouseover', () => {\r\n            this._infoDiv.textContent = tip;\r\n            this._infoDiv.style.display = 'block'\r\n        });\r\n        this._elem.addEventListener('mouseout', () => { this._infoDiv.style.display = 'none' });\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { Tooltip } from \"../gui/Tooltip\";\r\n\r\nexport abstract class AbstractTool {\r\n    private _elem: HTMLElement;\r\n    protected _inspector: Inspector;\r\n\r\n    constructor(iconSet: string, icon: string, parent: HTMLElement, inspector: Inspector, tooltip: string) {\r\n        this._inspector = inspector;\r\n\r\n        this._elem = Inspector.DOCUMENT.createElement('i');\r\n        this._elem.className = `tool ${iconSet} ${icon}`;\r\n        parent.appendChild(this._elem);\r\n\r\n        this._elem.addEventListener('click', (e) => {\r\n            this.action();\r\n        });\r\n\r\n        new Tooltip(this._elem, tooltip);\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of this tool, 0 by default\r\n    */\r\n    public getPixelWidth(): number {\r\n        let style = Inspector.WINDOW.getComputedStyle(this._elem);\r\n\r\n        if (!style.marginLeft || !style.marginRight) {\r\n            return 0;\r\n        }\r\n\r\n        let left = parseFloat(style.marginLeft.substr(0, style.marginLeft.length - 2)) || 0;\r\n        let right = parseFloat(style.marginRight.substr(0, style.marginRight.length - 2)) || 0;\r\n        return (this._elem.clientWidth || 0) + left + right;\r\n    }\r\n\r\n    /** \r\n     * Updates the icon of this tool with the given string\r\n     */\r\n    protected _updateIcon(icon: string) {\r\n        this._elem.className = `tool fa ${icon}`;\r\n    }\r\n\r\n    public abstract action(): void;\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class RefreshTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-sync', parent, inspector, 'Refresh the current tab');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.refresh();\r\n    }\r\n}\r\n","import { AbstractMesh, Nullable, Scene } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\nimport { guiLoaded } from \"../properties_gui\";\r\n\r\nexport class LabelTool extends AbstractTool {\r\n\r\n    /** True if label are displayed, false otherwise */\r\n    private _isDisplayed: boolean = false;\r\n    private _advancedTexture: Nullable<any/*AdvancedDynamicTexture*/> = null;\r\n    private _labelInitialized: boolean = false;\r\n    private _scene: Nullable<Scene> = null;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-tags', parent, inspector, 'Display mesh names on the canvas');\r\n\r\n        this._scene = inspector.scene;\r\n    }\r\n\r\n    public dispose() {\r\n\r\n        if (this._advancedTexture) {\r\n            this._advancedTexture.dispose();\r\n        }\r\n    }\r\n\r\n    private _checkGUILoaded(): boolean {\r\n        return guiLoaded;\r\n    }\r\n\r\n    private _initializeLabels() {\r\n\r\n        // Can't initialize them if the GUI lib is not loaded yet\r\n        if (!this._checkGUILoaded()) {\r\n            return;\r\n        }\r\n\r\n\r\n        // Check if the label are already initialized and quit if it's the case\r\n        if (this._labelInitialized || !this._scene) {\r\n            return false;\r\n        }\r\n        // Create the canvas that will be used to display the labels\r\n        this._advancedTexture = Inspector.GUIObject.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n        // Create label for all the Meshes, Lights and Cameras\r\n        // Those that will be created/removed after this method is called will be taken care by the event handlers added below\r\n\r\n        for (let m of this._scene.meshes) {\r\n            this._createLabel(m, Inspector.GUIObject);\r\n        }\r\n\r\n        this._scene.onNewMeshAddedObservable.add((m) => {\r\n            this._createLabel(m, Inspector.GUIObject);\r\n        });\r\n\r\n        this._scene.onMeshRemovedObservable.add((m) => {\r\n            this._removeLabel(m);\r\n        });\r\n\r\n        this._labelInitialized = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    private _createLabel(mesh: AbstractMesh, GUI: any) {\r\n        // Don't create label for \"system nodes\" (starting and ending with ###)\r\n        let name = mesh.name;\r\n\r\n        if (Helpers.IsSystemName(name)) {\r\n            return;\r\n        }\r\n\r\n        if (mesh && this._advancedTexture) {\r\n            let rect1 = new GUI.Rectangle();\r\n            rect1.width = 4 + 10 * name.length + \"px\";\r\n            rect1.height = \"22px\";\r\n            rect1.background = \"rgba(0,0,0,0.6)\";\r\n            rect1.color = \"black\";\r\n            this._advancedTexture.addControl(rect1);\r\n\r\n            let label = new GUI.TextBlock();\r\n            label.text = name;\r\n            label.fontSize = 12;\r\n            rect1.addControl(label);\r\n\r\n            rect1.linkWithMesh(mesh);\r\n        }\r\n    }\r\n\r\n    private _removeLabel(mesh: AbstractMesh) {\r\n        if (!this._advancedTexture) {\r\n            return;\r\n        }\r\n        for (let g of this._advancedTexture._rootContainer.children) {\r\n            let ed = g._linkedMesh;\r\n            if (ed === mesh) {\r\n                this._advancedTexture.removeControl(g);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Action : Display/hide mesh names on the canvas\r\n    public action() {\r\n        // Don't toggle if the script is not loaded\r\n        if (!this._checkGUILoaded()) {\r\n            return;\r\n        }\r\n\r\n        // Toggle the label display state\r\n        this._isDisplayed = !this._isDisplayed;\r\n\r\n        // Check if we have to display the labels\r\n        if (this._isDisplayed) {\r\n            this._initializeLabels();\r\n            if (this._advancedTexture)\r\n                this._advancedTexture._rootContainer.isVisible = true;\r\n\r\n        }\r\n\r\n        // Or to hide them\r\n        else {\r\n            if (this._advancedTexture)\r\n                this._advancedTexture._rootContainer.isVisible = false;\r\n        }\r\n    }\r\n}\r\n","import { AbstractMesh } from \"babylonjs\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PickTool extends AbstractTool {\r\n\r\n    private _isActive: boolean = false;\r\n    private _pickHandler: (evt: Event) => void;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-mouse-pointer', parent, inspector, 'Select a mesh in the scene');\r\n\r\n        // Create handler\r\n        this._pickHandler = this._pickMesh.bind(this);\r\n    }\r\n\r\n    // Action : find the corresponding tree item in the correct tab and display it\r\n    public action() {\r\n        if (this._isActive) {\r\n            this._deactivate();\r\n        } else {\r\n            this.toHtml().classList.add('active');\r\n            // Add event handler : pick on a mesh in the scene\r\n            let canvas = <HTMLElement>this._inspector.scene.getEngine().getRenderingCanvas();\r\n            canvas.addEventListener('click', this._pickHandler);\r\n            this._isActive = true;\r\n        }\r\n    }\r\n\r\n    /** Deactivate this tool */\r\n    private _deactivate() {\r\n        this.toHtml().classList.remove('active');\r\n        // Remove event handler\r\n        let canvas = <HTMLElement>this._inspector.scene.getEngine().getRenderingCanvas();\r\n        canvas.removeEventListener('click', this._pickHandler);\r\n        this._isActive = false;\r\n    }\r\n\r\n    /** Pick a mesh in the scene */\r\n    private _pickMesh(evt: PointerEvent) {\r\n        let pos = this._updatePointerPosition(evt);\r\n        let pi = this._inspector.scene.pick(pos.x, pos.y, (mesh: AbstractMesh) => { return true });\r\n\r\n        if (pi && pi.pickedMesh) {\r\n            this._inspector.displayObjectDetails(pi.pickedMesh);\r\n        }\r\n        this._deactivate();\r\n    }\r\n\r\n    private _updatePointerPosition(evt: PointerEvent): { x: number, y: number } {\r\n        let canvasRect = <ClientRect>this._inspector.scene.getEngine().getRenderingCanvasClientRect();\r\n        let pointerX = evt.clientX - canvasRect.left;\r\n        let pointerY = evt.clientY - canvasRect.top;\r\n        return { x: pointerX, y: pointerY };\r\n    };\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PopupTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fas', 'fa-external-link-alt', parent, inspector, 'Open the inspector in a popup');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.openPopup();\r\n    }\r\n}\r\n","import { AbstractTool } from \"./AbstractTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\nexport class FullscreenTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-expand', parent, inspector, 'Open the scene in fullscreen, press Esc to exit');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n\r\n        var elem = document.body;\r\n\r\n        function requestFullScreen(element: HTMLElement) {\r\n            // Supports most browsers and their versions.\r\n            var requestMethod = element.requestFullscreen || element.webkitRequestFullScreen;\r\n            requestMethod.call(element);\r\n        }\r\n\r\n        requestFullScreen(elem);\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PauseScheduleTool extends AbstractTool {\r\n\r\n    private _isPause: boolean = false;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-pause', parent, inspector, 'Pause the automatic update of properties');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        if (this._isPause) {\r\n            Scheduler.getInstance().pause = false;\r\n            this._updateIcon('fa-pause');\r\n        } else {\r\n            Scheduler.getInstance().pause = true;\r\n            this._updateIcon('fa-play');\r\n        }\r\n        this._isPause = !this._isPause;\r\n    }\r\n}\r\n","import { AbstractTool } from \"./AbstractTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\n/**\r\n * Removes the inspector panel\r\n */\r\nexport class DisposeTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-times', parent, inspector, 'Close the inspector panel');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.dispose();\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\nimport { RefreshTool } from \"./RefreshTool\";\r\nimport { LabelTool } from \"./LabelTool\";\r\nimport { PickTool } from \"./PickTool\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PopupTool } from \"./PopupTool\";\r\nimport { FullscreenTool } from \"./FullscreenTool\";\r\nimport { PauseScheduleTool } from \"./PauseScheduleTool\";\r\nimport { DisposeTool } from \"./DisposeTool\";\r\n\r\n\r\nexport class Toolbar extends BasicElement {\r\n\r\n    private _inspector: Inspector;\r\n    private _tools: Array<AbstractTool> = []\r\n\r\n    constructor(inspector: Inspector) {\r\n        super();\r\n        this._inspector = inspector;\r\n        this._build();\r\n\r\n        this._addTools();\r\n    }\r\n\r\n    // A toolbar cannot be updated\r\n    public update() { };\r\n\r\n    protected _build() {\r\n        this._div.className = 'toolbar';\r\n    };\r\n\r\n    private _addTools() {\r\n        // Refresh\r\n        this._tools.push(new RefreshTool(this._div, this._inspector));\r\n        // Display labels\r\n        this._tools.push(new LabelTool(this._div, this._inspector));\r\n        // Pick object\r\n        this._tools.push(new PickTool(this._div, this._inspector));\r\n\r\n        // Add the popup mode only if the inspector is not in popup mode and if the brower is not edge\r\n        // Edge is \r\n        if (!this._inspector.popupMode && !Helpers.IsBrowserEdge()) {\r\n            this._tools.push(new PopupTool(this._div, this._inspector));\r\n        }\r\n        // FullScreen\r\n        this._tools.push(new FullscreenTool(this._div, this._inspector));\r\n\r\n        // Pause schedule\r\n        this._tools.push(new PauseScheduleTool(this._div, this._inspector));\r\n\r\n        // Pause schedule\r\n        this._tools.push(new DisposeTool(this._div, this._inspector));\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of the tabbar, \r\n     * that corresponds to the sum of the width of each tab + toolbar width\r\n    */\r\n    public getPixelWidth(): number {\r\n        let sum = 0;\r\n        for (let tool of this._tools) {\r\n            sum += tool.getPixelWidth();\r\n        }\r\n\r\n        return sum;\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\n\r\n\r\nexport abstract class AbstractTreeTool {\r\n    protected _elem: HTMLElement;\r\n    /** Is the tool enabled ? */\r\n    protected _on: boolean = false;\r\n\r\n    constructor() {\r\n        this._elem = Inspector.DOCUMENT.createElement('i');\r\n        this._elem.className = 'treeTool fa';\r\n        this._addEvents();\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    protected _addEvents() {\r\n        this._elem.addEventListener('click', (e) => {\r\n            this.action();\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Action launched when clicked on this element\r\n     * Should be overrided\r\n     */\r\n    protected action() {\r\n        this._on = !this._on;\r\n    }\r\n\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle its bounding box\r\n */\r\nexport interface IToolBoundingBox {\r\n    isBoxVisible: () => boolean,\r\n    setBoxVisible: (b: boolean) => void;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class BoundingBox extends AbstractTreeTool {\r\n\r\n    private _obj: IToolBoundingBox;\r\n\r\n    constructor(obj: IToolBoundingBox) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-cube');\r\n        this._on = this._obj.isBoxVisible();\r\n        this._check();\r\n    }\r\n\r\n    // For a checkbox, set visible/invisible the corresponding prim\r\n    protected action() {\r\n        super.action();\r\n        // update object and gui according to the new status\r\n        this._check();\r\n    }\r\n\r\n    private _check() {\r\n        if (this._on) {\r\n            // set icon eye\r\n            this._elem.classList.add('active');\r\n        } else {\r\n            // set icon eye-slash\r\n            this._elem.classList.remove('active');\r\n        }\r\n        this._obj.setBoxVisible(this._on);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle its visibility\r\n */\r\nexport interface IToolVisible {\r\n    isVisible: () => boolean,\r\n    setVisible: (b: boolean) => void;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class Checkbox extends AbstractTreeTool {\r\n\r\n    private _obj: IToolVisible;\r\n\r\n    constructor(obj: IToolVisible) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-eye');\r\n        this._on = this._obj.isVisible();\r\n        this._check(true);\r\n    }\r\n\r\n    // For a checkbox, set visible/invisible the corresponding prim\r\n    protected action() {\r\n        super.action();\r\n        // update object and gui according to the new status\r\n        this._check();\r\n    }\r\n\r\n    private _check(dontEnable?: boolean) {\r\n        if (this._on) {\r\n            // set icon eye\r\n            this._elem.classList.add('fa-eye');\r\n            this._elem.classList.add('active');\r\n            this._elem.classList.remove('fa-eye-slash');\r\n        } else {\r\n            // set icon eye-slash\r\n            this._elem.classList.remove('fa-eye');\r\n            this._elem.classList.remove('active');\r\n            this._elem.classList.add('fa-eye-slash');\r\n        }\r\n        if (!dontEnable) {\r\n            this._obj.setVisible(this._on);\r\n        }\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle a debug area\r\n */\r\nexport interface IToolDebug {\r\n    debug: (b: boolean) => void;\r\n}\r\n\r\nexport class DebugArea extends AbstractTreeTool {\r\n\r\n    private _obj: IToolDebug;\r\n\r\n    constructor(obj: IToolDebug) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-wrench');\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        if (this._on) {\r\n            // set icon activated\r\n            this._elem.classList.add('active');\r\n        } else {\r\n            // set icon deactivated\r\n            this._elem.classList.remove('active');\r\n        }\r\n        this._obj.debug(this._on);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\nimport { Tooltip } from \"../gui/Tooltip\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to retrieve its info\r\n */\r\nexport interface IToolInfo {\r\n    getInfo: () => string;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class Info extends AbstractTreeTool {\r\n\r\n    private _obj: IToolInfo;\r\n\r\n    constructor(obj: IToolInfo) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-info-circle');\r\n\r\n        new Tooltip(this._elem, this._obj.getInfo(), this._elem);\r\n    }\r\n\r\n    // Nothing to do on click\r\n    protected action() {\r\n        super.action();\r\n    }\r\n}\r\n","import { AbstractMesh, Debug, Node, Nullable, Observer, Scene, TransformNode, Vector3 } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { BoundingBox, IToolBoundingBox } from \"../treetools/BoundingBox\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { DebugArea, IToolDebug } from \"../treetools/DebugArea\";\r\nimport { Info, IToolInfo } from \"../treetools/Info\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class MeshAdapter\r\n    extends Adapter\r\n    implements IToolVisible, IToolDebug, IToolBoundingBox, IToolInfo {\r\n\r\n    /** Keep track of the axis of the actual object */\r\n    private _axesViewer: Nullable<any>;\r\n    private onBeforeRenderObserver: Nullable<Observer<Scene>>;\r\n\r\n    constructor(mesh: Node) {\r\n        super(mesh);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        tools.push(new DebugArea(this));\r\n        if (this._obj instanceof AbstractMesh) {\r\n            if ((this._obj as AbstractMesh).getTotalVertices() > 0) {\r\n                tools.push(new BoundingBox(this));\r\n            }\r\n        }\r\n\r\n\r\n        tools.push(new Info(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._obj.setEnabled(b);\r\n        this._obj.isVisible = b;\r\n    }\r\n    public isVisible(): boolean {\r\n        return this._obj.isEnabled() && (this._obj.isVisible === undefined || this._obj.isVisible);\r\n    }\r\n    public isBoxVisible(): boolean {\r\n        return (this._obj as AbstractMesh).showBoundingBox;\r\n    }\r\n    public setBoxVisible(b: boolean) {\r\n        return (this._obj as AbstractMesh).showBoundingBox = b;\r\n    }\r\n\r\n    public debug(enable: boolean) {\r\n        // Draw axis the first time\r\n        if (!this._axesViewer) {\r\n            this._drawAxis();\r\n        }\r\n        // Display or hide axis\r\n        if (!enable && this._axesViewer) {\r\n            let mesh = this._obj as AbstractMesh;\r\n            mesh.getScene().onBeforeRenderObservable.remove(this.onBeforeRenderObserver);\r\n            this._axesViewer.dispose();\r\n            this._axesViewer = null;\r\n        }\r\n    }\r\n\r\n    /** Returns some information about this mesh */\r\n    public getInfo(): string {\r\n        if (this._obj instanceof AbstractMesh) {\r\n            return `${(this._obj as AbstractMesh).getTotalVertices()} vertices`;\r\n        }\r\n        return '0 vertices';\r\n    }\r\n\r\n    /** Draw X, Y and Z axis for the actual object if this adapter.\r\n     * Should be called only one time as it will fill this._axis\r\n     */\r\n    private _drawAxis() {\r\n        this._obj.computeWorldMatrix();\r\n\r\n        // Axis\r\n        var x = new Vector3(1, 0, 0);\r\n        var y = new Vector3(0, 1, 0);\r\n        var z = new Vector3(0, 0, 1);\r\n\r\n        this._axesViewer = new Debug.AxesViewer(this._obj.getScene());\r\n\r\n        let mesh = this._obj as TransformNode;\r\n        this.onBeforeRenderObserver = mesh.getScene().onBeforeRenderObservable.add(() => {\r\n            let matrix = mesh.getWorldMatrix();\r\n            let extend = new Vector3(1, 1, 1);\r\n            if (mesh instanceof AbstractMesh) {\r\n                extend = mesh.getBoundingInfo().boundingBox.extendSizeWorld;\r\n            }\r\n            this._axesViewer!.scaleLines = Math.max(extend.x, extend.y, extend.z) * 2;\r\n            this._axesViewer!.update(this._obj.position, Vector3.TransformNormal(x, matrix), Vector3.TransformNormal(y, matrix), Vector3.TransformNormal(z, matrix));\r\n        });\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Tab } from \"../tabs/Tab\";\r\nimport { Adapter } from \"../adapters/Adapter\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { MeshAdapter } from \"../adapters/MeshAdapter\";\r\nimport { TransformNode, AbstractMesh } from \"babylonjs\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\n\r\n\r\nexport class TreeItem extends BasicElement {\r\n\r\n    // Reference to the tab\r\n    private _tab: Tab;\r\n    // The object this item is linked to (should be a primitive or a canvas) TODO should be superclass of all primitives\r\n    private _adapter: Adapter;\r\n    private _tools: Array<AbstractTreeTool>;\r\n    public children: Array<TreeItem> = [];\r\n    // Div element that contains all children of this node.\r\n    private _lineContent: HTMLElement;\r\n\r\n    constructor(tab: Tab, obj: Adapter) {\r\n        super();\r\n        this._tab = tab;\r\n        this._adapter = obj;\r\n\r\n        this._tools = this._adapter.getTools();\r\n\r\n        this._build();\r\n\r\n    }\r\n\r\n    /** Returns the item ID == its adapter ID */\r\n    public get id(): string {\r\n        return this._adapter.id();\r\n    }\r\n\r\n    /** Add the given item as a child of this one */\r\n    public add(child: TreeItem) {\r\n        this.children.push(child);\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Returns the original adapter\r\n     */\r\n    public get adapter(): Adapter {\r\n        return this._adapter;\r\n    }\r\n\r\n    /**\r\n     * Function used to compare this item to another tree item.\r\n     * Returns the alphabetical sort of the adapter ID\r\n     */\r\n    public compareTo(item: TreeItem): number {\r\n        let str1 = this.id;\r\n        let str2 = item.id;\r\n        return str1.localeCompare(str2, [], { numeric: true });\r\n    }\r\n\r\n    /** Returns true if the given obj correspond to the adapter linked to this tree item */\r\n    public correspondsTo(obj: any): boolean {\r\n        return this._adapter.correspondsTo(obj);\r\n    }\r\n\r\n    /** hide all children of this item */\r\n    public fold() {\r\n        // Do nothing id no children\r\n        if (this.children.length > 0) {\r\n            for (let elem of this.children) {\r\n                elem.toHtml().style.display = 'none';\r\n            }\r\n            this._div.classList.add('folded');\r\n            this._div.classList.remove('unfolded');\r\n        }\r\n    }\r\n    /** Show all children of this item */\r\n    public unfold() {\r\n        // Do nothing id no children\r\n        if (this.children.length > 0) {\r\n            for (let elem of this.children) {\r\n                elem.toHtml().style.display = 'block';\r\n            }\r\n            this._div.classList.add('unfolded');\r\n            this._div.classList.remove('folded');\r\n        }\r\n    }\r\n\r\n    /** Build the HTML of this item */\r\n    protected _build() {\r\n\r\n        /**\r\n         *  Hide the debug objects :\r\n         * - Axis : xline, yline, zline\r\n         * */\r\n        let adapterId = this._adapter.id();\r\n        if (adapterId == \"xline\"\r\n            || adapterId == \"yline\"\r\n            || adapterId == \"zline\") {\r\n            this._div.className = \"line_invisible\";\r\n        }\r\n        else this._div.className = 'line';\r\n\r\n        // special class for transform node ONLY\r\n        if (this.adapter instanceof MeshAdapter) {\r\n            let obj = this.adapter.object;\r\n            if (obj instanceof TransformNode && !(obj instanceof AbstractMesh)) {\r\n                this._div.className += ' transformNode';\r\n            }\r\n        }\r\n\r\n\r\n        for (let tool of this._tools) {\r\n            this._div.appendChild(tool.toHtml());\r\n        }\r\n\r\n\r\n        // Id\r\n        let text = Inspector.DOCUMENT.createElement('span');\r\n        text.textContent = this._adapter.id();\r\n        this._div.appendChild(text);\r\n\r\n        // Type\r\n        let type = Inspector.DOCUMENT.createElement('span');\r\n        type.className = 'property-type';\r\n        if (this._adapter.type() !== 'type_not_defined') {\r\n            type.textContent = ' - ' + this._adapter.type();\r\n        }\r\n        this._div.appendChild(type);\r\n\r\n        this._lineContent = Helpers.CreateDiv('line-content', this._div);\r\n\r\n        this._addEvent();\r\n    }\r\n\r\n    /**\r\n     * Returns one HTML element (.details) containing all  details of this primitive\r\n     */\r\n    public getDetails(): Array<PropertyLine> {\r\n        return this._adapter.getProperties();\r\n    }\r\n\r\n    public update() {\r\n        // Clean division holding all children\r\n        Helpers.CleanDiv(this._lineContent);\r\n\r\n        for (let child of this.children) {\r\n            let elem = child.toHtml();\r\n            this._lineContent.appendChild(elem);\r\n        }\r\n        if (this.children.length > 0) {\r\n            // Check if folded or not\r\n            if (!this._div.classList.contains('folded') && !this._div.classList.contains('unfolded')) {\r\n                this._div.classList.add('folded');\r\n            }\r\n        }\r\n        this.fold();\r\n    }\r\n\r\n    /**\r\n     * Add an event listener on the item : \r\n     * - one click display details\r\n     */\r\n    protected _addEvent() {\r\n        this._div.addEventListener('click', (e) => {\r\n            this._tab.select(this);\r\n            // Fold/unfold the tree\r\n            if (this._isFolded()) {\r\n                this.unfold();\r\n            } else {\r\n                this.fold();\r\n            }\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    /** Returns true if the node is folded, false otherwise */\r\n    private _isFolded(): boolean {\r\n        return !this._div.classList.contains('unfolded');\r\n    }\r\n\r\n    /** Set this item as active (background lighter) in the tree panel */\r\n    public active(b: boolean) {\r\n        this._div.classList.remove('active');\r\n        for (let child of this.children) {\r\n            child.active(false);\r\n        }\r\n        if (b) {\r\n            this._div.classList.add('active');\r\n        }\r\n    }\r\n\r\n    public getDiv() {\r\n        return this._div;\r\n    }\r\n}\r\n","import { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PropertyTab } from \"../tabs/PropertyTab\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n\r\n/**\r\n * A search bar can be used to filter elements in the tree panel.\r\n * At each keypress on the input, the treepanel will be filtered.\r\n */\r\nexport class SearchBar extends BasicElement {\r\n\r\n    private _propTab: PropertyTab;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    constructor(tab: PropertyTab) {\r\n        super();\r\n        this._propTab = tab;\r\n        this._div.classList.add('searchbar');\r\n\r\n        let filter = Inspector.DOCUMENT.createElement('i');\r\n        filter.className = 'fa fa-search';\r\n\r\n        this._div.appendChild(filter);\r\n        // Create input\r\n        this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n        this._inputElement.placeholder = 'Filter by name...';\r\n        this._div.appendChild(this._inputElement);\r\n\r\n        this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n            let filter = this._inputElement.value;\r\n            this._propTab.filter(filter);\r\n        })\r\n    }\r\n\r\n    /** Delete all characters typped in the input element */\r\n    public reset() {\r\n        this._inputElement.value = '';\r\n    }\r\n\r\n    public update() {\r\n        // Nothing to update\r\n    }\r\n\r\n}\r\n\r\nexport class SearchBarDetails extends BasicElement {\r\n\r\n    private _detailTab: DetailPanel;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    constructor(tab: DetailPanel) {\r\n        super();\r\n        this._detailTab = tab;\r\n        this._div.classList.add('searchbar');\r\n\r\n        let filter = Inspector.DOCUMENT.createElement('i');\r\n        filter.className = 'fa fa-search';\r\n\r\n        this._div.appendChild(filter);\r\n        // Create input\r\n        this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n        this._inputElement.placeholder = 'Filter by name...';\r\n        this._div.appendChild(this._inputElement);\r\n\r\n        this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n            let filter = this._inputElement.value;\r\n            this._detailTab.searchByName(filter);\r\n        })\r\n    }\r\n\r\n    /** Delete all characters typped in the input element */\r\n    public reset() {\r\n        this._inputElement.value = '';\r\n    }\r\n\r\n    public update() {\r\n        // Nothing to update\r\n    }\r\n\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { SearchBarDetails } from \"../gui/SearchBar\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PropertyLine } from \"./PropertyLine\";\r\n\r\nexport interface SortDirection {\r\n    [property: string]: number;\r\n}\r\n\r\nexport class DetailPanel extends BasicElement {\r\n\r\n    // The header row\r\n    private _headerRow: HTMLElement;\r\n    // Contains all details rows that belongs to the item above\r\n    private _detailRows: Array<PropertyLine> = [];\r\n    // Store the sort direction of each header column\r\n    private _sortDirection: SortDirection = {};\r\n    // The search bar\r\n    private _searchDetails: SearchBarDetails;\r\n    private _details: HTMLDivElement;\r\n\r\n    constructor(dr?: Array<PropertyLine>) {\r\n        super();\r\n        this._build();\r\n\r\n        if (dr) {\r\n            this._detailRows = dr;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    set details(detailsRow: Array<PropertyLine>) {\r\n        this.clean();\r\n        //add the searchBar\r\n        this._addSearchBarDetails();\r\n        this._details = Helpers.CreateDiv('details', this._div);\r\n        this._detailRows = detailsRow;\r\n        // Refresh HTML\r\n        this.update();\r\n    }\r\n\r\n    protected _build() {\r\n        this._div.className = 'insp-details';\r\n        this._div.id = 'insp-details';\r\n        // Create header row\r\n        this._createHeaderRow();\r\n        this._div.appendChild(this._headerRow);\r\n\r\n    }\r\n\r\n    /** Updates the HTML of the detail panel */\r\n    public update(_items?: Array<PropertyLine>) {\r\n        this._sortDetails('name', 1);\r\n        // Check the searchbar\r\n        if (_items) {\r\n            this.cleanRow();\r\n            this._addSearchDetails(_items);\r\n            //console.log(_items);\r\n        } else {\r\n            this._addDetails();\r\n            //console.log(\"np\");\r\n        }\r\n    }\r\n\r\n    /** Add the search bar for the details */\r\n    private _addSearchBarDetails() {\r\n        let searchDetails = Helpers.CreateDiv('searchbar-details', this._div);\r\n        // Create search bar\r\n        this._searchDetails = new SearchBarDetails(this);\r\n\r\n        searchDetails.appendChild(this._searchDetails.toHtml());\r\n        this._div.appendChild(searchDetails);\r\n    }\r\n\r\n    /** Search an element by name  */\r\n    public searchByName(searchName: string) {\r\n        let rows = [];\r\n        for (let row of this._detailRows) {\r\n            if (row.name.indexOf(searchName) >= 0) {\r\n                rows.push(row);\r\n            }\r\n        }\r\n        this.update(rows);\r\n    }\r\n\r\n    /** Add all lines in the html div. Does not sort them! */\r\n    private _addDetails() {\r\n        for (let row of this._detailRows) {\r\n            this._details.appendChild(row.toHtml());\r\n        }\r\n    }\r\n\r\n    private _addSearchDetails(_items: Array<PropertyLine>) {\r\n        for (let row of _items) {\r\n            this._details.appendChild(row.toHtml());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sort the details row by comparing the given property of each row\r\n     */\r\n    private _sortDetails(property: string, _direction?: number) {\r\n\r\n        // Clean header\r\n        let elems = Inspector.DOCUMENT.querySelectorAll('.sort-direction');\r\n        for (let e = 0; e < elems.length; e++) {\r\n            elems[e].classList.remove('fa-chevron-up');\r\n            elems[e].classList.remove('fa-chevron-down');\r\n        }\r\n\r\n\r\n        if (_direction || !this._sortDirection[property]) {\r\n            this._sortDirection[property] = _direction || 1;\r\n        } else {\r\n            this._sortDirection[property] *= -1;\r\n        }\r\n        let direction = this._sortDirection[property];\r\n        let query = this._headerRow.querySelector(`#sort-direction-${property}`);\r\n        if (query) {\r\n            if (direction == 1) {\r\n                query.classList.remove('fa-chevron-down');\r\n                query.classList.add('fa-chevron-up');\r\n            } else {\r\n                query.classList.remove('fa-chevron-up');\r\n                query.classList.add('fa-chevron-down');\r\n            }\r\n        }\r\n\r\n        let isString = (s: any) => {\r\n            return typeof (s) === 'string' || s instanceof String;\r\n        };\r\n\r\n        this._detailRows.forEach((property) => {\r\n            property.closeDetails();\r\n        })\r\n\r\n        this._detailRows.sort((detail1: any, detail2: any): number => {\r\n            let str1 = String(detail1[property]);\r\n            let str2 = String(detail2[property]);\r\n            if (!isString(str1)) {\r\n                str1 = detail1[property].toString();\r\n            }\r\n            if (!isString(str2)) {\r\n                str2 = detail2[property].toString();\r\n            }\r\n            // Compare numbers as numbers and string as string with 'numeric=true'\r\n            return str1.localeCompare(str2, [], { numeric: true }) * direction;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes all data in the detail panel but keep the header row\r\n     */\r\n    public clean() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n        Helpers.CleanDiv(this._div);\r\n        // Header row\r\n        this._div.appendChild(this._headerRow);\r\n    }\r\n\r\n    /**\r\n     * Clean the rows only\r\n     */\r\n    public cleanRow() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n        Helpers.CleanDiv(this._details);\r\n    }\r\n\r\n    /** Overrides basicelement.dispose */\r\n    public dispose() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the header row : name, value, id\r\n     */\r\n    private _createHeaderRow() {\r\n        this._headerRow = Helpers.CreateDiv('header-row');\r\n\r\n        let createDiv = (name: string, cssClass: string): HTMLElement => {\r\n            let div = Helpers.CreateDiv(cssClass + ' header-col');\r\n\r\n            // Column title - first letter in uppercase\r\n            let spanName = Inspector.DOCUMENT.createElement('span');\r\n            spanName.textContent = name.charAt(0).toUpperCase() + name.slice(1);\r\n\r\n            // sort direction\r\n            let spanDirection = Inspector.DOCUMENT.createElement('i');\r\n            spanDirection.className = 'sort-direction fa';\r\n            spanDirection.id = 'sort-direction-' + name;\r\n\r\n            div.appendChild(spanName);\r\n            div.appendChild(spanDirection);\r\n\r\n            div.addEventListener('click', (e) => {\r\n                this._sortDetails(name);\r\n                this._addDetails();\r\n            });\r\n            return div;\r\n        };\r\n\r\n        this._headerRow.appendChild(createDiv('name', 'prop-name'));\r\n        this._headerRow.appendChild(createDiv('value', 'prop-value'));\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport abstract class Tab extends BasicElement {\r\n    protected _tabbar: TabBar;\r\n    // The tab name displayed in the tabbar\r\n    public name: string;\r\n    protected _isActive: boolean = false;\r\n\r\n    // The whole panel corresponding to this tab. It's what is displayed when the tab is activacted\r\n    protected _panel: HTMLDivElement;\r\n\r\n    constructor(tabbar: TabBar, name: string) {\r\n        super();\r\n        this._tabbar = tabbar;\r\n        this.name = name;\r\n        this._build();\r\n    }\r\n\r\n    /** True if the tab is active, false otherwise */\r\n    public isActive(): boolean {\r\n        return this._isActive;\r\n    }\r\n\r\n    protected _build() {\r\n        this._div.className = 'tab';\r\n        this._div.textContent = this.name;\r\n\r\n        this._div.addEventListener('click', (evt) => {\r\n            // Set this tab as active\r\n            this._tabbar.switchTab(this);\r\n        });\r\n    }\r\n\r\n    /** Set this tab as active or not, depending on the current state */\r\n    public active(b: boolean) {\r\n        if (b) {\r\n            this._div.classList.add('active');\r\n        } else {\r\n            this._div.classList.remove('active');\r\n        }\r\n        this._isActive = b;\r\n    }\r\n\r\n    public update() {\r\n        // Nothing for the moment\r\n    }\r\n\r\n    /** Creates the tab panel for this tab. */\r\n    public getPanel(): HTMLElement {\r\n        return this._panel;\r\n    }\r\n\r\n    /** Add this in the propertytab with the searchbar */\r\n    public filter(str: string) { };\r\n\r\n    /** Dispose properly this tab */\r\n    public abstract dispose(): void;\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // To define in subclasses if needed \r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of this tab, 0 by default\r\n    */\r\n    public getPixelWidth(): number {\r\n        let style = Inspector.WINDOW.getComputedStyle(this._div);\r\n        if (!style.marginLeft || !style.marginRight) {\r\n            return 0;\r\n        }\r\n        let left = parseFloat(style.marginLeft.substr(0, style.marginLeft.length - 2)) || 0;\r\n        let right = parseFloat(style.marginRight.substr(0, style.marginRight.length - 2)) || 0;\r\n        return (this._div.clientWidth || 0) + left + right;\r\n    }\r\n}\r\n\r\n","import { AbstractMesh, Nullable } from \"babylonjs\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { SearchBar } from \"../gui/SearchBar\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\n/**\r\n * A Property tab can creates two panels: \r\n * a tree panel and a detail panel, \r\n * in which properties will be displayed.\r\n * Both panels are separated by a resize bar\r\n */\r\nexport abstract class PropertyTab extends Tab {\r\n\r\n    protected _inspector: Inspector;\r\n    /** The panel containing a list of items */\r\n    protected _treePanel: HTMLDivElement;\r\n    /** The panel containing a list if properties corresponding to an item */\r\n    protected _detailsPanel: DetailPanel;\r\n    protected _treeItems: Array<TreeItem> = [];\r\n    protected _searchBar: SearchBar;\r\n\r\n    constructor(tabbar: TabBar, name: string, insp: Inspector) {\r\n        super(tabbar, name);\r\n\r\n        this._inspector = insp;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add('searchable');\r\n\r\n        // Search bar\r\n        this._searchBar = new SearchBar(this);\r\n        // Add searchbar\r\n        this._panel.appendChild(this._searchBar.toHtml());\r\n\r\n        // Build the treepanel\r\n        this._treePanel = Helpers.CreateDiv('insp-tree', this._panel);\r\n\r\n        // Build the detail panel\r\n        this._detailsPanel = new DetailPanel();\r\n        this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n        Split([this._treePanel, this._detailsPanel.toHtml()], {\r\n            blockDrag: this._inspector.popupMode,\r\n            direction: 'vertical'\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /** Overrides dispose */\r\n    public dispose() {\r\n        this._detailsPanel.dispose();\r\n    }\r\n\r\n    public update(_items?: Array<TreeItem>) {\r\n\r\n        let items;\r\n        if (_items) {\r\n            items = _items;\r\n        } else {\r\n            // Rebuild the tree\r\n            this._treeItems = this._getTree();\r\n            items = this._treeItems;\r\n        }\r\n        // Clean the tree\r\n        Helpers.CleanDiv(this._treePanel);\r\n        // Clean the detail properties\r\n        this._detailsPanel.clean();\r\n\r\n\r\n        // Sort items alphabetically\r\n        items.sort((item1, item2) => {\r\n            return item1.compareTo(item2);\r\n        });\r\n\r\n        // Display items\r\n        for (let item of items) {\r\n            this._treePanel.appendChild(item.toHtml());\r\n        }\r\n    }\r\n\r\n    /** Display the details of the given item */\r\n    public displayDetails(item: TreeItem) {\r\n        // Remove active state on all items\r\n        this.activateNode(item);\r\n        // Update the detail panel\r\n        this._detailsPanel.details = item.getDetails();\r\n    }\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // Active the node\r\n        this.activateNode(item);\r\n        // Display its details\r\n        this.displayDetails(item);\r\n    }\r\n\r\n    /** Set the given item as active in the tree */\r\n    public activateNode(item: TreeItem) {\r\n        if (this._treeItems) {\r\n            for (let node of this._treeItems) {\r\n                node.active(false);\r\n            }\r\n        }\r\n        //  item.getDiv().scrollIntoView();\r\n        item.active(true);\r\n    }\r\n\r\n    /** Returns the treeitem corersponding to the given obj, null if not found */\r\n    public getItemFor(_obj: any): Nullable<TreeItem> {\r\n        let obj = _obj as AbstractMesh;\r\n\r\n        // Search recursively\r\n        let searchObjectInTree = (object: any, treeItem: TreeItem): Nullable<TreeItem> => {\r\n            if (treeItem.correspondsTo(object)) {\r\n                return treeItem;\r\n            }\r\n            else {\r\n                if (treeItem.children.length > 0) {\r\n                    for (let item of treeItem.children) {\r\n                        let it = searchObjectInTree(obj, item);\r\n                        if (it) {\r\n                            return it;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        for (let item of this._treeItems) {\r\n            let it = searchObjectInTree(obj, item);\r\n            if (it) {\r\n                return it;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public filter(filter: string) {\r\n        let items = [];\r\n\r\n        for (let item of this._treeItems) {\r\n            if (item.id.toLowerCase().indexOf(filter.toLowerCase()) != -1) {\r\n                items.push(item);\r\n            }\r\n            for (let child of item.children) {\r\n                if (child.id.toLowerCase().indexOf(filter.toLowerCase()) != -1) {\r\n                    items.push(item);\r\n                }\r\n            }\r\n        }\r\n        this.update(items);\r\n    }\r\n\r\n    /** Builds the tree panel */\r\n    protected abstract _getTree(): Array<TreeItem>;\r\n}\r\n","import { CameraAdapter } from \"../adapters/CameraAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class CameraTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Camera', inspector);\r\n    }\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let camera of instances.cameras) {\r\n            arr.push(new TreeItem(this, new CameraAdapter(camera)));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n","import { Tools } from \"babylonjs\";\nimport { Helpers } from \"../helpers/Helpers\";\nimport { Inspector } from \"../Inspector\";\nimport { Tab } from \"./Tab\";\nimport { TabBar } from \"./TabBar\";\n\nimport * as Split from \"Split\";\n\n/** \n * The console tab will have two features : \n * - hook all console.log call and display them in this panel (and in the browser console as well)\n * - display all Babylon logs (called with Tools.Log...)\n */\nexport class ConsoleTab extends Tab {\n\n    private _inspector: Inspector;\n\n    private _consolePanelContent: HTMLElement;\n    private _bjsPanelContent: HTMLElement;\n\n    private _oldConsoleLog: any;\n    private _oldConsoleWarn: any;\n    private _oldConsoleError: any;\n\n\n    constructor(tabbar: TabBar, insp: Inspector) {\n        super(tabbar, 'Console');\n        this._inspector = insp;\n\n        // Build the shaders panel : a div that will contains the shaders tree and both shaders panels\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\n\n        let consolePanel = Helpers.CreateDiv('console-panel') as HTMLDivElement;\n        let bjsPanel = Helpers.CreateDiv('console-panel') as HTMLDivElement;\n\n        this._panel.appendChild(consolePanel);\n        this._panel.appendChild(bjsPanel);\n\n        Split([consolePanel, bjsPanel], {\n            blockDrag: this._inspector.popupMode,\n            sizes: [50, 50],\n            direction: 'vertical'\n        }\n        );\n\n        // Titles\n        let title = Helpers.CreateDiv('console-panel-title', consolePanel);\n        title.textContent = 'Console logs';\n        title = Helpers.CreateDiv('console-panel-title', bjsPanel);\n        title.textContent = 'js logs';\n\n        // Contents\n        this._consolePanelContent = Helpers.CreateDiv('console-panel-content', consolePanel) as HTMLDivElement;\n        this._bjsPanelContent = Helpers.CreateDiv('console-panel-content', bjsPanel) as HTMLDivElement;\n\n        // Bjs logs\n        this._bjsPanelContent.innerHTML = Tools.LogCache;\n        Tools.OnNewCacheEntry = (entry: string) => {\n            this._bjsPanelContent.innerHTML += entry;\n            this._bjsPanelContent.scrollTop = this._bjsPanelContent.scrollHeight;\n        };\n\n        // Testing\n        //console.log(\"This is a console.log message\");\n        // console.log(\"That's right, console.log calls are hooked to be written in this window\");\n        // console.log(\"Object are also stringify-ed\", {width:10, height:30, shape:'rectangular'});\n        // console.warn(\"This is a console.warn message\");\n        // console.error(\"This is a console.error message\");\n\n        // Tools.Log(\"This is a message\");\n        // Tools.Warn(\"This is a warning\");\n        // Tools.Error(\"This is a error\");\n\n    }\n\n    /** Overrides super.dispose */\n    public dispose() {\n        console.log = this._oldConsoleLog;\n        console.warn = this._oldConsoleWarn;\n        console.error = this._oldConsoleError;\n\n    }\n\n    public active(b: boolean) {\n        super.active(b);\n        if (b) {\n            // save old console.log\n            this._oldConsoleLog = console.log;\n            this._oldConsoleWarn = console.warn;\n            this._oldConsoleError = console.error;\n\n            console.log = this._addConsoleLog.bind(this);\n            console.warn = this._addConsoleWarn.bind(this);\n            console.error = this._addConsoleError.bind(this);\n        }\n    }\n\n    private _message(type: string, message: any, caller: string) {\n        let callerLine = Helpers.CreateDiv('caller', this._consolePanelContent);\n        callerLine.textContent = caller.replace(' ', '\\u00A0');\n\n        let line = Helpers.CreateDiv(type, this._consolePanelContent);\n        line.textContent = message.replace(' ', '\\u00A0');\n\n        this._consolePanelContent.scrollTop = this._consolePanelContent.scrollHeight;\n    }\n    private _addConsoleLog(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : \"Function \" + (<any>callerFunc)['name'] + \": \";\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('log', params[i], caller);\n            // Write again in console does not work on edge, as the console object                 \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleLog(params[i]);\n            }\n        }\n    }\n\n    private _addConsoleWarn(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : (<any>callerFunc)['name'];\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('warn', params[i], caller);\n            // Write again in console does not work on edge, as the console object \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleWarn(params[i]);\n            }\n        }\n    }\n\n    private _addConsoleError(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : (<any>callerFunc)['name'];\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('error', params[i], caller);\n            // Write again in console does not work on edge, as the console object \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleError(params[i]);\n            }\n        }\n    }\n\n}\n","import { Mesh, Nullable, NullEngine, PBRMaterial, Scene, SceneLoader, StandardMaterial, Texture, TransformNode } from \"babylonjs\";\r\nimport { GLTF2, GLTFFileLoader } from \"babylonjs-loaders\";\r\nimport { GLTF2Export } from \"babylonjs-serializers\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nimport {} from \"babylonjs-gltf2interface\";\r\n\r\nexport class GLTFTab extends Tab {\r\n    private static _LoaderDefaults: any = null;\r\n    private static _ValidationResults: Nullable<IGLTFValidationResults> = null;\r\n    private static _OnValidationResultsUpdated: Nullable<(results: IGLTFValidationResults) => void> = null;\r\n\r\n    private _inspector: Inspector;\r\n    private _actions: HTMLDivElement;\r\n    private _detailsPanel: Nullable<DetailPanel> = null;\r\n    private _split: any;\r\n\r\n    public static get IsSupported(): boolean {\r\n        return !!(SceneLoader && GLTFFileLoader && GLTF2.GLTFLoader) || !!GLTF2Export;\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _Initialize(): void {\r\n        // Must register with OnPluginActivatedObservable as early as possible to override the loader defaults.\r\n        SceneLoader.OnPluginActivatedObservable.add((loader: GLTFFileLoader) => {\r\n            if (loader.name === \"gltf\") {\r\n                GLTFTab._ApplyLoaderDefaults(loader);\r\n\r\n                loader.onValidatedObservable.add(results => {\r\n                    GLTFTab._ValidationResults = results;\r\n\r\n                    if (GLTFTab._OnValidationResultsUpdated) {\r\n                        GLTFTab._OnValidationResultsUpdated(results);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, \"GLTF\");\r\n\r\n        this._inspector = inspector;\r\n        this._panel = Helpers.CreateDiv(\"tab-panel\") as HTMLDivElement;\r\n        this._actions = Helpers.CreateDiv(\"gltf-actions\", this._panel) as HTMLDivElement;\r\n        this._actions.addEventListener(\"click\", event => {\r\n            this._closeDetailsPanel();\r\n        });\r\n\r\n        if (SceneLoader && GLTFFileLoader && GLTF2.GLTFLoader) {\r\n            this._addImport();\r\n        }\r\n\r\n        if (GLTF2Export) {\r\n            this._addExport();\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        if (this._detailsPanel) {\r\n            this._detailsPanel.dispose();\r\n        }\r\n    }\r\n\r\n    private _addImport() {\r\n        const importTitle = Helpers.CreateDiv(\"gltf-title\", this._actions);\r\n        importTitle.textContent = \"Import\";\r\n\r\n        const importActions = Helpers.CreateDiv(\"gltf-actions\", this._actions) as HTMLDivElement;\r\n\r\n        GLTFTab._GetLoaderDefaultsAsync().then(defaults => {\r\n            const loaderAction = Helpers.CreateDiv(\"gltf-action\", importActions) as HTMLDivElement;\r\n            loaderAction.innerText = \"Loader\";\r\n            loaderAction.addEventListener(\"click\", event => {\r\n                this._showLoaderDefaults(defaults);\r\n                event.stopPropagation();\r\n            });\r\n\r\n            const extensionsTitle = Helpers.CreateDiv(\"gltf-title\", importActions) as HTMLDivElement;\r\n            extensionsTitle.textContent = \"Extensions\";\r\n\r\n            for (const extensionName in defaults.extensions) {\r\n                const extensionDefaults = defaults.extensions[extensionName];\r\n\r\n                const extensionAction = Helpers.CreateDiv(\"gltf-action\", importActions);\r\n                extensionAction.addEventListener(\"click\", event => {\r\n                    if (this._showLoaderExtensionDefaults(extensionDefaults)) {\r\n                        event.stopPropagation();\r\n                    }\r\n                });\r\n\r\n                const checkbox = Helpers.CreateElement(\"span\", \"gltf-checkbox\", extensionAction);\r\n\r\n                if (extensionDefaults.enabled) {\r\n                    checkbox.classList.add(\"action\", \"active\");\r\n                }\r\n\r\n                checkbox.addEventListener(\"click\", () => {\r\n                    checkbox.classList.toggle(\"active\");\r\n                    extensionDefaults.enabled = checkbox.classList.contains(\"active\");\r\n                });\r\n\r\n                const label = Helpers.CreateElement(\"span\", null, extensionAction);\r\n                label.textContent = extensionName;\r\n            }\r\n\r\n            let validationTitle: Nullable<HTMLDivElement> = null;\r\n            let validationAction: Nullable<HTMLDivElement> = null;\r\n\r\n            GLTFTab._OnValidationResultsUpdated = results => {\r\n                if (!validationTitle) {\r\n                    validationTitle = Helpers.CreateDiv(\"gltf-title\", importActions) as HTMLDivElement;\r\n                }\r\n\r\n                if (!validationAction) {\r\n                    validationAction = Helpers.CreateDiv(\"gltf-action\", importActions) as HTMLDivElement;\r\n                    validationAction.addEventListener(\"click\", event => {\r\n                        GLTFTab._ShowValidationResults();\r\n                        event.stopPropagation();\r\n                    });\r\n                }\r\n\r\n                validationTitle.textContent = results.uri === \"null\" ? \"Validation\" : `Validation - ${BABYLON.Tools.GetFilename(results.uri)}`;\r\n                GLTFTab._FormatValidationResultsShort(validationAction, results);\r\n            };\r\n\r\n            if (GLTFTab._ValidationResults) {\r\n                GLTFTab._OnValidationResultsUpdated(GLTFTab._ValidationResults);\r\n            }\r\n        });\r\n    }\r\n\r\n    private static _FormatValidationResultsShort(validationAction: HTMLDivElement, results: IGLTFValidationResults): void {\r\n        validationAction.innerHTML = \"\";\r\n\r\n        let message = \"\";\r\n        const add = (count: number, issueType: string): void => {\r\n            if (count) {\r\n                if (message) {\r\n                    message += \", \";\r\n                }\r\n\r\n                message += count === 1 ? `${count} ${issueType}` : `${count} ${issueType}s`;\r\n            }\r\n        };\r\n\r\n        const issues = results.issues;\r\n        add(issues.numErrors, \"error\");\r\n        add(issues.numWarnings, \"warning\");\r\n        add(issues.numInfos, \"info\");\r\n        add(issues.numHints, \"hint\");\r\n\r\n        const actionDiv = Helpers.CreateDiv(\"gltf-action\", validationAction) as HTMLDivElement;\r\n\r\n        const iconSpan = Helpers.CreateElement(\"span\", \"gltf-icon\", actionDiv, issues.numErrors ? \"The asset contains errors.\" : \"The asset is valid.\");\r\n        iconSpan.textContent = issues.numErrors ? \"\\uf057\" : \"\\uf058\";\r\n        iconSpan.style.color = issues.numErrors ? \"red\" : \"green\";\r\n\r\n        const messageSpan = Helpers.CreateElement(\"span\", \"gltf-icon\", actionDiv);\r\n        messageSpan.textContent = message || \"No issues\";\r\n    }\r\n\r\n    private static _ShowValidationResults(): void {\r\n        if (GLTFTab._ValidationResults) {\r\n            const win = window.open(\"\", \"_blank\");\r\n            if (win) {\r\n                // TODO: format this better and use generator registry (https://github.com/KhronosGroup/glTF-Generator-Registry)\r\n                win.document.title = \"glTF Validation Results\";\r\n                win.document.body.innerText = JSON.stringify(GLTFTab._ValidationResults, null, 2);\r\n                win.document.body.style.whiteSpace = \"pre\";\r\n                win.document.body.style.fontFamily = `monospace`;\r\n                win.document.body.style.fontSize = `14px`;\r\n                win.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _ApplyLoaderDefaults(loader: GLTFFileLoader): void {\r\n        const defaults = GLTFTab._LoaderDefaults;\r\n        if (defaults) {\r\n            for (const key in defaults) {\r\n                if (key !== \"extensions\") {\r\n                    (loader as any)[key] = defaults[key];\r\n                }\r\n            }\r\n\r\n            loader.onExtensionLoadedObservable.add(extension => {\r\n                const extensionDefaults = defaults.extensions[extension.name];\r\n                for (const key in extensionDefaults) {\r\n                    (extension as any)[key] = extensionDefaults[key];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private static _GetPublic(obj: any): any {\r\n        const result: any = {};\r\n        for (const key in obj) {\r\n            if (key !== \"name\" && key[0] !== \"_\") {\r\n                const value = obj[key];\r\n                const type = typeof value;\r\n                if (type !== \"object\" && type !== \"function\" && type !== \"undefined\") {\r\n                    result[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _GetLoaderDefaultsAsync(): Promise<any> {\r\n        if (GLTFTab._LoaderDefaults) {\r\n            return Promise.resolve(GLTFTab._LoaderDefaults);\r\n        }\r\n\r\n        const engine = new NullEngine();\r\n        const scene = new Scene(engine);\r\n        const loader = new GLTFFileLoader();\r\n\r\n        GLTFTab._LoaderDefaults = GLTFTab._GetPublic(loader);\r\n        GLTFTab._LoaderDefaults.extensions = {};\r\n        loader.onExtensionLoadedObservable.add(extension => {\r\n            GLTFTab._LoaderDefaults.extensions[extension.name] = GLTFTab._GetPublic(extension);\r\n        });\r\n\r\n        const data = '{ \"asset\": { \"version\": \"2.0\" } }';\r\n        return loader.importMeshAsync([], scene, data, \"\").then(() => {\r\n            engine.dispose();\r\n            return GLTFTab._LoaderDefaults;\r\n        });\r\n    }\r\n\r\n    private _openDetailsPanel(): DetailPanel {\r\n        if (!this._detailsPanel) {\r\n            this._detailsPanel = new DetailPanel();\r\n            this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n            this._split = Split([this._actions, this._detailsPanel.toHtml()], {\r\n                blockDrag: this._inspector.popupMode,\r\n                sizes: [50, 50],\r\n                direction: \"vertical\"\r\n            });\r\n        }\r\n\r\n        this._detailsPanel.clean();\r\n        return this._detailsPanel;\r\n    }\r\n\r\n    private _closeDetailsPanel(): void {\r\n        if (this._detailsPanel) {\r\n            this._detailsPanel.toHtml().remove();\r\n            this._detailsPanel.dispose();\r\n            this._detailsPanel = null;\r\n        }\r\n\r\n        if (this._split) {\r\n            this._split.destroy();\r\n            delete this._split;\r\n        }\r\n    }\r\n\r\n    private _showLoaderDefaults(defaults: { [key: string]: any }): void {\r\n        var detailsPanel = this._openDetailsPanel();\r\n        const details = new Array<PropertyLine>();\r\n        for (const key in defaults) {\r\n            if (key !== \"extensions\") {\r\n                details.push(new PropertyLine(new Property(key, defaults, this._inspector.scene)));\r\n            }\r\n        }\r\n        detailsPanel.details = details;\r\n    }\r\n\r\n    private _showLoaderExtensionDefaults(defaults: { [key: string]: any }): boolean {\r\n        if (Object.keys(defaults).length === 1) {\r\n            return false;\r\n        }\r\n\r\n        var detailsPanel = this._openDetailsPanel();\r\n        const details = new Array<PropertyLine>();\r\n        for (const key in defaults) {\r\n            if (key !== \"enabled\") {\r\n                details.push(new PropertyLine(new Property(key, defaults, this._inspector.scene)));\r\n            }\r\n        }\r\n        detailsPanel.details = details;\r\n\r\n        return true;\r\n    }\r\n\r\n    private _addExport() {\r\n        const exportTitle = Helpers.CreateDiv(\"gltf-title\", this._actions);\r\n        exportTitle.textContent = \"Export\";\r\n\r\n        const exportActions = Helpers.CreateDiv(\"gltf-actions\", this._actions) as HTMLDivElement;\r\n\r\n        const name = Helpers.CreateInput(\"gltf-input\", exportActions);\r\n        name.placeholder = \"File name...\";\r\n\r\n        const button = Helpers.CreateElement(\"button\", \"gltf-button\", exportActions) as HTMLButtonElement;\r\n        button.innerText = \"Export GLB\";\r\n        button.addEventListener(\"click\", () => {\r\n            GLTF2Export.GLBAsync(this._inspector.scene, name.value || \"scene\", {\r\n                shouldExportTransformNode: transformNode => !GLTFTab._IsSkyBox(transformNode)\r\n            }).then((glb) => {\r\n                glb.downloadFiles();\r\n            });\r\n        });\r\n    }\r\n\r\n    private static _IsSkyBox(transformNode: TransformNode): boolean {\r\n        if (transformNode instanceof Mesh) {\r\n            if (transformNode.material) {\r\n                const material = transformNode.material as PBRMaterial | StandardMaterial;\r\n                const reflectionTexture = material.reflectionTexture;\r\n                if (reflectionTexture && reflectionTexture.coordinatesMode === Texture.SKYBOX_MODE) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nGLTFTab._Initialize();\r\n","\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class GUIAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    constructor(obj: any) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        (this._obj).isVisible = b;\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return (this._obj).isVisible;\r\n    }\r\n}\r\n","import { GUIAdapter } from \"../adapters/GUIAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class GUITab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'GUI', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr: Array<TreeItem> = [];\r\n\r\n        if (!Inspector.GUIObject) return arr;\r\n\r\n        // Recursive method building the tree panel\r\n        let createNode = (obj: import(\"babylonjs-gui\").Control) => {\r\n            let descendants = (obj as import(\"babylonjs-gui\").Container).children;\r\n\r\n            if (descendants && descendants.length > 0) {\r\n                let node = new TreeItem(this, new GUIAdapter(obj));\r\n                for (let child of descendants) {\r\n                    let n = createNode(child);\r\n                    node.add(n);\r\n                }\r\n                node.update();\r\n                return node;\r\n            } else {\r\n                return new TreeItem(this, new GUIAdapter(obj));\r\n            }\r\n        };\r\n\r\n        // get all textures from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let tex of instances.textures) {\r\n            //only get GUI's textures\r\n            if (tex instanceof Inspector.GUIObject.AdvancedDynamicTexture) {\r\n                let node = createNode((<import(\"babylonjs-gui\").AdvancedDynamicTexture>tex)._rootContainer);\r\n                arr.push(node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nexport class LightAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    constructor(obj: BABYLON.Light) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._obj.setEnabled(b);\r\n    }\r\n    public isVisible(): boolean {\r\n        return this._obj.isEnabled();\r\n    }\r\n\r\n    /** Returns some information about this mesh */\r\n    // public getInfo() : string {\r\n    //     return `${(this._obj as BABYLON.AbstractMesh).getTotalVertices()} vertices`;\r\n    // }\r\n}","import { LightAdapter } from \"../adapters/LightAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class LightTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Light', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all lights from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let light of instances.lights) {\r\n            arr.push(new TreeItem(this, new LightAdapter(light)));\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { Material } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nexport class MaterialAdapter\r\n    extends Adapter {\r\n\r\n    constructor(obj: Material) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    /** No tools for a material adapter */\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        return [];\r\n    }\r\n}","import { MaterialAdapter } from \"../adapters/MaterialAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class MaterialTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Material', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all meshes from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let mat of instances.materials) {\r\n            arr.push(new TreeItem(this, new MaterialAdapter(mat)))\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { Node, TransformNode } from \"babylonjs\";\r\nimport { MeshAdapter } from \"../adapters/MeshAdapter\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class MeshTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Mesh', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n        // Tab containing mesh already in results\r\n        let alreadyIn = new Array<Node>();\r\n\r\n        // Recursive method building the tree panel\r\n        let createNode = (obj: Node) => {\r\n            let descendants = obj.getDescendants(true);\r\n\r\n            let node = new TreeItem(this, new MeshAdapter(obj));\r\n\r\n            if (descendants.length > 0) {\r\n                for (let child of descendants) {\r\n                    if (child instanceof TransformNode) {\r\n                        if (!Helpers.IsSystemName(child.name)) {\r\n                            let n = createNode(child);\r\n                            node.add(n);\r\n                        }\r\n                    }\r\n                }\r\n                node.update();\r\n            }\r\n\r\n            // Retrieve the root node if the mesh is actually child of another mesh\r\n            // This can hapen if the child mesh has been created before the parent mesh\r\n            if (obj.parent != null && alreadyIn.indexOf(obj) != -1) {\r\n                let i: number = 0;\r\n                let notFound: boolean = true;\r\n                // Find and delete the root node standing for this mesh\r\n                while (i < arr.length && notFound) {\r\n                    if (obj.name === arr[i].id) {\r\n                        arr.splice(i, 1);\r\n                        notFound = false;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            alreadyIn.push(obj);\r\n            return node;\r\n        };\r\n\r\n        // get all meshes from the first scene\r\n        let instances = this._inspector.scene;\r\n\r\n        // Find top of hierarchy for meshes...\r\n        let meshWithoutAnyParent: Array<Node> = [];\r\n        for (let mesh of instances.meshes) {\r\n            // Not already in the array, not system name and no parent\r\n            if (meshWithoutAnyParent.indexOf(mesh) == -1 && !Helpers.IsSystemName(mesh.name) && !mesh.parent) {\r\n                meshWithoutAnyParent.push(mesh);\r\n            }\r\n        }\r\n        // ... and for transforms\r\n        for (let tn of instances.transformNodes) {\r\n            // Not already in the array, not system name and no parent\r\n            if (meshWithoutAnyParent.indexOf(tn) == -1 && !Helpers.IsSystemName(tn.name) && !tn.parent) {\r\n                meshWithoutAnyParent.push(tn);\r\n            }\r\n        }\r\n\r\n        for (let mesh of meshWithoutAnyParent) {\r\n            if (alreadyIn.indexOf(mesh) == -1 && !Helpers.IsSystemName(mesh.name)) {\r\n                let node = createNode(mesh);\r\n                arr.push(node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { AbstractMesh, PhysicsImpostor } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class PhysicsImpostorAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    private _viewer: any;\r\n    private _isVisible = false;\r\n\r\n    constructor(obj: PhysicsImpostor, viewer: any) {\r\n        super(obj);\r\n        this._viewer = viewer;\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        let physicsImposter = (<PhysicsImpostor>this._obj);\r\n        if (physicsImposter && physicsImposter.object) {\r\n            str = (<AbstractMesh>physicsImposter.object).name || \"\";\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._isVisible = b;\r\n        if (b) {\r\n            this._viewer.showImpostor(this._obj);\r\n        } else {\r\n            this._viewer.hideImpostor(this._obj);\r\n        }\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n}\r\n","import { Debug } from \"babylonjs\";\r\nimport { PhysicsImpostorAdapter } from \"../adapters/PhysicsImpostorAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class PhysicsTab extends PropertyTab {\r\n\r\n    public viewer: any;\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Physics', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n\r\n        let scene = this._inspector.scene;\r\n\r\n        if (!scene.isPhysicsEnabled()) {\r\n            return arr;\r\n        }\r\n\r\n        if (!this.viewer) {\r\n            this.viewer = new Debug.PhysicsViewer(scene);\r\n        }\r\n\r\n        for (let mesh of scene.meshes) {\r\n            if (mesh.physicsImpostor) {\r\n                arr.push(new TreeItem(this, new PhysicsImpostorAdapter(mesh.physicsImpostor, this.viewer)));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}","import { Debug, StandardMaterial } from \"babylonjs\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nexport class SceneTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n    /** The list of  channels/options that can be activated/deactivated */\r\n    private _actions: HTMLDivElement;\r\n\r\n    /** The list of skeleton viewer */\r\n    private _skeletonViewers: Array<any> = [];\r\n\r\n    /** The detail of the scene */\r\n    private _detailsPanel: DetailPanel;\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Scene');\r\n        this._inspector = insp;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n\r\n        this._actions = Helpers.CreateDiv('scene-actions', this._panel, '') as HTMLDivElement;\r\n\r\n        this._detailsPanel = new DetailPanel();\r\n        this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n        // build propertiesline\r\n        let details = [];\r\n        // Remove deprecated properties generating warning in console\r\n        let dontTakeThis = ['interFramePerfCounter', 'lastFramePerfCounter', 'evaluateActiveMeshesDurationPerfCounter', 'renderDurationPerfCounter', 'particlesDurationPerfCounter', 'spriteDuractionPerfCounter'];\r\n        let props = Helpers.GetAllLinesPropertiesAsString(this._inspector.scene, dontTakeThis);\r\n\r\n        for (let propString of props) {\r\n            let prop = new PropertyLine(new Property(propString, this._inspector.scene));\r\n            details.push(prop);\r\n        }\r\n        this._detailsPanel.details = details;\r\n\r\n        Split([this._actions, this._detailsPanel.toHtml()], {\r\n            blockDrag: this._inspector.popupMode,\r\n            sizes: [50, 50],\r\n            direction: 'vertical'\r\n        });\r\n\r\n        // Build actions\r\n        {\r\n\r\n            // --------------------- Rendering mode ---------------------\r\n\r\n            let title = Helpers.CreateDiv('actions-title', this._actions, 'Choose the way of rendering the scene.');\r\n            title.textContent = 'Rendering mode';\r\n            let point = Helpers.CreateDiv('action-radio', this._actions, 'Force scene rendering to points cloud : scene.forcePointsCloud');\r\n            point.textContent = 'Point';\r\n            let wireframe = Helpers.CreateDiv('action-radio', this._actions, 'Force scene rendering to wireframe : scene.forceWireframe');\r\n            wireframe.textContent = 'Wireframe';\r\n            let solid = Helpers.CreateDiv('action-radio', this._actions, 'Force scene rendering to solid.');\r\n            solid.textContent = 'Solid';\r\n\r\n            if (this._inspector.scene.forcePointsCloud) {\r\n                point.classList.add('active');\r\n            } else if (this._inspector.scene.forceWireframe) {\r\n                wireframe.classList.add('active');\r\n            } else {\r\n                solid.classList.add('active');\r\n            }\r\n            this._generateRadioAction([point, wireframe, solid]);\r\n            point.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = true; this._inspector.scene.forceWireframe = false; });\r\n            wireframe.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = false; this._inspector.scene.forceWireframe = true; });\r\n            solid.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = false; this._inspector.scene.forceWireframe = false; });\r\n\r\n            // --------------------- Textures ---------------------\r\n\r\n            title = Helpers.CreateDiv('actions-title', this._actions, 'Choose which textures channels to display or not on materials. (Check to display)');\r\n            title.textContent = 'Textures channels';\r\n            this._generateActionLine('Diffuse Texture', StandardMaterial.DiffuseTextureEnabled, (b: boolean) => { StandardMaterial.DiffuseTextureEnabled = b }, 'StandardMaterial.DiffuseTextureEnabled');\r\n            this._generateActionLine('Ambient Texture', StandardMaterial.AmbientTextureEnabled, (b: boolean) => { StandardMaterial.AmbientTextureEnabled = b }, 'StandardMaterial.AmbientTextureEnabled');\r\n            this._generateActionLine('Specular Texture', StandardMaterial.SpecularTextureEnabled, (b: boolean) => { StandardMaterial.SpecularTextureEnabled = b }, 'StandardMaterial.SpecularTextureEnabled');\r\n            this._generateActionLine('Emissive Texture', StandardMaterial.EmissiveTextureEnabled, (b: boolean) => { StandardMaterial.EmissiveTextureEnabled = b }, 'StandardMaterial.EmissiveTextureEnabled');\r\n            this._generateActionLine('Bump Texture', StandardMaterial.BumpTextureEnabled, (b: boolean) => { StandardMaterial.BumpTextureEnabled = b }, 'StandardMaterial.BumpTextureEnabled');\r\n            this._generateActionLine('Opacity Texture', StandardMaterial.OpacityTextureEnabled, (b: boolean) => { StandardMaterial.OpacityTextureEnabled = b }, 'StandardMaterial.OpacityTextureEnabled');\r\n            this._generateActionLine('Reflection Texture', StandardMaterial.ReflectionTextureEnabled, (b: boolean) => { StandardMaterial.ReflectionTextureEnabled = b }, 'StandardMaterial.ReflectionTextureEnabled');\r\n            this._generateActionLine('Refraction Texture', StandardMaterial.RefractionTextureEnabled, (b: boolean) => { StandardMaterial.RefractionTextureEnabled = b }, 'StandardMaterial.RefractionTextureEnabled');\r\n            this._generateActionLine('ColorGrading', StandardMaterial.ColorGradingTextureEnabled, (b: boolean) => { StandardMaterial.ColorGradingTextureEnabled = b }, 'StandardMaterial.ColorGradingTextureEnabled');\r\n            this._generateActionLine('Lightmap Texture', StandardMaterial.LightmapTextureEnabled, (b: boolean) => { StandardMaterial.LightmapTextureEnabled = b }, 'StandardMaterial.LightmapTextureEnabled');\r\n            this._generateActionLine('Fresnel', StandardMaterial.FresnelEnabled, (b: boolean) => { StandardMaterial.FresnelEnabled = b }, 'StandardMaterial.FresnelEnabled');\r\n\r\n            // --------------------- Options ---------------------\r\n\r\n            title = Helpers.CreateDiv('actions-title', this._actions, 'Choose which options to enable / disable on the scene. (Uncheck to disable).');\r\n            title.textContent = 'Options';\r\n            this._generateActionLine('Animations', this._inspector.scene.animationsEnabled, (b: boolean) => { this._inspector.scene.animationsEnabled = b }, 'scene.animationsEnabled');\r\n            this._generateActionLine('Collisions', this._inspector.scene.collisionsEnabled, (b: boolean) => { this._inspector.scene.collisionsEnabled = b }, 'scene.collisionsEnabled');\r\n            this._generateActionLine('Fog', this._inspector.scene.fogEnabled, (b: boolean) => { this._inspector.scene.fogEnabled = b }, 'scene.fogEnabled(boolean)');\r\n            this._generateActionLine('Lens flares', this._inspector.scene.lensFlaresEnabled, (b: boolean) => { this._inspector.scene.lensFlaresEnabled = b }, 'scene.lensFlaresEnabled');\r\n            this._generateActionLine('Lights', this._inspector.scene.lightsEnabled, (b: boolean) => { this._inspector.scene.lightsEnabled = b }, 'scene.lightsEnabled');\r\n            this._generateActionLine('Particles', this._inspector.scene.particlesEnabled, (b: boolean) => { this._inspector.scene.particlesEnabled = b }, 'scene.particlesEnabled');\r\n            this._generateActionLine('Post-processes', this._inspector.scene.postProcessesEnabled, (b: boolean) => { this._inspector.scene.postProcessesEnabled = b }, 'scene.postProcessesEnabled');\r\n            this._generateActionLine('Probes', this._inspector.scene.probesEnabled, (b: boolean) => { this._inspector.scene.probesEnabled = b }, 'scene.probesEnabled');\r\n            this._generateActionLine('Procedural textures', this._inspector.scene.proceduralTexturesEnabled, (b: boolean) => { this._inspector.scene.proceduralTexturesEnabled = b }, 'scene.proceduralTexturesEnabled');\r\n            this._generateActionLine('Render targets', this._inspector.scene.renderTargetsEnabled, (b: boolean) => { this._inspector.scene.renderTargetsEnabled = b }, 'scene.renderTargetsEnabled');\r\n            this._generateActionLine('Shadows', this._inspector.scene.shadowsEnabled, (b: boolean) => { this._inspector.scene.shadowsEnabled = b }, 'scene.shadowsEnabled');\r\n            this._generateActionLine('Skeletons', this._inspector.scene.skeletonsEnabled, (b: boolean) => { this._inspector.scene.skeletonsEnabled = b }, 'scene.skeletonsEnabled');\r\n            this._generateActionLine('Sprites', this._inspector.scene.spritesEnabled, (b: boolean) => { this._inspector.scene.spritesEnabled = b }, 'scene.spritesEnabled');\r\n            this._generateActionLine('Textures', this._inspector.scene.texturesEnabled, (b: boolean) => { this._inspector.scene.texturesEnabled = b }, 'scene.texturesEnabled');\r\n\r\n            // --------------------- Audio ---------------------\r\n\r\n            title = Helpers.CreateDiv('actions-title', this._actions, 'Choose which audio rendering should be used.');\r\n            title.textContent = 'Audio';\r\n            let headphones = Helpers.CreateDiv('action-radio', this._actions, 'Use Headphones mode.');\r\n            headphones.textContent = 'Headphones';\r\n            let normalSpeaker = Helpers.CreateDiv('action-radio', this._actions, 'Use Normal speakers mode.');\r\n            normalSpeaker.textContent = 'Normal speakers';\r\n            this._generateActionLine('Disable audio', !this._inspector.scene.audioEnabled, (b: boolean) => { this._inspector.scene.audioEnabled = !b }, 'Disable audio on the scene.');\r\n            \r\n            this._generateRadioAction([headphones, normalSpeaker]);\r\n            if (this._inspector.scene.headphone) {\r\n                headphones.classList.add('active');\r\n            } else {\r\n                normalSpeaker.classList.add('active');\r\n            }\r\n            headphones.addEventListener('click', () => { this._inspector.scene.headphone = true; });\r\n            normalSpeaker.addEventListener('click', () => { this._inspector.scene.headphone = false; });\r\n\r\n            // --------------------- Viewer ---------------------\r\n\r\n            title = Helpers.CreateDiv('actions-title', this._actions, 'Viewer');\r\n            title.textContent = 'Viewer';\r\n            this._generateActionLine('Skeletons', false, (b: boolean) => {\r\n                if (b) {\r\n                    for (var index = 0; index < this._inspector.scene.meshes.length; index++) {\r\n                        var mesh = this._inspector.scene.meshes[index];\r\n                        if (mesh.skeleton) {\r\n                            var found = false;\r\n                            for (var sIndex = 0; sIndex < this._skeletonViewers.length; sIndex++) {\r\n                                if (this._skeletonViewers[sIndex].skeleton === mesh.skeleton) {\r\n                                    found = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (found) {\r\n                                continue;\r\n                            }\r\n                            var viewer = new Debug.SkeletonViewer(mesh.skeleton, mesh, this._inspector.scene);\r\n                            viewer.isEnabled = true;\r\n                            this._skeletonViewers.push(viewer);\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (var index = 0; index < this._skeletonViewers.length; index++) {\r\n                        this._skeletonViewers[index].dispose();\r\n                    }\r\n                    this._skeletonViewers = [];\r\n                }\r\n            }, 'Enable to see Skeletons on the scene : Debug.SkeletonViewer');\r\n        }\r\n    }\r\n\r\n    /** Overrides super.dispose */\r\n    public dispose() {\r\n        this._detailsPanel.dispose();\r\n    }\r\n\r\n    /** generates a div which correspond to an option that can be activated/deactivated */\r\n    private _generateActionLine(name: string, initValue: boolean, action: (b: boolean) => void, tooltip?: string) {\r\n        let div = Helpers.CreateDiv('scene-actions', this._actions, tooltip);\r\n        div.textContent = name;\r\n        div.classList.add('action');\r\n        if (initValue) {\r\n            div.classList.add('active');\r\n        }\r\n        div.addEventListener('click', (e) => {\r\n            div.classList.toggle('active');\r\n            let isActivated = div.classList.contains('active');\r\n            action(isActivated);\r\n        })\r\n    }\r\n\r\n    /** \r\n     * Add a click action for all given elements : \r\n     * the clicked element is set as active, all others elements are deactivated\r\n     */\r\n    private _generateRadioAction(arr: Array<HTMLElement>) {\r\n        let active = (elem: HTMLElement, evt: any) => {\r\n            for (let e of arr) {\r\n                e.classList.remove('active');\r\n            }\r\n            elem.classList.add('active');\r\n        }\r\n        for (let elem of arr) {\r\n            elem.addEventListener('click', active.bind(this, elem));\r\n        }\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n\r\nexport interface ISoundInteractions {\r\n    setPlaying: (callback: Function) => void;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class SoundInteractions extends AbstractTreeTool {\r\n    private playSound: ISoundInteractions;\r\n\r\n    constructor(playSound: ISoundInteractions) {\r\n        super();\r\n        this.playSound = playSound;\r\n        this._elem.classList.add('fa-play');\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        this._playSound();\r\n    }\r\n\r\n    private _playSound() {\r\n\r\n        if (this._elem.classList.contains('fa-play')) {\r\n            this._elem.classList.remove('fa-play');\r\n            this._elem.classList.add('fa-pause');\r\n        }\r\n        else {\r\n            this._elem.classList.remove('fa-pause');\r\n            this._elem.classList.add('fa-play');\r\n        }\r\n        this.playSound.setPlaying(() => {\r\n            this._elem.classList.remove('fa-pause');\r\n            this._elem.classList.add('fa-play');\r\n        });\r\n    }\r\n}\r\n","import { Sound } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { ISoundInteractions, SoundInteractions } from \"../treetools/SoundInteractions\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class SoundAdapter\r\n    extends Adapter\r\n    implements ISoundInteractions {\r\n\r\n    constructor(obj: Sound) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new SoundInteractions(this));\r\n        return tools;\r\n    }\r\n\r\n\r\n    public setPlaying(callback: Function) {\r\n        if ((this._obj as Sound).isPlaying) {\r\n            (this._obj as Sound).pause();\r\n        }\r\n        else {\r\n            (this._obj as Sound).play();\r\n        }\r\n        (this._obj as Sound).onEndedObservable.addOnce(() => { \r\n            callback(); \r\n        });\r\n    }\r\n}\r\n","import { SoundAdapter } from \"../adapters/SoundAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class SoundTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Audio', inspector);\r\n    }\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        if (instances.soundTracks) {\r\n            for (let sounds of instances.soundTracks) {\r\n                let sound = sounds.soundCollection;\r\n                sound.forEach(element => {\r\n                    arr.push(new TreeItem(this, new SoundAdapter(element)));\r\n                });\r\n\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n","import { Engine, EngineInstrumentation, Nullable, Scene, SceneInstrumentation, Tools } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class StatsTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n\r\n    /** \r\n     * Properties in this array will be updated\r\n     * in a render loop - Mostly stats properties\r\n     */\r\n    private _updatableProperties: Array<{ elem: HTMLElement, updateFct: () => string }> = [];\r\n\r\n    private _scene: Scene;\r\n    private _engine: Engine;\r\n    private _glInfo: any;\r\n\r\n    private _updateLoopHandler: any;\r\n    private _refreshRateCounter: any;\r\n    private refreshRate: any;\r\n\r\n    private _sceneInstrumentation: Nullable<SceneInstrumentation>;\r\n    private _engineInstrumentation: Nullable<EngineInstrumentation>;\r\n\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    private _connectToInstrumentation() {\r\n        if (this._sceneInstrumentation) {\r\n            return;\r\n        }\r\n\r\n        this._sceneInstrumentation = new SceneInstrumentation(this._scene);\r\n        this._sceneInstrumentation.captureActiveMeshesEvaluationTime = true;\r\n        this._sceneInstrumentation.captureRenderTargetsRenderTime = true;\r\n        this._sceneInstrumentation.captureFrameTime = true;\r\n        this._sceneInstrumentation.captureRenderTime = true;\r\n        this._sceneInstrumentation.captureInterFrameTime = true;\r\n        this._sceneInstrumentation.captureParticlesRenderTime = true;\r\n        this._sceneInstrumentation.captureSpritesRenderTime = true;\r\n        this._sceneInstrumentation.capturePhysicsTime = true;\r\n        this._sceneInstrumentation.captureAnimationsTime = true;\r\n\r\n        this._engineInstrumentation = new EngineInstrumentation(this._engine);\r\n        this._engineInstrumentation.captureGPUFrameTime = true;\r\n    }\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Stats');\r\n\r\n        this._inspector = insp;\r\n\r\n        this._scene = this._inspector.scene;\r\n        this._engine = this._scene.getEngine();\r\n        this._glInfo = this._engine.getGlInfo();\r\n\r\n        this._connectToInstrumentation();\r\n\r\n        // Build the stats panel: a div that will contains all stats\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add(\"stats-panel\")\r\n\r\n        let title = Helpers.CreateDiv('stat-title1', this._panel);\r\n        let fpsSpan = Helpers.CreateElement('span', 'stats-fps');\r\n        this._updatableProperties.push({\r\n            elem: fpsSpan,\r\n            updateFct: () => { return Tools.Format(this._inspector.scene.getEngine().getFps(), 0) + \" fps\" }\r\n        });\r\n\r\n        let versionSpan = Helpers.CreateElement('span');\r\n        versionSpan.textContent = `js v${Engine.Version} - `;\r\n        title.appendChild(versionSpan);\r\n        title.appendChild(fpsSpan);\r\n\r\n        this._updateLoopHandler = this._update.bind(this);\r\n        this._refreshRateCounter = 0;\r\n        this.refreshRate = 4;\r\n\r\n        // Count block\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Count\";\r\n        {\r\n            this._createStatLabel(\"Total meshes\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.meshes.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Draw calls\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._sceneInstrumentation!.drawCallsCounter.current.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Texture collisions\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._sceneInstrumentation!.textureCollisionsCounter.current.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total lights\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.lights.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total vertices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getTotalVertices().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total materials\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.materials.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total textures\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.textures.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active meshes\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveMeshes().length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active indices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveIndices().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active bones\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveBones().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active particles\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveParticles().toString() }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Duration\";\r\n        {\r\n            this._createStatLabel(\"Properties refresh rate (per second)\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n            this._inputElement.value = this.refreshRate;\r\n            elemValue.appendChild(this._inputElement);\r\n            this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n                this.refreshRate = this._inputElement.value;\r\n            })\r\n            this._createStatLabel(\"Meshes selection\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.activeMeshesEvaluationTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Render targets\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.renderTargetsRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Particles\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.particlesRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Sprites\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.spritesRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Animations\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.animationsTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Physics\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.physicsTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Render\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.renderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Frame\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.frameTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Inter-frame\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.interFrameTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"GPU Frame time\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._engineInstrumentation!.gpuFrameTimeCounter.current * 0.000001) }\r\n            });\r\n            this._createStatLabel(\"GPU Frame time (average)\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._engineInstrumentation!.gpuFrameTimeCounter.average * 0.000001) }\r\n            });\r\n            this._createStatLabel(\"Potential FPS\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(1000.0 / this._sceneInstrumentation!.frameTimeCounter.current, 0) }\r\n            });\r\n            this._createStatLabel(\"Resolution\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getRenderWidth() + \"x\" + this._engine.getRenderHeight() }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Extensions\";\r\n        {\r\n            this._createStatLabel(\"Std derivatives\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().standardDerivatives ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Compressed textures\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().s3tc ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Hardware instances\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().instancedArrays ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Texture float\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().textureFloat ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"32bits indices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().uintIndices ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Fragment depth\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().fragmentDepthSupported ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"High precision shaders\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().highPrecisionShaderSupported ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Draw buffers\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().drawBuffersExtension ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Vertex array object\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().vertexArrayObject ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Timer query\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().timerQuery ? \"Yes\" : \"No\") }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Caps.\";\r\n        {\r\n            this._createStatLabel(\"Stencil\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.isStencilEnable ? \"Enabled\" : \"Disabled\") }\r\n            });\r\n            this._createStatLabel(\"Max textures units\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxTexturesImageUnits.toString() }\r\n            });\r\n            this._createStatLabel(\"Max textures size\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxTextureSize.toString() }\r\n            });\r\n            this._createStatLabel(\"Max anisotropy\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxAnisotropy.toString() }\r\n            });\r\n        }\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Info\";\r\n        {\r\n            let elemValue = Helpers.CreateDiv('stat-infos', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return \"WebGL v\" + this._engine.webGLVersion + \" - \" + this._glInfo.version + \" - \" + this._glInfo.renderer }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _createStatLabel(content: string, parent: HTMLElement): HTMLElement {\r\n        let elem = Helpers.CreateDiv('stat-label', parent);\r\n        elem.textContent = content;\r\n        return elem;\r\n    }\r\n\r\n    /** Update each properties of the stats panel */\r\n    private _update() {\r\n\r\n        if (this._refreshRateCounter > 1) {\r\n            this._refreshRateCounter--;\r\n        } else {\r\n            for (let prop of this._updatableProperties) {\r\n                prop.elem.textContent = prop.updateFct();\r\n            }\r\n            if (this._inspector.scene.getEngine().getFps() / this.refreshRate == Infinity) {\r\n                this._refreshRateCounter = 1;\r\n            } else {\r\n                this._refreshRateCounter = this._inspector.scene.getEngine().getFps() / this.refreshRate;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public dispose() {\r\n        this._scene.unregisterAfterRender(this._updateLoopHandler);\r\n        this._sceneInstrumentation!.dispose();\r\n        this._sceneInstrumentation = null;\r\n        this._engineInstrumentation!.dispose();\r\n        this._engineInstrumentation = null;\r\n    }\r\n\r\n    public active(b: boolean) {\r\n        super.active(b);\r\n        if (b) {\r\n            this._connectToInstrumentation();\r\n            this._scene.registerAfterRender(this._updateLoopHandler);\r\n        }\r\n    }\r\n}\r\n","import { Adapter } from \"./Adapter\";\r\nimport { BaseTexture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\n\r\nexport class TextureAdapter\r\n    extends Adapter {\r\n\r\n    constructor(obj: BaseTexture) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        // Not used in this tab\r\n        return [];\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = new Array<AbstractTreeTool>();\r\n        // tools.push(new CameraPOV(this));\r\n        return tools;\r\n    }\r\n\r\n}\r\n","import { CubeTexture, RenderTargetTexture, Tools, Vector3 } from \"babylonjs\";\r\nimport { TextureAdapter } from \"../adapters/TextureAdapter\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nexport class TextureTab extends Tab {\r\n\r\n    static DDSPreview: DDSPreview;\r\n\r\n    private _inspector: Inspector;\r\n    /** The panel containing a list of items */\r\n    protected _treePanel: HTMLElement;\r\n    protected _treeItems: Array<TreeItem> = [];\r\n\r\n    /* Panel containing the texture image */\r\n    private _imagePanel: HTMLElement;\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Textures');\r\n        this._inspector = inspector;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n\r\n        // Build the treepanel\r\n        this._treePanel = Helpers.CreateDiv('insp-tree', this._panel);\r\n\r\n        this._imagePanel = Helpers.CreateDiv('insp-details', this._panel) as HTMLDivElement;\r\n\r\n        Split([this._treePanel, this._imagePanel], {\r\n            blockDrag: this._inspector.popupMode,\r\n            direction: 'vertical'\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    public dispose() {\r\n        TextureTab.DDSPreview.dispose();\r\n    }\r\n\r\n    public update(_items?: Array<TreeItem>) {\r\n        let items;\r\n        if (_items) {\r\n            items = _items;\r\n        } else {\r\n            // Rebuild the tree\r\n            this._treeItems = this._getTree();\r\n            items = this._treeItems;\r\n        }\r\n        // Clean the tree\r\n        Helpers.CleanDiv(this._treePanel);\r\n        Helpers.CleanDiv(this._imagePanel);\r\n\r\n        // Sort items alphabetically\r\n        items.sort((item1, item2) => {\r\n            return item1.compareTo(item2);\r\n        });\r\n\r\n        // Display items\r\n        for (let item of items) {\r\n            this._treePanel.appendChild(item.toHtml());\r\n        }\r\n    }\r\n\r\n    /* Overrides super */\r\n    private _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let tex of instances.textures) {\r\n            arr.push(new TreeItem(this, new TextureAdapter(tex)));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /** Display the details of the given item */\r\n    public displayDetails(item: TreeItem) {\r\n        // Remove active state on all items\r\n        this.activateNode(item);\r\n        Helpers.CleanDiv(this._imagePanel);\r\n        // Get the texture object\r\n        let texture = item.adapter.object;\r\n        let imageExtension = item.adapter.object.name.split('.').pop();\r\n        //In case the texture is a standard image format\r\n        if (imageExtension == \"png\" || imageExtension == \"jpg\" || imageExtension == \"gif\" || imageExtension == \"svg\") {\r\n\r\n            let img = Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement;\r\n\r\n            img.style.width = this._imagePanel.style.width;\r\n\r\n            img.style.height = \"auto\";\r\n\r\n            img.src = (<BABYLON.Texture>texture).name;\r\n\r\n        } else if (imageExtension == \"dds\") {\r\n            //In case the texture is a dds format\r\n\r\n            if (TextureTab.DDSPreview != null && TextureTab.DDSPreview.canvas != null) {\r\n                this._imagePanel.appendChild(<Node>TextureTab.DDSPreview.canvas);\r\n                TextureTab.DDSPreview.insertPreview(item.adapter);\r\n            }\r\n            else {\r\n                //Create a canvas to load BJS if it don't exists\r\n                let previewCanvas = Helpers.CreateElement('canvas', '', this._imagePanel);\r\n                previewCanvas.style.outline = \"none\";\r\n                previewCanvas.style.webkitTapHighlightColor = \"rgba(255,255,255,0)\";\r\n                previewCanvas.id = \"babylonjs-inspector-textures-preview\";\r\n\r\n                TextureTab.DDSPreview = new DDSPreview(item.adapter);\r\n            }\r\n        }\r\n        else {\r\n            let imgs: HTMLImageElement[] = [];\r\n            let img = Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement;\r\n            imgs.push(img);\r\n            //Create five other images elements\r\n            for (let i = 0; i < 5; i++) {\r\n                imgs.push(Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement);\r\n            }\r\n\r\n            if (texture instanceof RenderTargetTexture) {\r\n                // RenderTarget textures\r\n                let scene = this._inspector.scene;\r\n                let engine = scene.getEngine();\r\n                let size = texture.getSize();\r\n\r\n                // Clone the texture\r\n                let screenShotTexture = texture.clone();\r\n                screenShotTexture.activeCamera = texture.activeCamera;\r\n                screenShotTexture.onBeforeRender = texture.onBeforeRender;\r\n                screenShotTexture.onAfterRender = texture.onAfterRender;\r\n                screenShotTexture.onBeforeRenderObservable = texture.onBeforeRenderObservable;\r\n\r\n                // To display the texture after rendering\r\n                screenShotTexture.onAfterRenderObservable.add((faceIndex: number) => {\r\n                    Tools.DumpFramebuffer(size.width, size.height, engine,\r\n                        (data) => imgs[faceIndex].src = data);\r\n                });\r\n\r\n                // Render the texture\r\n                scene.incrementRenderId();\r\n                scene.resetCachedMaterial();\r\n                screenShotTexture.render();\r\n                screenShotTexture.dispose();\r\n            } else if (texture instanceof CubeTexture) {\r\n                // Cannot open correctly DDS File\r\n                // Display all textures of the CubeTexture\r\n                let pixels = <ArrayBufferView>texture.readPixels();\r\n                let canvas = document.createElement('canvas');\r\n                canvas.id = \"MyCanvas\";\r\n\r\n                if (img.parentElement) {\r\n                    img.parentElement.appendChild(canvas);\r\n                }\r\n                let ctx = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n                let size = texture.getSize();\r\n\r\n                let tmp = pixels.buffer.slice(0, size.height * size.width * 4);\r\n                let u = new Uint8ClampedArray(tmp)\r\n\r\n                let colors = new ImageData(size.width * 6, size.height);\r\n\r\n                colors.data.set(u);\r\n                let imgData = ctx.createImageData(size.width * 6, size.height);\r\n\r\n                imgData.data.set(u);\r\n\r\n                // let data = imgData.data;\r\n\r\n                // for(let i = 0, len = size.height * size.width; i < len; i++) {\r\n                //     data[i] = pixels[i];\r\n                // }\r\n                ctx.putImageData(imgData, 0, 0);\r\n                // let i: number = 0;\r\n                // for(let filename of (texture as CubeTexture)['_files']){\r\n                //     imgs[i].src = filename;\r\n                //     i++;\r\n                // }\r\n            }\r\n            else if (texture['_canvas']) {\r\n                // Dynamic texture\r\n                let base64Image = texture['_canvas'].toDataURL(\"image/png\");\r\n                img.src = base64Image;\r\n            } else if (texture.url) {\r\n                let pixels = texture.readPixels();\r\n                let canvas = document.createElement('canvas');\r\n                canvas.id = \"MyCanvas\";\r\n\r\n                if (img.parentElement) {\r\n                    img.parentElement.appendChild(canvas);\r\n                }\r\n                let ctx = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n                let size = texture.getSize();\r\n\r\n                let imgData = ctx.createImageData(size.width, size.height);\r\n\r\n                imgData.data.set(pixels);\r\n\r\n                ctx.putImageData(imgData, 0, 0);\r\n                // If an url is present, the texture is an image\r\n                // img.src = texture.url;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // Active the node\r\n        this.activateNode(item);\r\n        // Display its details\r\n        this.displayDetails(item);\r\n    }\r\n\r\n    /** Set the given item as active in the tree */\r\n    public activateNode(item: TreeItem) {\r\n        if (this._treeItems) {\r\n            for (let node of this._treeItems) {\r\n                node.active(false);\r\n            }\r\n        }\r\n        item.active(true);\r\n    }\r\n\r\n}\r\n\r\nclass DDSPreview {\r\n\r\n    public canvas: HTMLCanvasElement | null;\r\n    private _engine: BABYLON.Engine;\r\n    private _scene: BABYLON.Scene;\r\n    private _camera: BABYLON.ArcRotateCamera;\r\n    private _mat: BABYLON.StandardMaterial;\r\n    private _tex: BABYLON.Texture;\r\n    private _cubeTex: BABYLON.CubeTexture;\r\n    private _mesh: BABYLON.Mesh;\r\n\r\n    constructor(AdapterItem: TextureAdapter) {\r\n\r\n        this.canvas = document.getElementById(\"babylonjs-inspector-textures-preview\") as HTMLCanvasElement;\r\n        this._engine = new BABYLON.Engine(this.canvas, true);\r\n\r\n        this._run();\r\n        this.insertPreview(AdapterItem);\r\n    }\r\n\r\n    private _run() {\r\n        this._scene = new BABYLON.Scene(this._engine);\r\n        this._scene.clearColor = new BABYLON.Color4(0.1412, 0.1412, 0.1412, 1);\r\n\r\n        let light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), this._scene);\r\n        light.intensity = 1;\r\n\r\n        this._camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 1.57, 5, Vector3.Zero(), this._scene);\r\n        this._scene.activeCamera = this._camera;\r\n        this._camera.attachControl(this.canvas as HTMLCanvasElement);\r\n\r\n        window.addEventListener(\"resize\", () => {\r\n            this._engine.resize();\r\n        });\r\n\r\n        this._scene.executeWhenReady(() => {\r\n            this._engine.runRenderLoop(() => {\r\n                this._scene.render();\r\n            });\r\n        });\r\n    }\r\n\r\n    public insertPreview(AdapterItem: TextureAdapter) {\r\n        if (this._tex) this._tex.dispose();\r\n        if (this._mat) this._mat.dispose();\r\n        if (this._mesh) this._mesh.dispose();\r\n\r\n        this._mat = new BABYLON.StandardMaterial(\"customMat\", this._scene);\r\n\r\n        if (AdapterItem.type() == \"Texture\") {\r\n            //If the dds is not a cube format render it on a plane\r\n\r\n            var previewMeshPlane = BABYLON.Mesh.CreatePlane(\"previewPlane\", 3, this._scene);\r\n            previewMeshPlane.rotate(new BABYLON.Vector3(1, 0, 0), 3.14);\r\n            previewMeshPlane.rotate(new BABYLON.Vector3(0, 1, 0), -1.57);\r\n            this._mesh = previewMeshPlane;\r\n\r\n            this._tex = new BABYLON.Texture(AdapterItem.object.name, this._scene);\r\n            this._tex.invertZ = true;\r\n            this._tex.uScale = -1;\r\n\r\n            this._mat.diffuseTexture = this._tex;\r\n            this._mat.emissiveTexture = this._tex;\r\n            this._mat.specularTexture = this._tex;\r\n            this._mat.disableLighting = true;\r\n\r\n            previewMeshPlane.material = this._mat;\r\n\r\n        }\r\n        else if (AdapterItem.type() == \"BaseTexture\") {\r\n            //Else if the dds is a cube format render it on a box\r\n\r\n            var previewMeshBox = BABYLON.Mesh.CreateBox(\"previewBox\", 3, this._scene);\r\n            previewMeshBox.rotate(new BABYLON.Vector3(0, 1, 0), -0.5);\r\n            this._mesh = previewMeshBox;\r\n\r\n            this._cubeTex = new BABYLON.CubeTexture(AdapterItem.object.name, this._scene);\r\n            this._mat.reflectionTexture = this._cubeTex;\r\n            (<BABYLON.CubeTexture>this._mat.reflectionTexture).coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n            this._mat.disableLighting = true;\r\n\r\n            previewMeshBox.material = this._mat;\r\n        }\r\n\r\n        this._engine.resize();\r\n    }\r\n\r\n    public dispose() {\r\n        this._engine.dispose();\r\n        this.canvas = null;\r\n    }\r\n}\r\n","import { CubeTexture, Engine, EnvironmentTextureTools, Nullable, Scene, Tools, VideoRecorder } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class ToolsTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n\r\n    private _scene: Scene;\r\n\r\n    private _videoRecorder: Nullable<VideoRecorder> = null;\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Tools');\r\n\r\n        this._inspector = insp;\r\n\r\n        this._scene = this._inspector.scene;\r\n\r\n        // Build the tools panel: a div that will contains all tools\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add(\"tools-panel\")\r\n\r\n        let title = Helpers.CreateDiv('tool-title1', this._panel);\r\n        let versionSpan = Helpers.CreateElement('span');\r\n        versionSpan.textContent = `js v${Engine.Version} - Tools`;\r\n        title.appendChild(versionSpan);\r\n\r\n        // Environment block\r\n        title = Helpers.CreateDiv('tool-title2', this._panel);\r\n        title.textContent = \"Environment Texture (.dds, .env)\";\r\n        {\r\n            let errorElemm = Inspector.DOCUMENT.createElement('div');\r\n            errorElemm.className = \"tool-label-error\";\r\n            errorElemm.style.display = \"none\";\r\n\r\n            let elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n            let inputElement = Inspector.DOCUMENT.createElement('input');\r\n            inputElement.className = \"tool-input\";\r\n            inputElement.type = \"file\";\r\n            inputElement.accept = \".dds, .env\";\r\n            inputElement.onchange = (event: any) => {\r\n                var files: File[] = event.target.files;\r\n                let file: Nullable<File> = null;\r\n                if (files && files.length) {\r\n                    file = files[0];\r\n                }\r\n\r\n                if (!file) {\r\n                    errorElemm.style.display = \"block\";\r\n                    errorElemm.textContent = \"Please, select a file first.\"\r\n                    return;\r\n                }\r\n\r\n                let isFileDDS = file.name.toLowerCase().indexOf(\".dds\") > 0;\r\n                let isFileEnv = file.name.toLowerCase().indexOf(\".env\") > 0;\r\n                if (!isFileDDS && !isFileEnv) {\r\n                    errorElemm.style.display = \"block\";\r\n                    errorElemm.textContent = \"Please, select a dds or env file.\"\r\n                    return;\r\n                }\r\n\r\n                Tools.ReadFile(file, data => {\r\n                    var blob = new Blob([data], { type: \"octet/stream\" });\r\n                    var url = URL.createObjectURL(blob);\r\n                    if (isFileDDS) {\r\n                        this._scene.environmentTexture = CubeTexture.CreateFromPrefilteredData(url, this._scene, \".dds\");\r\n                        errorElemm.style.display = \"none\";\r\n                    }\r\n                    else {\r\n                        this._scene.environmentTexture = new CubeTexture(url, this._scene,\r\n                            undefined, undefined, undefined,\r\n                            () => {\r\n                                errorElemm.style.display = \"none\";\r\n                            },\r\n                            (message) => {\r\n                                if (message) {\r\n                                    errorElemm.style.display = \"block\";\r\n                                    errorElemm.textContent = message;\r\n                                }\r\n                            },\r\n                            undefined, undefined,\r\n                            \".env\");\r\n                    }\r\n                }, undefined, true);\r\n            };\r\n            elemValue.appendChild(inputElement);\r\n\r\n            if (!this._scene.getEngine().premultipliedAlpha) {\r\n                elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n                inputElement = Inspector.DOCUMENT.createElement('input');\r\n                inputElement.value = \"Compress current texture to .env\";\r\n                inputElement.className = \"tool-input\";\r\n                inputElement.type = \"button\";\r\n                inputElement.onclick = () => {\r\n                    if (!this._scene.environmentTexture) {\r\n                        errorElemm.style.display = \"block\";\r\n                        errorElemm.textContent = \"You must load an environment texture first.\";\r\n                        return;\r\n                    }\r\n                    if (this._scene.activeCamera) {\r\n                        EnvironmentTextureTools.CreateEnvTextureAsync(<CubeTexture>this._scene.environmentTexture)\r\n                            .then((buffer: ArrayBuffer) => {\r\n                                var blob = new Blob([buffer], { type: \"octet/stream\" });\r\n                                Tools.Download(blob, \"environment.env\");\r\n                                errorElemm.style.display = \"none\";\r\n                            })\r\n                            .catch((error: any) => {\r\n                                errorElemm.style.display = \"block\";\r\n                                errorElemm.textContent = error;\r\n                            });\r\n                    }\r\n                    else {\r\n                        errorElemm.style.display = \"block\";\r\n                        errorElemm.textContent = \"An active camera is required.\";\r\n                    }\r\n                };\r\n                elemValue.appendChild(inputElement);\r\n            }\r\n\r\n            this._panel.appendChild(errorElemm);\r\n        }\r\n\r\n        title = Helpers.CreateDiv('tool-title2', this._panel);\r\n        title.textContent = \"Capture\";\r\n        {\r\n            let elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n            let inputElement = Inspector.DOCUMENT.createElement('input');\r\n            inputElement.value = \"Take Screenshot\";\r\n            inputElement.type = \"button\";\r\n            inputElement.className = \"tool-input\";\r\n            inputElement.onclick = () => {\r\n                if (this._scene.activeCamera) {\r\n                    Tools.CreateScreenshot(this._scene.getEngine(), this._scene.activeCamera, { precision: 0.5 });\r\n                }\r\n            };\r\n            elemValue.appendChild(inputElement);\r\n\r\n            if (VideoRecorder && VideoRecorder.IsSupported(this._scene.getEngine())) {\r\n                let videoRecorderElement = Inspector.DOCUMENT.createElement('input');\r\n                videoRecorderElement.value = \"Start Recording Video\";\r\n                videoRecorderElement.type = \"button\";\r\n                videoRecorderElement.className = \"tool-input\";\r\n                videoRecorderElement.onclick = () => {\r\n                    if (!this._videoRecorder) {\r\n                        this._videoRecorder = new VideoRecorder(this._scene.getEngine());\r\n                    }\r\n\r\n                    if (this._videoRecorder!.isRecording) {\r\n                        this._videoRecorder!.stopRecording();\r\n                    }\r\n                    else {\r\n                        videoRecorderElement.value = \"Stop Recording Video\";\r\n                        this._videoRecorder!.startRecording().then(() => {\r\n                            videoRecorderElement.value = \"Start Recording Video\";\r\n                        });\r\n                    }\r\n                };\r\n                elemValue.appendChild(videoRecorderElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        // Nothing to dispose\r\n    }\r\n}\r\n","import { AbstractMesh, Nullable, Engine } from \"babylonjs\";\r\nimport { BasicElement } from \"../gui/BasicElement\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Toolbar } from \"../tools/Toolbar\";\r\nimport { CameraTab } from \"./CameraTab\";\r\nimport { ConsoleTab } from \"./ConsoleTab\";\r\nimport { GLTFTab } from \"./GLTFTab\";\r\nimport { GUITab } from \"./GUITab\";\r\nimport { LightTab } from \"./LightTab\";\r\nimport { MaterialTab } from \"./MaterialTab\";\r\nimport { MeshTab } from \"./MeshTab\";\r\nimport { PhysicsTab } from \"./PhysicsTab\";\r\nimport { SceneTab } from \"./SceneTab\";\r\nimport { SoundTab } from \"./SoundTab\";\r\nimport { StatsTab } from \"./StatsTab\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TextureTab } from \"./TextureTab\";\r\nimport { ToolsTab } from \"./ToolsTab\";\r\n\r\n\r\n/**\r\n * A tab bar will contains each view the inspector can have : Canvas2D, Meshes...\r\n * The default active tab is the first one of the list.\r\n */\r\nexport class TabBar extends BasicElement {\r\n\r\n    // The list of available tabs\r\n    private _tabs: Array<Tab> = [];\r\n    private _inspector: Inspector;\r\n    /** The tab displaying all meshes */\r\n    private _meshTab: MeshTab;\r\n    /** The toolbar */\r\n    private _toolBar: Toolbar;\r\n    /** The icon displayed at the end of the toolbar displaying a combo box of tabs not displayed */\r\n    private _moreTabsIcon: HTMLElement;\r\n    /** The panel displayed when the 'more-tab' icon is selected */\r\n    private _moreTabsPanel: HTMLElement;\r\n    /** The list of tab displayed by clicking on the remainingIcon */\r\n    private _invisibleTabs: Array<Tab> = [];\r\n    /** The list of tabs visible, displayed in the tab bar */\r\n    private _visibleTabs: Array<Tab> = [];\r\n\r\n    constructor(inspector: Inspector, initialTab?: number | string) {\r\n        super();\r\n        this._inspector = inspector;\r\n        this._tabs.push(new SceneTab(this, this._inspector));\r\n        this._tabs.push(new ConsoleTab(this, this._inspector));\r\n        this._tabs.push(new StatsTab(this, this._inspector));\r\n        this._meshTab = new MeshTab(this, this._inspector);\r\n        this._tabs.push(new TextureTab(this, this._inspector));\r\n        this._tabs.push(this._meshTab);\r\n        this._tabs.push(new LightTab(this, this._inspector));\r\n        this._tabs.push(new MaterialTab(this, this._inspector));\r\n        if (GLTFTab.IsSupported) {\r\n            this._tabs.push(new GLTFTab(this, this._inspector));\r\n        }\r\n        if (Inspector.GUIObject) {\r\n            this._tabs.push(new GUITab(this, this._inspector));\r\n        }\r\n        this._tabs.push(new PhysicsTab(this, this._inspector));\r\n        this._tabs.push(new CameraTab(this, this._inspector));\r\n        // Only uses sounds if available.\r\n        if (Engine.audioEngine) {\r\n            this._tabs.push(new SoundTab(this, this._inspector));\r\n        }\r\n        this._tabs.push(new ToolsTab(this, this._inspector));\r\n        this._toolBar = new Toolbar(this._inspector);\r\n\r\n        this._build();\r\n\r\n        if (typeof initialTab === \"string\") {\r\n            initialTab = this.getTabIndex(initialTab);\r\n        } else {\r\n            //Check initialTab is defined and between tabs bounds\r\n            if (!initialTab || initialTab < 0 || initialTab >= this._tabs.length) {\r\n                initialTab = 0;\r\n            }\r\n        }\r\n\r\n        this._tabs[initialTab].active(true);\r\n\r\n        // set all tab as visible\r\n        for (let tab of this._tabs) {\r\n            this._visibleTabs.push(tab);\r\n        }\r\n    }\r\n\r\n    // No update\r\n    public update() { }\r\n\r\n    protected _build() {\r\n        this._div.className = 'tabbar';\r\n\r\n        this._div.appendChild(this._toolBar.toHtml());\r\n        for (let tab of this._tabs) {\r\n            this._div.appendChild(tab.toHtml());\r\n        }\r\n\r\n\r\n        this._moreTabsIcon = Helpers.CreateElement('i', 'fa fa-angle-double-right more-tabs');\r\n\r\n        this._moreTabsPanel = Helpers.CreateDiv('more-tabs-panel');\r\n\r\n        this._moreTabsIcon.addEventListener('click', () => {\r\n            // Hide the 'more-tabs-panel' if already displayed \r\n            if (this._moreTabsPanel.style.display == 'flex') {\r\n                this._moreTabsPanel.style.display = 'none';\r\n            } else {\r\n                // Attach more-tabs-panel if not attached yet\r\n                let topPanel = this._div.parentNode as HTMLElement;\r\n                if (!topPanel.contains(this._moreTabsPanel)) {\r\n                    topPanel.appendChild(this._moreTabsPanel);\r\n                }\r\n                // Clean the 'more-tabs-panel'\r\n                Helpers.CleanDiv(this._moreTabsPanel);\r\n                // Add each invisible tabs to this panel\r\n                for (let tab of this._invisibleTabs) {\r\n                    this._addInvisibleTabToPanel(tab);\r\n                }\r\n                // And display it\r\n                this._moreTabsPanel.style.display = 'flex';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** \r\n     * Add a tab to the 'more-tabs' panel, displayed by clicking on the \r\n     * 'more-tabs' icon\r\n     */\r\n    private _addInvisibleTabToPanel(tab: Tab) {\r\n        let div = Helpers.CreateDiv('invisible-tab', this._moreTabsPanel);\r\n        div.textContent = tab.name;\r\n        div.addEventListener('click', () => {\r\n            this._moreTabsPanel.style.display = 'none';\r\n            this.switchTab(tab);\r\n        });\r\n    }\r\n\r\n    /** Dispose the current tab, set the given tab as active, and refresh the treeview */\r\n    public switchTab(tab: Tab) {\r\n        // Dispose the active tab\r\n        let activeTab = this.getActiveTab();\r\n\r\n        if (activeTab) {\r\n            activeTab.dispose();\r\n        }\r\n\r\n        // Deactivate all tabs\r\n        for (let t of this._tabs) {\r\n            t.active(false);\r\n        }\r\n        // activate the given tab\r\n        tab.active(true);\r\n\r\n        // Refresh the inspector\r\n        this._inspector.refresh();\r\n    }\r\n\r\n    /** Display the mesh tab.\r\n     * If a parameter is given, the given mesh details are displayed\r\n     */\r\n    public switchMeshTab(mesh?: AbstractMesh) {\r\n        this.switchTab(this._meshTab);\r\n        if (mesh) {\r\n            let item = this._meshTab.getItemFor(mesh);\r\n            if (item) {\r\n                this._meshTab.select(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Returns the active tab */\r\n    public getActiveTab(): Nullable<Tab> {\r\n        for (let tab of this._tabs) {\r\n            if (tab.isActive()) {\r\n                return tab;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getActiveTabIndex(): number {\r\n        for (let i = 0; i < this._tabs.length; i++) {\r\n            if (this._tabs[i].isActive()) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public getTabIndex(name: string): number {\r\n        for (let i = 0; i < this._tabs.length; i++) {\r\n            if (this._tabs[i].name === name) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public get inspector(): Inspector {\r\n        return this._inspector;\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of the tabbar, \r\n     * that corresponds to the sum of the width of each visible tab + toolbar width\r\n    */\r\n    public getPixelWidth(): number {\r\n        let sum = 0;\r\n        for (let tab of this._visibleTabs) {\r\n            sum += tab.getPixelWidth();\r\n        }\r\n        sum += this._toolBar.getPixelWidth();\r\n        if (this._div.contains(this._moreTabsIcon)) {\r\n            sum += 30; // $tabbarheight\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    /** Display the remaining icon or not depending on the tabbar width.\r\n     * This function should be called each time the inspector width is updated\r\n     */\r\n    public updateWidth(): void {\r\n        if (!this._div.parentElement) {\r\n            return;\r\n        }\r\n        let parentSize = this._div.parentElement.clientWidth;\r\n        let lastTabWidth = 75;\r\n        let currentSize = this.getPixelWidth();\r\n\r\n        // Check if a tab should be removed : if the tab bar width is greater than\r\n        // its parent width\r\n        while (this._visibleTabs.length > 0 && currentSize > parentSize) {\r\n            // Start by the last element\r\n            let tab = this._visibleTabs.pop();\r\n\r\n            if (!tab) {\r\n                break;\r\n            }\r\n\r\n            // set it invisible\r\n            this._invisibleTabs.push(tab);\r\n            // and removes it from the DOM\r\n            this._div.removeChild(tab.toHtml());\r\n            currentSize = this.getPixelWidth() + lastTabWidth;\r\n        }\r\n\r\n        // Check if a tab can be added to the tab bar : if the tab bar width\r\n        // + 100 (at least 100px is needed to add a tab) is less than its parent width\r\n        if (this._invisibleTabs.length > 0) {\r\n            if (currentSize + lastTabWidth < parentSize) {\r\n                let lastTab = this._invisibleTabs.pop();\r\n\r\n                if (lastTab) {\r\n                    this._div.appendChild(lastTab.toHtml());\r\n                    this._visibleTabs.push(lastTab);\r\n                }\r\n                // Update more-tab icon in last position if needed\r\n                if (this._div.contains(this._moreTabsIcon)) {\r\n                    this._div.removeChild(this._moreTabsIcon);\r\n                }\r\n            }\r\n        }\r\n        if (this._invisibleTabs.length > 0 && !this._div.contains(this._moreTabsIcon)) {\r\n            this._div.appendChild(this._moreTabsIcon);\r\n        }\r\n    }\r\n\r\n}\r\n","import { AbstractMesh, Nullable, Scene, Tools, Observable } from \"babylonjs\";\r\nimport \"../sass/main.scss\";\r\nimport { Helpers } from \"./helpers/Helpers\";\r\nimport { loadGUIProperties } from \"./properties_gui\";\r\nimport { Scheduler } from \"./scheduler/Scheduler\";\r\nimport { TabBar } from \"./tabs/TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nexport class Inspector {\r\n\r\n    private _c2diwrapper: HTMLElement;\r\n    // private _detailsPanel: DetailPanel;\r\n    /** The panel displayed at the top of the inspector */\r\n    private _topPanel: HTMLElement;\r\n    /** The div containing the content of the active tab */\r\n    private _tabPanel: HTMLElement;\r\n    /** The panel containing the list if items */\r\n    // private _treePanel   : HTMLElement;\r\n    private _tabbar: TabBar;\r\n    private _scene: Scene;\r\n    /** The HTML document relative to this inspector (the window or the popup depending on its mode) */\r\n    public static DOCUMENT: HTMLDocument;\r\n    /** The HTML window. In popup mode, it's the popup itself. Otherwise, it's the current tab */\r\n    public static WINDOW: Window;\r\n    /** True if the inspector is built as a popup tab */\r\n    private _popupMode: boolean = false;\r\n    /** The original canvas style, before applying the inspector*/\r\n    private _canvasStyle: any;\r\n\r\n    private _initialTab: number | string;\r\n\r\n    private _parentElement: Nullable<HTMLElement>;\r\n\r\n    public onGUILoaded: Observable<any>;\r\n\r\n    public static GUIObject: any; // should be typeof \"babylonjs-gui\";\r\n\r\n    /** The inspector is created with the given engine.\r\n     * If the parameter 'popup' is false, the inspector is created as a right panel on the main window.\r\n     * If the parameter 'popup' is true, the inspector is created in another popup.\r\n     */\r\n    constructor(scene: Scene, popup?: boolean, initialTab: number | string = 0, parentElement: Nullable<HTMLElement> = null, newColors?: {\r\n        backgroundColor?: string,\r\n        backgroundColorLighter?: string,\r\n        backgroundColorLighter2?: string,\r\n        backgroundColorLighter3?: string,\r\n        color?: string,\r\n        colorTop?: string,\r\n        colorBot?: string\r\n    }) {\r\n\r\n        this.onGUILoaded = new Observable();\r\n\r\n        import(\"babylonjs-gui\").then(GUI => {\r\n            // Load GUI library if not already done\r\n            if (!GUI || (typeof GUI !== \"undefined\" && Object.keys(GUI).indexOf(\"default\") !== -1)) {\r\n                Tools.LoadScript(\"https://preview.babylonjs.com/gui/babylon.gui.min.js\", () => {\r\n                    Inspector.GUIObject = (<any>BABYLON).GUI;\r\n                    this.onGUILoaded.notifyObservers(Inspector.GUIObject);\r\n                    //Load properties of GUI objects now as GUI has to be declared before \r\n                    loadGUIProperties(Inspector.GUIObject);\r\n                }, () => {\r\n                    console.warn('Error : loading \"babylon.gui.min.js\". Please add script https://preview.babylonjs.com/gui/babylon.min.gui.js to the HTML file.');\r\n                });\r\n            }\r\n            else {\r\n                Inspector.GUIObject = GUI;\r\n                this.onGUILoaded.notifyObservers(Inspector.GUIObject);\r\n                //Load properties of GUI objects now as GUI has to be declared before \r\n                loadGUIProperties(Inspector.GUIObject);\r\n            }\r\n        })\r\n        //get Tabbar initialTab\r\n        this._initialTab = initialTab;\r\n\r\n        //get parentElement of our Inspector\r\n        this._parentElement = parentElement;\r\n\r\n        // get canvas parent only if needed.\r\n        this._scene = scene;\r\n\r\n        // Save HTML document and window\r\n        Inspector.DOCUMENT = window.document;\r\n        Inspector.WINDOW = window;\r\n\r\n        // POPUP MODE\r\n        if (popup) {\r\n            // Build the inspector in the given parent\r\n            this.openPopup(true);// set to true in order to NOT dispose the inspector (done in openPopup), as it's not existing yet\r\n        } else {\r\n            // Get canvas and its DOM parent\r\n            let canvas = <HTMLElement>this._scene.getEngine().getRenderingCanvas();\r\n            let canvasParent = canvas.parentElement;\r\n\r\n            // get canvas style                \r\n            let canvasComputedStyle = Inspector.WINDOW.getComputedStyle(canvas);\r\n\r\n            this._canvasStyle = {\r\n                width: Helpers.Css(canvas, 'width'),\r\n                height: Helpers.Css(canvas, 'height'),\r\n\r\n                position: canvasComputedStyle.position,\r\n                top: canvasComputedStyle.top,\r\n                bottom: canvasComputedStyle.bottom,\r\n                left: canvasComputedStyle.left,\r\n                right: canvasComputedStyle.right,\r\n\r\n                padding: canvasComputedStyle.padding,\r\n                paddingBottom: canvasComputedStyle.paddingBottom,\r\n                paddingLeft: canvasComputedStyle.paddingLeft,\r\n                paddingTop: canvasComputedStyle.paddingTop,\r\n                paddingRight: canvasComputedStyle.paddingRight,\r\n\r\n                margin: canvasComputedStyle.margin,\r\n                marginBottom: canvasComputedStyle.marginBottom,\r\n                marginLeft: canvasComputedStyle.marginLeft,\r\n                marginTop: canvasComputedStyle.marginTop,\r\n                marginRight: canvasComputedStyle.marginRight\r\n\r\n            };\r\n\r\n            if (this._parentElement) {\r\n                // Build the inspector wrapper\r\n                this._c2diwrapper = Helpers.CreateDiv('insp-wrapper', this._parentElement);\r\n                this._c2diwrapper.style.width = '100%';\r\n                this._c2diwrapper.style.height = '100%';\r\n                this._c2diwrapper.style.paddingLeft = '5px';\r\n\r\n                // add inspector     \r\n                let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n                inspector.style.width = '100%';\r\n                inspector.style.height = '100%';\r\n                // and build it in the popup  \r\n                this._buildInspector(inspector);\r\n            } else {\r\n                // Create c2di wrapper\r\n                this._c2diwrapper = Helpers.CreateDiv('insp-wrapper');\r\n\r\n                // copy style from canvas to wrapper\r\n                for (let prop in this._canvasStyle) {\r\n                    (<any>this._c2diwrapper.style)[prop] = this._canvasStyle[prop];\r\n                }\r\n\r\n                if (!canvasComputedStyle.width || !canvasComputedStyle.height || !canvasComputedStyle.left) {\r\n                    return;\r\n                }\r\n\r\n                // Convert wrapper size in % (because getComputedStyle returns px only)\r\n                let widthPx = parseFloat(canvasComputedStyle.width.substr(0, canvasComputedStyle.width.length - 2)) || 0;\r\n                let heightPx = parseFloat(canvasComputedStyle.height.substr(0, canvasComputedStyle.height.length - 2)) || 0;\r\n\r\n                // If the canvas position is absolute, restrain the wrapper width to the window width + left positionning\r\n                if (canvasComputedStyle.position === \"absolute\" || canvasComputedStyle.position === \"relative\") {\r\n                    // compute only left as it takes predominance if right is also specified (and it will be for the wrapper)\r\n                    let leftPx = parseFloat(canvasComputedStyle.left.substr(0, canvasComputedStyle.left.length - 2)) || 0;\r\n                    if (widthPx + leftPx >= Inspector.WINDOW.innerWidth) {\r\n                        this._c2diwrapper.style.maxWidth = `${widthPx - leftPx}px`;\r\n                    }\r\n                }\r\n\r\n\r\n                // Check if the parent of the canvas is the body page. If yes, the size ratio is computed\r\n                let parent = this._getRelativeParent(canvas);\r\n\r\n                let parentWidthPx = parent.clientWidth;\r\n                let parentHeightPx = parent.clientHeight;\r\n\r\n                let pWidth = widthPx / parentWidthPx * 100;\r\n                let pheight = heightPx / parentHeightPx * 100;\r\n\r\n                this._c2diwrapper.style.width = pWidth + \"%\";\r\n                this._c2diwrapper.style.height = pheight + \"%\";\r\n\r\n                // reset canvas style\r\n                canvas.style.position = \"static\";\r\n                canvas.style.width = \"100%\";\r\n                canvas.style.height = \"100%\";\r\n                canvas.style.paddingBottom = \"0\";\r\n                canvas.style.paddingLeft = \"0\";\r\n                canvas.style.paddingTop = \"0\";\r\n                canvas.style.paddingRight = \"0\";\r\n\r\n                canvas.style.margin = \"0\";\r\n                canvas.style.marginBottom = \"0\";\r\n                canvas.style.marginLeft = \"0\";\r\n                canvas.style.marginTop = \"0\";\r\n                canvas.style.marginRight = \"0\";\r\n\r\n                // Replace canvas with the wrapper...\r\n                if (canvasParent) {\r\n                    canvasParent.replaceChild(this._c2diwrapper, canvas);\r\n                }\r\n                // ... and add canvas to the wrapper\r\n                this._c2diwrapper.appendChild(canvas);\r\n\r\n                // add inspector\r\n                let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n\r\n                // Add split bar\r\n                if (!this._parentElement) {\r\n                    Split([canvas, inspector], {\r\n                        direction: 'horizontal',\r\n                        sizes: [75, 25],\r\n                        onDrag: () => {\r\n                            Helpers.SEND_EVENT('resize');\r\n                            if (this._tabbar) {\r\n                                this._tabbar.updateWidth()\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Build the inspector\r\n                this._buildInspector(inspector);\r\n            }\r\n            // Send resize event to the window\r\n            Helpers.SEND_EVENT('resize');\r\n            this._tabbar.updateWidth();\r\n        }\r\n\r\n        /*\r\n        * Refresh the inspector if the browser is not edge\r\n        *   Why not ?! Condition commented on 180525\r\n        *   To be tested\r\n        */\r\n        // if (!Helpers.IsBrowserEdge()) {\r\n        this.refresh();\r\n        // }\r\n\r\n        // Check custom css colors\r\n        if (newColors) {\r\n\r\n            let bColor = newColors.backgroundColor || '#242424';\r\n            let bColorl1 = newColors.backgroundColorLighter || '#2c2c2c';\r\n            let bColorl2 = newColors.backgroundColorLighter2 || '#383838';\r\n            let bColorl3 = newColors.backgroundColorLighter3 || '#454545';\r\n\r\n            let color = newColors.color || '#ccc';\r\n            let colorTop = newColors.colorTop || '#f29766';\r\n            let colorBot = newColors.colorBot || '#5db0d7';\r\n\r\n            let styles = Inspector.DOCUMENT.querySelectorAll('style');\r\n            for (let s = 0; s < styles.length; s++) {\r\n                let style = styles[s];\r\n\r\n                if (style.innerHTML.indexOf('insp-wrapper') != -1) {\r\n\r\n                    styles[s].innerHTML = styles[s].innerHTML\r\n                        .replace(/#242424/g, bColor) // background color\r\n                        .replace(/#2c2c2c/g, bColorl1) // background-lighter\r\n                        .replace(/#383838/g, bColorl2) // background-lighter2\r\n                        .replace(/#454545/g, bColorl3) // background-lighter3\r\n                        .replace(/#ccc/g, color) // color\r\n                        .replace(/#f29766/g, colorTop) // color-top\r\n                        .replace(/#5db0d7/g, colorBot) // color-bot\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If the given element has a position 'asbolute' or 'relative', \r\n     * returns the first parent of the given element that has a position 'relative' or 'absolute'.\r\n     * If the given element has no position, returns the first parent\r\n     * \r\n     */\r\n    private _getRelativeParent(elem: HTMLElement, lookForAbsoluteOrRelative?: boolean): HTMLElement {\r\n        // If the elem has no parent, returns himself\r\n        if (!elem.parentElement) {\r\n            return elem;\r\n        }\r\n        let computedStyle = Inspector.WINDOW.getComputedStyle(elem);\r\n        // looking for the first element absolute or relative\r\n        if (lookForAbsoluteOrRelative) {\r\n            // if found, return this one\r\n            if (computedStyle.position === \"relative\" || computedStyle.position === \"absolute\") {\r\n                return elem;\r\n            } else {\r\n                // otherwise keep looking\r\n                return this._getRelativeParent(elem.parentElement, true);\r\n            }\r\n        }\r\n        // looking for the relative parent of the element \r\n        else {\r\n            if (computedStyle.position == \"static\") {\r\n                return elem.parentElement;\r\n            } else {\r\n                // the elem has a position relative or absolute, look for the closest relative/absolute parent\r\n                return this._getRelativeParent(elem.parentElement, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Build the inspector panel in the given HTML element */\r\n    private _buildInspector(parent: HTMLElement) {\r\n        // tabbar\r\n        this._tabbar = new TabBar(this, this._initialTab);\r\n\r\n        // Top panel\r\n        this._topPanel = Helpers.CreateDiv('top-panel', parent);\r\n        // Add tabbar\r\n        this._topPanel.appendChild(this._tabbar.toHtml());\r\n        this._tabbar.updateWidth();\r\n\r\n        // Tab panel\r\n        this._tabPanel = Helpers.CreateDiv('tab-panel-content', this._topPanel);\r\n\r\n    }\r\n\r\n    public get scene(): Scene {\r\n        return this._scene;\r\n    }\r\n    public get popupMode(): boolean {\r\n        return this._popupMode;\r\n    }\r\n\r\n    /**  \r\n     * Filter the list of item present in the tree.\r\n     * All item returned should have the given filter contained in the item id.\r\n    */\r\n    public filterItem(filter: string) {\r\n        let tab = this._tabbar.getActiveTab();\r\n\r\n        if (tab) {\r\n            tab.filter(filter);\r\n        }\r\n    }\r\n\r\n    /** Display the mesh tab on the given object */\r\n    public displayObjectDetails(mesh: AbstractMesh) {\r\n        this._tabbar.switchMeshTab(mesh);\r\n    }\r\n\r\n    /** Clean the whole tree of item and rebuilds it */\r\n    public refresh() {\r\n        // Clean top panel\r\n        Helpers.CleanDiv(this._tabPanel);\r\n\r\n        // Get the active tab and its items\r\n        let activeTab = this._tabbar.getActiveTab();\r\n\r\n        if (!activeTab) {\r\n            return;\r\n        }\r\n        activeTab.update();\r\n        this._tabPanel.appendChild(activeTab.getPanel());\r\n        Helpers.SEND_EVENT('resize');\r\n\r\n    }\r\n\r\n    /** Remove the inspector panel when it's built as a right panel:\r\n     * remove the right panel and remove the wrapper\r\n     */\r\n    public dispose() {\r\n        if (!this._popupMode) {\r\n            let activeTab = this._tabbar.getActiveTab();\r\n            if (activeTab) {\r\n                activeTab.dispose();\r\n            }\r\n\r\n            // Get canvas\r\n            let canvas = <HTMLElement>this._scene.getEngine().getRenderingCanvas();\r\n\r\n            // restore canvas style\r\n            for (let prop in this._canvasStyle) {\r\n                (<any>canvas.style)[prop] = this._canvasStyle[prop];\r\n            }\r\n            // Get parent of the wrapper \r\n            if (canvas.parentElement) {\r\n                let canvasParent = canvas.parentElement.parentElement;\r\n\r\n                if (canvasParent) {\r\n                    canvasParent.insertBefore(canvas, this._c2diwrapper);\r\n                    // Remove wrapper\r\n                    Helpers.CleanDiv(this._c2diwrapper);\r\n                    this._c2diwrapper.remove();\r\n                    // Send resize event to the window\r\n                    Helpers.SEND_EVENT('resize');\r\n                }\r\n            }\r\n        }\r\n        Scheduler.getInstance().dispose();\r\n    }\r\n\r\n    /** Open the inspector in a new popup\r\n     * Set 'firstTime' to true if there is no inspector created beforehands\r\n     */\r\n    public openPopup(firstTime?: boolean) {\r\n\r\n        // Create popup\r\n        let popup = window.open('', 'js INSPECTOR', 'toolbar=no,resizable=yes,menubar=no,width=750,height=1000');\r\n        if (!popup) {\r\n            alert(\"Please update your browser to open the js inspector in an external view.\");\r\n            return;\r\n        }\r\n        popup.document.title = \"js INSPECTOR\";\r\n        // Get the inspector style      \r\n        let styles = Inspector.DOCUMENT.querySelectorAll('style');\r\n        for (let s = 0; s < styles.length; s++) {\r\n            popup.document.body.appendChild(styles[s].cloneNode(true));\r\n        }\r\n        let links = document.querySelectorAll('link');\r\n        for (let l = 0; l < links.length; l++) {\r\n            let link = popup.document.createElement(\"link\");\r\n            link.rel = \"stylesheet\";\r\n            link.href = (links[l] as HTMLLinkElement).href;\r\n            popup.document.head.appendChild(link);\r\n        }\r\n        // Dispose the right panel if existing\r\n        if (!firstTime) {\r\n            this.dispose();\r\n        }\r\n        // set the mode as popup\r\n        this._popupMode = true;\r\n        // Save the HTML document\r\n        Inspector.DOCUMENT = popup.document;\r\n        Inspector.WINDOW = popup;\r\n        // Build the inspector wrapper\r\n        this._c2diwrapper = Helpers.CreateDiv('insp-wrapper', popup.document.body);\r\n        // add inspector     \r\n        let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n        inspector.classList.add('popupmode');\r\n        // and build it in the popup  \r\n        this._buildInspector(inspector);\r\n        // Rebuild it\r\n        this.refresh();\r\n\r\n        popup.addEventListener('resize', () => {\r\n            if (this._tabbar) {\r\n                this._tabbar.updateWidth()\r\n            }\r\n        });\r\n    }\r\n\r\n    public getActiveTabIndex(): number {\r\n        return this._tabbar.getActiveTabIndex();\r\n    }\r\n}","import { Nullable, Tools } from \"babylonjs\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PROPERTIES } from \"../properties\";\r\n\r\nexport class Helpers {\r\n\r\n\r\n    /** \r\n     * Returns the type of the given object. First\r\n     * uses getClassName. If nothing is returned, used the type of the constructor\r\n     */\r\n    public static GET_TYPE(obj: any): string {\r\n        if (typeof obj === 'boolean') {\r\n            return 'boolean';\r\n        }\r\n\r\n        if (obj != null && obj != undefined) {\r\n            let classname = Tools.GetClassName(obj);\r\n            if (!classname || classname === 'object') {\r\n                classname = obj.constructor.name;\r\n                // classname is undefined in IE11\r\n                if (!classname) {\r\n                    classname = this._GetFnName(obj.constructor);\r\n                }\r\n            }\r\n            // If the class name has no matching properties, check every type\r\n            if (!this._CheckIfTypeExists(classname)) {\r\n                return this._GetTypeFor(obj);\r\n            }\r\n\r\n            return classname;\r\n        } else {\r\n\r\n            return 'type_not_defined';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if some properties are defined for the given type.\r\n     */\r\n    private static _CheckIfTypeExists(type: string) {\r\n        let properties = (<any>PROPERTIES)[type];\r\n        if (properties) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the user browser is edge.\r\n     */\r\n    public static IsBrowserEdge(): boolean {\r\n        var regexp = /Edge/\r\n        return regexp.test(navigator.userAgent);\r\n    }\r\n    /**\r\n     * Returns true if the user browser is IE.\r\n     */\r\n    public static IsBrowserIE(): boolean {\r\n        var regexp = /Trident.*rv\\:11\\./\r\n        return regexp.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Returns the name of the type of the given object, where the name \r\n     * is in PROPERTIES constant.\r\n     * Returns 'Undefined' if no type exists for this object\r\n     */\r\n    private static _GetTypeFor(obj: any) {\r\n        for (let type in PROPERTIES) {\r\n            let typeBlock = (<any>PROPERTIES)[type];\r\n            if (typeBlock.type) {\r\n                if (obj instanceof typeBlock.type) {\r\n                    return type;\r\n                }\r\n            }\r\n        }\r\n        return 'type_not_defined';\r\n    }\r\n    /**\r\n     * Returns the name of a function (workaround to get object type for IE11)\r\n     */\r\n    private static _GetFnName(fn: any) {\r\n        var f = typeof fn == 'function';\r\n        var s = f && ((fn.name && ['', fn.name]) || fn.toString().match(/function ([^\\(]+)/));\r\n        return (!f && 'not a function') || (s && s[1] || 'anonymous');\r\n    }\r\n\r\n    /** Send the event which name is given in parameter to the window */\r\n    public static SEND_EVENT(eventName: string) {\r\n        let event;\r\n        if (Inspector.DOCUMENT.createEvent) {\r\n            event = Inspector.DOCUMENT.createEvent('HTMLEvents');\r\n            event.initEvent(eventName, true, true);\r\n        } else {\r\n            event = new Event(eventName);\r\n        }\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    /** Returns the given number with 2 decimal number max if a decimal part exists */\r\n    public static Trunc(nb: number): number {\r\n        if (typeof nb !== 'number') {\r\n            return 0;\r\n        }\r\n        if (Math.round(nb) !== nb) {\r\n            return (<any>nb.toFixed(2));\r\n        }\r\n        return nb;\r\n    };\r\n\r\n    /**\r\n     * Useful function used to create a div\r\n     */\r\n    public static CreateDiv(className: Nullable<string> = null, parent?: HTMLElement, tooltip?: string): HTMLDivElement {\r\n        return <HTMLDivElement>Helpers.CreateElement('div', className, parent, tooltip);\r\n    }\r\n\r\n    /**\r\n     * Useful function used to create a input\r\n     */\r\n    public static CreateInput(className?: string, parent?: HTMLElement, tooltip?: string): HTMLInputElement {\r\n        return <HTMLInputElement>Helpers.CreateElement('input', className, parent, tooltip);\r\n    }\r\n\r\n    public static CreateElement(element: string, className: Nullable<string> = null, parent?: HTMLElement, tooltip?: string): HTMLElement {\r\n        let elem = Inspector.DOCUMENT.createElement(element);\r\n\r\n        if (className) {\r\n            elem.className = className;\r\n        }\r\n        if(tooltip && tooltip != '') {\r\n            elem.title = tooltip;\r\n        }\r\n        if (parent) {\r\n            parent.appendChild(elem);\r\n        }\r\n        return elem;\r\n    }\r\n\r\n    /**\r\n     * Removes all children of the given div.\r\n     */\r\n    public static CleanDiv(div: HTMLElement) {\r\n        if (div) {\r\n            while (div.firstChild) {\r\n                div.removeChild(div.firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the true value of the given CSS Attribute from the given element (in percentage or in pixel, as it was specified in the css)\r\n     */\r\n    public static Css(elem: HTMLElement, cssAttribute: string): string {\r\n        let clone = elem.cloneNode(true) as HTMLElement;\r\n        let div = Helpers.CreateDiv('', Inspector.DOCUMENT.body, '');\r\n        div.style.display = 'none';\r\n        div.appendChild(clone);\r\n        let value = (<any>Inspector.WINDOW.getComputedStyle(clone))[cssAttribute];\r\n        if (div.parentNode) {\r\n            div.parentNode.removeChild(div);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public static LoadScript() {\r\n        Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/highlight.min.js\", (elem) => {\r\n            let script = Helpers.CreateElement('script', '', Inspector.DOCUMENT.body, '');\r\n            script.textContent = elem as string;\r\n\r\n            // Load glsl detection\r\n            Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/languages/glsl.min.js\", (elem) => {\r\n                let script = Helpers.CreateElement('script', '', Inspector.DOCUMENT.body, '');\r\n                script.textContent = elem as string;\r\n\r\n                // Load css style\r\n                Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/styles/zenburn.min.css\", (elem) => {\r\n                    let style = Helpers.CreateElement('style', '', Inspector.DOCUMENT.body, '');\r\n                    style.textContent = elem as string;\r\n                });\r\n            }, undefined, undefined, undefined, () => {\r\n                console.log('Error : LoadFile \"glsl.min.js\"');\r\n            });\r\n\r\n        }, undefined, undefined, undefined, () => {\r\n            console.log('Error : LoadFile \"highlight.min.js\"')\r\n        });\r\n\r\n    }\r\n\r\n    public static IsSystemName(name: string): boolean {\r\n        if (name == null) {\r\n            return false;\r\n        }\r\n        return name.indexOf(\"###\") === 0 && name.lastIndexOf(\"###\") === (name.length - 3);\r\n    }\r\n\r\n    /**\r\n     * Return an array of PropertyLine for an obj\r\n     * @param obj \r\n     */\r\n    public static GetAllLinesProperties(obj: any): Array<PropertyLine> {\r\n        let propertiesLines: Array<PropertyLine> = [];\r\n        let props = Helpers.GetAllLinesPropertiesAsString(obj);\r\n\r\n        for (let prop of props) {\r\n            let infos = new Property(prop, obj);\r\n            propertiesLines.push(new PropertyLine(infos));\r\n        }\r\n        return propertiesLines;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns an array of string corresponding to tjhe list of properties of the object to be displayed\r\n     * @param obj \r\n     */\r\n    public static GetAllLinesPropertiesAsString(obj: any, dontTakeThis: Array<string> = []): Array<string> {\r\n        let props: Array<string> = [];\r\n\r\n        for (let prop in obj) {\r\n            //No private and no function\r\n            if (dontTakeThis.indexOf(prop) === -1 && prop.substring(0, 1) !== '_' && typeof obj[prop] !== 'function') {\r\n                props.push(prop);\r\n            }\r\n        }\r\n        return props;\r\n    }\r\n\r\n    public static Capitalize(str: string): string {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\n\r\nexport interface ICameraPOV {\r\n    setPOV: () => void,\r\n    getCurrentActiveCamera: () => string,\r\n    id: () => string\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class CameraPOV extends AbstractTreeTool {\r\n    private cameraPOV: ICameraPOV;\r\n\r\n    constructor(camera: ICameraPOV) {\r\n        super();\r\n        this.cameraPOV = camera;\r\n\r\n        // Setting the id of the line with the name of the camera\r\n        this._elem.id = this.cameraPOV.id();\r\n\r\n        // Put the right icon \r\n        if (this._elem.id == this.cameraPOV.getCurrentActiveCamera()) {\r\n            this._elem.classList.add('fa-check-circle');\r\n        } else {\r\n            this._elem.classList.add('fa-circle');\r\n        }\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        this._gotoPOV();\r\n    }\r\n\r\n    private _gotoPOV() {\r\n        // Uncheck all the radio buttons\r\n        let actives = Inspector.DOCUMENT.querySelectorAll(\".fa-check-circle\");\r\n        for (let i = 0; i < actives.length; i++) {\r\n            actives[i].classList.remove('fa-check-circle');\r\n            actives[i].classList.add('fa-circle');\r\n        }\r\n\r\n        // setting the point off view to the right camera\r\n        this.cameraPOV.setPOV();\r\n\r\n        // Check the right radio button\r\n        if (this._elem.id == this.cameraPOV.getCurrentActiveCamera()) {\r\n            this._elem.classList.remove('fa-circle');\r\n            this._elem.classList.add('fa-check-circle');\r\n        }\r\n\r\n    }\r\n}\r\n","import { Camera } from \"babylonjs\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { CameraPOV, ICameraPOV } from \"../treetools/CameraPOV\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class CameraAdapter\r\n    extends Adapter\r\n    implements ICameraPOV {\r\n\r\n    constructor(obj: Camera) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new CameraPOV(this));\r\n        return tools;\r\n    }\r\n\r\n    // Set the point of view of the chosen camera\r\n    public setPOV() {\r\n        (this._obj as Camera).getScene().switchActiveCamera(this._obj);\r\n    }\r\n\r\n    // Return the name of the current active camera\r\n    public getCurrentActiveCamera() {\r\n        let activeCamera = (this._obj as Camera).getScene().activeCamera;\r\n        if (activeCamera != null) {\r\n            return activeCamera.name;\r\n        } else {\r\n            return \"0\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { Color3, Color4 } from \"babylonjs\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div corresponding to the given color\r\n*/\r\nexport class ColorElement extends BasicElement {\r\n\r\n    // The color as hexadecimal string\r\n    constructor(color: Color4 | Color3) {\r\n        super();\r\n        this._div.className = 'color-element';\r\n        this._div.style.backgroundColor = this._toRgba(color);\r\n    }\r\n\r\n    public update(color?: Color4 | Color3) {\r\n        if (color) {\r\n            this._div.style.backgroundColor = this._toRgba(color);\r\n        }\r\n    }\r\n\r\n    private _toRgba(color: Color4 | Color3): string {\r\n        if (color) {\r\n            let r = (color.r * 255) | 0;\r\n            let g = (color.g * 255) | 0;\r\n            let b = (color.b * 255) | 0;\r\n            let a = 1;\r\n            if (color instanceof Color4) {\r\n                a = (color as Color4).a;\r\n            }\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import * as INSPECTOR from \"./index\";\r\n\r\n/**\r\n * Legacy support, defining window.INSPECTOR (global variable).\r\n * \r\n * This is the entry point for the UMD module. \r\n * The entry point for a future ESM package should be index.ts\r\n */\r\n\r\nvar globalObject = (typeof global !== 'undefined') ? global : ((typeof window !== 'undefined') ? window : undefined);\r\nif (typeof globalObject !== \"undefined\") {\r\n    (<any>globalObject).INSPECTOR = INSPECTOR;\r\n}\r\n\r\nexport * from \"./index\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://use.fontawesome.com/releases/v5.0.13/css/all.css);\", \"\"]);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Inconsolata);\", \"\"]);\n\n// module\nexports.push([module.id, \".insp-wrapper {\\n  user-select: none;\\n  display: flex;\\n  font-size: 0.9em;\\n  font-family: \\\"Inconsolata\\\", sans-serif;\\n  background-color: #242424;\\n  /**\\r\\n * A tool contained in the tree panel (available for each item of the tree)\\r\\n */\\n  /**\\r\\n * The toolbar contains : \\r\\n * - a refresh tool - refresh the whole panel\\r\\n * - a popup tool - Open the inspector in a new panel\\r\\n * ...\\r\\n */\\n  /*\\r\\n* 1. Set to 0 height and width, and remove border for a slider without a thumb\\r\\n*/ }\\n  .insp-wrapper .gutter {\\n    background-color: #2c2c2c; }\\n    .insp-wrapper .gutter.gutter-vertical:not(.blocked) {\\n      cursor: ns-resize; }\\n    .insp-wrapper .gutter.gutter-horizontal:not(.blocked) {\\n      cursor: ew-resize; }\\n  .insp-wrapper .insp-right-panel {\\n    width: 750px;\\n    overflow-y: auto;\\n    display: flex;\\n    flex-direction: column;\\n    flex-shrink: 0; }\\n    .insp-wrapper .insp-right-panel.popupmode {\\n      width: 100% !important; }\\n    .insp-wrapper .insp-right-panel .top-panel {\\n      width: 100%;\\n      height: 100%;\\n      position: relative;\\n      background-color: #242424;\\n      color: #ccc;\\n      font-size: 1em; }\\n      .insp-wrapper .insp-right-panel .top-panel .tab-panel-content {\\n        width: 100%;\\n        height: calc(100% - 50px); }\\n      .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel {\\n        position: absolute;\\n        z-index: 10;\\n        top: 50px;\\n        right: 0;\\n        width: 100px;\\n        display: none;\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: center;\\n        border: 1px solid #454545;\\n        background-color: #242424; }\\n        .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab {\\n          height: 25px;\\n          width: 100%;\\n          line-height: 25px;\\n          text-align: center;\\n          background-color: #2c2c2c;\\n          cursor: pointer; }\\n          .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab:hover {\\n            background-color: #383838; }\\n          .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab:active {\\n            background-color: #454545; }\\n  .insp-wrapper .tooltip {\\n    position: absolute;\\n    top: 50px;\\n    right: 0;\\n    color: #f29766;\\n    display: none;\\n    z-index: 4;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    padding: 2px;\\n    background-color: #242424;\\n    border: 1px solid #454545; }\\n  .insp-wrapper .treeTool {\\n    margin: 3px 8px 3px 3px;\\n    cursor: pointer;\\n    position: relative; }\\n    .insp-wrapper .treeTool:hover {\\n      color: #5db0d7; }\\n    .insp-wrapper .treeTool.active {\\n      color: #5db0d7; }\\n  .insp-wrapper .tab-panel {\\n    height: 100%; }\\n    .insp-wrapper .tab-panel.searchable {\\n      height: calc(100% - 30px - 10px); }\\n    .insp-wrapper .tab-panel .texture-image {\\n      max-height: 400px; }\\n    .insp-wrapper .tab-panel .scene-actions {\\n      overflow-y: auto;\\n      padding-left: 5px; }\\n      .insp-wrapper .tab-panel .scene-actions .actions-title {\\n        font-size: 1.1em;\\n        padding-bottom: 10px;\\n        border-bottom: 1px solid #5db0d7;\\n        margin: 10px 0 10px 0; }\\n      .insp-wrapper .tab-panel .scene-actions .defaut-action, .insp-wrapper .tab-panel .scene-actions .action-radio, .insp-wrapper .tab-panel .scene-actions .action {\\n        height: 20px;\\n        line-height: 20px;\\n        width: 100%;\\n        cursor: pointer; }\\n        .insp-wrapper .tab-panel .scene-actions .defaut-action:hover, .insp-wrapper .tab-panel .scene-actions .action-radio:hover, .insp-wrapper .tab-panel .scene-actions .action:hover {\\n          background-color: #2c2c2c; }\\n        .insp-wrapper .tab-panel .scene-actions .defaut-action:active, .insp-wrapper .tab-panel .scene-actions .action-radio:active, .insp-wrapper .tab-panel .scene-actions .action:active {\\n          background-color: #383838; }\\n      .insp-wrapper .tab-panel .scene-actions .action-radio:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F111\\\";\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action-radio.active:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F192\\\";\\n        color: #5db0d7;\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F0C8\\\";\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action.active:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F14A\\\";\\n        color: #5db0d7;\\n        margin-right: 10px; }\\n  .insp-wrapper .tab-panel .shader-tree-panel {\\n    height: 30px; }\\n    .insp-wrapper .tab-panel .shader-tree-panel select {\\n      height: 30px;\\n      background-color: transparent;\\n      color: #ccc;\\n      height: 30px;\\n      width: 100%;\\n      max-width: 300px;\\n      padding-left: 15px;\\n      border: 1px solid #2c2c2c;\\n      outline: 1px solid #454545; }\\n      .insp-wrapper .tab-panel .shader-tree-panel select option {\\n        padding: 5px;\\n        color: gray; }\\n  .insp-wrapper .tab-panel .shader-panel {\\n    min-height: 100px;\\n    user-select: text;\\n    box-sizing: border-box;\\n    padding: 0 15px; }\\n    .insp-wrapper .tab-panel .shader-panel pre {\\n      margin: 0;\\n      white-space: pre-wrap; }\\n      .insp-wrapper .tab-panel .shader-panel pre code {\\n        background-color: #242424 !important;\\n        padding: 0;\\n        margin: 0; }\\n    .insp-wrapper .tab-panel .shader-panel .shader-panel-title {\\n      height: 25px;\\n      border-bottom: 1px solid #383838;\\n      text-transform: uppercase;\\n      line-height: 25px;\\n      margin-bottom: 10px; }\\n  .insp-wrapper .tab-panel .console-panel {\\n    min-height: 100px;\\n    user-select: text;\\n    box-sizing: border-box;\\n    padding: 0 15px; }\\n    .insp-wrapper .tab-panel .console-panel .console-panel-title {\\n      height: 25px;\\n      border-bottom: 1px solid #383838;\\n      text-transform: uppercase;\\n      line-height: 25px;\\n      margin-bottom: 10px; }\\n    .insp-wrapper .tab-panel .console-panel .console-panel-content {\\n      overflow-y: auto;\\n      overflow-x: hidden;\\n      height: calc(100% - 30px); }\\n    .insp-wrapper .tab-panel .console-panel .defaut-line, .insp-wrapper .tab-panel .console-panel .log, .insp-wrapper .tab-panel .console-panel .warn, .insp-wrapper .tab-panel .console-panel .error, .insp-wrapper .tab-panel .console-panel .object {\\n      word-wrap: break-word;\\n      padding: 3px 0 3px 5px; }\\n    .insp-wrapper .tab-panel .console-panel .caller {\\n      padding: 3px 0 3px 0;\\n      color: #349ccd; }\\n    .insp-wrapper .tab-panel .console-panel .log {\\n      color: white; }\\n    .insp-wrapper .tab-panel .console-panel .warn {\\n      color: orange; }\\n    .insp-wrapper .tab-panel .console-panel .error {\\n      color: orangered; }\\n    .insp-wrapper .tab-panel .console-panel .object {\\n      color: #5db0d7; }\\n  .insp-wrapper .tab-panel.stats-panel {\\n    overflow-y: auto; }\\n  .insp-wrapper .tab-panel .stats-fps {\\n    font-weight: 600;\\n    color: #f29766; }\\n  .insp-wrapper .tab-panel .stat-title1 {\\n    font-size: 1.1em;\\n    padding: 10px; }\\n  .insp-wrapper .tab-panel .stat-title2 {\\n    margin: 10px 0 10px 0;\\n    font-size: 1.05em;\\n    border-bottom: 1px solid #5db0d7;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-label {\\n    display: inline-block;\\n    width: 80%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-bottom: 1px solid #242424;\\n    border-top: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-value {\\n    display: inline-block;\\n    width: 20%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-infos {\\n    width: 100%;\\n    padding: 4px; }\\n  .insp-wrapper .tab-panel .gltf-actions {\\n    overflow-y: auto;\\n    padding-left: 5px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-title {\\n      font-size: 1.1em;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #5db0d7;\\n      margin: 10px 0 10px 0; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-action, .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox {\\n      height: 20px;\\n      line-height: 20px;\\n      width: 100%;\\n      cursor: pointer;\\n      white-space: nowrap; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-action:hover, .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox:hover {\\n        background-color: #2c2c2c; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-icon {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox:before {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\F0C8\\\";\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox.active:before {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\F14A\\\";\\n      color: #5db0d7;\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-input {\\n      background-color: #2c2c2c;\\n      border: none;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #b3b3b3;\\n      padding: 5px;\\n      margin: 0px 6px 0px 0; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-input:hover {\\n        background-color: #383838; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-button {\\n      background-color: #2c2c2c;\\n      border: none;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #ccc;\\n      padding: 5px 10px;\\n      margin: 0px 6px 0px 0; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-button:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-button:active {\\n        background-color: #454545; }\\n  .insp-wrapper .tab-panel.tools-panel {\\n    overflow-y: auto; }\\n  .insp-wrapper .tab-panel .tool-title1 {\\n    font-size: 1.1em;\\n    padding: 10px; }\\n  .insp-wrapper .tab-panel .tool-title2 {\\n    margin: 10px 0 10px 0;\\n    font-size: 1.05em;\\n    border-bottom: 1px solid #5db0d7;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .tool-label, .insp-wrapper .tab-panel .tool-label-line, .insp-wrapper .tab-panel .tool-label-error {\\n    background-color: #2c2c2c;\\n    border: none;\\n    outline: none;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    color: #b3b3b3;\\n    padding: 5px;\\n    margin: 0px 6px 0px 0; }\\n  .insp-wrapper .tab-panel .tool-label-line {\\n    width: 100%; }\\n  .insp-wrapper .tab-panel .tool-label-error {\\n    color: #fa371d;\\n    width: 100%;\\n    background-color: none; }\\n  .insp-wrapper .tab-panel .tool-value {\\n    display: inline-block;\\n    width: 25%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .tool-infos {\\n    width: 100%;\\n    padding: 4px; }\\n  .insp-wrapper .tab-panel .tool-input {\\n    background-color: #2c2c2c;\\n    border: none;\\n    outline: none;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    color: #ccc;\\n    padding: 5px 10px;\\n    margin: 0px 6px 0px 0;\\n    width: 100%;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    text-align: left; }\\n    .insp-wrapper .tab-panel .tool-input:hover {\\n      background-color: #383838;\\n      cursor: pointer; }\\n    .insp-wrapper .tab-panel .tool-input:active {\\n      background-color: #454545; }\\n  .insp-wrapper .property-type {\\n    color: #5db0d7; }\\n  .insp-wrapper .property-name, .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name {\\n    color: #f29766; }\\n  .insp-wrapper .insp-tree {\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    height: calc(50% - 50px - 30px); }\\n    .insp-wrapper .insp-tree .line {\\n      padding: 3px;\\n      cursor: pointer; }\\n      .insp-wrapper .insp-tree .line:hover {\\n        background-color: #2c2c2c; }\\n      .insp-wrapper .insp-tree .line.active {\\n        background-color: #454545; }\\n        .insp-wrapper .insp-tree .line.active .line-content {\\n          background-color: #242424; }\\n      .insp-wrapper .insp-tree .line.unfolded:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F107\\\";\\n        font-weight: 900; }\\n      .insp-wrapper .insp-tree .line.folded:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F105\\\";\\n        font-weight: 900; }\\n      .insp-wrapper .insp-tree .line.unfolded.transformNode > span:first-of-type {\\n        color: #f29766; }\\n      .insp-wrapper .insp-tree .line.folded.transformNode > span:first-of-type {\\n        color: #f29766; }\\n      .insp-wrapper .insp-tree .line .line-content {\\n        padding-left: 15px; }\\n        .insp-wrapper .insp-tree .line .line-content:hover {\\n          background-color: #242424; }\\n        .insp-wrapper .insp-tree .line .line-content .line:hover:first-child {\\n          background-color: #383838; }\\n    .insp-wrapper .insp-tree .line_invisible {\\n      display: none; }\\n  .insp-wrapper .insp-details {\\n    background-color: #242424;\\n    overflow-y: auto;\\n    overflow-x: auto;\\n    color: #ccc;\\n    font-family: \\\"Inconsolata\\\", sans-serif; }\\n    .insp-wrapper .insp-details .details {\\n      padding-left: 5px; }\\n    .insp-wrapper .insp-details .base-row, .insp-wrapper .insp-details .row, .insp-wrapper .insp-details .header-row {\\n      display: flex;\\n      width: 100%; }\\n      .insp-wrapper .insp-details .base-row .base-property, .insp-wrapper .insp-details .row .base-property, .insp-wrapper .insp-details .header-row .base-property, .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name, .insp-wrapper .insp-details .base-row .prop-value, .insp-wrapper .insp-details .row .prop-value, .insp-wrapper .insp-details .header-row .prop-value {\\n        padding: 2px 0 2px 0;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n        overflow: hidden; }\\n      .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name {\\n        width: 35%; }\\n      .insp-wrapper .insp-details .base-row .prop-value, .insp-wrapper .insp-details .row .prop-value, .insp-wrapper .insp-details .header-row .prop-value {\\n        width: 59%;\\n        padding-left: 5px; }\\n        .insp-wrapper .insp-details .base-row .prop-value.clickable, .insp-wrapper .insp-details .row .prop-value.clickable, .insp-wrapper .insp-details .header-row .prop-value.clickable {\\n          cursor: pointer; }\\n          .insp-wrapper .insp-details .base-row .prop-value.clickable:hover, .insp-wrapper .insp-details .row .prop-value.clickable:hover, .insp-wrapper .insp-details .header-row .prop-value.clickable:hover {\\n            background-color: #383838; }\\n          .insp-wrapper .insp-details .base-row .prop-value.clickable:after, .insp-wrapper .insp-details .row .prop-value.clickable:after, .insp-wrapper .insp-details .header-row .prop-value.clickable:after {\\n            font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n            content: \\\"\\\\A0   \\\\A0   \\\\A0   \\\\F105\\\";\\n            font-weight: 900; }\\n    .insp-wrapper .insp-details .row:nth-child(even) {\\n      background-color: #2c2c2c; }\\n    .insp-wrapper .insp-details .row.unfolded .prop-value.clickable:after {\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\A0   \\\\A0   \\\\A0   \\\\F107\\\";\\n      font-weight: 900; }\\n    .insp-wrapper .insp-details .header-row {\\n      background-color: #2c2c2c;\\n      color: #ccc;\\n      width: 100%;\\n      max-width: 100%; }\\n      .insp-wrapper .insp-details .header-row > * {\\n        color: #ccc !important;\\n        padding: 5px 0 5px 5px !important;\\n        cursor: pointer; }\\n        .insp-wrapper .insp-details .header-row > *:hover {\\n          background-color: #383838; }\\n      .insp-wrapper .insp-details .header-row .header-col {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center; }\\n        .insp-wrapper .insp-details .header-row .header-col .sort-direction {\\n          margin-right: 5px; }\\n    .insp-wrapper .insp-details .element-viewer, .insp-wrapper .insp-details .color-element, .insp-wrapper .insp-details .texture-element {\\n      position: relative;\\n      width: 10px;\\n      height: 10px;\\n      display: inline-block;\\n      margin-left: 5px; }\\n    .insp-wrapper .insp-details .color-element {\\n      width: 20px;\\n      height: 15px; }\\n    .insp-wrapper .insp-details .texture-element {\\n      color: #f29766;\\n      margin-left: 10px; }\\n      .insp-wrapper .insp-details .texture-element .texture-viewer {\\n        color: #ccc;\\n        position: absolute;\\n        z-index: 10;\\n        bottom: 0;\\n        right: 0;\\n        display: block;\\n        width: 150px;\\n        height: 150px;\\n        border: 1px solid #454545;\\n        background-color: #242424;\\n        transform: translateX(100%) translateY(100%);\\n        display: none;\\n        flex-direction: column;\\n        justify-content: flex-start;\\n        align-items: center; }\\n        .insp-wrapper .insp-details .texture-element .texture-viewer .texture-viewer-img {\\n          margin: 10px 0 10px 0;\\n          max-width: 110px;\\n          max-height: 110px; }\\n  .insp-wrapper .tabbar {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    border-bottom: 1px solid #383838;\\n    width: 100%;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    box-sizing: border-box; }\\n    .insp-wrapper .tabbar .tab {\\n      height: calc(50px - 2px);\\n      width: auto;\\n      padding: 0 10px 0 10px;\\n      color: #ccc;\\n      line-height: 50px;\\n      text-align: center;\\n      cursor: pointer;\\n      margin: 0 5px 0 5px;\\n      box-sizing: border-box; }\\n      .insp-wrapper .tabbar .tab:hover {\\n        border-bottom: 1px solid #f29766;\\n        background-color: #2c2c2c; }\\n      .insp-wrapper .tabbar .tab:active {\\n        background-color: #383838; }\\n      .insp-wrapper .tabbar .tab.active {\\n        border-bottom: 1px solid #f29766; }\\n    .insp-wrapper .tabbar .more-tabs {\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      position: relative;\\n      border-right: 1px solid #383838; }\\n      .insp-wrapper .tabbar .more-tabs:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .tabbar .more-tabs:active {\\n        color: #f29766;\\n        background-color: #454545; }\\n      .insp-wrapper .tabbar .more-tabs.active {\\n        color: #f29766; }\\n  .insp-wrapper .toolbar {\\n    display: flex; }\\n    .insp-wrapper .toolbar .tool {\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      position: relative;\\n      border-right: 1px solid #383838; }\\n      .insp-wrapper .toolbar .tool:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .toolbar .tool:active {\\n        color: #f29766;\\n        background-color: #454545; }\\n      .insp-wrapper .toolbar .tool.active {\\n        color: #f29766; }\\n  .insp-wrapper .searchbar {\\n    border: 1px solid #2c2c2c;\\n    margin-bottom: 5px;\\n    display: flex;\\n    align-items: center;\\n    color: #b3b3b3; }\\n    .insp-wrapper .searchbar input {\\n      background-color: #242424;\\n      border: none;\\n      width: 100%;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #b3b3b3;\\n      padding: 3px 0 3px 10px;\\n      margin: 6px 0 6px 0; }\\n  .insp-wrapper input[type=\\\"range\\\"] {\\n    margin: auto;\\n    -webkit-appearance: none;\\n    position: relative;\\n    overflow: hidden;\\n    height: 15px;\\n    width: 50%;\\n    cursor: pointer;\\n    border-radius: 0;\\n    /* iOS */ }\\n  .insp-wrapper ::-webkit-slider-runnable-track {\\n    background: #ddd; }\\n  .insp-wrapper ::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    width: 20px;\\n    /* 1 */\\n    height: 15px;\\n    /* 1 */\\n    background: #fff;\\n    box-shadow: -100vw 0 0 100vw dodgerblue;\\n    border: 0px solid #999;\\n    /* 1 */ }\\n  .insp-wrapper ::-moz-range-track {\\n    height: 15px;\\n    background: #ddd; }\\n  .insp-wrapper ::-moz-range-thumb {\\n    background: #fff;\\n    height: 15px;\\n    width: 20px;\\n    border: 0px solid #999;\\n    border-radius: 0 !important;\\n    box-shadow: -100vw 0 0 100vw dodgerblue;\\n    box-sizing: border-box; }\\n  .insp-wrapper ::-ms-fill-lower {\\n    background: dodgerblue; }\\n  .insp-wrapper ::-ms-thumb {\\n    background: #fff;\\n    border: 0px solid #999;\\n    height: 15px;\\n    width: 20px;\\n    box-sizing: border-box; }\\n  .insp-wrapper ::-ms-ticks-after {\\n    display: none; }\\n  .insp-wrapper ::-ms-ticks-before {\\n    display: none; }\\n  .insp-wrapper ::-ms-track {\\n    background: #ddd;\\n    color: transparent;\\n    height: 15px;\\n    border: none; }\\n  .insp-wrapper ::-ms-tooltip {\\n    display: none; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;"],"sourceRoot":""}