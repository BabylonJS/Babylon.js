{"version":3,"sources":["webpack://INSPECTOR/webpack/universalModuleDefinition","webpack://INSPECTOR/webpack/bootstrap","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}","webpack://INSPECTOR/../dist/preview release/split.js","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs-loaders\",\"commonjs2\":\"babylonjs-loaders\",\"amd\":\"babylonjs-loaders\"}","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs-serializers\",\"commonjs2\":\"babylonjs-serializers\",\"amd\":\"babylonjs-serializers\"}","webpack://INSPECTOR/./sass/main.scss?fc85","webpack://INSPECTOR/./sass/main.scss","webpack://INSPECTOR/./node_modules/css-loader/lib/css-base.js","webpack://INSPECTOR/./node_modules/style-loader/lib/addStyles.js","webpack://INSPECTOR/./node_modules/style-loader/lib/urls.js","webpack://INSPECTOR/./src/adapters/Adapter.ts","webpack://INSPECTOR/./src/details/Property.ts","webpack://INSPECTOR/./src/scheduler/Scheduler.ts","webpack://INSPECTOR/./src/gui/BasicElement.ts","webpack://INSPECTOR/./src/gui/ColorPickerElement.ts","webpack://INSPECTOR/./src/gui/CubeTextureElement.ts","webpack://INSPECTOR/./src/gui/HDRCubeTextureElement.ts","webpack://INSPECTOR/./src/gui/TextureElement.ts","webpack://INSPECTOR/./src/properties.ts","webpack://INSPECTOR/./src/details/PropertyLine.ts","webpack://INSPECTOR/./src/properties_gui.ts","webpack://INSPECTOR/./src/gui/Tooltip.ts","webpack://INSPECTOR/./src/tools/AbstractTool.ts","webpack://INSPECTOR/./src/tools/RefreshTool.ts","webpack://INSPECTOR/./src/tools/LabelTool.ts","webpack://INSPECTOR/./src/tools/PickTool.ts","webpack://INSPECTOR/./src/tools/PopupTool.ts","webpack://INSPECTOR/./src/tools/FullscreenTool.ts","webpack://INSPECTOR/./src/tools/PauseScheduleTool.ts","webpack://INSPECTOR/./src/tools/DisposeTool.ts","webpack://INSPECTOR/./src/tools/Toolbar.ts","webpack://INSPECTOR/./src/treetools/AbstractTreeTool.ts","webpack://INSPECTOR/./src/treetools/BoundingBox.ts","webpack://INSPECTOR/./src/treetools/Checkbox.ts","webpack://INSPECTOR/./src/treetools/DebugArea.ts","webpack://INSPECTOR/./src/treetools/Info.ts","webpack://INSPECTOR/./src/adapters/MeshAdapter.ts","webpack://INSPECTOR/./src/tree/TreeItem.ts","webpack://INSPECTOR/./src/gui/SearchBar.ts","webpack://INSPECTOR/./src/details/DetailPanel.ts","webpack://INSPECTOR/./src/tabs/Tab.ts","webpack://INSPECTOR/./src/tabs/PropertyTab.ts","webpack://INSPECTOR/./src/tabs/CameraTab.ts","webpack://INSPECTOR/./src/tabs/ConsoleTab.ts","webpack://INSPECTOR/./src/tabs/GLTFTab.ts","webpack://INSPECTOR/./src/adapters/GUIAdapter.ts","webpack://INSPECTOR/./src/tabs/GUITab.ts","webpack://INSPECTOR/./src/adapters/LightAdapter.ts","webpack://INSPECTOR/./src/tabs/LightTab.ts","webpack://INSPECTOR/./src/adapters/MaterialAdapter.ts","webpack://INSPECTOR/./src/tabs/MaterialTab.ts","webpack://INSPECTOR/./src/tabs/MeshTab.ts","webpack://INSPECTOR/./src/adapters/PhysicsImpostorAdapter.ts","webpack://INSPECTOR/./src/tabs/PhysicsTab.ts","webpack://INSPECTOR/./src/tabs/SceneTab.ts","webpack://INSPECTOR/./src/treetools/SoundInteractions.ts","webpack://INSPECTOR/./src/adapters/SoundAdapter.ts","webpack://INSPECTOR/./src/tabs/SoundTab.ts","webpack://INSPECTOR/./src/tabs/StatsTab.ts","webpack://INSPECTOR/./src/adapters/TextureAdapter.ts","webpack://INSPECTOR/./src/tabs/TextureTab.ts","webpack://INSPECTOR/./src/tabs/ToolsTab.ts","webpack://INSPECTOR/./src/tabs/TabBar.ts","webpack://INSPECTOR/./src/Inspector.ts","webpack://INSPECTOR/./src/helpers/Helpers.ts","webpack://INSPECTOR/./src/treetools/CameraPOV.ts","webpack://INSPECTOR/./src/adapters/CameraAdapter.ts","webpack://INSPECTOR/./src/gui/ColorElement.ts","webpack://INSPECTOR/external {\"root\":[\"BABYLON\",\"GUI\"],\"commonjs\":\"babylonjs-gui\",\"commonjs2\":\"babylonjs-gui\",\"amd\":\"babylonjs-gui\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__10__","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","oe","err","console","error","jsonpArray","oldJsonpFunction","slice","s","this","e","attachEvent","document","createElement","style","cssText","a","String","querySelector","u","g","h","z","S","f","v","gutterSize","minSize","snapOffset","direction","cursor","blockDrag","y","b","dragging","onDragStart","preventDefault","move","stop","parent","E","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","gutter","G","onDragEnd","touches","start","aMin","aGutterSize","size","bMin","bGutterSize","w","onDrag","getComputedStyle","parseFloat","percentage","Math","min","x","sizes","M","parentNode","D","Array","isArray","k","U","L","O","B","C","F","isFirst","isLast","A","className","insertBefore","setSizes","collapse","destroy","removeChild","Split","content","options","hmr","transform","insertInto","undefined","locals","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","stylesInDom","isOldIE","fn","memo","apply","arguments","memoize","all","atob","getElement","target","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","appendChild","firstChild","before","removeStyleElement","idx","indexOf","splice","createStyleElement","attrs","type","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","Adapter_Adapter","Adapter","_obj","correspondsTo","_name","external_root_BABYLON_commonjs_babylonjs_commonjs2_babylonjs_amd_babylonjs_","RandomId","Property_Property","Property","prop","parentObj","_property","_parentObj","newValue","debugLayer","onPropertyChangedObservable","notifyObservers","initialValue","getScene","Helpers_Helpers","GET_TYPE","Scheduler","pause","_updatableProperties","interval","setInterval","_update","REFRESH_TIME","getInstance","_instance","add","_i","_a","dispose","clearInterval","BasicElement_BasicElement","BasicElement","_div","CreateDiv","toHtml","_build","ColorPickerElement_ColorPickerElement","_super","ColorPickerElement","color","propertyLine","_this","scheduler","backgroundColor","_toRgba","pline","_input","CreateInput","opacity","width","height","toHexString","addEventListener","FromHexString","toPrecision","validateInput","__extends","CubeTextureElement_CubeTextureElement","CubeTextureElement","tex","_pause","_textureDiv","_canvas","CreateElement","_textureUrl","_showViewer","CubeTextureElement_extends","url","_engine","_cube","material","_initEngine","_populateScene","hdrTexture","_scene","coordinatesMode","SKYBOX_MODE","CreateBox","hdrSkyboxMaterial","backFaceCulling","reflectionTexture","disableLighting","registerBeforeRender","rotation","clearColor","runRenderLoop","render","display","HDRCubeTextureElement_HDRCubeTextureElement","HDRCubeTextureElement","HDRCubeTextureElement_extends","microSurface","TextureElement_TextureElement","TextureElement","imgDiv","sizeDiv","textContent","getBaseSize","backgroundImage","TextureElement_extends","PROPERTIES","format","type_not_defined","properties","Vector2","vec","Trunc","Vector3","Color3","slider","max","step","Color4","Quaternion","Size","Texture","RenderTargetTexture","DynamicTexture","BaseTexture","CubeTexture","HDRCubeTexture","Sound","ArcRotateCamera","alpha","PI","beta","fov","FreeCamera","Scene","TransformNode","AbstractMesh","Mesh","visibility","StandardMaterial","mat","PBRMaterial","PhysicsImpostor","ImageProcessingConfiguration","ColorCurves","PropertyFormatter","PropertyLine_PropertyLine","PropertyLine","level","_children","_elements","_level","_parent","marginLeft","_valueDiv","_isSliderType","_displayValueContent","_createElements","elem","_updateValue","_checkboxInput","_rangeInput","_isSimple","_initInput","_displayInputHandler","_focusOutInputHandler","_validateInputHandler","_escapeInputHandler","classList","_addDetails","_displayInput","_validateInput","_escapeInput","_onMouseDownHandler","_onMouseDown","_onMouseDragHandler","_onMouseDrag","_onMouseUpHandler","_onMouseUp","removeEventListener","keyCode","forceupdate","updateObject","_removeInputWithoutValidating","CleanDiv","valueTxt","focus","IsBrowserIE","child","_b","_c","nodeValue","hexLineString","rValue","parseInt","rValueRound","round","gValue","gValueRound","bValue","bValueRound","aValue","aValueRound","hex","hexLineInfos","valHexR","valHexG","valHexB","valHexA","unshift","_SIMPLE_TYPE","closeDetails","contains","toggle","objToDetail","propToDisplay","GetAllLinesPropertiesAsString","sort","reverse","propToDisplay_1","_MARGIN_LEFT","hexLinePropCheck","hexLineCheck","propToDisplay_2","valHex","hexLineProp","hexLine","_d","_e","diff","_prevY","clientY","_preValue","childElementCount","checked","_getSliderProperty","_rangeHandler","_textValue","innerText","paddingLeft","constructor","guiLoaded","loadGUIProperties","GUI","PROPERTIES_GUI","ValueAndUnit","valueAndUnit","Control","control","Button","button","ColorPicker","colorPicker","Checkbox","checkbox","Ellipse","ellipse","Image","image","Line","line","RadioButton","radioButton","Rectangle","rectangle","Slider","StackPanel","stackPanel","TextBlock","textBlock","Container","container","Tooltip_Tooltip","tip","attachTo","_elem","parentElement","_infoDiv","AbstractTool_AbstractTool","AbstractTool","iconSet","icon","inspector","tooltip","_inspector","Inspector_Inspector","DOCUMENT","action","getPixelWidth","WINDOW","marginRight","left","substr","right","clientWidth","_updateIcon","RefreshTool","RefreshTool_extends","refresh","LabelTool_LabelTool","LabelTool","_isDisplayed","_advancedTexture","_labelInitialized","scene","LabelTool_extends","_checkGUILoaded","_initializeLabels","GUIObject","AdvancedDynamicTexture","CreateFullscreenUI","meshes","_createLabel","onNewMeshAddedObservable","onMeshRemovedObservable","_removeLabel","mesh","IsSystemName","rect1","background","addControl","label","text","fontSize","linkWithMesh","_rootContainer","children","_linkedMesh","removeControl","isVisible","PickTool","_isActive","_pickHandler","_pickMesh","PickTool_extends","_deactivate","getEngine","getRenderingCanvas","evt","pos","_updatePointerPosition","pi","pick","pickedMesh","displayObjectDetails","canvasRect","getRenderingCanvasClientRect","clientX","top","PopupTool","PopupTool_extends","openPopup","FullscreenTool","FullscreenTool_extends","element","requestFullscreen","webkitRequestFullScreen","requestFullScreen","body","PauseScheduleTool_PauseScheduleTool","PauseScheduleTool","_isPause","PauseScheduleTool_extends","DisposeTool","DisposeTool_extends","Toolbar_Toolbar","Toolbar","_tools","_addTools","Toolbar_extends","popupMode","IsBrowserEdge","sum","AbstractTreeTool_AbstractTreeTool","AbstractTreeTool","_on","_addEvents","stopPropagation","BoundingBox","isBoxVisible","_check","BoundingBox_extends","setBoxVisible","Checkbox_extends","dontEnable","setVisible","DebugArea","DebugArea_extends","debug","Info_Info","Info","getInfo","Info_extends","MeshAdapter_MeshAdapter","MeshAdapter","MeshAdapter_extends","str","getProperties","GetAllLinesProperties","getTools","tools","getTotalVertices","setEnabled","isEnabled","showBoundingBox","enable","_axesViewer","_drawAxis","onBeforeRenderObservable","onBeforeRenderObserver","computeWorldMatrix","AxesViewer","matrix","getWorldMatrix","extend","getBoundingInfo","boundingBox","extendSizeWorld","scaleLines","position","TransformNormal","TreeItem_TreeItem","TreeItem","tab","_tab","_adapter","TreeItem_extends","compareTo","str1","str2","localeCompare","numeric","fold","unfold","adapterId","adapter","tool","_lineContent","_addEvent","getDetails","select","_isFolded","active","getDiv","SearchBar_SearchBar","SearchBar","_propTab","_inputElement","placeholder","SearchBar_extends","reset","SearchBar_SearchBarDetails","SearchBarDetails","_detailTab","searchByName","DetailPanel_DetailPanel","DetailPanel","dr","_detailRows","_sortDirection","DetailPanel_extends","detailsRow","clean","_addSearchBarDetails","_details","_createHeaderRow","_headerRow","_items","_sortDetails","cleanRow","_addSearchDetails","searchDetails","_searchDetails","searchName","rows","row","_items_1","_direction","elems","querySelectorAll","query","isString","detail1","detail2","createDiv","cssClass","div","spanName","charAt","toUpperCase","spanDirection","Tab_Tab","Tab","tabbar","_tabbar","Tab_extends","isActive","switchTab","getPanel","_panel","PropertyTab_PropertyTab","PropertyTab","insp","_treeItems","_searchBar","_treePanel","_detailsPanel","split","PropertyTab_extends","items","_getTree","item1","item2","items_1","displayDetails","activateNode","details","getItemFor","searchObjectInTree","treeItem","it","toLowerCase","CameraTab_CameraTab","CameraTab","CameraTab_extends","arr","cameras","camera","CameraAdapter_CameraAdapter","ConsoleTab_ConsoleTab","ConsoleTab","consolePanel","bjsPanel","title","_consolePanelContent","_bjsPanelContent","innerHTML","LogCache","OnNewCacheEntry","entry","scrollTop","scrollHeight","ConsoleTab_extends","log","_oldConsoleLog","warn","_oldConsoleWarn","_oldConsoleError","_addConsoleLog","_addConsoleWarn","_addConsoleError","_message","message","caller","params","callerFunc","GLTFTab_GLTFTab","GLTFTab","_actions","event","_closeDetailsPanel","external_root_BABYLON_commonjs_babylonjs_loaders_commonjs2_babylonjs_loaders_amd_babylonjs_loaders_","GLTFLoader","_addImport","external_root_BABYLON_commonjs_babylonjs_serializers_commonjs2_babylonjs_serializers_amd_babylonjs_serializers_","_addExport","GLTFTab_extends","_Initialize","OnPluginActivatedObservable","loader","_LoaderDefaults","defaults_1","onExtensionLoadedObservable","extension","extensionDefaults","extensions","importTitle","importActions","_getLoaderDefaultsAsync","then","defaults","_showLoaderDefaults","extensionName","extensionAction","_showLoaderExtensionDefaults","enabled","_EnumeratePublic","callback","Promise","resolve","engine","importMeshAsync","_openDetailsPanel","_split","detailsPanel","exportActions","GLBAsync","shouldExportTransformNode","transformNode","_IsSkyBox","glb","downloadFiles","GUIAdapter_GUIAdapter","GUIAdapter","GUIAdapter_extends","GUITab_GUITab","GUITab","GUITab_extends","createNode","descendants","node","descendants_1","textures","LightAdapter_LightAdapter","LightAdapter","LightAdapter_extends","LightTab_LightTab","LightTab","LightTab_extends","lights","light","MaterialAdapter_MaterialAdapter","MaterialAdapter","MaterialAdapter_extends","MaterialTab_MaterialTab","MaterialTab","MaterialTab_extends","materials","MeshTab_MeshTab","MeshTab","MeshTab_extends","alreadyIn","getDescendants","notFound","instances","meshWithoutAnyParent","transformNodes","tn","meshWithoutAnyParent_1","PhysicsImpostorAdapter_PhysicsImpostorAdapter","PhysicsImpostorAdapter","viewer","_isVisible","_viewer","PhysicsImpostorAdapter_extends","physicsImposter","showImpostor","hideImpostor","PhysicsTab_PhysicsTab","PhysicsTab","PhysicsTab_extends","isPhysicsEnabled","PhysicsViewer","physicsImpostor","SceneTab_SceneTab","SceneTab","_skeletonViewers","props_1","propString","point","wireframe","solid","forcePointsCloud","forceWireframe","_generateRadioAction","_generateActionLine","DiffuseTextureEnabled","AmbientTextureEnabled","SpecularTextureEnabled","EmissiveTextureEnabled","BumpTextureEnabled","OpacityTextureEnabled","ReflectionTextureEnabled","RefractionTextureEnabled","ColorGradingTextureEnabled","LightmapTextureEnabled","FresnelEnabled","animationsEnabled","collisionsEnabled","fogEnabled","lensFlaresEnabled","lightsEnabled","particlesEnabled","postProcessesEnabled","probesEnabled","proceduralTexturesEnabled","renderTargetsEnabled","shadowsEnabled","skeletonsEnabled","spritesEnabled","texturesEnabled","headphones","normalSpeaker","audioEnabled","headphone","skeleton","found","sIndex","SkeletonViewer","SceneTab_extends","initValue","isActivated","arr_2","arr_1","SoundInteractions","playSound","SoundInteractions_extends","_playSound","setPlaying","SoundAdapter_SoundAdapter","SoundAdapter","SoundAdapter_extends","isPlaying","play","onended","SoundTab_SoundTab","SoundTab","SoundTab_extends","soundTracks","soundCollection","StatsTab_StatsTab","StatsTab","_glInfo","getGlInfo","_connectToInstrumentation","fpsSpan","updateFct","Format","getFps","versionSpan","Version","_updateLoopHandler","_refreshRateCounter","refreshRate","_createStatLabel","elemValue","_sceneInstrumentation","drawCallsCounter","current","textureCollisionsCounter","getActiveMeshes","getActiveIndices","getActiveBones","getActiveParticles","activeMeshesEvaluationTimeCounter","renderTargetsRenderTimeCounter","particlesRenderTimeCounter","spritesRenderTimeCounter","animationsTimeCounter","physicsTimeCounter","renderTimeCounter","frameTimeCounter","interFrameTimeCounter","_engineInstrumentation","gpuFrameTimeCounter","average","getRenderWidth","getRenderHeight","getCaps","standardDerivatives","s3tc","instancedArrays","textureFloat","uintIndices","fragmentDepthSupported","highPrecisionShaderSupported","drawBuffersExtension","vertexArrayObject","timerQuery","isStencilEnable","maxTexturesImageUnits","maxTextureSize","maxAnisotropy","webGLVersion","version","renderer","StatsTab_extends","captureActiveMeshesEvaluationTime","captureRenderTargetsRenderTime","captureFrameTime","captureRenderTime","captureInterFrameTime","captureParticlesRenderTime","captureSpritesRenderTime","capturePhysicsTime","captureAnimationsTime","captureGPUFrameTime","Infinity","unregisterAfterRender","registerAfterRender","TextureAdapter_TextureAdapter","TextureAdapter","TextureAdapter_extends","TextureTab_TextureTab","TextureTab","_imagePanel","TextureTab_extends","texture","imgs","img","engine_1","size_1","getSize","screenShotTexture","clone","activeCamera","onBeforeRender","onAfterRender","onAfterRenderObservable","faceIndex","DumpFramebuffer","src","incrementRenderId","resetCachedMaterial","pixels","readPixels","canvas","ctx","getContext","tmp","buffer","Uint8ClampedArray","ImageData","set","imgData","createImageData","putImageData","base64Image","toDataURL","ToolsTab_ToolsTab","ToolsTab","errorElemm_1","inputElement","accept","onchange","files","file","isFileDDS","isFileEnv","ReadFile","environmentTexture","CreateFromPrefilteredData","premultipliedAlpha","onclick","CreateEnvTextureAsync","Download","catch","CreateScreenshot","precision","ToolsTab_extends","TabBar_TabBar","TabBar","initialTab","_tabs","_invisibleTabs","_visibleTabs","_meshTab","IsSupported","_toolBar","TabBar_extends","_moreTabsIcon","_moreTabsPanel","topPanel","_addInvisibleTabToPanel","activeTab","getActiveTab","switchMeshTab","getActiveTabIndex","updateWidth","parentSize","currentSize","pop","lastTab","Inspector","popup","newColors","_popupMode","onGUILoaded","LoadScript","BABYLON","_initialTab","_parentElement","canvasParent","canvasComputedStyle","_canvasStyle","Css","bottom","padding","paddingBottom","paddingTop","paddingRight","margin","marginBottom","marginTop","_c2diwrapper","_buildInspector","widthPx","heightPx","leftPx","innerWidth","maxWidth","parent_1","_getRelativeParent","pWidth","pheight","clientHeight","replaceChild","SEND_EVENT","bColor","bColorl1","backgroundColorLighter","bColorl2","backgroundColorLighter2","bColorl3","backgroundColorLighter3","colorTop","colorBot","lookForAbsoluteOrRelative","computedStyle","_topPanel","_tabPanel","filterItem","firstTime","open","cloneNode","links","alert","Helpers","classname","GetClassName","_GetFnName","_CheckIfTypeExists","_GetTypeFor","navigator","userAgent","typeBlock","match","eventName","createEvent","initEvent","Event","dispatchEvent","nb","toFixed","cssAttribute","LoadFile","lastIndexOf","propertiesLines","infos","dontTakeThis","props","substring","Capitalize","CameraPOV_CameraPOV","CameraPOV","cameraPOV","getCurrentActiveCamera","CameraPOV_extends","_gotoPOV","actives","setPOV","CameraAdapter","CameraAdapter_extends","switchActiveCamera","ColorElement_ColorElement","ColorElement","ColorElement_extends"],"mappings":"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","file":"babylon.inspector.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"), require(\"babylonjs-loaders\"), require(\"babylonjs-serializers\"), require(\"babylonjs-gui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-inspector\", [\"babylonjs\", \"babylonjs-loaders\", \"babylonjs-serializers\", \"babylonjs-gui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-inspector\"] = factory(require(\"babylonjs\"), require(\"babylonjs-loaders\"), require(\"babylonjs-serializers\"), require(\"babylonjs-gui\"));\n\telse\n\t\troot[\"INSPECTOR\"] = factory(root[\"BABYLON\"], root[\"BABYLON\"], root[\"BABYLON\"], root[\"BABYLON\"][\"GUI\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__10__) {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".babylon.inspector.bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\"use strict\"; (function () { var t = this, e = t.attachEvent && !t[r], i = t.document, r = \"addEventListener\", s = \"removeEventListener\", n = \"getBoundingClientRect\", o = function () { for (var t, e = [\"\", \"-webkit-\", \"-moz-\", \"-o-\"], r = 0; r < e.length; r++)if (t = i.createElement(\"div\"), t.style.cssText = \"width:\" + e[r] + \"calc(9px)\", t.style.length) return e[r] + \"calc\" }(), a = function (t) { return \"string\" == typeof t || t instanceof String ? i.querySelector(t) : t }, l = function (l, c) { var u, g, h, p, d, z, S, f, v = []; c = void 0 !== c ? c : {}, void 0 === c.gutterSize && (c.gutterSize = 10), void 0 === c.minSize && (c.minSize = 100), void 0 === c.snapOffset && (c.snapOffset = 30), void 0 === c.direction && (c.direction = \"horizontal\"), \"horizontal\" == c.direction ? (u = \"width\", h = \"clientWidth\", p = \"clientX\", d = \"left\", z = \"gutter gutter-horizontal\", S = \"paddingLeft\", f = \"paddingRight\", c.cursor || (c.cursor = \"ew-resize\")) : \"vertical\" == c.direction && (u = \"height\", h = \"clientHeight\", p = \"clientY\", d = \"top\", z = \"gutter gutter-vertical\", S = \"paddingTop\", f = \"paddingBottom\", c.cursor || (c.cursor = \"ns-resize\")), c.blockDrag && (z += \" blocked\"); var y = function (e) { if (!c.blockDrag) { var i = this, s = i.a, n = i.b; !i.dragging && c.onDragStart && c.onDragStart(), e.preventDefault(), i.dragging = !0, i.move = b.bind(i), i.stop = m.bind(i), t[r](\"mouseup\", i.stop), t[r](\"touchend\", i.stop), t[r](\"touchcancel\", i.stop), i.parent[r](\"mousemove\", i.move), i.parent[r](\"touchmove\", i.move), s[r](\"selectstart\", E), s[r](\"dragstart\", E), n[r](\"selectstart\", E), n[r](\"dragstart\", E), s.style.userSelect = \"none\", s.style.webkitUserSelect = \"none\", s.style.MozUserSelect = \"none\", s.style.pointerEvents = \"none\", n.style.userSelect = \"none\", n.style.webkitUserSelect = \"none\", n.style.MozUserSelect = \"none\", n.style.pointerEvents = \"none\", i.gutter.style.cursor = c.cursor, i.parent.style.cursor = c.cursor, G.call(i) } }, m = function () { if (!c.blockDrag) { var e = this, i = e.a, r = e.b; e.dragging && c.onDragEnd && c.onDragEnd(), e.dragging = !1, t[s](\"mouseup\", e.stop), t[s](\"touchend\", e.stop), t[s](\"touchcancel\", e.stop), e.parent[s](\"mousemove\", e.move), e.parent[s](\"touchmove\", e.move), delete e.stop, delete e.move, i[s](\"selectstart\", E), i[s](\"dragstart\", E), r[s](\"selectstart\", E), r[s](\"dragstart\", E), i.style.userSelect = \"\", i.style.webkitUserSelect = \"\", i.style.MozUserSelect = \"\", i.style.pointerEvents = \"\", r.style.userSelect = \"\", r.style.webkitUserSelect = \"\", r.style.MozUserSelect = \"\", r.style.pointerEvents = \"\", e.gutter.style.cursor = \"\", e.parent.style.cursor = \"\" } }, b = function (t) { var e; this.dragging && (e = \"touches\" in t ? t.touches[0][p] - this.start : t[p] - this.start, e > this.aMin + c.snapOffset + this.aGutterSize ? e < this.size - (this.bMin + c.snapOffset + this.bGutterSize) || (e = this.size - (this.bMin + this.bGutterSize)) : e = this.aMin + this.aGutterSize, w.call(this, e), c.onDrag && c.onDrag()) }, G = function () { var e = t.getComputedStyle(this.parent), i = this.parent[h] - parseFloat(e[S]) - parseFloat(e[f]); this.size = this.a[n]()[u] + this.b[n]()[u] + this.aGutterSize + this.bGutterSize, this.percentage = Math.min(this.size / i * 100, 100), this.start = this.a[n]()[d] }, w = function (t) { this.a.style[u] = o + \"(\" + t / this.size * this.percentage + \"% - \" + this.aGutterSize + \"px)\", this.b.style[u] = o + \"(\" + (this.percentage - t / this.size * this.percentage) + \"% - \" + this.bGutterSize + \"px)\" }, x = function (t, i, r) { \"string\" == typeof i || i instanceof String || (i = e ? c.sizes[g] + \"%\" : o + \"(\" + i + \"% - \" + r + \"px)\"), t.style[u] = i }, E = function () { return !1 }, M = a(l[0]).parentNode; if (!c.sizes) { var D = 100 / l.length; for (c.sizes = [], g = 0; g < l.length; g++)c.sizes.push(D) } if (!Array.isArray(c.minSize)) { var k = []; for (g = 0; g < l.length; g++)k.push(c.minSize); c.minSize = k } for (g = 0; g < l.length; g++) { var U, L = a(l[g]), O = 1 == g, B = g == l.length - 1, C = c.sizes[g], F = c.gutterSize; if (g > 0 && (U = { a: a(l[g - 1]), b: L, aMin: c.minSize[g - 1], bMin: c.minSize[g], dragging: !1, parent: M, isFirst: O, isLast: B, direction: c.direction }, U.aGutterSize = c.gutterSize, U.bGutterSize = c.gutterSize, O && (U.aGutterSize = c.gutterSize / 2), B && (U.bGutterSize = c.gutterSize / 2)), !e) { if (g > 0) { var A = i.createElement(\"div\"); A.className = z, A.style[u] = c.gutterSize + \"px\", A[r](\"mousedown\", y.bind(U)), A[r](\"touchstart\", y.bind(U)), M.insertBefore(A, L), U.gutter = A } (0 === g || g == l.length - 1) && (F = c.gutterSize / 2) } x(L, C, F), g > 0 && v.push(U) } return { setSizes: function (t) { for (var e = 0; e < t.length; e++)if (e > 0) { var i = v[e - 1]; x(i.a, t[e - 1], i.aGutterSize), x(i.b, t[e], i.bGutterSize) } }, collapse: function (t) { var e; t === v.length ? (e = v[t - 1], G.call(e), w.call(e, e.size - e.bGutterSize)) : (e = v[t], G.call(e), w.call(e, e.aGutterSize)) }, destroy: function () { for (var t = 0; t < v.length; t++)v[t].parent.removeChild(v[t].gutter), v[t].a.style[u] = \"\", v[t].b.style[u] = \"\" } } }; \"undefined\" != typeof exports ? (\"undefined\" != typeof module && module.exports && (exports = module.exports = l), exports.Split = l) : t.Split = l }).call(window);","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://use.fontawesome.com/releases/v5.0.13/css/all.css);\", \"\"]);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Inconsolata);\", \"\"]);\n\n// module\nexports.push([module.id, \".insp-wrapper {\\n  user-select: none;\\n  display: flex;\\n  font-size: 0.9em;\\n  font-family: \\\"Inconsolata\\\", sans-serif;\\n  background-color: #242424;\\n  /**\\r\\n * A tool contained in the tree panel (available for each item of the tree)\\r\\n */\\n  /**\\r\\n * The toolbar contains : \\r\\n * - a refresh tool - refresh the whole panel\\r\\n * - a popup tool - Open the inspector in a new panel\\r\\n * ...\\r\\n */\\n  /*\\r\\n* 1. Set to 0 height and width, and remove border for a slider without a thumb\\r\\n*/ }\\n  .insp-wrapper .gutter {\\n    background-color: #2c2c2c; }\\n    .insp-wrapper .gutter.gutter-vertical:not(.blocked) {\\n      cursor: ns-resize; }\\n    .insp-wrapper .gutter.gutter-horizontal:not(.blocked) {\\n      cursor: ew-resize; }\\n  .insp-wrapper .insp-right-panel {\\n    width: 750px;\\n    overflow-y: auto;\\n    display: flex;\\n    flex-direction: column;\\n    flex-shrink: 0; }\\n    .insp-wrapper .insp-right-panel.popupmode {\\n      width: 100% !important; }\\n    .insp-wrapper .insp-right-panel .top-panel {\\n      width: 100%;\\n      height: 100%;\\n      position: relative;\\n      background-color: #242424;\\n      color: #ccc;\\n      font-size: 1em; }\\n      .insp-wrapper .insp-right-panel .top-panel .tab-panel-content {\\n        width: 100%;\\n        height: calc(100% - 50px); }\\n      .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel {\\n        position: absolute;\\n        z-index: 10;\\n        top: 50px;\\n        right: 0;\\n        width: 100px;\\n        display: none;\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: center;\\n        border: 1px solid #454545;\\n        background-color: #242424; }\\n        .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab {\\n          height: 25px;\\n          width: 100%;\\n          line-height: 25px;\\n          text-align: center;\\n          background-color: #2c2c2c;\\n          cursor: pointer; }\\n          .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab:hover {\\n            background-color: #383838; }\\n          .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab:active {\\n            background-color: #454545; }\\n  .insp-wrapper .tooltip {\\n    position: absolute;\\n    top: 50px;\\n    right: 0;\\n    color: #f29766;\\n    display: none;\\n    z-index: 4;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    padding: 2px;\\n    background-color: #242424;\\n    border: 1px solid #454545; }\\n  .insp-wrapper .treeTool {\\n    margin: 3px 8px 3px 3px;\\n    cursor: pointer;\\n    position: relative; }\\n    .insp-wrapper .treeTool:hover {\\n      color: #5db0d7; }\\n    .insp-wrapper .treeTool.active {\\n      color: #5db0d7; }\\n  .insp-wrapper .tab-panel {\\n    height: 100%; }\\n    .insp-wrapper .tab-panel.searchable {\\n      height: calc(100% - 30px - 10px); }\\n    .insp-wrapper .tab-panel .texture-image {\\n      max-height: 400px; }\\n    .insp-wrapper .tab-panel .scene-actions {\\n      overflow-y: auto;\\n      padding-left: 5px; }\\n      .insp-wrapper .tab-panel .scene-actions .actions-title {\\n        font-size: 1.1em;\\n        padding-bottom: 10px;\\n        border-bottom: 1px solid #5db0d7;\\n        margin: 10px 0 10px 0; }\\n      .insp-wrapper .tab-panel .scene-actions .defaut-action, .insp-wrapper .tab-panel .scene-actions .action-radio, .insp-wrapper .tab-panel .scene-actions .action {\\n        height: 20px;\\n        line-height: 20px;\\n        width: 100%;\\n        cursor: pointer; }\\n        .insp-wrapper .tab-panel .scene-actions .defaut-action:hover, .insp-wrapper .tab-panel .scene-actions .action-radio:hover, .insp-wrapper .tab-panel .scene-actions .action:hover {\\n          background-color: #2c2c2c; }\\n        .insp-wrapper .tab-panel .scene-actions .defaut-action:active, .insp-wrapper .tab-panel .scene-actions .action-radio:active, .insp-wrapper .tab-panel .scene-actions .action:active {\\n          background-color: #383838; }\\n      .insp-wrapper .tab-panel .scene-actions .action-radio:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F111\\\";\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action-radio.active:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F192\\\";\\n        color: #5db0d7;\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F0C8\\\";\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action.active:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F14A\\\";\\n        color: #5db0d7;\\n        margin-right: 10px; }\\n  .insp-wrapper .tab-panel .shader-tree-panel {\\n    height: 30px; }\\n    .insp-wrapper .tab-panel .shader-tree-panel select {\\n      height: 30px;\\n      background-color: transparent;\\n      color: #ccc;\\n      height: 30px;\\n      width: 100%;\\n      max-width: 300px;\\n      padding-left: 15px;\\n      border: 1px solid #2c2c2c;\\n      outline: 1px solid #454545; }\\n      .insp-wrapper .tab-panel .shader-tree-panel select option {\\n        padding: 5px;\\n        color: gray; }\\n  .insp-wrapper .tab-panel .shader-panel {\\n    min-height: 100px;\\n    user-select: text;\\n    box-sizing: border-box;\\n    padding: 0 15px; }\\n    .insp-wrapper .tab-panel .shader-panel pre {\\n      margin: 0;\\n      white-space: pre-wrap; }\\n      .insp-wrapper .tab-panel .shader-panel pre code {\\n        background-color: #242424 !important;\\n        padding: 0;\\n        margin: 0; }\\n    .insp-wrapper .tab-panel .shader-panel .shader-panel-title {\\n      height: 25px;\\n      border-bottom: 1px solid #383838;\\n      text-transform: uppercase;\\n      line-height: 25px;\\n      margin-bottom: 10px; }\\n  .insp-wrapper .tab-panel .console-panel {\\n    min-height: 100px;\\n    user-select: text;\\n    box-sizing: border-box;\\n    padding: 0 15px; }\\n    .insp-wrapper .tab-panel .console-panel .console-panel-title {\\n      height: 25px;\\n      border-bottom: 1px solid #383838;\\n      text-transform: uppercase;\\n      line-height: 25px;\\n      margin-bottom: 10px; }\\n    .insp-wrapper .tab-panel .console-panel .console-panel-content {\\n      overflow-y: auto;\\n      overflow-x: hidden;\\n      height: calc(100% - 30px); }\\n    .insp-wrapper .tab-panel .console-panel .defaut-line, .insp-wrapper .tab-panel .console-panel .log, .insp-wrapper .tab-panel .console-panel .warn, .insp-wrapper .tab-panel .console-panel .error, .insp-wrapper .tab-panel .console-panel .object {\\n      word-wrap: break-word;\\n      padding: 3px 0 3px 5px; }\\n    .insp-wrapper .tab-panel .console-panel .caller {\\n      padding: 3px 0 3px 0;\\n      color: #349ccd; }\\n    .insp-wrapper .tab-panel .console-panel .log {\\n      color: white; }\\n    .insp-wrapper .tab-panel .console-panel .warn {\\n      color: orange; }\\n    .insp-wrapper .tab-panel .console-panel .error {\\n      color: orangered; }\\n    .insp-wrapper .tab-panel .console-panel .object {\\n      color: #5db0d7; }\\n  .insp-wrapper .tab-panel.stats-panel {\\n    overflow-y: auto; }\\n  .insp-wrapper .tab-panel .stats-fps {\\n    font-weight: 600;\\n    color: #f29766; }\\n  .insp-wrapper .tab-panel .stat-title1 {\\n    font-size: 1.1em;\\n    padding: 10px; }\\n  .insp-wrapper .tab-panel .stat-title2 {\\n    margin: 10px 0 10px 0;\\n    font-size: 1.05em;\\n    border-bottom: 1px solid #5db0d7;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-label {\\n    display: inline-block;\\n    width: 80%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-bottom: 1px solid #242424;\\n    border-top: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-value {\\n    display: inline-block;\\n    width: 20%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-infos {\\n    width: 100%;\\n    padding: 4px; }\\n  .insp-wrapper .tab-panel .gltf-actions {\\n    overflow-y: auto;\\n    padding-left: 5px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-title {\\n      font-size: 1.1em;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #5db0d7;\\n      margin: 10px 0 10px 0; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-action, .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox {\\n      height: 20px;\\n      line-height: 20px;\\n      width: 100%;\\n      cursor: pointer;\\n      white-space: nowrap; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-action:hover, .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox:hover {\\n        background-color: #2c2c2c; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox:before {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\F0C8\\\";\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox.active:before {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\F14A\\\";\\n      color: #5db0d7;\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-input {\\n      background-color: #2c2c2c;\\n      border: none;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #b3b3b3;\\n      padding: 5px;\\n      margin: 0px 6px 0px 0; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-input:hover {\\n        background-color: #383838; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-button {\\n      background-color: #2c2c2c;\\n      border: none;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #ccc;\\n      padding: 5px 10px;\\n      margin: 0px 6px 0px 0; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-button:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-button:active {\\n        background-color: #454545; }\\n  .insp-wrapper .tab-panel.tools-panel {\\n    overflow-y: auto; }\\n  .insp-wrapper .tab-panel .tool-title1 {\\n    font-size: 1.1em;\\n    padding: 10px; }\\n  .insp-wrapper .tab-panel .tool-title2 {\\n    margin: 10px 0 10px 0;\\n    font-size: 1.05em;\\n    border-bottom: 1px solid #5db0d7;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .tool-label, .insp-wrapper .tab-panel .tool-label-line, .insp-wrapper .tab-panel .tool-label-error {\\n    background-color: #2c2c2c;\\n    border: none;\\n    outline: none;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    color: #b3b3b3;\\n    padding: 5px;\\n    margin: 0px 6px 0px 0; }\\n  .insp-wrapper .tab-panel .tool-label-line {\\n    width: 100%; }\\n  .insp-wrapper .tab-panel .tool-label-error {\\n    color: #fa371d;\\n    width: 100%;\\n    background-color: none; }\\n  .insp-wrapper .tab-panel .tool-value {\\n    display: inline-block;\\n    width: 25%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .tool-infos {\\n    width: 100%;\\n    padding: 4px; }\\n  .insp-wrapper .tab-panel .tool-input {\\n    background-color: #2c2c2c;\\n    border: none;\\n    outline: none;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    color: #ccc;\\n    padding: 5px 10px;\\n    margin: 0px 6px 0px 0;\\n    width: 100%;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    text-align: left; }\\n    .insp-wrapper .tab-panel .tool-input:hover {\\n      background-color: #383838;\\n      cursor: pointer; }\\n    .insp-wrapper .tab-panel .tool-input:active {\\n      background-color: #454545; }\\n  .insp-wrapper .property-type {\\n    color: #5db0d7; }\\n  .insp-wrapper .property-name, .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name {\\n    color: #f29766; }\\n  .insp-wrapper .insp-tree {\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    height: calc(50% - 50px - 30px); }\\n    .insp-wrapper .insp-tree .line {\\n      padding: 3px;\\n      cursor: pointer; }\\n      .insp-wrapper .insp-tree .line:hover {\\n        background-color: #2c2c2c; }\\n      .insp-wrapper .insp-tree .line.active {\\n        background-color: #454545; }\\n        .insp-wrapper .insp-tree .line.active .line-content {\\n          background-color: #242424; }\\n      .insp-wrapper .insp-tree .line.unfolded:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F107\\\";\\n        font-weight: 900; }\\n      .insp-wrapper .insp-tree .line.folded:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F105\\\";\\n        font-weight: 900; }\\n      .insp-wrapper .insp-tree .line.unfolded.transformNode > span:first-of-type {\\n        color: #f29766; }\\n      .insp-wrapper .insp-tree .line.folded.transformNode > span:first-of-type {\\n        color: #f29766; }\\n      .insp-wrapper .insp-tree .line .line-content {\\n        padding-left: 15px; }\\n        .insp-wrapper .insp-tree .line .line-content:hover {\\n          background-color: #242424; }\\n        .insp-wrapper .insp-tree .line .line-content .line:hover:first-child {\\n          background-color: #383838; }\\n    .insp-wrapper .insp-tree .line_invisible {\\n      display: none; }\\n  .insp-wrapper .insp-details {\\n    background-color: #242424;\\n    overflow-y: auto;\\n    overflow-x: auto;\\n    color: #ccc;\\n    font-family: \\\"Inconsolata\\\", sans-serif; }\\n    .insp-wrapper .insp-details .details {\\n      padding-left: 5px; }\\n    .insp-wrapper .insp-details .base-row, .insp-wrapper .insp-details .row, .insp-wrapper .insp-details .header-row {\\n      display: flex;\\n      width: 100%; }\\n      .insp-wrapper .insp-details .base-row .base-property, .insp-wrapper .insp-details .row .base-property, .insp-wrapper .insp-details .header-row .base-property, .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name, .insp-wrapper .insp-details .base-row .prop-value, .insp-wrapper .insp-details .row .prop-value, .insp-wrapper .insp-details .header-row .prop-value {\\n        padding: 2px 0 2px 0;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n        overflow: hidden; }\\n      .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name {\\n        width: 35%; }\\n      .insp-wrapper .insp-details .base-row .prop-value, .insp-wrapper .insp-details .row .prop-value, .insp-wrapper .insp-details .header-row .prop-value {\\n        width: 59%;\\n        padding-left: 5px; }\\n        .insp-wrapper .insp-details .base-row .prop-value.clickable, .insp-wrapper .insp-details .row .prop-value.clickable, .insp-wrapper .insp-details .header-row .prop-value.clickable {\\n          cursor: pointer; }\\n          .insp-wrapper .insp-details .base-row .prop-value.clickable:hover, .insp-wrapper .insp-details .row .prop-value.clickable:hover, .insp-wrapper .insp-details .header-row .prop-value.clickable:hover {\\n            background-color: #383838; }\\n          .insp-wrapper .insp-details .base-row .prop-value.clickable:after, .insp-wrapper .insp-details .row .prop-value.clickable:after, .insp-wrapper .insp-details .header-row .prop-value.clickable:after {\\n            font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n            content: \\\"\\\\A0   \\\\A0   \\\\A0   \\\\F105\\\";\\n            font-weight: 900; }\\n    .insp-wrapper .insp-details .row:nth-child(even) {\\n      background-color: #2c2c2c; }\\n    .insp-wrapper .insp-details .row.unfolded .prop-value.clickable:after {\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\A0   \\\\A0   \\\\A0   \\\\F107\\\";\\n      font-weight: 900; }\\n    .insp-wrapper .insp-details .header-row {\\n      background-color: #2c2c2c;\\n      color: #ccc;\\n      width: 100%;\\n      max-width: 100%; }\\n      .insp-wrapper .insp-details .header-row > * {\\n        color: #ccc !important;\\n        padding: 5px 0 5px 5px !important;\\n        cursor: pointer; }\\n        .insp-wrapper .insp-details .header-row > *:hover {\\n          background-color: #383838; }\\n      .insp-wrapper .insp-details .header-row .header-col {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center; }\\n        .insp-wrapper .insp-details .header-row .header-col .sort-direction {\\n          margin-right: 5px; }\\n    .insp-wrapper .insp-details .element-viewer, .insp-wrapper .insp-details .color-element, .insp-wrapper .insp-details .texture-element {\\n      position: relative;\\n      width: 10px;\\n      height: 10px;\\n      display: inline-block;\\n      margin-left: 5px; }\\n    .insp-wrapper .insp-details .color-element {\\n      width: 20px;\\n      height: 15px; }\\n    .insp-wrapper .insp-details .texture-element {\\n      color: #f29766;\\n      margin-left: 10px; }\\n      .insp-wrapper .insp-details .texture-element .texture-viewer {\\n        color: #ccc;\\n        position: absolute;\\n        z-index: 10;\\n        bottom: 0;\\n        right: 0;\\n        display: block;\\n        width: 150px;\\n        height: 150px;\\n        border: 1px solid #454545;\\n        background-color: #242424;\\n        transform: translateX(100%) translateY(100%);\\n        display: none;\\n        flex-direction: column;\\n        justify-content: flex-start;\\n        align-items: center; }\\n        .insp-wrapper .insp-details .texture-element .texture-viewer .texture-viewer-img {\\n          margin: 10px 0 10px 0;\\n          max-width: 110px;\\n          max-height: 110px; }\\n  .insp-wrapper .tabbar {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    border-bottom: 1px solid #383838;\\n    width: 100%;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    box-sizing: border-box; }\\n    .insp-wrapper .tabbar .tab {\\n      height: calc(50px - 2px);\\n      width: auto;\\n      padding: 0 10px 0 10px;\\n      color: #ccc;\\n      line-height: 50px;\\n      text-align: center;\\n      cursor: pointer;\\n      margin: 0 5px 0 5px;\\n      box-sizing: border-box; }\\n      .insp-wrapper .tabbar .tab:hover {\\n        border-bottom: 1px solid #f29766;\\n        background-color: #2c2c2c; }\\n      .insp-wrapper .tabbar .tab:active {\\n        background-color: #383838; }\\n      .insp-wrapper .tabbar .tab.active {\\n        border-bottom: 1px solid #f29766; }\\n    .insp-wrapper .tabbar .more-tabs {\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      position: relative;\\n      border-right: 1px solid #383838; }\\n      .insp-wrapper .tabbar .more-tabs:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .tabbar .more-tabs:active {\\n        color: #f29766;\\n        background-color: #454545; }\\n      .insp-wrapper .tabbar .more-tabs.active {\\n        color: #f29766; }\\n  .insp-wrapper .toolbar {\\n    display: flex; }\\n    .insp-wrapper .toolbar .tool {\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      position: relative;\\n      border-right: 1px solid #383838; }\\n      .insp-wrapper .toolbar .tool:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .toolbar .tool:active {\\n        color: #f29766;\\n        background-color: #454545; }\\n      .insp-wrapper .toolbar .tool.active {\\n        color: #f29766; }\\n  .insp-wrapper .searchbar {\\n    border: 1px solid #2c2c2c;\\n    margin-bottom: 5px;\\n    display: flex;\\n    align-items: center;\\n    color: #b3b3b3; }\\n    .insp-wrapper .searchbar input {\\n      background-color: #242424;\\n      border: none;\\n      width: 100%;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #b3b3b3;\\n      padding: 3px 0 3px 10px;\\n      margin: 6px 0 6px 0; }\\n  .insp-wrapper input[type=\\\"range\\\"] {\\n    margin: auto;\\n    -webkit-appearance: none;\\n    position: relative;\\n    overflow: hidden;\\n    height: 15px;\\n    width: 50%;\\n    cursor: pointer;\\n    border-radius: 0;\\n    /* iOS */ }\\n  .insp-wrapper ::-webkit-slider-runnable-track {\\n    background: #ddd; }\\n  .insp-wrapper ::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    width: 20px;\\n    /* 1 */\\n    height: 15px;\\n    /* 1 */\\n    background: #fff;\\n    box-shadow: -100vw 0 0 100vw dodgerblue;\\n    border: 0px solid #999;\\n    /* 1 */ }\\n  .insp-wrapper ::-moz-range-track {\\n    height: 15px;\\n    background: #ddd; }\\n  .insp-wrapper ::-moz-range-thumb {\\n    background: #fff;\\n    height: 15px;\\n    width: 20px;\\n    border: 0px solid #999;\\n    border-radius: 0 !important;\\n    box-shadow: -100vw 0 0 100vw dodgerblue;\\n    box-sizing: border-box; }\\n  .insp-wrapper ::-ms-fill-lower {\\n    background: dodgerblue; }\\n  .insp-wrapper ::-ms-thumb {\\n    background: #fff;\\n    border: 0px solid #999;\\n    height: 15px;\\n    width: 20px;\\n    box-sizing: border-box; }\\n  .insp-wrapper ::-ms-ticks-after {\\n    display: none; }\\n  .insp-wrapper ::-ms-ticks-before {\\n    display: none; }\\n  .insp-wrapper ::-ms-track {\\n    background: #ddd;\\n    color: transparent;\\n    height: 15px;\\n    border: none; }\\n  .insp-wrapper ::-ms-tooltip {\\n    display: none; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import { Geometry } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\n\r\n\r\nexport abstract class Adapter {\r\n\r\n    protected _obj: any;\r\n    // a unique name for this adapter, to retrieve its own key in the local storage\r\n    private static _name: string = Geometry.RandomId();\r\n\r\n    constructor(obj: any) {\r\n        this._obj = obj;\r\n    }\r\n\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public abstract id(): string;\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public abstract type(): string;\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public abstract getProperties(): Array<PropertyLine>;\r\n\r\n    /** Returns true if the given object correspond to this  */\r\n    public correspondsTo(obj: any) {\r\n        return obj === this._obj;\r\n    }\r\n\r\n    /** Returns the adapter unique name */\r\n    public get name(): string {\r\n        return Adapter._name;\r\n    }\r\n\r\n    /**\r\n     * Returns the actual object used for this adapter\r\n     */\r\n    public get object(): any {\r\n        return this._obj;\r\n    }\r\n\r\n    /** Returns the list of tools available for this adapter */\r\n    public abstract getTools(): Array<AbstractTreeTool>;\r\n}\r\n","import { Scene } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\n\r\n/**\r\n * A property is a link between a data (string) and an object.\r\n */\r\nexport class Property {\r\n\r\n    /** The property name */\r\n    private _property: string;\r\n    /** The obj this property refers to */\r\n    private _obj: any;\r\n    /** The obj parent  */\r\n    private _parentObj: any;\r\n\r\n    constructor(prop: string, obj: any, parentObj?: any) {\r\n        this._property = prop;\r\n        this._obj = obj;\r\n        this._parentObj = parentObj || null;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._property;\r\n    }\r\n\r\n    public get value(): any {\r\n        return this._obj[this._property];\r\n    }\r\n    public set value(newValue: any) {\r\n        if (newValue != undefined && this._obj[this._property] != undefined) {\r\n            if (this._obj instanceof Scene) {\r\n                (<Scene>this._obj).debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                    object: this._obj,\r\n                    property: this._property,\r\n                    value: newValue,\r\n                    initialValue: (<any>this._obj)[this._property]\r\n                });\r\n            }\r\n            else {\r\n                if (this._parentObj != null) {\r\n                    // Object that have \"children\" properties : Color, Vector, imageProcessingConfiguration\r\n\r\n                    if (this._parentObj instanceof Scene) {\r\n                        (<Scene>this._parentObj).debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                            object: this._parentObj,\r\n                            property: this._property,\r\n                            value: newValue,\r\n                            initialValue: (<any>this._obj)[this._property]\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._parentObj.getScene().debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                            object: this._parentObj,\r\n                            property: this._property,\r\n                            value: newValue,\r\n                            initialValue: this._obj[this._property]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this._obj.getScene().debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                        object: this._obj,\r\n                        property: this._property,\r\n                        value: newValue,\r\n                        initialValue: this._obj[this._property]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        this._obj[this._property] = newValue;\r\n    }\r\n\r\n    public get type(): string {\r\n        return Helpers.GET_TYPE(this.value);\r\n    }\r\n\r\n    public get obj(): any {\r\n        return this._obj;\r\n    }\r\n    public set obj(newObj: any) {\r\n        this._obj = newObj;\r\n    }\r\n\r\n}\r\n","import { PropertyLine } from \"../details/PropertyLine\";\r\n\r\n\r\nexport class Scheduler {\r\n\r\n    private static _instance: Scheduler;\r\n\r\n    /** Is this scheduler in pause ? */\r\n    public pause: boolean = false;\r\n\r\n    /** All properties are refreshed every 250ms */\r\n    public static REFRESH_TIME: number = 250;\r\n\r\n    /** The list of data to update */\r\n    private _updatableProperties: Array<PropertyLine> = [];\r\n\r\n    private interval: number;\r\n\r\n    constructor() {\r\n        this.interval = setInterval(this._update.bind(this), Scheduler.REFRESH_TIME);\r\n    }\r\n\r\n    public static getInstance(): Scheduler {\r\n        if (!Scheduler._instance) {\r\n            Scheduler._instance = new Scheduler();\r\n        }\r\n        return Scheduler._instance;\r\n    }\r\n\r\n    /** Add a property line to be updated every X ms */\r\n    public add(prop: PropertyLine) {\r\n        this._updatableProperties.push(prop);\r\n    }\r\n\r\n    /** Removes the given property from the list of properties to update */\r\n    public remove(prop: PropertyLine) {\r\n        let index = this._updatableProperties.indexOf(prop);\r\n        if (index != -1) {\r\n            this._updatableProperties.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private _update() {\r\n        // If not in pause, update \r\n        if (!this.pause) {\r\n            for (let prop of this._updatableProperties) {\r\n                prop.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        window.clearInterval(this.interval);\r\n    }\r\n}\r\n","import { Helpers } from \"../helpers/Helpers\";\r\n\r\n/**\r\n * Represents a html div element. \r\n * The div is built when an instance of BasicElement is created.\r\n */\r\nexport abstract class BasicElement {\r\n\r\n    protected _div: HTMLDivElement;\r\n\r\n    constructor() {\r\n        this._div = Helpers.CreateDiv();\r\n    }\r\n\r\n    /**\r\n     * Returns the div element\r\n     */\r\n    public toHtml(): HTMLDivElement {\r\n        return this._div;\r\n    }\r\n\r\n    /**\r\n     * Build the html element\r\n     */\r\n    protected _build() { };\r\n\r\n    public abstract update(data?: any): void;\r\n\r\n    /** Default dispose method if needed */\r\n    public dispose() { };\r\n\r\n}\r\n","import { Color3, Color4 } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n * Represents a html div element. \r\n * The div is built when an instance of BasicElement is created.\r\n */\r\nexport class ColorPickerElement extends BasicElement {\r\n\r\n    protected _input: HTMLInputElement;\r\n    private pline: PropertyLine;\r\n\r\n    constructor(color: Color4 | Color3, propertyLine: PropertyLine) {\r\n        super();\r\n        let scheduler = Scheduler.getInstance();\r\n        this._div.className = 'color-element';\r\n        this._div.style.backgroundColor = this._toRgba(color);\r\n        this.pline = propertyLine;\r\n\r\n        this._input = Helpers.CreateInput();\r\n        this._input.type = 'color';\r\n        this._input.style.opacity = \"0\";\r\n        this._input.style.width = '10px';\r\n        this._input.style.height = '15px';\r\n        this._input.value = color.toHexString();\r\n\r\n        this._input.addEventListener('input', (e) => {\r\n            let color = Color3.FromHexString(this._input.value);\r\n            color.r = parseFloat(color.r.toPrecision(2));\r\n            color.g = parseFloat(color.g.toPrecision(2));\r\n            color.b = parseFloat(color.b.toPrecision(2));\r\n            this.pline.validateInput(color);\r\n            scheduler.pause = false;\r\n        });\r\n\r\n        this._div.appendChild(this._input);\r\n\r\n        this._input.addEventListener('click', (e) => {\r\n            scheduler.pause = true;\r\n        });\r\n    }\r\n\r\n    public update(color?: Color4 | Color3) {\r\n        if (color) {\r\n            this._div.style.backgroundColor = this._toRgba(color);\r\n            this._input.value = color.toHexString();\r\n        }\r\n    }\r\n\r\n    private _toRgba(color: Color4 | Color3): string {\r\n        if (color) {\r\n            let r = (color.r * 255) | 0;\r\n            let g = (color.g * 255) | 0;\r\n            let b = (color.b * 255) | 0;\r\n            let a = 1;\r\n            if (color instanceof Color4) {\r\n                a = (color as Color4).a;\r\n            }\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { Color4, CubeTexture, Engine, Mesh, Scene, StandardMaterial, Texture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div. A new canvas is created, with a new js scene, containing only the \r\n* cube texture in a cube\r\n*/\r\nexport class CubeTextureElement extends BasicElement {\r\n\r\n    /** The big div displaying the full image */\r\n    private _textureDiv: HTMLElement;\r\n\r\n    private _engine: Engine;\r\n    protected _scene: Scene;\r\n    protected _cube: Mesh;\r\n    private _canvas: HTMLCanvasElement;\r\n    protected _textureUrl: string;\r\n\r\n    // On pause the engine will not render anything\r\n    private _pause: boolean = false;\r\n\r\n    /** The texture given as a parameter should be cube. */\r\n    constructor(tex: Texture) {\r\n        super();\r\n        this._div.className = 'fa fa-search texture-element';\r\n\r\n        // Create the texture viewer\r\n        this._textureDiv = Helpers.CreateDiv('texture-viewer', this._div);\r\n        // canvas\r\n        this._canvas = Helpers.CreateElement('canvas', 'texture-viewer-img', this._textureDiv) as HTMLCanvasElement;\r\n\r\n        if (tex) {\r\n            this._textureUrl = tex.name;\r\n        }\r\n\r\n        this._div.addEventListener('mouseover', this._showViewer.bind(this, 'flex'));\r\n        this._div.addEventListener('mouseout', this._showViewer.bind(this, 'none'));\r\n\r\n    }\r\n\r\n    public update(tex?: Texture) {\r\n        if (tex && tex.url === this._textureUrl) {\r\n            // Nothing to do, as the old texture is the same as the old one\r\n        } else {\r\n            if (tex) {\r\n                this._textureUrl = tex.name;\r\n            }\r\n            if (this._engine) {\r\n                // Dispose old material and cube\r\n                if (this._cube.material) {\r\n                    this._cube.material.dispose(true, true);\r\n                }\r\n                this._cube.dispose();\r\n            } else {\r\n                this._initEngine();\r\n            }\r\n            // and create it again\r\n            this._populateScene();\r\n        }\r\n    }\r\n\r\n    /** Creates the box  */\r\n    protected _populateScene() {\r\n        // Create the hdr texture\r\n        let hdrTexture = new CubeTexture(this._textureUrl, this._scene);\r\n        hdrTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._cube = Mesh.CreateBox(\"hdrSkyBox\", 10.0, this._scene);\r\n        let hdrSkyboxMaterial = new StandardMaterial(\"skyBox\", this._scene);\r\n        hdrSkyboxMaterial.backFaceCulling = false;\r\n        hdrSkyboxMaterial.reflectionTexture = hdrTexture;\r\n        hdrSkyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n        hdrSkyboxMaterial.disableLighting = true;\r\n        this._cube.material = hdrSkyboxMaterial;\r\n        this._cube.registerBeforeRender(() => {\r\n            this._cube.rotation.y += 0.01;\r\n        })\r\n    }\r\n\r\n    /** Init the babylon engine */\r\n    private _initEngine() {\r\n        this._engine = new Engine(this._canvas);\r\n        this._scene = new Scene(this._engine);\r\n        this._scene.clearColor = new Color4(0, 0, 0, 0);\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            if (!this._pause) {\r\n                this._scene.render();\r\n            }\r\n        });\r\n\r\n        this._canvas.setAttribute('width', '110');\r\n        this._canvas.setAttribute('height', '110');\r\n    }\r\n\r\n    private _showViewer(mode: string) {\r\n        // If displaying...\r\n        if (mode != 'none') {\r\n            // ... and the canvas is not initialized                \r\n            if (!this._engine) {\r\n                this._initEngine();\r\n                this._populateScene();\r\n            }\r\n            // In every cases, unpause the engine\r\n            this._pause = false;\r\n        } else {\r\n            // hide : pause the engine\r\n            this._pause = true;\r\n        }\r\n        this._textureDiv.style.display = mode;\r\n    }\r\n\r\n    /** Removes properly the babylon engine */\r\n    public dispose() {\r\n        if (this._engine) {\r\n            this._engine.dispose();\r\n            (<any>this._engine) = null;\r\n        }\r\n    }\r\n}\r\n","import { HDRCubeTexture, Mesh, PBRMaterial, Texture } from \"babylonjs\";\r\nimport { CubeTextureElement } from \"./CubeTextureElement\";\r\n\r\n/**\r\n* Display a very small div. A new canvas is created, with a new js scene, containing only the \r\n* cube texture in a cube\r\n*/\r\nexport class HDRCubeTextureElement extends CubeTextureElement {\r\n\r\n\r\n    /** The texture given as a parameter should be cube. */\r\n    constructor(tex: Texture) {\r\n        super(tex);\r\n    }\r\n\r\n    /** Creates the box  */\r\n    protected _populateScene() {\r\n        // Create the hdr texture\r\n        let hdrTexture = new HDRCubeTexture(this._textureUrl, this._scene, 512);\r\n        hdrTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._cube = Mesh.CreateBox(\"hdrSkyBox\", 10.0, this._scene);\r\n        let hdrSkyboxMaterial = new PBRMaterial(\"skyBox\", this._scene);\r\n        hdrSkyboxMaterial.backFaceCulling = false;\r\n        hdrSkyboxMaterial.reflectionTexture = hdrTexture;\r\n        hdrSkyboxMaterial.microSurface = 1.0;\r\n        hdrSkyboxMaterial.disableLighting = true;\r\n        this._cube.material = hdrSkyboxMaterial;\r\n        this._cube.registerBeforeRender(() => {\r\n            this._cube.rotation.y += 0.01;\r\n        })\r\n    }\r\n}\r\n","import { Texture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div corresponding to the given texture. On mouse over, display the full image\r\n*/\r\nexport class TextureElement extends BasicElement {\r\n\r\n    /** The big div displaying the full image */\r\n    private _textureDiv: HTMLElement;\r\n\r\n    constructor(tex: Texture) {\r\n        super();\r\n        this._div.className = 'fa fa-search texture-element';\r\n\r\n        // Create the texture viewer\r\n        this._textureDiv = Helpers.CreateDiv('texture-viewer', this._div);\r\n        // Img\r\n        let imgDiv = Helpers.CreateDiv('texture-viewer-img', this._textureDiv);\r\n\r\n        // Texture size\r\n        let sizeDiv = Helpers.CreateDiv(null, this._textureDiv);\r\n\r\n        if (tex) {\r\n            sizeDiv.textContent = `${tex.getBaseSize().width}px x ${tex.getBaseSize().height}px`;\r\n            imgDiv.style.backgroundImage = `url('${tex.url}')`;\r\n            imgDiv.style.width = `${tex.getBaseSize().width}px`;\r\n            imgDiv.style.height = `${tex.getBaseSize().height}px`;\r\n        }\r\n\r\n        this._div.addEventListener('mouseover', this._showViewer.bind(this, 'flex'));\r\n        this._div.addEventListener('mouseout', this._showViewer.bind(this, 'none'));\r\n\r\n    }\r\n\r\n    public update(tex?: Texture) {\r\n\r\n    }\r\n\r\n    private _showViewer(mode: string) {\r\n        this._textureDiv.style.display = mode;\r\n    }\r\n}\r\n","import { Helpers } from \"./helpers/Helpers\";\r\nimport { Vector2, Vector3, Color3, Color4, Quaternion, Size, Texture, RenderTargetTexture, DynamicTexture, BaseTexture, CubeTexture, HDRCubeTexture, Sound, ArcRotateCamera, FreeCamera, Scene, TransformNode, AbstractMesh, Mesh, StandardMaterial, PBRMaterial, PhysicsImpostor, ImageProcessingConfiguration, ColorCurves } from \"babylonjs\";\r\n\r\nexport const PROPERTIES = {\r\n\r\n    /** Format the given object : \r\n     * If a format function exists, returns the result of this function.\r\n     * If this function doesn't exists, return the object type instead\r\n     */\r\n    format: (obj: any): any => {\r\n        let type = Helpers.GET_TYPE(obj) || 'type_not_defined';\r\n        if ((<any>PROPERTIES)[type] && (<any>PROPERTIES)[type].format) {\r\n            return (<any>PROPERTIES)[type].format(obj);\r\n        } else {\r\n            return Helpers.GET_TYPE(obj);\r\n        }\r\n    },\r\n    'type_not_defined': {\r\n        properties: new Array(),\r\n        format: () => ''\r\n    },\r\n    'Vector2': {\r\n        type: Vector2,\r\n        format: (vec: Vector2) => { return `x:${Helpers.Trunc(vec.x)}, y:${Helpers.Trunc(vec.y)}`; }\r\n    },\r\n    'Vector3': {\r\n        type: Vector3,\r\n        format: (vec: Vector3) => { return `x:${Helpers.Trunc(vec.x)}, y:${Helpers.Trunc(vec.y)}, z:${Helpers.Trunc(vec.z)}` }\r\n    },\r\n    'Color3': {\r\n        type: Color3,\r\n        format: (color: Color3) => { return `R:${color.r.toPrecision(2)}, G:${color.g.toPrecision(2)}, B:${color.b.toPrecision(2)}` },\r\n        slider: {\r\n            r: { min: 0, max: 1, step: 0.01 },\r\n            g: { min: 0, max: 1, step: 0.01 },\r\n            b: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'Color4': {\r\n        type: Color4,\r\n        format: (color: Color4) => { return `R:${color.r}, G:${color.g}, B:${color.b}` },\r\n        slider: {\r\n            r: { min: 0, max: 1, step: 0.01 },\r\n            g: { min: 0, max: 1, step: 0.01 },\r\n            b: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'Quaternion': {\r\n        type: Quaternion\r\n    },\r\n    'Size': {\r\n        type: Size,\r\n        format: (size: Size) => { return `Size - w:${Helpers.Trunc(size.width)}, h:${Helpers.Trunc(size.height)}` }\r\n    },\r\n    'Texture': {\r\n        type: Texture,\r\n        format: (tex: Texture) => { return tex.name }\r\n    },\r\n    'RenderTargetTexture': {\r\n        type: RenderTargetTexture\r\n    },\r\n    'DynamicTexture': {\r\n        type: DynamicTexture\r\n    },\r\n    'BaseTexture': {\r\n        type: BaseTexture\r\n    },\r\n    'CubeTexture': {\r\n        type: CubeTexture\r\n    },\r\n    'HDRCubeTexture': {\r\n        type: HDRCubeTexture\r\n    },\r\n    'Sound': {\r\n        type: Sound\r\n    },\r\n    'ArcRotateCamera': {\r\n        type: ArcRotateCamera,\r\n        slider: {\r\n            alpha: { min: 0, max: 2 * Math.PI, step: 0.01 },\r\n            beta: { min: -Math.PI, max: Math.PI, step: 0.01 },\r\n            fov: { min: 0, max: 180, step: 1 }\r\n        }\r\n    },\r\n    'FreeCamera': {\r\n        type: FreeCamera,\r\n        slider: {\r\n            fov: { min: 0, max: 180, step: 1 }\r\n        }\r\n    },\r\n    'Scene': {\r\n        type: Scene,\r\n    },\r\n    'TransformNode': {\r\n        type: TransformNode,\r\n        format: (m: TransformNode): string => { return m.name; }\r\n    },\r\n    'AbstractMesh': {\r\n        type: AbstractMesh,\r\n        format: (m: AbstractMesh): string => { return m.name; }\r\n    },\r\n    'Mesh': {\r\n        type: Mesh,\r\n        format: (m: Mesh): string => { return m.name; },\r\n        slider: {\r\n            visibility: { min: 0, max: 1, step: 0.1 }\r\n        }\r\n    },\r\n    'StandardMaterial': {\r\n        type: StandardMaterial,\r\n        format: (mat: StandardMaterial): string => { return mat.name; },\r\n        slider: {\r\n            alpha: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'PBRMaterial': {\r\n        type: PBRMaterial,\r\n        slider: {\r\n            alpha: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'PhysicsImpostor': {\r\n        type: PhysicsImpostor\r\n    },\r\n    'ImageProcessingConfiguration': {\r\n        type: ImageProcessingConfiguration\r\n    },\r\n    'ColorCurves': {\r\n        type: ColorCurves\r\n    }\r\n}\r\n","import { Nullable } from \"babylonjs\";\r\nimport { BasicElement } from \"../gui/BasicElement\";\r\nimport { ColorPickerElement } from \"../gui/ColorPickerElement\";\r\nimport { CubeTextureElement } from \"../gui/CubeTextureElement\";\r\nimport { HDRCubeTextureElement } from \"../gui/HDRCubeTextureElement\";\r\nimport { TextureElement } from \"../gui/TextureElement\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PROPERTIES } from \"../properties\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { Property } from \"./Property\";\r\n\r\nexport class PropertyFormatter {\r\n\r\n    /**\r\n     * Format the value of the given property of the given object.\r\n     */\r\n    public static format(obj: any, prop: string): string {\r\n        // Get original value;\r\n        let value = obj[prop];\r\n        // test if type PrimitiveAlignment is available (only included in canvas2d)           \r\n        return value;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A property line represents a line in the detail panel. This line is composed of : \r\n * - a name (the property name)\r\n * - a value if this property is of a type 'simple' : string, number, boolean, color, texture\r\n * - the type of the value if this property is of a complex type (Vector2, Size, ...)\r\n * - a ID if defined (otherwise an empty string is displayed)\r\n * The original object is sent to the value object who will update it at will.\r\n * \r\n * A property line can contain OTHER property line objects in the case of a complex type.\r\n * If this instance has no link to other instances, its type is ALWAYS a simple one (see above).\r\n * \r\n */\r\nexport class PropertyLine {\r\n\r\n    // The property can be of any type (Property internally can have any type), relative to this._obj\r\n    private _property: Property;\r\n    //The HTML element corresponding to this line\r\n    private _div: HTMLElement;\r\n    // The div containing the value to display. Used to update dynamically the property\r\n    private _valueDiv: HTMLElement;\r\n    // If the type is complex, this property will have child to update\r\n    private _children: Array<PropertyLine> = [];\r\n    // Array representing the simple type. All others are considered 'complex'\r\n    private static _SIMPLE_TYPE = ['number', 'string', 'boolean'];\r\n    // The number of pixel at each children step\r\n    private static _MARGIN_LEFT = 15;\r\n    // The margin-left used to display to row\r\n    private _level: number;\r\n    /** The list of viewer element displayed at the end of the line (color, texture...) */\r\n    private _elements: Array<BasicElement> = [];\r\n    /** The property parent of this one. Used to update the value of this property and to retrieve the correct object */\r\n    private _parent: Nullable<PropertyLine>;\r\n    /** The input element to display if this property is 'simple' in order to update it */\r\n    private _input: HTMLInputElement;\r\n    /** Display input handler (stored to be removed afterwards) */\r\n    private _displayInputHandler: EventListener;\r\n    /** Handler used to validate the input by pressing 'enter' */\r\n    private _validateInputHandler: EventListener;\r\n    /** Handler used to validate the input by pressing 'esc' */\r\n    private _escapeInputHandler: EventListener;\r\n    /** Handler used on focus out */\r\n    private _focusOutInputHandler: EventListener;\r\n    /** Handler used to get mouse position */\r\n    private _onMouseDownHandler: EventListener;\r\n    private _onMouseDragHandler: EventListener;\r\n    private _onMouseUpHandler: EventListener;\r\n\r\n    private _textValue: HTMLElement;\r\n    /** Save previous Y mouse position */\r\n    private _prevY: number;\r\n    /**Save value while slider is on */\r\n    private _preValue: number;\r\n\r\n    constructor(prop: Property, parent: Nullable<PropertyLine> = null, level: number = 0) {\r\n        this._property = prop;\r\n        this._level = level;\r\n        this._parent = parent;\r\n\r\n        this._div = Helpers.CreateDiv('row');\r\n        this._div.style.marginLeft = `${this._level}px`;\r\n\r\n        // Property name\r\n        let propName: HTMLElement = Helpers.CreateDiv('prop-name', this._div);\r\n        propName.textContent = `${this.name}`;\r\n\r\n        // Value\r\n        this._valueDiv = Helpers.CreateDiv('prop-value', this._div);\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.textContent = this._displayValueContent() || '-'; // Init value text node\r\n        }\r\n\r\n        this._createElements();\r\n\r\n        for (let elem of this._elements) {\r\n            this._valueDiv.appendChild(elem.toHtml());\r\n        }\r\n\r\n        this._updateValue();\r\n        // If the property type is not simple, add click event to unfold its children\r\n        if (typeof this.value === 'boolean') {\r\n            this._checkboxInput();\r\n        } else if (this._isSliderType()) {\r\n            this._rangeInput();\r\n        } else if (!this._isSimple()) {\r\n            this._valueDiv.classList.add('clickable');\r\n            this._valueDiv.addEventListener('click', this._addDetails.bind(this));\r\n        } else {\r\n            this._initInput();\r\n            this._valueDiv.addEventListener('click', this._displayInputHandler);\r\n            this._input.addEventListener('focusout', this._focusOutInputHandler);\r\n            this._input.addEventListener('keydown', this._validateInputHandler);\r\n            this._input.addEventListener('keydown', this._escapeInputHandler);\r\n        }\r\n        // Add this property to the scheduler\r\n        Scheduler.getInstance().add(this);\r\n    }\r\n\r\n    /** \r\n     * Init the input element and al its handler : \r\n     * - a click in the window remove the input and restore the old property value\r\n     * - enters updates the property\r\n     */\r\n    private _initInput() {\r\n        // Create the input element\r\n        this._input = document.createElement('input') as HTMLInputElement;\r\n        this._input.setAttribute('type', 'text');\r\n\r\n        // if the property is 'simple', add an event listener to create an input\r\n        this._displayInputHandler = this._displayInput.bind(this);\r\n        this._validateInputHandler = this._validateInput.bind(this);\r\n        this._escapeInputHandler = this._escapeInput.bind(this);\r\n        this._focusOutInputHandler = this.update.bind(this);\r\n\r\n        this._onMouseDownHandler = this._onMouseDown.bind(this);\r\n        this._onMouseDragHandler = this._onMouseDrag.bind(this);\r\n        this._onMouseUpHandler = this._onMouseUp.bind(this);\r\n    }\r\n\r\n    /** \r\n     * On enter : validates the new value and removes the input\r\n     * On escape : removes the input\r\n     */\r\n    private _validateInput(e: KeyboardEvent) {\r\n        this._input.removeEventListener('focusout', this._focusOutInputHandler);\r\n        if (e.keyCode == 13) { // Enter\r\n            this.validateInput(this._input.value);\r\n        } else if (e.keyCode == 9) { // Tab\r\n            e.preventDefault();\r\n            this.validateInput(this._input.value);\r\n        } else if (e.keyCode == 27) { // Esc : remove input\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    public validateInput(value: any, forceupdate: boolean = true): void {\r\n        this.updateObject();\r\n        if (typeof this._property.value === 'number') {\r\n            this._property.value = parseFloat(value);\r\n        } else {\r\n            this._property.value = value;\r\n        }\r\n        // Remove input\r\n        if (forceupdate) {\r\n            this.update();\r\n            // resume scheduler\r\n            Scheduler.getInstance().pause = false;\r\n        }\r\n    }\r\n\r\n    /** \r\n     * On escape : removes the input\r\n     */\r\n    private _escapeInput(e: KeyboardEvent) {\r\n        // Remove focus out handler\r\n        this._input.removeEventListener('focusout', this._focusOutInputHandler);\r\n        if (e.keyCode == 27) {\r\n            // Esc : remove input\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /** Removes the input without validating the new value */\r\n    private _removeInputWithoutValidating() {\r\n        Helpers.CleanDiv(this._valueDiv);\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.textContent = \"-\";\r\n        }\r\n        // restore elements\r\n        for (let elem of this._elements) {\r\n            this._valueDiv.appendChild(elem.toHtml());\r\n        }\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.addEventListener('click', this._displayInputHandler);\r\n        }\r\n    }\r\n\r\n    /** Replaces the default display with an input */\r\n    private _displayInput(e: any) {\r\n        // Remove the displayInput event listener\r\n        this._valueDiv.removeEventListener('click', this._displayInputHandler);\r\n        // Set input value\r\n        let valueTxt = this._valueDiv.textContent;\r\n        this._valueDiv.textContent = \"\";\r\n        this._input.value = valueTxt || \"\";\r\n        this._valueDiv.appendChild(this._input);\r\n        this._input.focus();\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._input.addEventListener('focusout', this._focusOutInputHandler);\r\n        } else if (typeof this.value === 'number') {\r\n            this._input.addEventListener('mousedown', this._onMouseDownHandler);\r\n        }\r\n\r\n        // Pause the scheduler\r\n        Scheduler.getInstance().pause = true;\r\n    }\r\n\r\n    /** Retrieve the correct object from its parent. \r\n     * If no parent exists, returns the property value.\r\n     * This method is used at each update in case the property object is removed from the original object \r\n     * (example : mesh.position = new Vector3 ; the original vector3 object is deleted from the mesh).\r\n    */\r\n    public updateObject() {\r\n        if (this._parent) {\r\n            this._property.obj = this._parent.updateObject();\r\n        }\r\n\r\n\r\n        return this._property.value;\r\n    }\r\n\r\n    // Returns the property name\r\n    public get name(): string {\r\n        // let arrayName = Helpers.Capitalize(this._property.name).match(/[A-Z][a-z]+|[0-9]+/g)\r\n        // if (arrayName) {\r\n        //     return arrayName.join(\" \");\r\n        // }\r\n        return this._property.name;\r\n    }\r\n\r\n    // Returns the value of the property\r\n    public get value(): any {\r\n        return PropertyFormatter.format(this._property.obj, this._property.name);\r\n    }\r\n\r\n    // Returns the type of the property\r\n    public get type(): string {\r\n        return this._property.type;\r\n    }\r\n\r\n    /**\r\n     * Creates elements that wil be displayed on a property line, depending on the\r\n     * type of the property.\r\n     */\r\n    private _createElements() {\r\n        // Colors\r\n        if (this.type == 'Color3' || this.type == 'Color4') {\r\n            if (!Helpers.IsBrowserIE()) {\r\n                this._elements.push(new ColorPickerElement(this.value, this));\r\n            }\r\n        }\r\n        // Texture\r\n        if (this.type == 'Texture') {\r\n            this._elements.push(new TextureElement(this.value));\r\n        }\r\n        // HDR Texture\r\n        if (this.type == 'HDRCubeTexture') {\r\n            this._elements.push(new HDRCubeTextureElement(this.value));\r\n        }\r\n        if (this.type == 'CubeTexture') {\r\n            this._elements.push(new CubeTextureElement(this.value));\r\n        }\r\n    }\r\n\r\n    // Returns the text displayed on the left of the property name : \r\n    // - If the type is simple, display its value\r\n    // - If the type is complex, but instance of Vector2, Size, display the type and its tostring\r\n    // - If the type is another one, display the Type\r\n    private _displayValueContent() {\r\n        let value = this.value;\r\n        // If the value is a number, truncate it if needed\r\n        if (typeof value === 'number') {\r\n            return Helpers.Trunc(value);\r\n        }\r\n\r\n        // If it's a string or a boolean, display its value\r\n        if (typeof value === 'string' || typeof value === 'boolean') {\r\n            return value;\r\n        }\r\n        return PROPERTIES.format(value);\r\n    }\r\n\r\n    /** Delete properly this property line. \r\n     * Removes itself from the scheduler.\r\n     * Dispose all viewer element (color, texture...)\r\n     */\r\n    public dispose() {\r\n        Scheduler.getInstance().remove(this);\r\n        for (let child of this._children) {\r\n            Scheduler.getInstance().remove(child);\r\n        }\r\n        for (let elem of this._elements) {\r\n            elem.dispose();\r\n        }\r\n        this._elements = [];\r\n    }\r\n\r\n    /** Updates the content of _valueDiv with the value of the property, \r\n     * and all HTML element correpsonding to this type.\r\n     * Elements are updated as well\r\n     */\r\n    private _updateValue() {\r\n        // Update the property object first\r\n        this.updateObject();\r\n        // Then update its value\r\n        // this._valueDiv.textContent = \" \"; // TOFIX this removes the elements after\r\n        if (typeof this.value === 'boolean') {\r\n            this._checkboxInput();\r\n        } else if (this._isSliderType()) { // Add slider when parent have slider property\r\n            this._rangeInput();\r\n        } else {\r\n            this._valueDiv.childNodes[0].nodeValue = this._displayValueContent();\r\n\r\n            //Doing the Hexa convertion\r\n            if ((this._property.type == \"Color3\" && this._children.length == 5 && this._children[1].value == true) || (this._property.type == \"Color4\" && this._children.length == 6 && this._children[1].value == true)) {\r\n                if (this._children[0] != undefined && this._children[0].name == \"hex\") {\r\n                    let hexLineString = this._children[0].value;\r\n                    let rValue = (parseInt((hexLineString.slice(1, 3)), 16)) * (1 / 255);\r\n                    let rValueRound = Math.round(100 * rValue) / 100;\r\n                    this.value.r = rValueRound;\r\n                    let gValue = (parseInt((hexLineString.slice(3, 5)), 16)) * (1 / 255);\r\n                    let gValueRound = Math.round(100 * gValue) / 100;\r\n                    this.value.g = gValueRound;\r\n                    let bValue = (parseInt((hexLineString.slice(5, 7)), 16)) * (1 / 255);\r\n                    let bValueRound = Math.round(100 * bValue) / 100;\r\n                    this.value.b = bValueRound;\r\n                    if (this._children[2].name == \"a\") {\r\n                        let aValue = (parseInt((hexLineString.slice(7, 9)), 16)) * (1 / 255);\r\n                        let aValueRound = Math.round(100 * aValue) / 100;\r\n                        this.value.a = aValueRound;\r\n                    }\r\n                }\r\n            } else if (this._property.type == \"Color3\" || this._property.type == \"Color4\") {\r\n                if (this._property.value.hex != undefined && this._property.value.hex != null) {\r\n                    let hexLineInfos = [];\r\n                    let valHexR = ((this._property.value.r * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexR);\r\n                    if (valHexR == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    let valHexG = ((this._property.value.g * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexG);\r\n                    if (valHexG == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    let valHexB = ((this._property.value.b * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexB);\r\n                    if (valHexB == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    if (this._property.value.a != undefined) {\r\n                        let valHexA = ((this._property.value.a * 255) | 0).toString(16);\r\n                        hexLineInfos.push(valHexA);\r\n                        if (valHexA == \"0\") {\r\n                            hexLineInfos.push(\"0\");\r\n                        }\r\n                    }\r\n                    hexLineInfos.unshift(\"#\");\r\n                    let hexLineString = hexLineInfos.join(\"\");\r\n                    this._property.value.hex = hexLineString;\r\n                    hexLineInfos.length = 0;\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n        for (let elem of this._elements) {\r\n            elem.update(this.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the property division with the new property value. \r\n     * If this property is complex, update its child, otherwise update its text content\r\n     */\r\n    public update() {\r\n        this._removeInputWithoutValidating();\r\n        this._updateValue();\r\n    }\r\n\r\n    /**\r\n     * Returns true if the type of this property is simple, false otherwise.\r\n     * Returns true if the value is null\r\n     */\r\n    private _isSimple(): boolean {\r\n        if (this.value != null && this.type !== 'type_not_defined') {\r\n            if (PropertyLine._SIMPLE_TYPE.indexOf(this.type) == -1) {\r\n                // complex type : return the type name\r\n                return false;\r\n            } else {\r\n                // simple type : return value\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._div;\r\n    }\r\n\r\n    public closeDetails() {\r\n        if (this._div.classList.contains('unfolded')) {\r\n            // Remove class unfolded\r\n            this._div.classList.remove('unfolded');\r\n            // remove html children\r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.removeChild(child.toHtml());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add sub properties in case of a complex type\r\n     */\r\n    private _addDetails() {\r\n        if (this._div.classList.contains('unfolded')) {\r\n            // Remove class unfolded\r\n            this._div.classList.remove('unfolded');\r\n            // remove html children\r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.removeChild(child.toHtml());\r\n                }\r\n            }\r\n        } else {\r\n            // if children does not exists, generate it\r\n            this._div.classList.toggle('unfolded');\r\n            if (this._children.length == 0) {\r\n\r\n                let objToDetail = this.value;\r\n\r\n                // Display all properties that are not functions\r\n                let propToDisplay = Helpers.GetAllLinesPropertiesAsString(objToDetail);\r\n                // special case for color3\r\n                if ((propToDisplay.indexOf('r') && propToDisplay.indexOf('g') && propToDisplay.indexOf('b')) == 0) {\r\n                    propToDisplay.sort();\r\n                } else {\r\n                    propToDisplay.sort().reverse();\r\n                }\r\n                for (let prop of propToDisplay) {\r\n                    let infos = new Property(prop, this._property.value, this._property.obj);\r\n                    let child = new PropertyLine(infos, this, this._level + PropertyLine._MARGIN_LEFT);\r\n                    this._children.push(child);\r\n                }\r\n                //Add the Hexa converter\r\n                if ((propToDisplay.indexOf('r') && propToDisplay.indexOf('g') && propToDisplay.indexOf('b') && propToDisplay.indexOf('a')) == 0) {\r\n                    let hexLineInfos = [];\r\n                    let hexLinePropCheck = new Property(\"hexEnable\", this._property.value, this._property.obj);\r\n                    hexLinePropCheck.value = false;\r\n                    let hexLineCheck = new PropertyLine(hexLinePropCheck, this, this._level + PropertyLine._MARGIN_LEFT);\r\n                    this._children.unshift(hexLineCheck);\r\n                    for (let prop of propToDisplay) {\r\n                        let infos = new Property(prop, this._property.value, this._property.obj);\r\n                        let valHex = ((infos.value * 255) | 0).toString(16);\r\n                        hexLineInfos.push(valHex);\r\n                        if (valHex == \"0\") {\r\n                            hexLineInfos.push(\"0\");\r\n                        }\r\n                    }\r\n                    hexLineInfos.push(\"#\");\r\n                    hexLineInfos.reverse();\r\n                    let hexLineString = hexLineInfos.join(\"\");\r\n\r\n                    let hexLineProp = new Property(\"hex\", this._property.value, this._property.obj);\r\n                    hexLineProp.value = hexLineString;\r\n                    let hexLine = new PropertyLine(hexLineProp, this, this._level + PropertyLine._MARGIN_LEFT);\r\n\r\n                    this._children.unshift(hexLine);\r\n                }\r\n            }\r\n            // otherwise display it    \r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.insertBefore(child.toHtml(), this._div.nextSibling);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh mouse position on y axis\r\n     * @param e \r\n     */\r\n    private _onMouseDrag(e: MouseEvent): void {\r\n        const diff = this._prevY - e.clientY;\r\n        this._input.value = (this._preValue + diff).toString();\r\n    }\r\n\r\n    /**\r\n     * Save new value from slider\r\n     * @param e \r\n     */\r\n    private _onMouseUp(e: MouseEvent): void {\r\n        window.removeEventListener('mousemove', this._onMouseDragHandler);\r\n        window.removeEventListener('mouseup', this._onMouseUpHandler);\r\n        this._prevY = e.clientY;\r\n    }\r\n\r\n    /**\r\n     * Start record mouse position\r\n     * @param e \r\n     */\r\n    private _onMouseDown(e: MouseEvent): void {\r\n        this._prevY = e.clientY;\r\n        this._preValue = this.value;\r\n        window.addEventListener('mousemove', this._onMouseDragHandler);\r\n        window.addEventListener('mouseup', this._onMouseUpHandler);\r\n    }\r\n\r\n    /**\r\n     * Create input entry\r\n     */\r\n    private _checkboxInput() {\r\n        if (this._valueDiv.childElementCount < 1) { // Prevent display two checkbox\r\n            this._input = Helpers.CreateInput('checkbox-element', this._valueDiv);\r\n            this._input.type = 'checkbox'\r\n            this._input.checked = this.value;\r\n            this._input.addEventListener('change', () => {\r\n                Scheduler.getInstance().pause = true;\r\n                this.validateInput(!this.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    private _rangeInput() {\r\n        if (this._valueDiv.childElementCount < 1) { // Prevent display two input range\r\n            this._input = Helpers.CreateInput('slider-element', this._valueDiv);\r\n            this._input.type = 'range';\r\n            this._input.style.display = 'inline-block';\r\n            this._input.min = this._getSliderProperty().min;\r\n            this._input.max = this._getSliderProperty().max;\r\n            this._input.step = this._getSliderProperty().step;\r\n            this._input.value = this.value;\r\n\r\n            this._validateInputHandler = this._rangeHandler.bind(this)\r\n            this._input.addEventListener('input', this._validateInputHandler)\r\n            this._input.addEventListener('change', () => {\r\n                Scheduler.getInstance().pause = false;\r\n            })\r\n\r\n            this._textValue = Helpers.CreateDiv('value-text', this._valueDiv);\r\n            this._textValue.innerText = Helpers.Trunc(this.value).toString();\r\n            this._textValue.style.paddingLeft = '10px';\r\n            this._textValue.style.display = 'inline-block';\r\n        }\r\n    }\r\n\r\n    private _rangeHandler() {\r\n        Scheduler.getInstance().pause = true;\r\n        //this._input.style.backgroundSize = ((parseFloat(this._input.value) - parseFloat(this._input.min)) * 100 / ( parseFloat(this._input.max) - parseFloat(this._input.min))) + '% 100%'\r\n        this._textValue.innerText = this._input.value;\r\n        this.validateInput(this._input.value, false);\r\n    }\r\n\r\n    private _isSliderType() { //Check if property have slider definition\r\n        return this._property &&\r\n            PROPERTIES.hasOwnProperty(this._property.obj.constructor.name) &&\r\n            (<any>PROPERTIES)[this._property.obj.constructor.name].hasOwnProperty('slider') &&\r\n            (<any>PROPERTIES)[this._property.obj.constructor.name].slider.hasOwnProperty(this.name);\r\n    }\r\n\r\n    private _getSliderProperty() {\r\n        return (<any>PROPERTIES)[this._property.obj.constructor.name].slider[this.name]\r\n    }\r\n}\r\n","\r\nimport { PROPERTIES } from \"./properties\";\r\n\r\nexport type GUITyping = typeof import(\"babylonjs-gui\");\r\n\r\nexport let guiLoaded: boolean = false;\r\n/**\r\n  * Function that add gui objects properties to the variable PROPERTIES\r\n  */\r\nexport function loadGUIProperties(GUI: GUITyping) {\r\n\r\n    guiLoaded = !!GUI;\r\n\r\n    if (guiLoaded) {\r\n\r\n        let PROPERTIES_GUI = {\r\n            'ValueAndUnit': {\r\n                type: GUI.ValueAndUnit,\r\n                properties: ['_value', 'unit'],\r\n                format: (valueAndUnit: import(\"babylonjs-gui\").ValueAndUnit) => { return valueAndUnit }\r\n            },\r\n            'Control': {\r\n                type: GUI.Control,\r\n                properties: [\r\n                    '_alpha',\r\n                    '_fontFamily',\r\n                    '_color',\r\n                    '_scaleX',\r\n                    '_scaleY',\r\n                    '_rotation',\r\n                    '_currentMeasure',\r\n                    '_width',\r\n                    '_height',\r\n                    '_left',\r\n                    '_top',\r\n                    '_linkedMesh',\r\n                    'isHitTestVisible',\r\n                    'isPointerBlocker',\r\n                ],\r\n                format: (control: import(\"babylonjs-gui\").Control) => { return control.name }\r\n            },\r\n            'Button': {\r\n                type: GUI.Button,\r\n                properties: new Array(),\r\n                format: (button: import(\"babylonjs-gui\").Button) => { return button.name }\r\n            },\r\n            'ColorPicker': {\r\n                type: GUI.ColorPicker,\r\n                properties: ['_value'],\r\n                format: (colorPicker: import(\"babylonjs-gui\").ColorPicker) => { return colorPicker.name }\r\n            },\r\n            'Checkbox': {\r\n                type: GUI.Checkbox,\r\n                properties: ['_isChecked', '_background'],\r\n                format: (checkbox: import(\"babylonjs-gui\").Checkbox) => { return checkbox.name }\r\n            },\r\n            'Ellipse': {\r\n                type: GUI.Ellipse,\r\n                properties: ['_thickness'],\r\n                format: (ellipse: import(\"babylonjs-gui\").Ellipse) => { return ellipse.name }\r\n            },\r\n            'Image': {\r\n                type: GUI.Image,\r\n                properties: [\r\n                    '_imageWidth',\r\n                    '_imageHeight',\r\n                    '_loaded',\r\n                    '_source',\r\n                ],\r\n                format: (image: import(\"babylonjs-gui\").Image) => { return image.name }\r\n            },\r\n            'Line': {\r\n                type: GUI.Line,\r\n                properties: ['_lineWidth',\r\n                    '_background',\r\n                    '_x1',\r\n                    '_y1',\r\n                    '_x2',\r\n                    '_y2',\r\n                ],\r\n                format: (line: import(\"babylonjs-gui\").Line) => { return line.name }\r\n            },\r\n            'RadioButton': {\r\n                type: GUI.RadioButton,\r\n                properties: ['_isChecked', '_background'],\r\n                format: (radioButton: import(\"babylonjs-gui\").RadioButton) => { return radioButton.name }\r\n            },\r\n            'Rectangle': {\r\n                type: GUI.Rectangle,\r\n                properties: ['_thickness', '_cornerRadius'],\r\n                format: (rectangle: import(\"babylonjs-gui\").Rectangle) => { return rectangle.name }\r\n            },\r\n            'Slider': {\r\n                type: GUI.Slider,\r\n                properties: [\r\n                    '_minimum',\r\n                    '_maximum',\r\n                    '_value',\r\n                    '_background',\r\n                    '_borderColor',\r\n                ],\r\n                format: (slider: import(\"babylonjs-gui\").Slider) => { return slider.name }\r\n            },\r\n            'StackPanel': {\r\n                type: GUI.StackPanel,\r\n                properties: ['_isVertical'],\r\n                format: (stackPanel: import(\"babylonjs-gui\").StackPanel) => { return stackPanel.name }\r\n            },\r\n            'TextBlock': {\r\n                type: GUI.TextBlock,\r\n                properties: ['_text', '_textWrapping'],\r\n                format: (textBlock: import(\"babylonjs-gui\").TextBlock) => { return textBlock.name }\r\n            },\r\n            'Container': {\r\n                type: GUI.Container,\r\n                properties: ['_background'],\r\n                format: (container: import(\"babylonjs-gui\").Container) => { return container.name }\r\n            },\r\n        }\r\n\r\n        for (let prop in PROPERTIES_GUI) {\r\n            (<any>PROPERTIES)[prop] = (<any>PROPERTIES_GUI)[prop];\r\n        }\r\n    }\r\n} \r\n","import { Nullable } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\n\r\n\r\n/**\r\n * Creates a tooltip for the parent of the given html element\r\n */\r\nexport class Tooltip {\r\n\r\n    /** The tooltip is displayed for this element */\r\n    private _elem: HTMLElement;\r\n\r\n    /** The tooltip div */\r\n    private _infoDiv: HTMLDivElement;\r\n\r\n    constructor(elem: HTMLElement, tip: string, attachTo: Nullable<HTMLElement> = null) {\r\n\r\n        this._elem = elem;\r\n        if (!attachTo) {\r\n            attachTo = this._elem.parentElement;\r\n        }\r\n        this._infoDiv = Helpers.CreateDiv('tooltip', <HTMLElement>attachTo) as HTMLDivElement;\r\n\r\n\r\n        this._elem.addEventListener('mouseover', () => {\r\n            this._infoDiv.textContent = tip;\r\n            this._infoDiv.style.display = 'block'\r\n        });\r\n        this._elem.addEventListener('mouseout', () => { this._infoDiv.style.display = 'none' });\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { Tooltip } from \"../gui/Tooltip\";\r\n\r\nexport abstract class AbstractTool {\r\n    private _elem: HTMLElement;\r\n    protected _inspector: Inspector;\r\n\r\n    constructor(iconSet: string, icon: string, parent: HTMLElement, inspector: Inspector, tooltip: string) {\r\n        this._inspector = inspector;\r\n\r\n        this._elem = Inspector.DOCUMENT.createElement('i');\r\n        this._elem.className = `tool ${iconSet} ${icon}`;\r\n        parent.appendChild(this._elem);\r\n\r\n        this._elem.addEventListener('click', (e) => {\r\n            this.action();\r\n        });\r\n\r\n        new Tooltip(this._elem, tooltip);\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of this tool, 0 by default\r\n    */\r\n    public getPixelWidth(): number {\r\n        let style = Inspector.WINDOW.getComputedStyle(this._elem);\r\n\r\n        if (!style.marginLeft || !style.marginRight) {\r\n            return 0;\r\n        }\r\n\r\n        let left = parseFloat(style.marginLeft.substr(0, style.marginLeft.length - 2)) || 0;\r\n        let right = parseFloat(style.marginRight.substr(0, style.marginRight.length - 2)) || 0;\r\n        return (this._elem.clientWidth || 0) + left + right;\r\n    }\r\n\r\n    /** \r\n     * Updates the icon of this tool with the given string\r\n     */\r\n    protected _updateIcon(icon: string) {\r\n        this._elem.className = `tool fa ${icon}`;\r\n    }\r\n\r\n    public abstract action(): void;\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class RefreshTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-sync', parent, inspector, 'Refresh the current tab');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.refresh();\r\n    }\r\n}\r\n","import { AbstractMesh, Nullable, Scene } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\nimport { guiLoaded } from \"../properties_gui\";\r\n\r\nexport class LabelTool extends AbstractTool {\r\n\r\n    /** True if label are displayed, false otherwise */\r\n    private _isDisplayed: boolean = false;\r\n    private _advancedTexture: Nullable<any/*AdvancedDynamicTexture*/> = null;\r\n    private _labelInitialized: boolean = false;\r\n    private _scene: Nullable<Scene> = null;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-tags', parent, inspector, 'Display mesh names on the canvas');\r\n\r\n        this._scene = inspector.scene;\r\n    }\r\n\r\n    public dispose() {\r\n\r\n        if (this._advancedTexture) {\r\n            this._advancedTexture.dispose();\r\n        }\r\n    }\r\n\r\n    private _checkGUILoaded(): boolean {\r\n        return guiLoaded;\r\n    }\r\n\r\n    private _initializeLabels() {\r\n\r\n        // Can't initialize them if the GUI lib is not loaded yet\r\n        if (!this._checkGUILoaded()) {\r\n            return;\r\n        }\r\n\r\n\r\n        // Check if the label are already initialized and quit if it's the case\r\n        if (this._labelInitialized || !this._scene) {\r\n            return false;\r\n        }\r\n        // Create the canvas that will be used to display the labels\r\n        this._advancedTexture = Inspector.GUIObject.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n        // Create label for all the Meshes, Lights and Cameras\r\n        // Those that will be created/removed after this method is called will be taken care by the event handlers added below\r\n\r\n        for (let m of this._scene.meshes) {\r\n            this._createLabel(m, Inspector.GUIObject);\r\n        }\r\n\r\n        this._scene.onNewMeshAddedObservable.add((m) => {\r\n            this._createLabel(m, Inspector.GUIObject);\r\n        });\r\n\r\n        this._scene.onMeshRemovedObservable.add((m) => {\r\n            this._removeLabel(m);\r\n        });\r\n\r\n        this._labelInitialized = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    private _createLabel(mesh: AbstractMesh, GUI: typeof import(\"babylonjs-gui\")) {\r\n        // Don't create label for \"system nodes\" (starting and ending with ###)\r\n        let name = mesh.name;\r\n\r\n        if (Helpers.IsSystemName(name)) {\r\n            return;\r\n        }\r\n\r\n        if (mesh && this._advancedTexture) {\r\n            let rect1: import(\"babylonjs-gui\").Rectangle = new GUI.Rectangle();\r\n            rect1.width = 4 + 10 * name.length + \"px\";\r\n            rect1.height = \"22px\";\r\n            rect1.background = \"rgba(0,0,0,0.6)\";\r\n            rect1.color = \"black\";\r\n            this._advancedTexture.addControl(rect1);\r\n\r\n            let label: import(\"babylonjs-gui\").TextBlock = new GUI.TextBlock();\r\n            label.text = name;\r\n            label.fontSize = 12;\r\n            rect1.addControl(label);\r\n\r\n            rect1.linkWithMesh(mesh);\r\n        }\r\n    }\r\n\r\n    private _removeLabel(mesh: AbstractMesh) {\r\n        if (!this._advancedTexture) {\r\n            return;\r\n        }\r\n        for (let g of this._advancedTexture._rootContainer.children) {\r\n            let ed = g._linkedMesh;\r\n            if (ed === mesh) {\r\n                this._advancedTexture.removeControl(g);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Action : Display/hide mesh names on the canvas\r\n    public action() {\r\n        // Don't toggle if the script is not loaded\r\n        if (!this._checkGUILoaded()) {\r\n            return;\r\n        }\r\n\r\n        // Toggle the label display state\r\n        this._isDisplayed = !this._isDisplayed;\r\n\r\n        // Check if we have to display the labels\r\n        if (this._isDisplayed) {\r\n            this._initializeLabels();\r\n            if (this._advancedTexture)\r\n                this._advancedTexture._rootContainer.isVisible = true;\r\n\r\n        }\r\n\r\n        // Or to hide them\r\n        else {\r\n            if (this._advancedTexture)\r\n                this._advancedTexture._rootContainer.isVisible = false;\r\n        }\r\n    }\r\n}\r\n","import { AbstractMesh } from \"babylonjs\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PickTool extends AbstractTool {\r\n\r\n    private _isActive: boolean = false;\r\n    private _pickHandler: (evt: Event) => void;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-mouse-pointer', parent, inspector, 'Select a mesh in the scene');\r\n\r\n        // Create handler\r\n        this._pickHandler = this._pickMesh.bind(this);\r\n    }\r\n\r\n    // Action : find the corresponding tree item in the correct tab and display it\r\n    public action() {\r\n        if (this._isActive) {\r\n            this._deactivate();\r\n        } else {\r\n            this.toHtml().classList.add('active');\r\n            // Add event handler : pick on a mesh in the scene\r\n            let canvas = <HTMLElement>this._inspector.scene.getEngine().getRenderingCanvas();\r\n            canvas.addEventListener('click', this._pickHandler);\r\n            this._isActive = true;\r\n        }\r\n    }\r\n\r\n    /** Deactivate this tool */\r\n    private _deactivate() {\r\n        this.toHtml().classList.remove('active');\r\n        // Remove event handler\r\n        let canvas = <HTMLElement>this._inspector.scene.getEngine().getRenderingCanvas();\r\n        canvas.removeEventListener('click', this._pickHandler);\r\n        this._isActive = false;\r\n    }\r\n\r\n    /** Pick a mesh in the scene */\r\n    private _pickMesh(evt: PointerEvent) {\r\n        let pos = this._updatePointerPosition(evt);\r\n        let pi = this._inspector.scene.pick(pos.x, pos.y, (mesh: AbstractMesh) => { return true });\r\n\r\n        if (pi && pi.pickedMesh) {\r\n            this._inspector.displayObjectDetails(pi.pickedMesh);\r\n        }\r\n        this._deactivate();\r\n    }\r\n\r\n    private _updatePointerPosition(evt: PointerEvent): { x: number, y: number } {\r\n        let canvasRect = <ClientRect>this._inspector.scene.getEngine().getRenderingCanvasClientRect();\r\n        let pointerX = evt.clientX - canvasRect.left;\r\n        let pointerY = evt.clientY - canvasRect.top;\r\n        return { x: pointerX, y: pointerY };\r\n    };\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PopupTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fas', 'fa-external-link-alt', parent, inspector, 'Open the inspector in a popup');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.openPopup();\r\n    }\r\n}\r\n","import { AbstractTool } from \"./AbstractTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\nexport class FullscreenTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-expand', parent, inspector, 'Open the scene in fullscreen, press Esc to exit');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n\r\n        var elem = document.body;\r\n\r\n        function requestFullScreen(element: HTMLElement) {\r\n            // Supports most browsers and their versions.\r\n            var requestMethod = element.requestFullscreen || element.webkitRequestFullScreen;\r\n            requestMethod.call(element);\r\n        }\r\n\r\n        requestFullScreen(elem);\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PauseScheduleTool extends AbstractTool {\r\n\r\n    private _isPause: boolean = false;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-pause', parent, inspector, 'Pause the automatic update of properties');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        if (this._isPause) {\r\n            Scheduler.getInstance().pause = false;\r\n            this._updateIcon('fa-pause');\r\n        } else {\r\n            Scheduler.getInstance().pause = true;\r\n            this._updateIcon('fa-play');\r\n        }\r\n        this._isPause = !this._isPause;\r\n    }\r\n}\r\n","import { AbstractTool } from \"./AbstractTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\n/**\r\n * Removes the inspector panel\r\n */\r\nexport class DisposeTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-times', parent, inspector, 'Close the inspector panel');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.dispose();\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\nimport { RefreshTool } from \"./RefreshTool\";\r\nimport { LabelTool } from \"./LabelTool\";\r\nimport { PickTool } from \"./PickTool\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PopupTool } from \"./PopupTool\";\r\nimport { FullscreenTool } from \"./FullscreenTool\";\r\nimport { PauseScheduleTool } from \"./PauseScheduleTool\";\r\nimport { DisposeTool } from \"./DisposeTool\";\r\n\r\n\r\nexport class Toolbar extends BasicElement {\r\n\r\n    private _inspector: Inspector;\r\n    private _tools: Array<AbstractTool> = []\r\n\r\n    constructor(inspector: Inspector) {\r\n        super();\r\n        this._inspector = inspector;\r\n        this._build();\r\n\r\n        this._addTools();\r\n    }\r\n\r\n    // A toolbar cannot be updated\r\n    public update() { };\r\n\r\n    protected _build() {\r\n        this._div.className = 'toolbar';\r\n    };\r\n\r\n    private _addTools() {\r\n        // Refresh\r\n        this._tools.push(new RefreshTool(this._div, this._inspector));\r\n        // Display labels\r\n        this._tools.push(new LabelTool(this._div, this._inspector));\r\n        // Pick object\r\n        this._tools.push(new PickTool(this._div, this._inspector));\r\n\r\n        // Add the popup mode only if the inspector is not in popup mode and if the brower is not edge\r\n        // Edge is \r\n        if (!this._inspector.popupMode && !Helpers.IsBrowserEdge()) {\r\n            this._tools.push(new PopupTool(this._div, this._inspector));\r\n        }\r\n        // FullScreen\r\n        this._tools.push(new FullscreenTool(this._div, this._inspector));\r\n\r\n        // Pause schedule\r\n        this._tools.push(new PauseScheduleTool(this._div, this._inspector));\r\n\r\n        // Pause schedule\r\n        this._tools.push(new DisposeTool(this._div, this._inspector));\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of the tabbar, \r\n     * that corresponds to the sum of the width of each tab + toolbar width\r\n    */\r\n    public getPixelWidth(): number {\r\n        let sum = 0;\r\n        for (let tool of this._tools) {\r\n            sum += tool.getPixelWidth();\r\n        }\r\n\r\n        return sum;\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\n\r\n\r\nexport abstract class AbstractTreeTool {\r\n    protected _elem: HTMLElement;\r\n    /** Is the tool enabled ? */\r\n    protected _on: boolean = false;\r\n\r\n    constructor() {\r\n        this._elem = Inspector.DOCUMENT.createElement('i');\r\n        this._elem.className = 'treeTool fa';\r\n        this._addEvents();\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    protected _addEvents() {\r\n        this._elem.addEventListener('click', (e) => {\r\n            this.action();\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Action launched when clicked on this element\r\n     * Should be overrided\r\n     */\r\n    protected action() {\r\n        this._on = !this._on;\r\n    }\r\n\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle its bounding box\r\n */\r\nexport interface IToolBoundingBox {\r\n    isBoxVisible: () => boolean,\r\n    setBoxVisible: (b: boolean) => void;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class BoundingBox extends AbstractTreeTool {\r\n\r\n    private _obj: IToolBoundingBox;\r\n\r\n    constructor(obj: IToolBoundingBox) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-cube');\r\n        this._on = this._obj.isBoxVisible();\r\n        this._check();\r\n    }\r\n\r\n    // For a checkbox, set visible/invisible the corresponding prim\r\n    protected action() {\r\n        super.action();\r\n        // update object and gui according to the new status\r\n        this._check();\r\n    }\r\n\r\n    private _check() {\r\n        if (this._on) {\r\n            // set icon eye\r\n            this._elem.classList.add('active');\r\n        } else {\r\n            // set icon eye-slash\r\n            this._elem.classList.remove('active');\r\n        }\r\n        this._obj.setBoxVisible(this._on);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle its visibility\r\n */\r\nexport interface IToolVisible {\r\n    isVisible: () => boolean,\r\n    setVisible: (b: boolean) => void;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class Checkbox extends AbstractTreeTool {\r\n\r\n    private _obj: IToolVisible;\r\n\r\n    constructor(obj: IToolVisible) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-eye');\r\n        this._on = this._obj.isVisible();\r\n        this._check(true);\r\n    }\r\n\r\n    // For a checkbox, set visible/invisible the corresponding prim\r\n    protected action() {\r\n        super.action();\r\n        // update object and gui according to the new status\r\n        this._check();\r\n    }\r\n\r\n    private _check(dontEnable?: boolean) {\r\n        if (this._on) {\r\n            // set icon eye\r\n            this._elem.classList.add('fa-eye');\r\n            this._elem.classList.add('active');\r\n            this._elem.classList.remove('fa-eye-slash');\r\n        } else {\r\n            // set icon eye-slash\r\n            this._elem.classList.remove('fa-eye');\r\n            this._elem.classList.remove('active');\r\n            this._elem.classList.add('fa-eye-slash');\r\n        }\r\n        if (!dontEnable) {\r\n            this._obj.setVisible(this._on);\r\n        }\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle a debug area\r\n */\r\nexport interface IToolDebug {\r\n    debug: (b: boolean) => void;\r\n}\r\n\r\nexport class DebugArea extends AbstractTreeTool {\r\n\r\n    private _obj: IToolDebug;\r\n\r\n    constructor(obj: IToolDebug) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-wrench');\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        if (this._on) {\r\n            // set icon activated\r\n            this._elem.classList.add('active');\r\n        } else {\r\n            // set icon deactivated\r\n            this._elem.classList.remove('active');\r\n        }\r\n        this._obj.debug(this._on);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\nimport { Tooltip } from \"../gui/Tooltip\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to retrieve its info\r\n */\r\nexport interface IToolInfo {\r\n    getInfo: () => string;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class Info extends AbstractTreeTool {\r\n\r\n    private _obj: IToolInfo;\r\n\r\n    constructor(obj: IToolInfo) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-info-circle');\r\n\r\n        new Tooltip(this._elem, this._obj.getInfo(), this._elem);\r\n    }\r\n\r\n    // Nothing to do on click\r\n    protected action() {\r\n        super.action();\r\n    }\r\n}\r\n","import { AbstractMesh, Debug, Node, Nullable, Observer, Scene, TransformNode, Vector3 } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { BoundingBox, IToolBoundingBox } from \"../treetools/BoundingBox\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { DebugArea, IToolDebug } from \"../treetools/DebugArea\";\r\nimport { Info, IToolInfo } from \"../treetools/Info\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class MeshAdapter\r\n    extends Adapter\r\n    implements IToolVisible, IToolDebug, IToolBoundingBox, IToolInfo {\r\n\r\n    /** Keep track of the axis of the actual object */\r\n    private _axesViewer: Nullable<any>;\r\n    private onBeforeRenderObserver: Nullable<Observer<Scene>>;\r\n\r\n    constructor(mesh: Node) {\r\n        super(mesh);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        tools.push(new DebugArea(this));\r\n        if (this._obj instanceof AbstractMesh) {\r\n            if ((this._obj as AbstractMesh).getTotalVertices() > 0) {\r\n                tools.push(new BoundingBox(this));\r\n            }\r\n        }\r\n\r\n\r\n        tools.push(new Info(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._obj.setEnabled(b);\r\n        this._obj.isVisible = b;\r\n    }\r\n    public isVisible(): boolean {\r\n        return this._obj.isEnabled() && (this._obj.isVisible === undefined || this._obj.isVisible);\r\n    }\r\n    public isBoxVisible(): boolean {\r\n        return (this._obj as AbstractMesh).showBoundingBox;\r\n    }\r\n    public setBoxVisible(b: boolean) {\r\n        return (this._obj as AbstractMesh).showBoundingBox = b;\r\n    }\r\n\r\n    public debug(enable: boolean) {\r\n        // Draw axis the first time\r\n        if (!this._axesViewer) {\r\n            this._drawAxis();\r\n        }\r\n        // Display or hide axis\r\n        if (!enable && this._axesViewer) {\r\n            let mesh = this._obj as AbstractMesh;\r\n            mesh.getScene().onBeforeRenderObservable.remove(this.onBeforeRenderObserver);\r\n            this._axesViewer.dispose();\r\n            this._axesViewer = null;\r\n        }\r\n    }\r\n\r\n    /** Returns some information about this mesh */\r\n    public getInfo(): string {\r\n        if (this._obj instanceof AbstractMesh) {\r\n            return `${(this._obj as AbstractMesh).getTotalVertices()} vertices`;\r\n        }\r\n        return '0 vertices';\r\n    }\r\n\r\n    /** Draw X, Y and Z axis for the actual object if this adapter.\r\n     * Should be called only one time as it will fill this._axis\r\n     */\r\n    private _drawAxis() {\r\n        this._obj.computeWorldMatrix();\r\n\r\n        // Axis\r\n        var x = new Vector3(1, 0, 0);\r\n        var y = new Vector3(0, 1, 0);\r\n        var z = new Vector3(0, 0, 1);\r\n\r\n        this._axesViewer = new Debug.AxesViewer(this._obj.getScene());\r\n\r\n        let mesh = this._obj as TransformNode;\r\n        this.onBeforeRenderObserver = mesh.getScene().onBeforeRenderObservable.add(() => {\r\n            let matrix = mesh.getWorldMatrix();\r\n            let extend = new Vector3(1, 1, 1);\r\n            if (mesh instanceof AbstractMesh) {\r\n                extend = mesh.getBoundingInfo().boundingBox.extendSizeWorld;\r\n            }\r\n            this._axesViewer!.scaleLines = Math.max(extend.x, extend.y, extend.z) * 2;\r\n            this._axesViewer!.update(this._obj.position, Vector3.TransformNormal(x, matrix), Vector3.TransformNormal(y, matrix), Vector3.TransformNormal(z, matrix));\r\n        });\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Tab } from \"../tabs/Tab\";\r\nimport { Adapter } from \"../adapters/Adapter\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { MeshAdapter } from \"../adapters/MeshAdapter\";\r\nimport { TransformNode, AbstractMesh } from \"babylonjs\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\n\r\n\r\nexport class TreeItem extends BasicElement {\r\n\r\n    // Reference to the tab\r\n    private _tab: Tab;\r\n    // The object this item is linked to (should be a primitive or a canvas) TODO should be superclass of all primitives\r\n    private _adapter: Adapter;\r\n    private _tools: Array<AbstractTreeTool>;\r\n    public children: Array<TreeItem> = [];\r\n    // Div element that contains all children of this node.\r\n    private _lineContent: HTMLElement;\r\n\r\n    constructor(tab: Tab, obj: Adapter) {\r\n        super();\r\n        this._tab = tab;\r\n        this._adapter = obj;\r\n\r\n        this._tools = this._adapter.getTools();\r\n\r\n        this._build();\r\n\r\n    }\r\n\r\n    /** Returns the item ID == its adapter ID */\r\n    public get id(): string {\r\n        return this._adapter.id();\r\n    }\r\n\r\n    /** Add the given item as a child of this one */\r\n    public add(child: TreeItem) {\r\n        this.children.push(child);\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Returns the original adapter\r\n     */\r\n    public get adapter(): Adapter {\r\n        return this._adapter;\r\n    }\r\n\r\n    /**\r\n     * Function used to compare this item to another tree item.\r\n     * Returns the alphabetical sort of the adapter ID\r\n     */\r\n    public compareTo(item: TreeItem): number {\r\n        let str1 = this.id;\r\n        let str2 = item.id;\r\n        return str1.localeCompare(str2, [], { numeric: true });\r\n    }\r\n\r\n    /** Returns true if the given obj correspond to the adapter linked to this tree item */\r\n    public correspondsTo(obj: any): boolean {\r\n        return this._adapter.correspondsTo(obj);\r\n    }\r\n\r\n    /** hide all children of this item */\r\n    public fold() {\r\n        // Do nothing id no children\r\n        if (this.children.length > 0) {\r\n            for (let elem of this.children) {\r\n                elem.toHtml().style.display = 'none';\r\n            }\r\n            this._div.classList.add('folded');\r\n            this._div.classList.remove('unfolded');\r\n        }\r\n    }\r\n    /** Show all children of this item */\r\n    public unfold() {\r\n        // Do nothing id no children\r\n        if (this.children.length > 0) {\r\n            for (let elem of this.children) {\r\n                elem.toHtml().style.display = 'block';\r\n            }\r\n            this._div.classList.add('unfolded');\r\n            this._div.classList.remove('folded');\r\n        }\r\n    }\r\n\r\n    /** Build the HTML of this item */\r\n    protected _build() {\r\n\r\n        /**\r\n         *  Hide the debug objects :\r\n         * - Axis : xline, yline, zline\r\n         * */\r\n        let adapterId = this._adapter.id();\r\n        if (adapterId == \"xline\"\r\n            || adapterId == \"yline\"\r\n            || adapterId == \"zline\") {\r\n            this._div.className = \"line_invisible\";\r\n        }\r\n        else this._div.className = 'line';\r\n\r\n        // special class for transform node ONLY\r\n        if (this.adapter instanceof MeshAdapter) {\r\n            let obj = this.adapter.object;\r\n            if (obj instanceof TransformNode && !(obj instanceof AbstractMesh)) {\r\n                this._div.className += ' transformNode';\r\n            }\r\n        }\r\n\r\n\r\n        for (let tool of this._tools) {\r\n            this._div.appendChild(tool.toHtml());\r\n        }\r\n\r\n\r\n        // Id\r\n        let text = Inspector.DOCUMENT.createElement('span');\r\n        text.textContent = this._adapter.id();\r\n        this._div.appendChild(text);\r\n\r\n        // Type\r\n        let type = Inspector.DOCUMENT.createElement('span');\r\n        type.className = 'property-type';\r\n        if (this._adapter.type() !== 'type_not_defined') {\r\n            type.textContent = ' - ' + this._adapter.type();\r\n        }\r\n        this._div.appendChild(type);\r\n\r\n        this._lineContent = Helpers.CreateDiv('line-content', this._div);\r\n\r\n        this._addEvent();\r\n    }\r\n\r\n    /**\r\n     * Returns one HTML element (.details) containing all  details of this primitive\r\n     */\r\n    public getDetails(): Array<PropertyLine> {\r\n        return this._adapter.getProperties();\r\n    }\r\n\r\n    public update() {\r\n        // Clean division holding all children\r\n        Helpers.CleanDiv(this._lineContent);\r\n\r\n        for (let child of this.children) {\r\n            let elem = child.toHtml();\r\n            this._lineContent.appendChild(elem);\r\n        }\r\n        if (this.children.length > 0) {\r\n            // Check if folded or not\r\n            if (!this._div.classList.contains('folded') && !this._div.classList.contains('unfolded')) {\r\n                this._div.classList.add('folded');\r\n            }\r\n        }\r\n        this.fold();\r\n    }\r\n\r\n    /**\r\n     * Add an event listener on the item : \r\n     * - one click display details\r\n     */\r\n    protected _addEvent() {\r\n        this._div.addEventListener('click', (e) => {\r\n            this._tab.select(this);\r\n            // Fold/unfold the tree\r\n            if (this._isFolded()) {\r\n                this.unfold();\r\n            } else {\r\n                this.fold();\r\n            }\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    /** Returns true if the node is folded, false otherwise */\r\n    private _isFolded(): boolean {\r\n        return !this._div.classList.contains('unfolded');\r\n    }\r\n\r\n    /** Set this item as active (background lighter) in the tree panel */\r\n    public active(b: boolean) {\r\n        this._div.classList.remove('active');\r\n        for (let child of this.children) {\r\n            child.active(false);\r\n        }\r\n        if (b) {\r\n            this._div.classList.add('active');\r\n        }\r\n    }\r\n\r\n    public getDiv() {\r\n        return this._div;\r\n    }\r\n}\r\n","import { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PropertyTab } from \"../tabs/PropertyTab\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n\r\n/**\r\n * A search bar can be used to filter elements in the tree panel.\r\n * At each keypress on the input, the treepanel will be filtered.\r\n */\r\nexport class SearchBar extends BasicElement {\r\n\r\n    private _propTab: PropertyTab;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    constructor(tab: PropertyTab) {\r\n        super();\r\n        this._propTab = tab;\r\n        this._div.classList.add('searchbar');\r\n\r\n        let filter = Inspector.DOCUMENT.createElement('i');\r\n        filter.className = 'fa fa-search';\r\n\r\n        this._div.appendChild(filter);\r\n        // Create input\r\n        this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n        this._inputElement.placeholder = 'Filter by name...';\r\n        this._div.appendChild(this._inputElement);\r\n\r\n        this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n            let filter = this._inputElement.value;\r\n            this._propTab.filter(filter);\r\n        })\r\n    }\r\n\r\n    /** Delete all characters typped in the input element */\r\n    public reset() {\r\n        this._inputElement.value = '';\r\n    }\r\n\r\n    public update() {\r\n        // Nothing to update\r\n    }\r\n\r\n}\r\n\r\nexport class SearchBarDetails extends BasicElement {\r\n\r\n    private _detailTab: DetailPanel;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    constructor(tab: DetailPanel) {\r\n        super();\r\n        this._detailTab = tab;\r\n        this._div.classList.add('searchbar');\r\n\r\n        let filter = Inspector.DOCUMENT.createElement('i');\r\n        filter.className = 'fa fa-search';\r\n\r\n        this._div.appendChild(filter);\r\n        // Create input\r\n        this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n        this._inputElement.placeholder = 'Filter by name...';\r\n        this._div.appendChild(this._inputElement);\r\n\r\n        this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n            let filter = this._inputElement.value;\r\n            this._detailTab.searchByName(filter);\r\n        })\r\n    }\r\n\r\n    /** Delete all characters typped in the input element */\r\n    public reset() {\r\n        this._inputElement.value = '';\r\n    }\r\n\r\n    public update() {\r\n        // Nothing to update\r\n    }\r\n\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { SearchBarDetails } from \"../gui/SearchBar\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PropertyLine } from \"./PropertyLine\";\r\n\r\nexport interface SortDirection {\r\n    [property: string]: number;\r\n}\r\n\r\nexport class DetailPanel extends BasicElement {\r\n\r\n    // The header row\r\n    private _headerRow: HTMLElement;\r\n    // Contains all details rows that belongs to the item above\r\n    private _detailRows: Array<PropertyLine> = [];\r\n    // Store the sort direction of each header column\r\n    private _sortDirection: SortDirection = {};\r\n    // The search bar\r\n    private _searchDetails: SearchBarDetails;\r\n    private _details: HTMLDivElement;\r\n\r\n    constructor(dr?: Array<PropertyLine>) {\r\n        super();\r\n        this._build();\r\n\r\n        if (dr) {\r\n            this._detailRows = dr;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    set details(detailsRow: Array<PropertyLine>) {\r\n        this.clean();\r\n        //add the searchBar\r\n        this._addSearchBarDetails();\r\n        this._details = Helpers.CreateDiv('details', this._div);\r\n        this._detailRows = detailsRow;\r\n        // Refresh HTML\r\n        this.update();\r\n    }\r\n\r\n    protected _build() {\r\n        this._div.className = 'insp-details';\r\n        this._div.id = 'insp-details';\r\n        // Create header row\r\n        this._createHeaderRow();\r\n        this._div.appendChild(this._headerRow);\r\n\r\n    }\r\n\r\n    /** Updates the HTML of the detail panel */\r\n    public update(_items?: Array<PropertyLine>) {\r\n        this._sortDetails('name', 1);\r\n        // Check the searchbar\r\n        if (_items) {\r\n            this.cleanRow();\r\n            this._addSearchDetails(_items);\r\n            //console.log(_items);\r\n        } else {\r\n            this._addDetails();\r\n            //console.log(\"np\");\r\n        }\r\n    }\r\n\r\n    /** Add the search bar for the details */\r\n    private _addSearchBarDetails() {\r\n        let searchDetails = Helpers.CreateDiv('searchbar-details', this._div);\r\n        // Create search bar\r\n        this._searchDetails = new SearchBarDetails(this);\r\n\r\n        searchDetails.appendChild(this._searchDetails.toHtml());\r\n        this._div.appendChild(searchDetails);\r\n    }\r\n\r\n    /** Search an element by name  */\r\n    public searchByName(searchName: string) {\r\n        let rows = [];\r\n        for (let row of this._detailRows) {\r\n            if (row.name.indexOf(searchName) >= 0) {\r\n                rows.push(row);\r\n            }\r\n        }\r\n        this.update(rows);\r\n    }\r\n\r\n    /** Add all lines in the html div. Does not sort them! */\r\n    private _addDetails() {\r\n        for (let row of this._detailRows) {\r\n            this._details.appendChild(row.toHtml());\r\n        }\r\n    }\r\n\r\n    private _addSearchDetails(_items: Array<PropertyLine>) {\r\n        for (let row of _items) {\r\n            this._details.appendChild(row.toHtml());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sort the details row by comparing the given property of each row\r\n     */\r\n    private _sortDetails(property: string, _direction?: number) {\r\n\r\n        // Clean header\r\n        let elems = Inspector.DOCUMENT.querySelectorAll('.sort-direction');\r\n        for (let e = 0; e < elems.length; e++) {\r\n            elems[e].classList.remove('fa-chevron-up');\r\n            elems[e].classList.remove('fa-chevron-down');\r\n        }\r\n\r\n\r\n        if (_direction || !this._sortDirection[property]) {\r\n            this._sortDirection[property] = _direction || 1;\r\n        } else {\r\n            this._sortDirection[property] *= -1;\r\n        }\r\n        let direction = this._sortDirection[property];\r\n        let query = this._headerRow.querySelector(`#sort-direction-${property}`);\r\n        if (query) {\r\n            if (direction == 1) {\r\n                query.classList.remove('fa-chevron-down');\r\n                query.classList.add('fa-chevron-up');\r\n            } else {\r\n                query.classList.remove('fa-chevron-up');\r\n                query.classList.add('fa-chevron-down');\r\n            }\r\n        }\r\n\r\n        let isString = (s: any) => {\r\n            return typeof (s) === 'string' || s instanceof String;\r\n        };\r\n\r\n        this._detailRows.forEach((property) => {\r\n            property.closeDetails();\r\n        })\r\n\r\n        this._detailRows.sort((detail1: any, detail2: any): number => {\r\n            let str1 = String(detail1[property]);\r\n            let str2 = String(detail2[property]);\r\n            if (!isString(str1)) {\r\n                str1 = detail1[property].toString();\r\n            }\r\n            if (!isString(str2)) {\r\n                str2 = detail2[property].toString();\r\n            }\r\n            // Compare numbers as numbers and string as string with 'numeric=true'\r\n            return str1.localeCompare(str2, [], { numeric: true }) * direction;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes all data in the detail panel but keep the header row\r\n     */\r\n    public clean() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n        Helpers.CleanDiv(this._div);\r\n        // Header row\r\n        this._div.appendChild(this._headerRow);\r\n    }\r\n\r\n    /**\r\n     * Clean the rows only\r\n     */\r\n    public cleanRow() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n        Helpers.CleanDiv(this._details);\r\n    }\r\n\r\n    /** Overrides basicelement.dispose */\r\n    public dispose() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the header row : name, value, id\r\n     */\r\n    private _createHeaderRow() {\r\n        this._headerRow = Helpers.CreateDiv('header-row');\r\n\r\n        let createDiv = (name: string, cssClass: string): HTMLElement => {\r\n            let div = Helpers.CreateDiv(cssClass + ' header-col');\r\n\r\n            // Column title - first letter in uppercase\r\n            let spanName = Inspector.DOCUMENT.createElement('span');\r\n            spanName.textContent = name.charAt(0).toUpperCase() + name.slice(1);\r\n\r\n            // sort direction\r\n            let spanDirection = Inspector.DOCUMENT.createElement('i');\r\n            spanDirection.className = 'sort-direction fa';\r\n            spanDirection.id = 'sort-direction-' + name;\r\n\r\n            div.appendChild(spanName);\r\n            div.appendChild(spanDirection);\r\n\r\n            div.addEventListener('click', (e) => {\r\n                this._sortDetails(name);\r\n                this._addDetails();\r\n            });\r\n            return div;\r\n        };\r\n\r\n        this._headerRow.appendChild(createDiv('name', 'prop-name'));\r\n        this._headerRow.appendChild(createDiv('value', 'prop-value'));\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport abstract class Tab extends BasicElement {\r\n    protected _tabbar: TabBar;\r\n    // The tab name displayed in the tabbar\r\n    public name: string;\r\n    protected _isActive: boolean = false;\r\n\r\n    // The whole panel corresponding to this tab. It's what is displayed when the tab is activacted\r\n    protected _panel: HTMLDivElement;\r\n\r\n    constructor(tabbar: TabBar, name: string) {\r\n        super();\r\n        this._tabbar = tabbar;\r\n        this.name = name;\r\n        this._build();\r\n    }\r\n\r\n    /** True if the tab is active, false otherwise */\r\n    public isActive(): boolean {\r\n        return this._isActive;\r\n    }\r\n\r\n    protected _build() {\r\n        this._div.className = 'tab';\r\n        this._div.textContent = this.name;\r\n\r\n        this._div.addEventListener('click', (evt) => {\r\n            // Set this tab as active\r\n            this._tabbar.switchTab(this);\r\n        });\r\n    }\r\n\r\n    /** Set this tab as active or not, depending on the current state */\r\n    public active(b: boolean) {\r\n        if (b) {\r\n            this._div.classList.add('active');\r\n        } else {\r\n            this._div.classList.remove('active');\r\n        }\r\n        this._isActive = b;\r\n    }\r\n\r\n    public update() {\r\n        // Nothing for the moment\r\n    }\r\n\r\n    /** Creates the tab panel for this tab. */\r\n    public getPanel(): HTMLElement {\r\n        return this._panel;\r\n    }\r\n\r\n    /** Add this in the propertytab with the searchbar */\r\n    public filter(str: string) { };\r\n\r\n    /** Dispose properly this tab */\r\n    public abstract dispose(): void;\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // To define in subclasses if needed \r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of this tab, 0 by default\r\n    */\r\n    public getPixelWidth(): number {\r\n        let style = Inspector.WINDOW.getComputedStyle(this._div);\r\n        if (!style.marginLeft || !style.marginRight) {\r\n            return 0;\r\n        }\r\n        let left = parseFloat(style.marginLeft.substr(0, style.marginLeft.length - 2)) || 0;\r\n        let right = parseFloat(style.marginRight.substr(0, style.marginRight.length - 2)) || 0;\r\n        return (this._div.clientWidth || 0) + left + right;\r\n    }\r\n}\r\n\r\n","import { AbstractMesh, Nullable } from \"babylonjs\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { SearchBar } from \"../gui/SearchBar\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\n/**\r\n * A Property tab can creates two panels: \r\n * a tree panel and a detail panel, \r\n * in which properties will be displayed.\r\n * Both panels are separated by a resize bar\r\n */\r\nexport abstract class PropertyTab extends Tab {\r\n\r\n    protected _inspector: Inspector;\r\n    /** The panel containing a list of items */\r\n    protected _treePanel: HTMLDivElement;\r\n    /** The panel containing a list if properties corresponding to an item */\r\n    protected _detailsPanel: DetailPanel;\r\n    protected _treeItems: Array<TreeItem> = [];\r\n    protected _searchBar: SearchBar;\r\n\r\n    constructor(tabbar: TabBar, name: string, insp: Inspector) {\r\n        super(tabbar, name);\r\n\r\n        this._inspector = insp;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add('searchable');\r\n\r\n        // Search bar\r\n        this._searchBar = new SearchBar(this);\r\n        // Add searchbar\r\n        this._panel.appendChild(this._searchBar.toHtml());\r\n\r\n        // Build the treepanel\r\n        this._treePanel = Helpers.CreateDiv('insp-tree', this._panel);\r\n\r\n        // Build the detail panel\r\n        this._detailsPanel = new DetailPanel();\r\n        this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n        Split([this._treePanel, this._detailsPanel.toHtml()], {\r\n            blockDrag: this._inspector.popupMode,\r\n            direction: 'vertical'\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /** Overrides dispose */\r\n    public dispose() {\r\n        this._detailsPanel.dispose();\r\n    }\r\n\r\n    public update(_items?: Array<TreeItem>) {\r\n\r\n        let items;\r\n        if (_items) {\r\n            items = _items;\r\n        } else {\r\n            // Rebuild the tree\r\n            this._treeItems = this._getTree();\r\n            items = this._treeItems;\r\n        }\r\n        // Clean the tree\r\n        Helpers.CleanDiv(this._treePanel);\r\n        // Clean the detail properties\r\n        this._detailsPanel.clean();\r\n\r\n\r\n        // Sort items alphabetically\r\n        items.sort((item1, item2) => {\r\n            return item1.compareTo(item2);\r\n        });\r\n\r\n        // Display items\r\n        for (let item of items) {\r\n            this._treePanel.appendChild(item.toHtml());\r\n        }\r\n    }\r\n\r\n    /** Display the details of the given item */\r\n    public displayDetails(item: TreeItem) {\r\n        // Remove active state on all items\r\n        this.activateNode(item);\r\n        // Update the detail panel\r\n        this._detailsPanel.details = item.getDetails();\r\n    }\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // Active the node\r\n        this.activateNode(item);\r\n        // Display its details\r\n        this.displayDetails(item);\r\n    }\r\n\r\n    /** Set the given item as active in the tree */\r\n    public activateNode(item: TreeItem) {\r\n        if (this._treeItems) {\r\n            for (let node of this._treeItems) {\r\n                node.active(false);\r\n            }\r\n        }\r\n        //  item.getDiv().scrollIntoView();\r\n        item.active(true);\r\n    }\r\n\r\n    /** Returns the treeitem corersponding to the given obj, null if not found */\r\n    public getItemFor(_obj: any): Nullable<TreeItem> {\r\n        let obj = _obj as AbstractMesh;\r\n\r\n        // Search recursively\r\n        let searchObjectInTree = (object: any, treeItem: TreeItem): Nullable<TreeItem> => {\r\n            if (treeItem.correspondsTo(object)) {\r\n                return treeItem;\r\n            }\r\n            else {\r\n                if (treeItem.children.length > 0) {\r\n                    for (let item of treeItem.children) {\r\n                        let it = searchObjectInTree(obj, item);\r\n                        if (it) {\r\n                            return it;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        for (let item of this._treeItems) {\r\n            let it = searchObjectInTree(obj, item);\r\n            if (it) {\r\n                return it;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public filter(filter: string) {\r\n        let items = [];\r\n\r\n        for (let item of this._treeItems) {\r\n            if (item.id.toLowerCase().indexOf(filter.toLowerCase()) != -1) {\r\n                items.push(item);\r\n            }\r\n            for (let child of item.children) {\r\n                if (child.id.toLowerCase().indexOf(filter.toLowerCase()) != -1) {\r\n                    items.push(item);\r\n                }\r\n            }\r\n        }\r\n        this.update(items);\r\n    }\r\n\r\n    /** Builds the tree panel */\r\n    protected abstract _getTree(): Array<TreeItem>;\r\n}\r\n","import { CameraAdapter } from \"../adapters/CameraAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class CameraTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Camera', inspector);\r\n    }\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let camera of instances.cameras) {\r\n            arr.push(new TreeItem(this, new CameraAdapter(camera)));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n","import { Tools } from \"babylonjs\";\nimport { Helpers } from \"../helpers/Helpers\";\nimport { Inspector } from \"../Inspector\";\nimport { Tab } from \"./Tab\";\nimport { TabBar } from \"./TabBar\";\n\nimport * as Split from \"Split\";\n\n/** \n * The console tab will have two features : \n * - hook all console.log call and display them in this panel (and in the browser console as well)\n * - display all Babylon logs (called with Tools.Log...)\n */\nexport class ConsoleTab extends Tab {\n\n    private _inspector: Inspector;\n\n    private _consolePanelContent: HTMLElement;\n    private _bjsPanelContent: HTMLElement;\n\n    private _oldConsoleLog: any;\n    private _oldConsoleWarn: any;\n    private _oldConsoleError: any;\n\n\n    constructor(tabbar: TabBar, insp: Inspector) {\n        super(tabbar, 'Console');\n        this._inspector = insp;\n\n        // Build the shaders panel : a div that will contains the shaders tree and both shaders panels\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\n\n        let consolePanel = Helpers.CreateDiv('console-panel') as HTMLDivElement;\n        let bjsPanel = Helpers.CreateDiv('console-panel') as HTMLDivElement;\n\n        this._panel.appendChild(consolePanel);\n        this._panel.appendChild(bjsPanel);\n\n        Split([consolePanel, bjsPanel], {\n            blockDrag: this._inspector.popupMode,\n            sizes: [50, 50],\n            direction: 'vertical'\n        }\n        );\n\n        // Titles\n        let title = Helpers.CreateDiv('console-panel-title', consolePanel);\n        title.textContent = 'Console logs';\n        title = Helpers.CreateDiv('console-panel-title', bjsPanel);\n        title.textContent = 'js logs';\n\n        // Contents\n        this._consolePanelContent = Helpers.CreateDiv('console-panel-content', consolePanel) as HTMLDivElement;\n        this._bjsPanelContent = Helpers.CreateDiv('console-panel-content', bjsPanel) as HTMLDivElement;\n\n        // Bjs logs\n        this._bjsPanelContent.innerHTML = Tools.LogCache;\n        Tools.OnNewCacheEntry = (entry: string) => {\n            this._bjsPanelContent.innerHTML += entry;\n            this._bjsPanelContent.scrollTop = this._bjsPanelContent.scrollHeight;\n        };\n\n        // Testing\n        //console.log(\"This is a console.log message\");\n        // console.log(\"That's right, console.log calls are hooked to be written in this window\");\n        // console.log(\"Object are also stringify-ed\", {width:10, height:30, shape:'rectangular'});\n        // console.warn(\"This is a console.warn message\");\n        // console.error(\"This is a console.error message\");\n\n        // Tools.Log(\"This is a message\");\n        // Tools.Warn(\"This is a warning\");\n        // Tools.Error(\"This is a error\");\n\n    }\n\n    /** Overrides super.dispose */\n    public dispose() {\n        console.log = this._oldConsoleLog;\n        console.warn = this._oldConsoleWarn;\n        console.error = this._oldConsoleError;\n\n    }\n\n    public active(b: boolean) {\n        super.active(b);\n        if (b) {\n            // save old console.log\n            this._oldConsoleLog = console.log;\n            this._oldConsoleWarn = console.warn;\n            this._oldConsoleError = console.error;\n\n            console.log = this._addConsoleLog.bind(this);\n            console.warn = this._addConsoleWarn.bind(this);\n            console.error = this._addConsoleError.bind(this);\n        }\n    }\n\n    private _message(type: string, message: any, caller: string) {\n        let callerLine = Helpers.CreateDiv('caller', this._consolePanelContent);\n        callerLine.textContent = caller.replace(' ', '\\u00A0');\n\n        let line = Helpers.CreateDiv(type, this._consolePanelContent);\n        line.textContent = message.replace(' ', '\\u00A0');\n\n        this._consolePanelContent.scrollTop = this._consolePanelContent.scrollHeight;\n    }\n    private _addConsoleLog(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : \"Function \" + (<any>callerFunc)['name'] + \": \";\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('log', params[i], caller);\n            // Write again in console does not work on edge, as the console object                 \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleLog(params[i]);\n            }\n        }\n    }\n\n    private _addConsoleWarn(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : (<any>callerFunc)['name'];\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('warn', params[i], caller);\n            // Write again in console does not work on edge, as the console object \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleWarn(params[i]);\n            }\n        }\n    }\n\n    private _addConsoleError(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : (<any>callerFunc)['name'];\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('error', params[i], caller);\n            // Write again in console does not work on edge, as the console object \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleError(params[i]);\n            }\n        }\n    }\n\n}\n","import { Mesh, NullEngine, PBRMaterial, Scene, SceneLoader, StandardMaterial, Texture, TransformNode } from \"babylonjs\";\r\nimport { GLTF2, GLTFFileLoader } from \"babylonjs-loaders\";\r\nimport { GLTF2Export } from \"babylonjs-serializers\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\ninterface ILoaderDefaults {\r\n    [extensionName: string]: {\r\n        [key: string]: any\r\n    },\r\n    extensions: {\r\n        [extensionName: string]: {\r\n            [key: string]: any\r\n        }\r\n    }\r\n}\r\n\r\nexport class GLTFTab extends Tab {\r\n    private static _LoaderDefaults: ILoaderDefaults | null = null;\r\n\r\n    private _inspector: Inspector;\r\n    private _actions: HTMLDivElement;\r\n    private _detailsPanel: DetailPanel | null = null;\r\n    private _split: any;\r\n\r\n    public static get IsSupported(): boolean {\r\n        return !!(SceneLoader && GLTFFileLoader && GLTF2.GLTFLoader) || !!GLTF2Export;\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _Initialize(): void {\r\n        // Must register with OnPluginActivatedObservable as early as possible to override the loader defaults.\r\n        SceneLoader.OnPluginActivatedObservable.add((loader: GLTFFileLoader) => {\r\n            if (loader.name === \"gltf\" && GLTFTab._LoaderDefaults) {\r\n                const defaults = GLTFTab._LoaderDefaults;\r\n                for (const key in defaults) {\r\n                    if (key !== \"extensions\") {\r\n                        (loader as any)[key] = GLTFTab._LoaderDefaults[key];\r\n                    }\r\n                }\r\n\r\n                loader.onExtensionLoadedObservable.add(extension => {\r\n                    const extensionDefaults = defaults.extensions[extension.name];\r\n                    for (const key in extensionDefaults) {\r\n                        (extension as any)[key] = extensionDefaults[key];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'GLTF');\r\n\r\n        this._inspector = inspector;\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._actions = Helpers.CreateDiv('gltf-actions', this._panel) as HTMLDivElement;\r\n        this._actions.addEventListener('click', event => {\r\n            this._closeDetailsPanel();\r\n        });\r\n\r\n        if (SceneLoader && GLTFFileLoader && GLTF2.GLTFLoader) {\r\n            this._addImport();\r\n        }\r\n\r\n        if (GLTF2Export) {\r\n            this._addExport();\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        if (this._detailsPanel) {\r\n            this._detailsPanel.dispose();\r\n        }\r\n    }\r\n\r\n    private _addImport() {\r\n        const importTitle = Helpers.CreateDiv('gltf-title', this._actions);\r\n        importTitle.textContent = 'Import';\r\n\r\n        const importActions = Helpers.CreateDiv('gltf-actions', this._actions) as HTMLDivElement;\r\n\r\n        this._getLoaderDefaultsAsync().then(defaults => {\r\n            importTitle.addEventListener('click', event => {\r\n                this._showLoaderDefaults(defaults);\r\n                event.stopPropagation();\r\n            });\r\n\r\n            importActions.addEventListener('click', event => {\r\n                this._showLoaderDefaults(defaults);\r\n                event.stopPropagation();\r\n            });\r\n\r\n            const extensionsTitle = Helpers.CreateDiv('gltf-title', importActions) as HTMLDivElement;\r\n            extensionsTitle.textContent = \"Extensions\";\r\n\r\n            for (const extensionName in defaults.extensions) {\r\n                const extensionDefaults = defaults.extensions[extensionName];\r\n\r\n                const extensionAction = Helpers.CreateDiv('gltf-action', importActions);\r\n                extensionAction.addEventListener('click', event => {\r\n                    if (this._showLoaderExtensionDefaults(extensionDefaults)) {\r\n                        event.stopPropagation();\r\n                    }\r\n                });\r\n\r\n                const checkbox = Helpers.CreateElement('span', 'gltf-checkbox', extensionAction);\r\n\r\n                if (extensionDefaults.enabled) {\r\n                    checkbox.classList.add('action', 'active');\r\n                }\r\n\r\n                checkbox.addEventListener('click', () => {\r\n                    checkbox.classList.toggle('active');\r\n                    extensionDefaults.enabled = checkbox.classList.contains('active');\r\n                });\r\n\r\n                const label = Helpers.CreateElement('span', null, extensionAction);\r\n                label.textContent = extensionName;\r\n            }\r\n        });\r\n    }\r\n\r\n    private static _EnumeratePublic(obj: any, callback: (key: string, value: any) => void): void {\r\n        for (const key in obj) {\r\n            if (key !== \"name\" && key[0] !== '_') {\r\n                const value = obj[key];\r\n                const type = typeof value;\r\n                if (type !== \"object\" && type !== \"function\" && type !== \"undefined\") {\r\n                    callback(key, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getLoaderDefaultsAsync(): Promise<ILoaderDefaults> {\r\n        if (GLTFTab._LoaderDefaults) {\r\n            return Promise.resolve(GLTFTab._LoaderDefaults);\r\n        }\r\n\r\n        const defaults: ILoaderDefaults = {\r\n            extensions: {}\r\n        };\r\n\r\n        const engine = new NullEngine();\r\n        const scene = new Scene(engine);\r\n\r\n        const loader = new GLTFFileLoader();\r\n        GLTFTab._EnumeratePublic(loader, (key, value) => {\r\n            defaults[key] = value;\r\n        });\r\n\r\n        loader.onExtensionLoadedObservable.add(extension => {\r\n            const extensionDefaults: any = {};\r\n            GLTFTab._EnumeratePublic(extension, (key, value) => {\r\n                extensionDefaults[key] = value;\r\n            });\r\n            defaults.extensions[extension.name] = extensionDefaults;\r\n        });\r\n\r\n        const data = '{ \"asset\": { \"version\": \"2.0\" } }';\r\n        return loader.importMeshAsync([], scene, data, \"\").then(() => {\r\n            scene.dispose();\r\n            engine.dispose();\r\n\r\n            return (GLTFTab._LoaderDefaults = defaults);\r\n        });\r\n    }\r\n\r\n    private _openDetailsPanel(): DetailPanel {\r\n        if (!this._detailsPanel) {\r\n            this._detailsPanel = new DetailPanel();\r\n            this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n            this._split = Split([this._actions, this._detailsPanel.toHtml()], {\r\n                blockDrag: this._inspector.popupMode,\r\n                sizes: [50, 50],\r\n                direction: 'vertical'\r\n            });\r\n        }\r\n\r\n        this._detailsPanel.clean();\r\n        return this._detailsPanel;\r\n    }\r\n\r\n    private _closeDetailsPanel(): void {\r\n        if (this._detailsPanel) {\r\n            this._detailsPanel.toHtml().remove();\r\n            this._detailsPanel.dispose();\r\n            this._detailsPanel = null;\r\n        }\r\n\r\n        if (this._split) {\r\n            this._split.destroy();\r\n            delete this._split;\r\n        }\r\n    }\r\n\r\n    private _showLoaderDefaults(defaults: { [key: string]: any }): void {\r\n        var detailsPanel = this._openDetailsPanel();\r\n        const details = new Array<PropertyLine>();\r\n        for (const key in defaults) {\r\n            if (key !== \"extensions\") {\r\n                details.push(new PropertyLine(new Property(key, defaults, this._inspector.scene)));\r\n            }\r\n        }\r\n        detailsPanel.details = details;\r\n    }\r\n\r\n    private _showLoaderExtensionDefaults(defaults: { [key: string]: any }): boolean {\r\n        if (Object.keys(defaults).length === 1) {\r\n            return false;\r\n        }\r\n\r\n        var detailsPanel = this._openDetailsPanel();\r\n        const details = new Array<PropertyLine>();\r\n        for (const key in defaults) {\r\n            if (key !== \"enabled\") {\r\n                details.push(new PropertyLine(new Property(key, defaults, this._inspector.scene)));\r\n            }\r\n        }\r\n        detailsPanel.details = details;\r\n\r\n        return true;\r\n    }\r\n\r\n    private _addExport() {\r\n        const exportTitle = Helpers.CreateDiv('gltf-title', this._actions);\r\n        exportTitle.textContent = 'Export';\r\n\r\n        const exportActions = Helpers.CreateDiv('gltf-actions', this._actions) as HTMLDivElement;\r\n\r\n        const name = Helpers.CreateInput('gltf-input', exportActions);\r\n        name.placeholder = \"File name...\";\r\n\r\n        const button = Helpers.CreateElement('button', 'gltf-button', exportActions) as HTMLButtonElement;\r\n        button.innerText = 'Export GLB';\r\n        button.addEventListener('click', () => {\r\n            GLTF2Export.GLBAsync(this._inspector.scene, name.value || \"scene\", {\r\n                shouldExportTransformNode: transformNode => !GLTFTab._IsSkyBox(transformNode)\r\n            }).then((glb) => {\r\n                glb.downloadFiles();\r\n            });\r\n        });\r\n    }\r\n\r\n    private static _IsSkyBox(transformNode: TransformNode): boolean {\r\n        if (transformNode instanceof Mesh) {\r\n            if (transformNode.material) {\r\n                const material = transformNode.material as PBRMaterial | StandardMaterial;\r\n                const reflectionTexture = material.reflectionTexture;\r\n                if (reflectionTexture && reflectionTexture.coordinatesMode === Texture.SKYBOX_MODE) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nGLTFTab._Initialize();\r\n","\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class GUIAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    constructor(obj: import(\"babylonjs-gui\").Control) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        (this._obj).isVisible = b;\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return (this._obj).isVisible;\r\n    }\r\n}\r\n","import { GUIAdapter } from \"../adapters/GUIAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class GUITab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'GUI', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr: Array<TreeItem> = [];\r\n\r\n        if (!Inspector.GUIObject) return arr;\r\n\r\n        // Recursive method building the tree panel\r\n        let createNode = (obj: import(\"babylonjs-gui\").Control) => {\r\n            let descendants = (obj as import(\"babylonjs-gui\").Container).children;\r\n\r\n            if (descendants && descendants.length > 0) {\r\n                let node = new TreeItem(this, new GUIAdapter(obj));\r\n                for (let child of descendants) {\r\n                    let n = createNode(child);\r\n                    node.add(n);\r\n                }\r\n                node.update();\r\n                return node;\r\n            } else {\r\n                return new TreeItem(this, new GUIAdapter(obj));\r\n            }\r\n        };\r\n\r\n        // get all textures from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let tex of instances.textures) {\r\n            //only get GUI's textures\r\n            if (tex instanceof Inspector.GUIObject.AdvancedDynamicTexture) {\r\n                let node = createNode((<import(\"babylonjs-gui\").AdvancedDynamicTexture>tex)._rootContainer);\r\n                arr.push(node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nexport class LightAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    constructor(obj: BABYLON.Light) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._obj.setEnabled(b);\r\n    }\r\n    public isVisible(): boolean {\r\n        return this._obj.isEnabled();\r\n    }\r\n\r\n    /** Returns some information about this mesh */\r\n    // public getInfo() : string {\r\n    //     return `${(this._obj as BABYLON.AbstractMesh).getTotalVertices()} vertices`;\r\n    // }\r\n}","import { LightAdapter } from \"../adapters/LightAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class LightTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Light', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all lights from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let light of instances.lights) {\r\n            arr.push(new TreeItem(this, new LightAdapter(light)));\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { Material } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nexport class MaterialAdapter\r\n    extends Adapter {\r\n\r\n    constructor(obj: Material) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    /** No tools for a material adapter */\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        return [];\r\n    }\r\n}","import { MaterialAdapter } from \"../adapters/MaterialAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class MaterialTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Material', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all meshes from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let mat of instances.materials) {\r\n            arr.push(new TreeItem(this, new MaterialAdapter(mat)))\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { Node, TransformNode } from \"babylonjs\";\r\nimport { MeshAdapter } from \"../adapters/MeshAdapter\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class MeshTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Mesh', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n        // Tab containing mesh already in results\r\n        let alreadyIn = new Array<Node>();\r\n\r\n        // Recursive method building the tree panel\r\n        let createNode = (obj: Node) => {\r\n            let descendants = obj.getDescendants(true);\r\n\r\n            let node = new TreeItem(this, new MeshAdapter(obj));\r\n\r\n            if (descendants.length > 0) {\r\n                for (let child of descendants) {\r\n                    if (child instanceof TransformNode) {\r\n                        if (!Helpers.IsSystemName(child.name)) {\r\n                            let n = createNode(child);\r\n                            node.add(n);\r\n                        }\r\n                    }\r\n                }\r\n                node.update();\r\n            }\r\n\r\n            // Retrieve the root node if the mesh is actually child of another mesh\r\n            // This can hapen if the child mesh has been created before the parent mesh\r\n            if (obj.parent != null && alreadyIn.indexOf(obj) != -1) {\r\n                let i: number = 0;\r\n                let notFound: boolean = true;\r\n                // Find and delete the root node standing for this mesh\r\n                while (i < arr.length && notFound) {\r\n                    if (obj.name === arr[i].id) {\r\n                        arr.splice(i, 1);\r\n                        notFound = false;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            alreadyIn.push(obj);\r\n            return node;\r\n        };\r\n\r\n        // get all meshes from the first scene\r\n        let instances = this._inspector.scene;\r\n\r\n        // Find top of hierarchy for meshes...\r\n        let meshWithoutAnyParent: Array<Node> = [];\r\n        for (let mesh of instances.meshes) {\r\n            // Not already in the array, not system name and no parent\r\n            if (meshWithoutAnyParent.indexOf(mesh) == -1 && !Helpers.IsSystemName(mesh.name) && !mesh.parent) {\r\n                meshWithoutAnyParent.push(mesh);\r\n            }\r\n        }\r\n        // ... and for transforms\r\n        for (let tn of instances.transformNodes) {\r\n            // Not already in the array, not system name and no parent\r\n            if (meshWithoutAnyParent.indexOf(tn) == -1 && !Helpers.IsSystemName(tn.name) && !tn.parent) {\r\n                meshWithoutAnyParent.push(tn);\r\n            }\r\n        }\r\n\r\n        for (let mesh of meshWithoutAnyParent) {\r\n            if (alreadyIn.indexOf(mesh) == -1 && !Helpers.IsSystemName(mesh.name)) {\r\n                let node = createNode(mesh);\r\n                arr.push(node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { AbstractMesh, PhysicsImpostor } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class PhysicsImpostorAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    private _viewer: any;\r\n    private _isVisible = false;\r\n\r\n    constructor(obj: PhysicsImpostor, viewer: any) {\r\n        super(obj);\r\n        this._viewer = viewer;\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        let physicsImposter = (<PhysicsImpostor>this._obj);\r\n        if (physicsImposter && physicsImposter.object) {\r\n            str = (<AbstractMesh>physicsImposter.object).name || \"\";\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._isVisible = b;\r\n        if (b) {\r\n            this._viewer.showImpostor(this._obj);\r\n        } else {\r\n            this._viewer.hideImpostor(this._obj);\r\n        }\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n}\r\n","import { Debug } from \"babylonjs\";\r\nimport { PhysicsImpostorAdapter } from \"../adapters/PhysicsImpostorAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class PhysicsTab extends PropertyTab {\r\n\r\n    public viewer: any;\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Physics', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n\r\n        let scene = this._inspector.scene;\r\n\r\n        if (!scene.isPhysicsEnabled()) {\r\n            return arr;\r\n        }\r\n\r\n        if (!this.viewer) {\r\n            this.viewer = new Debug.PhysicsViewer(scene);\r\n        }\r\n\r\n        for (let mesh of scene.meshes) {\r\n            if (mesh.physicsImpostor) {\r\n                arr.push(new TreeItem(this, new PhysicsImpostorAdapter(mesh.physicsImpostor, this.viewer)));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}","import { Debug, StandardMaterial } from \"babylonjs\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nexport class SceneTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n    /** The list of  channels/options that can be activated/deactivated */\r\n    private _actions: HTMLDivElement;\r\n\r\n    /** The list of skeleton viewer */\r\n    private _skeletonViewers: Array<any> = [];\r\n\r\n    /** The detail of the scene */\r\n    private _detailsPanel: DetailPanel;\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Scene');\r\n        this._inspector = insp;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n\r\n        this._actions = Helpers.CreateDiv('scene-actions', this._panel) as HTMLDivElement;\r\n\r\n        this._detailsPanel = new DetailPanel();\r\n        this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n        // build propertiesline\r\n        let details = [];\r\n        // Remove deprecated properties generating warning in console\r\n        let dontTakeThis = ['interFramePerfCounter', 'lastFramePerfCounter', 'evaluateActiveMeshesDurationPerfCounter', 'renderDurationPerfCounter', 'particlesDurationPerfCounter', 'spriteDuractionPerfCounter'];\r\n        let props = Helpers.GetAllLinesPropertiesAsString(this._inspector.scene, dontTakeThis);\r\n\r\n        for (let propString of props) {\r\n            let prop = new PropertyLine(new Property(propString, this._inspector.scene));\r\n            details.push(prop);\r\n        }\r\n        this._detailsPanel.details = details;\r\n\r\n        Split([this._actions, this._detailsPanel.toHtml()], {\r\n            blockDrag: this._inspector.popupMode,\r\n            sizes: [50, 50],\r\n            direction: 'vertical'\r\n        });\r\n\r\n        // Build actions\r\n        {\r\n\r\n            // Rendering mode\r\n            let title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Rendering mode';\r\n            let point = Helpers.CreateDiv('action-radio', this._actions);\r\n            let wireframe = Helpers.CreateDiv('action-radio', this._actions);\r\n            let solid = Helpers.CreateDiv('action-radio', this._actions);\r\n            point.textContent = 'Point';\r\n            wireframe.textContent = 'Wireframe';\r\n            solid.textContent = 'Solid';\r\n            if (this._inspector.scene.forcePointsCloud) {\r\n                point.classList.add('active');\r\n            } else if (this._inspector.scene.forceWireframe) {\r\n                wireframe.classList.add('active');\r\n            } else {\r\n                solid.classList.add('active');\r\n            }\r\n            this._generateRadioAction([point, wireframe, solid]);\r\n            point.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = true; this._inspector.scene.forceWireframe = false; });\r\n            wireframe.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = false; this._inspector.scene.forceWireframe = true; });\r\n            solid.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = false; this._inspector.scene.forceWireframe = false; });\r\n\r\n            // Textures\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Textures channels';\r\n            this._generateActionLine('Diffuse Texture', StandardMaterial.DiffuseTextureEnabled, (b: boolean) => { StandardMaterial.DiffuseTextureEnabled = b });\r\n            this._generateActionLine('Ambient Texture', StandardMaterial.AmbientTextureEnabled, (b: boolean) => { StandardMaterial.AmbientTextureEnabled = b });\r\n            this._generateActionLine('Specular Texture', StandardMaterial.SpecularTextureEnabled, (b: boolean) => { StandardMaterial.SpecularTextureEnabled = b });\r\n            this._generateActionLine('Emissive Texture', StandardMaterial.EmissiveTextureEnabled, (b: boolean) => { StandardMaterial.EmissiveTextureEnabled = b });\r\n            this._generateActionLine('Bump Texture', StandardMaterial.BumpTextureEnabled, (b: boolean) => { StandardMaterial.BumpTextureEnabled = b });\r\n            this._generateActionLine('Opacity Texture', StandardMaterial.OpacityTextureEnabled, (b: boolean) => { StandardMaterial.OpacityTextureEnabled = b });\r\n            this._generateActionLine('Reflection Texture', StandardMaterial.ReflectionTextureEnabled, (b: boolean) => { StandardMaterial.ReflectionTextureEnabled = b });\r\n            this._generateActionLine('Refraction Texture', StandardMaterial.RefractionTextureEnabled, (b: boolean) => { StandardMaterial.RefractionTextureEnabled = b });\r\n            this._generateActionLine('ColorGrading', StandardMaterial.ColorGradingTextureEnabled, (b: boolean) => { StandardMaterial.ColorGradingTextureEnabled = b });\r\n            this._generateActionLine('Lightmap Texture', StandardMaterial.LightmapTextureEnabled, (b: boolean) => { StandardMaterial.LightmapTextureEnabled = b });\r\n            this._generateActionLine('Fresnel', StandardMaterial.FresnelEnabled, (b: boolean) => { StandardMaterial.FresnelEnabled = b });\r\n\r\n            // Options\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Options';\r\n            this._generateActionLine('Animations', this._inspector.scene.animationsEnabled, (b: boolean) => { this._inspector.scene.animationsEnabled = b });\r\n            this._generateActionLine('Collisions', this._inspector.scene.collisionsEnabled, (b: boolean) => { this._inspector.scene.collisionsEnabled = b });\r\n            this._generateActionLine('Fog', this._inspector.scene.fogEnabled, (b: boolean) => { this._inspector.scene.fogEnabled = b });\r\n            this._generateActionLine('Lens flares', this._inspector.scene.lensFlaresEnabled, (b: boolean) => { this._inspector.scene.lensFlaresEnabled = b });\r\n            this._generateActionLine('Lights', this._inspector.scene.lightsEnabled, (b: boolean) => { this._inspector.scene.lightsEnabled = b });\r\n            this._generateActionLine('Particles', this._inspector.scene.particlesEnabled, (b: boolean) => { this._inspector.scene.particlesEnabled = b });\r\n            this._generateActionLine('Post-processes', this._inspector.scene.postProcessesEnabled, (b: boolean) => { this._inspector.scene.postProcessesEnabled = b });\r\n            this._generateActionLine('Probes', this._inspector.scene.probesEnabled, (b: boolean) => { this._inspector.scene.probesEnabled = b });\r\n            this._generateActionLine('Procedural textures', this._inspector.scene.proceduralTexturesEnabled, (b: boolean) => { this._inspector.scene.proceduralTexturesEnabled = b });\r\n            this._generateActionLine('Render targets', this._inspector.scene.renderTargetsEnabled, (b: boolean) => { this._inspector.scene.renderTargetsEnabled = b });\r\n            this._generateActionLine('Shadows', this._inspector.scene.shadowsEnabled, (b: boolean) => { this._inspector.scene.shadowsEnabled = b });\r\n            this._generateActionLine('Skeletons', this._inspector.scene.skeletonsEnabled, (b: boolean) => { this._inspector.scene.skeletonsEnabled = b });\r\n            this._generateActionLine('Sprites', this._inspector.scene.spritesEnabled, (b: boolean) => { this._inspector.scene.spritesEnabled = b });\r\n            this._generateActionLine('Textures', this._inspector.scene.texturesEnabled, (b: boolean) => { this._inspector.scene.texturesEnabled = b });\r\n\r\n            // Audio\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Audio';\r\n            let headphones = Helpers.CreateDiv('action-radio', this._actions);\r\n            let normalSpeaker = Helpers.CreateDiv('action-radio', this._actions);\r\n            this._generateActionLine('Disable audio', !this._inspector.scene.audioEnabled, (b: boolean) => { this._inspector.scene.audioEnabled = !b });\r\n            headphones.textContent = 'Headphones';\r\n            normalSpeaker.textContent = 'Normal speakers';\r\n            this._generateRadioAction([headphones, normalSpeaker]);\r\n            if (this._inspector.scene.headphone) {\r\n                headphones.classList.add('active');\r\n            } else {\r\n                normalSpeaker.classList.add('active');\r\n            }\r\n            headphones.addEventListener('click', () => { this._inspector.scene.headphone = true; });\r\n            normalSpeaker.addEventListener('click', () => { this._inspector.scene.headphone = false; });\r\n\r\n            // Viewers\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Viewer';\r\n            this._generateActionLine('Skeletons', false, (b: boolean) => {\r\n                if (b) {\r\n                    for (var index = 0; index < this._inspector.scene.meshes.length; index++) {\r\n                        var mesh = this._inspector.scene.meshes[index];\r\n                        if (mesh.skeleton) {\r\n                            var found = false;\r\n                            for (var sIndex = 0; sIndex < this._skeletonViewers.length; sIndex++) {\r\n                                if (this._skeletonViewers[sIndex].skeleton === mesh.skeleton) {\r\n                                    found = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (found) {\r\n                                continue;\r\n                            }\r\n                            var viewer = new Debug.SkeletonViewer(mesh.skeleton, mesh, this._inspector.scene);\r\n                            viewer.isEnabled = true;\r\n                            this._skeletonViewers.push(viewer);\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (var index = 0; index < this._skeletonViewers.length; index++) {\r\n                        this._skeletonViewers[index].dispose();\r\n                    }\r\n                    this._skeletonViewers = [];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /** Overrides super.dispose */\r\n    public dispose() {\r\n        this._detailsPanel.dispose();\r\n    }\r\n\r\n    /** generates a div which correspond to an option that can be activated/deactivated */\r\n    private _generateActionLine(name: string, initValue: boolean, action: (b: boolean) => void) {\r\n        let div = Helpers.CreateDiv('scene-actions', this._actions);\r\n        div.textContent = name;\r\n        div.classList.add('action');\r\n        if (initValue) {\r\n            div.classList.add('active');\r\n        }\r\n        div.addEventListener('click', (e) => {\r\n            div.classList.toggle('active');\r\n            let isActivated = div.classList.contains('active');\r\n            action(isActivated);\r\n        })\r\n    }\r\n\r\n    /** \r\n     * Add a click action for all given elements : \r\n     * the clicked element is set as active, all others elements are deactivated\r\n     */\r\n    private _generateRadioAction(arr: Array<HTMLElement>) {\r\n        let active = (elem: HTMLElement, evt: any) => {\r\n            for (let e of arr) {\r\n                e.classList.remove('active');\r\n            }\r\n            elem.classList.add('active');\r\n        }\r\n        for (let elem of arr) {\r\n            elem.addEventListener('click', active.bind(this, elem));\r\n        }\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n\r\nexport interface ISoundInteractions {\r\n    setPlaying: (callback: Function) => void;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class SoundInteractions extends AbstractTreeTool {\r\n    private playSound: ISoundInteractions;\r\n\r\n    constructor(playSound: ISoundInteractions) {\r\n        super();\r\n        this.playSound = playSound;\r\n        this._elem.classList.add('fa-play');\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        this._playSound();\r\n    }\r\n\r\n    private _playSound() {\r\n\r\n        if (this._elem.classList.contains('fa-play')) {\r\n            this._elem.classList.remove('fa-play');\r\n            this._elem.classList.add('fa-pause');\r\n        }\r\n        else {\r\n            this._elem.classList.remove('fa-pause');\r\n            this._elem.classList.add('fa-play');\r\n        }\r\n        this.playSound.setPlaying(() => {\r\n            this._elem.classList.remove('fa-pause');\r\n            this._elem.classList.add('fa-play');\r\n        });\r\n    }\r\n}\r\n","import { Sound } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { ISoundInteractions, SoundInteractions } from \"../treetools/SoundInteractions\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class SoundAdapter\r\n    extends Adapter\r\n    implements ISoundInteractions {\r\n\r\n    constructor(obj: Sound) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new SoundInteractions(this));\r\n        return tools;\r\n    }\r\n\r\n    public setPlaying(callback: Function) {\r\n        if ((this._obj as Sound).isPlaying) {\r\n            (this._obj as Sound).pause();\r\n        }\r\n        else {\r\n            (this._obj as Sound).play();\r\n        }\r\n        (this._obj as Sound).onended = () => {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n","import { SoundAdapter } from \"../adapters/SoundAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class SoundTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Audio', inspector);\r\n    }\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let sounds of instances.soundTracks) {\r\n            let sound = sounds.soundCollection;\r\n            sound.forEach(element => {\r\n                arr.push(new TreeItem(this, new SoundAdapter(element)));\r\n            });\r\n\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n","import { Engine, EngineInstrumentation, Nullable, Scene, SceneInstrumentation, Tools } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class StatsTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n\r\n    /** \r\n     * Properties in this array will be updated\r\n     * in a render loop - Mostly stats properties\r\n     */\r\n    private _updatableProperties: Array<{ elem: HTMLElement, updateFct: () => string }> = [];\r\n\r\n    private _scene: Scene;\r\n    private _engine: Engine;\r\n    private _glInfo: any;\r\n\r\n    private _updateLoopHandler: any;\r\n    private _refreshRateCounter: any;\r\n    private refreshRate: any;\r\n\r\n    private _sceneInstrumentation: Nullable<SceneInstrumentation>;\r\n    private _engineInstrumentation: Nullable<EngineInstrumentation>;\r\n\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    private _connectToInstrumentation() {\r\n        if (this._sceneInstrumentation) {\r\n            return;\r\n        }\r\n\r\n        this._sceneInstrumentation = new SceneInstrumentation(this._scene);\r\n        this._sceneInstrumentation.captureActiveMeshesEvaluationTime = true;\r\n        this._sceneInstrumentation.captureRenderTargetsRenderTime = true;\r\n        this._sceneInstrumentation.captureFrameTime = true;\r\n        this._sceneInstrumentation.captureRenderTime = true;\r\n        this._sceneInstrumentation.captureInterFrameTime = true;\r\n        this._sceneInstrumentation.captureParticlesRenderTime = true;\r\n        this._sceneInstrumentation.captureSpritesRenderTime = true;\r\n        this._sceneInstrumentation.capturePhysicsTime = true;\r\n        this._sceneInstrumentation.captureAnimationsTime = true;\r\n\r\n        this._engineInstrumentation = new EngineInstrumentation(this._engine);\r\n        this._engineInstrumentation.captureGPUFrameTime = true;\r\n    }\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Stats');\r\n\r\n        this._inspector = insp;\r\n\r\n        this._scene = this._inspector.scene;\r\n        this._engine = this._scene.getEngine();\r\n        this._glInfo = this._engine.getGlInfo();\r\n\r\n        this._connectToInstrumentation();\r\n\r\n        // Build the stats panel: a div that will contains all stats\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add(\"stats-panel\")\r\n\r\n        let title = Helpers.CreateDiv('stat-title1', this._panel);\r\n        let fpsSpan = Helpers.CreateElement('span', 'stats-fps');\r\n        this._updatableProperties.push({\r\n            elem: fpsSpan,\r\n            updateFct: () => { return Tools.Format(this._inspector.scene.getEngine().getFps(), 0) + \" fps\" }\r\n        });\r\n\r\n        let versionSpan = Helpers.CreateElement('span');\r\n        versionSpan.textContent = `js v${Engine.Version} - `;\r\n        title.appendChild(versionSpan);\r\n        title.appendChild(fpsSpan);\r\n\r\n        this._updateLoopHandler = this._update.bind(this);\r\n        this._refreshRateCounter = 0;\r\n        this.refreshRate = 4;\r\n\r\n        // Count block\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Count\";\r\n        {\r\n            this._createStatLabel(\"Total meshes\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.meshes.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Draw calls\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._sceneInstrumentation!.drawCallsCounter.current.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Texture collisions\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._sceneInstrumentation!.textureCollisionsCounter.current.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total lights\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.lights.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total vertices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getTotalVertices().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total materials\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.materials.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total textures\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.textures.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active meshes\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveMeshes().length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active indices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveIndices().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active bones\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveBones().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active particles\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveParticles().toString() }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Duration\";\r\n        {\r\n            this._createStatLabel(\"Properties refresh rate (per second)\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n            this._inputElement.value = this.refreshRate;\r\n            elemValue.appendChild(this._inputElement);\r\n            this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n                this.refreshRate = this._inputElement.value;\r\n            })\r\n            this._createStatLabel(\"Meshes selection\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.activeMeshesEvaluationTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Render targets\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.renderTargetsRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Particles\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.particlesRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Sprites\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.spritesRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Animations\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.animationsTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Physics\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.physicsTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Render\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.renderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Frame\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.frameTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Inter-frame\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.interFrameTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"GPU Frame time\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._engineInstrumentation!.gpuFrameTimeCounter.current * 0.000001) }\r\n            });\r\n            this._createStatLabel(\"GPU Frame time (average)\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._engineInstrumentation!.gpuFrameTimeCounter.average * 0.000001) }\r\n            });\r\n            this._createStatLabel(\"Potential FPS\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(1000.0 / this._sceneInstrumentation!.frameTimeCounter.current, 0) }\r\n            });\r\n            this._createStatLabel(\"Resolution\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getRenderWidth() + \"x\" + this._engine.getRenderHeight() }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Extensions\";\r\n        {\r\n            this._createStatLabel(\"Std derivatives\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().standardDerivatives ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Compressed textures\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().s3tc ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Hardware instances\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().instancedArrays ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Texture float\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().textureFloat ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"32bits indices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().uintIndices ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Fragment depth\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().fragmentDepthSupported ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"High precision shaders\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().highPrecisionShaderSupported ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Draw buffers\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().drawBuffersExtension ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Vertex array object\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().vertexArrayObject ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Timer query\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().timerQuery ? \"Yes\" : \"No\") }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Caps.\";\r\n        {\r\n            this._createStatLabel(\"Stencil\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.isStencilEnable ? \"Enabled\" : \"Disabled\") }\r\n            });\r\n            this._createStatLabel(\"Max textures units\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxTexturesImageUnits.toString() }\r\n            });\r\n            this._createStatLabel(\"Max textures size\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxTextureSize.toString() }\r\n            });\r\n            this._createStatLabel(\"Max anisotropy\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxAnisotropy.toString() }\r\n            });\r\n        }\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Info\";\r\n        {\r\n            let elemValue = Helpers.CreateDiv('stat-infos', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return \"WebGL v\" + this._engine.webGLVersion + \" - \" + this._glInfo.version + \" - \" + this._glInfo.renderer }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _createStatLabel(content: string, parent: HTMLElement): HTMLElement {\r\n        let elem = Helpers.CreateDiv('stat-label', parent);\r\n        elem.textContent = content;\r\n        return elem;\r\n    }\r\n\r\n    /** Update each properties of the stats panel */\r\n    private _update() {\r\n\r\n        if (this._refreshRateCounter > 1) {\r\n            this._refreshRateCounter--;\r\n        } else {\r\n            for (let prop of this._updatableProperties) {\r\n                prop.elem.textContent = prop.updateFct();\r\n            }\r\n            if (this._inspector.scene.getEngine().getFps() / this.refreshRate == Infinity) {\r\n                this._refreshRateCounter = 1;\r\n            } else {\r\n                this._refreshRateCounter = this._inspector.scene.getEngine().getFps() / this.refreshRate;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public dispose() {\r\n        this._scene.unregisterAfterRender(this._updateLoopHandler);\r\n        this._sceneInstrumentation!.dispose();\r\n        this._sceneInstrumentation = null;\r\n        this._engineInstrumentation!.dispose();\r\n        this._engineInstrumentation = null;\r\n    }\r\n\r\n    public active(b: boolean) {\r\n        super.active(b);\r\n        if (b) {\r\n            this._connectToInstrumentation();\r\n            this._scene.registerAfterRender(this._updateLoopHandler);\r\n        }\r\n    }\r\n}\r\n","import { Adapter } from \"./Adapter\";\r\nimport { BaseTexture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\n\r\nexport class TextureAdapter\r\n    extends Adapter {\r\n\r\n    constructor(obj: BaseTexture) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        // Not used in this tab\r\n        return [];\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = new Array<AbstractTreeTool>();\r\n        // tools.push(new CameraPOV(this));\r\n        return tools;\r\n    }\r\n\r\n}\r\n","import { CubeTexture, RenderTargetTexture, Tools } from \"babylonjs\";\r\nimport { TextureAdapter } from \"../adapters/TextureAdapter\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nexport class TextureTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n    /** The panel containing a list of items */\r\n    protected _treePanel: HTMLElement;\r\n    protected _treeItems: Array<TreeItem> = [];\r\n\r\n    /* Panel containing the texture image */\r\n    private _imagePanel: HTMLElement;\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Textures');\r\n        this._inspector = inspector;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n\r\n        // Build the treepanel\r\n        this._treePanel = Helpers.CreateDiv('insp-tree', this._panel);\r\n\r\n        this._imagePanel = Helpers.CreateDiv('insp-details', this._panel) as HTMLDivElement;\r\n\r\n        Split([this._treePanel, this._imagePanel], {\r\n            blockDrag: this._inspector.popupMode,\r\n            direction: 'vertical'\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    public dispose() {\r\n        // Nothing to dispose\r\n    }\r\n\r\n    public update(_items?: Array<TreeItem>) {\r\n        let items;\r\n        if (_items) {\r\n            items = _items;\r\n        } else {\r\n            // Rebuild the tree\r\n            this._treeItems = this._getTree();\r\n            items = this._treeItems;\r\n        }\r\n        // Clean the tree\r\n        Helpers.CleanDiv(this._treePanel);\r\n        Helpers.CleanDiv(this._imagePanel);\r\n\r\n        // Sort items alphabetically\r\n        items.sort((item1, item2) => {\r\n            return item1.compareTo(item2);\r\n        });\r\n\r\n        // Display items\r\n        for (let item of items) {\r\n            this._treePanel.appendChild(item.toHtml());\r\n        }\r\n    }\r\n\r\n    /* Overrides super */\r\n    private _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let tex of instances.textures) {\r\n            arr.push(new TreeItem(this, new TextureAdapter(tex)));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /** Display the details of the given item */\r\n    public displayDetails(item: TreeItem) {\r\n        // Remove active state on all items\r\n        this.activateNode(item);\r\n        Helpers.CleanDiv(this._imagePanel);\r\n        // Get the texture object\r\n        let texture = item.adapter.object;\r\n        let imgs: HTMLImageElement[] = [];\r\n        let img = Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement;\r\n        imgs.push(img);\r\n        //Create five other images elements\r\n        for (let i = 0; i < 5; i++) {\r\n            imgs.push(Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement);\r\n        }\r\n\r\n        if (texture instanceof RenderTargetTexture) {\r\n            // RenderTarget textures\r\n            let scene = this._inspector.scene;\r\n            let engine = scene.getEngine();\r\n            let size = texture.getSize();\r\n\r\n            // Clone the texture\r\n            let screenShotTexture = texture.clone();\r\n            screenShotTexture.activeCamera = texture.activeCamera;\r\n            screenShotTexture.onBeforeRender = texture.onBeforeRender;\r\n            screenShotTexture.onAfterRender = texture.onAfterRender;\r\n            screenShotTexture.onBeforeRenderObservable = texture.onBeforeRenderObservable;\r\n\r\n            // To display the texture after rendering\r\n            screenShotTexture.onAfterRenderObservable.add((faceIndex: number) => {\r\n                Tools.DumpFramebuffer(size.width, size.height, engine,\r\n                    (data) => imgs[faceIndex].src = data);\r\n            });\r\n\r\n            // Render the texture\r\n            scene.incrementRenderId();\r\n            scene.resetCachedMaterial();\r\n            screenShotTexture.render();\r\n            screenShotTexture.dispose();\r\n        } else if (texture instanceof CubeTexture) {\r\n            // Cannot open correctly DDS File\r\n            // Display all textures of the CubeTexture\r\n            let pixels = <ArrayBufferView>texture.readPixels();\r\n            let canvas = document.createElement('canvas');\r\n            canvas.id = \"MyCanvas\";\r\n\r\n            if (img.parentElement) {\r\n                img.parentElement.appendChild(canvas);\r\n            }\r\n            let ctx = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n            let size = texture.getSize();\r\n\r\n            let tmp = pixels.buffer.slice(0, size.height * size.width * 4);\r\n            let u = new Uint8ClampedArray(tmp)\r\n\r\n            let colors = new ImageData(size.width * 6, size.height);\r\n\r\n            colors.data.set(u);\r\n            let imgData = ctx.createImageData(size.width * 6, size.height);\r\n\r\n            imgData.data.set(u);\r\n\r\n            // let data = imgData.data;\r\n\r\n            // for(let i = 0, len = size.height * size.width; i < len; i++) {\r\n            //     data[i] = pixels[i];\r\n            // }\r\n            ctx.putImageData(imgData, 0, 0);\r\n            // let i: number = 0;\r\n            // for(let filename of (texture as CubeTexture)['_files']){\r\n            //     imgs[i].src = filename;\r\n            //     i++;\r\n            // }\r\n        }\r\n        else if (texture['_canvas']) {\r\n            // Dynamic texture\r\n            let base64Image = texture['_canvas'].toDataURL(\"image/png\");\r\n            img.src = base64Image;\r\n        } else if (texture.url) {\r\n            let pixels = texture.readPixels();\r\n            let canvas = document.createElement('canvas');\r\n            canvas.id = \"MyCanvas\";\r\n\r\n            if (img.parentElement) {\r\n                img.parentElement.appendChild(canvas);\r\n            }\r\n            let ctx = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n            let size = texture.getSize();\r\n\r\n            let imgData = ctx.createImageData(size.width, size.height);\r\n\r\n            imgData.data.set(pixels);\r\n\r\n            ctx.putImageData(imgData, 0, 0);\r\n            // If an url is present, the texture is an image\r\n            // img.src = texture.url;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // Active the node\r\n        this.activateNode(item);\r\n        // Display its details\r\n        this.displayDetails(item);\r\n    }\r\n\r\n    /** Set the given item as active in the tree */\r\n    public activateNode(item: TreeItem) {\r\n        if (this._treeItems) {\r\n            for (let node of this._treeItems) {\r\n                node.active(false);\r\n            }\r\n        }\r\n        item.active(true);\r\n    }\r\n}\r\n","import { CubeTexture, Engine, EnvironmentTextureTools, Nullable, Scene, Tools } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class ToolsTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n\r\n    private _scene: Scene;\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Tools');\r\n\r\n        this._inspector = insp;\r\n\r\n        this._scene = this._inspector.scene;\r\n\r\n        // Build the tools panel: a div that will contains all tools\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add(\"tools-panel\")\r\n\r\n        let title = Helpers.CreateDiv('tool-title1', this._panel);\r\n        let versionSpan = Helpers.CreateElement('span');\r\n        versionSpan.textContent = `js v${Engine.Version} - Tools`;\r\n        title.appendChild(versionSpan);\r\n\r\n        // Environment block\r\n        title = Helpers.CreateDiv('tool-title2', this._panel);\r\n        title.textContent = \"Environment Texture (.dds, .env)\";\r\n        {\r\n            let errorElemm = Inspector.DOCUMENT.createElement('div');\r\n            errorElemm.className = \"tool-label-error\";\r\n            errorElemm.style.display = \"none\";\r\n\r\n            let elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n            let inputElement = Inspector.DOCUMENT.createElement('input');\r\n            inputElement.className = \"tool-input\";\r\n            inputElement.type = \"file\";\r\n            inputElement.accept = \".dds, .env\";\r\n            inputElement.onchange = (event: any) => {\r\n                var files: File[] = event.target.files;\r\n                let file: Nullable<File> = null;\r\n                if (files && files.length) {\r\n                    file = files[0];\r\n                }\r\n\r\n                if (!file) {\r\n                    errorElemm.style.display = \"block\";\r\n                    errorElemm.textContent = \"Please, select a file first.\"\r\n                    return;\r\n                }\r\n\r\n                let isFileDDS = file.name.toLowerCase().indexOf(\".dds\") > 0;\r\n                let isFileEnv = file.name.toLowerCase().indexOf(\".env\") > 0;\r\n                if (!isFileDDS && !isFileEnv) {\r\n                    errorElemm.style.display = \"block\";\r\n                    errorElemm.textContent = \"Please, select a dds or env file.\"\r\n                    return;\r\n                }\r\n\r\n                Tools.ReadFile(file, data => {\r\n                    var blob = new Blob([data], { type: \"octet/stream\" });\r\n                    var url = URL.createObjectURL(blob);\r\n                    if (isFileDDS) {\r\n                        this._scene.environmentTexture = CubeTexture.CreateFromPrefilteredData(url, this._scene, \".dds\");\r\n                        errorElemm.style.display = \"none\";\r\n                    }\r\n                    else {\r\n                        this._scene.environmentTexture = new CubeTexture(url, this._scene,\r\n                            undefined, undefined, undefined,\r\n                            () => {\r\n                                errorElemm.style.display = \"none\";\r\n                            },\r\n                            (message) => {\r\n                                if (message) {\r\n                                    errorElemm.style.display = \"block\";\r\n                                    errorElemm.textContent = message;\r\n                                }\r\n                            },\r\n                            undefined, undefined,\r\n                            \".env\");\r\n                    }\r\n                }, undefined, true);\r\n            };\r\n            elemValue.appendChild(inputElement);\r\n\r\n            if (!this._scene.getEngine().premultipliedAlpha) {\r\n                elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n                inputElement = Inspector.DOCUMENT.createElement('input');\r\n                inputElement.value = \"Compress current texture to .env\";\r\n                inputElement.className = \"tool-input\";\r\n                inputElement.type = \"button\";\r\n                inputElement.onclick = () => {\r\n                    if (!this._scene.environmentTexture) {\r\n                        errorElemm.style.display = \"block\";\r\n                        errorElemm.textContent = \"You must load an environment texture first.\";\r\n                        return;\r\n                    }\r\n                    if (this._scene.activeCamera) {\r\n                        EnvironmentTextureTools.CreateEnvTextureAsync(<CubeTexture>this._scene.environmentTexture)\r\n                            .then((buffer: ArrayBuffer) => {\r\n                                var blob = new Blob([buffer], { type: \"octet/stream\" });\r\n                                Tools.Download(blob, \"environment.env\");\r\n                                errorElemm.style.display = \"none\";\r\n                            })\r\n                            .catch((error: any) => {\r\n                                errorElemm.style.display = \"block\";\r\n                                errorElemm.textContent = error;\r\n                            });\r\n                    }\r\n                    else {\r\n                        errorElemm.style.display = \"block\";\r\n                        errorElemm.textContent = \"An active camera is required.\";\r\n                    }\r\n                };\r\n                elemValue.appendChild(inputElement);\r\n            }\r\n\r\n            this._panel.appendChild(errorElemm);\r\n        }\r\n\r\n        title = Helpers.CreateDiv('tool-title2', this._panel);\r\n        title.textContent = \"Capture\";\r\n        {\r\n            let elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n            let inputElement = Inspector.DOCUMENT.createElement('input');\r\n            inputElement.value = \"Take Screenshot\";\r\n            inputElement.type = \"button\";\r\n            inputElement.className = \"tool-input\";\r\n            inputElement.onclick = () => {\r\n                if (this._scene.activeCamera) {\r\n                    Tools.CreateScreenshot(this._scene.getEngine(), this._scene.activeCamera, { precision: 0.5 });\r\n                }\r\n            };\r\n            elemValue.appendChild(inputElement);\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        // Nothing to dispose\r\n    }\r\n}\r\n","import { AbstractMesh, Nullable } from \"babylonjs\";\r\nimport { BasicElement } from \"../gui/BasicElement\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Toolbar } from \"../tools/Toolbar\";\r\nimport { CameraTab } from \"./CameraTab\";\r\nimport { ConsoleTab } from \"./ConsoleTab\";\r\nimport { GLTFTab } from \"./GLTFTab\";\r\nimport { GUITab } from \"./GUITab\";\r\nimport { LightTab } from \"./LightTab\";\r\nimport { MaterialTab } from \"./MaterialTab\";\r\nimport { MeshTab } from \"./MeshTab\";\r\nimport { PhysicsTab } from \"./PhysicsTab\";\r\nimport { SceneTab } from \"./SceneTab\";\r\nimport { SoundTab } from \"./SoundTab\";\r\nimport { StatsTab } from \"./StatsTab\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TextureTab } from \"./TextureTab\";\r\nimport { ToolsTab } from \"./ToolsTab\";\r\n\r\n\r\n/**\r\n * A tab bar will contains each view the inspector can have : Canvas2D, Meshes...\r\n * The default active tab is the first one of the list.\r\n */\r\nexport class TabBar extends BasicElement {\r\n\r\n    // The list of available tabs\r\n    private _tabs: Array<Tab> = [];\r\n    private _inspector: Inspector;\r\n    /** The tab displaying all meshes */\r\n    private _meshTab: MeshTab;\r\n    /** The toolbar */\r\n    private _toolBar: Toolbar;\r\n    /** The icon displayed at the end of the toolbar displaying a combo box of tabs not displayed */\r\n    private _moreTabsIcon: HTMLElement;\r\n    /** The panel displayed when the 'more-tab' icon is selected */\r\n    private _moreTabsPanel: HTMLElement;\r\n    /** The list of tab displayed by clicking on the remainingIcon */\r\n    private _invisibleTabs: Array<Tab> = [];\r\n    /** The list of tabs visible, displayed in the tab bar */\r\n    private _visibleTabs: Array<Tab> = [];\r\n\r\n    constructor(inspector: Inspector, initialTab?: number) {\r\n        super();\r\n        this._inspector = inspector;\r\n        this._tabs.push(new SceneTab(this, this._inspector));\r\n        this._tabs.push(new ConsoleTab(this, this._inspector));\r\n        this._tabs.push(new StatsTab(this, this._inspector));\r\n        this._meshTab = new MeshTab(this, this._inspector);\r\n        this._tabs.push(new TextureTab(this, this._inspector));\r\n        this._tabs.push(this._meshTab);\r\n        this._tabs.push(new LightTab(this, this._inspector));\r\n        this._tabs.push(new MaterialTab(this, this._inspector));\r\n        if (GLTFTab.IsSupported) {\r\n            this._tabs.push(new GLTFTab(this, this._inspector));\r\n        }\r\n        if (Inspector.GUIObject) {\r\n            this._tabs.push(new GUITab(this, this._inspector));\r\n        }\r\n        this._tabs.push(new PhysicsTab(this, this._inspector));\r\n        this._tabs.push(new CameraTab(this, this._inspector));\r\n        this._tabs.push(new SoundTab(this, this._inspector));\r\n        this._tabs.push(new ToolsTab(this, this._inspector));\r\n        this._toolBar = new Toolbar(this._inspector);\r\n\r\n        this._build();\r\n\r\n        //Check initialTab is defined and between tabs bounds\r\n        if (!initialTab || initialTab < 0 || initialTab >= this._tabs.length) {\r\n            initialTab = 0;\r\n        }\r\n\r\n        this._tabs[initialTab].active(true);\r\n\r\n        // set all tab as visible\r\n        for (let tab of this._tabs) {\r\n            this._visibleTabs.push(tab);\r\n        }\r\n    }\r\n\r\n    // No update\r\n    public update() { }\r\n\r\n    protected _build() {\r\n        this._div.className = 'tabbar';\r\n\r\n        this._div.appendChild(this._toolBar.toHtml());\r\n        for (let tab of this._tabs) {\r\n            this._div.appendChild(tab.toHtml());\r\n        }\r\n\r\n\r\n        this._moreTabsIcon = Helpers.CreateElement('i', 'fa fa-angle-double-right more-tabs');\r\n\r\n        this._moreTabsPanel = Helpers.CreateDiv('more-tabs-panel');\r\n\r\n        this._moreTabsIcon.addEventListener('click', () => {\r\n            // Hide the 'more-tabs-panel' if already displayed \r\n            if (this._moreTabsPanel.style.display == 'flex') {\r\n                this._moreTabsPanel.style.display = 'none';\r\n            } else {\r\n                // Attach more-tabs-panel if not attached yet\r\n                let topPanel = this._div.parentNode as HTMLElement;\r\n                if (!topPanel.contains(this._moreTabsPanel)) {\r\n                    topPanel.appendChild(this._moreTabsPanel);\r\n                }\r\n                // Clean the 'more-tabs-panel'\r\n                Helpers.CleanDiv(this._moreTabsPanel);\r\n                // Add each invisible tabs to this panel\r\n                for (let tab of this._invisibleTabs) {\r\n                    this._addInvisibleTabToPanel(tab);\r\n                }\r\n                // And display it\r\n                this._moreTabsPanel.style.display = 'flex';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** \r\n     * Add a tab to the 'more-tabs' panel, displayed by clicking on the \r\n     * 'more-tabs' icon\r\n     */\r\n    private _addInvisibleTabToPanel(tab: Tab) {\r\n        let div = Helpers.CreateDiv('invisible-tab', this._moreTabsPanel);\r\n        div.textContent = tab.name;\r\n        div.addEventListener('click', () => {\r\n            this._moreTabsPanel.style.display = 'none';\r\n            this.switchTab(tab);\r\n        });\r\n    }\r\n\r\n    /** Dispose the current tab, set the given tab as active, and refresh the treeview */\r\n    public switchTab(tab: Tab) {\r\n        // Dispose the active tab\r\n        let activeTab = this.getActiveTab();\r\n\r\n        if (activeTab) {\r\n            activeTab.dispose();\r\n        }\r\n\r\n        // Deactivate all tabs\r\n        for (let t of this._tabs) {\r\n            t.active(false);\r\n        }\r\n        // activate the given tab\r\n        tab.active(true);\r\n\r\n        // Refresh the inspector\r\n        this._inspector.refresh();\r\n    }\r\n\r\n    /** Display the mesh tab.\r\n     * If a parameter is given, the given mesh details are displayed\r\n     */\r\n    public switchMeshTab(mesh?: AbstractMesh) {\r\n        this.switchTab(this._meshTab);\r\n        if (mesh) {\r\n            let item = this._meshTab.getItemFor(mesh);\r\n            if (item) {\r\n                this._meshTab.select(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Returns the active tab */\r\n    public getActiveTab(): Nullable<Tab> {\r\n        for (let tab of this._tabs) {\r\n            if (tab.isActive()) {\r\n                return tab;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getActiveTabIndex(): number {\r\n        for (let i = 0; i < this._tabs.length; i++) {\r\n            if (this._tabs[i].isActive()) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public get inspector(): Inspector {\r\n        return this._inspector;\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of the tabbar, \r\n     * that corresponds to the sum of the width of each visible tab + toolbar width\r\n    */\r\n    public getPixelWidth(): number {\r\n        let sum = 0;\r\n        for (let tab of this._visibleTabs) {\r\n            sum += tab.getPixelWidth();\r\n        }\r\n        sum += this._toolBar.getPixelWidth();\r\n        if (this._div.contains(this._moreTabsIcon)) {\r\n            sum += 30; // $tabbarheight\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    /** Display the remaining icon or not depending on the tabbar width.\r\n     * This function should be called each time the inspector width is updated\r\n     */\r\n    public updateWidth(): void {\r\n        if (!this._div.parentElement) {\r\n            return;\r\n        }\r\n        let parentSize = this._div.parentElement.clientWidth;\r\n        let lastTabWidth = 75;\r\n        let currentSize = this.getPixelWidth();\r\n\r\n        // Check if a tab should be removed : if the tab bar width is greater than\r\n        // its parent width\r\n        while (this._visibleTabs.length > 0 && currentSize > parentSize) {\r\n            // Start by the last element\r\n            let tab = this._visibleTabs.pop();\r\n\r\n            if (!tab) {\r\n                break;\r\n            }\r\n\r\n            // set it invisible\r\n            this._invisibleTabs.push(tab);\r\n            // and removes it from the DOM\r\n            this._div.removeChild(tab.toHtml());\r\n            currentSize = this.getPixelWidth() + lastTabWidth;\r\n        }\r\n\r\n        // Check if a tab can be added to the tab bar : if the tab bar width\r\n        // + 100 (at least 100px is needed to add a tab) is less than its parent width\r\n        if (this._invisibleTabs.length > 0) {\r\n            if (currentSize + lastTabWidth < parentSize) {\r\n                let lastTab = this._invisibleTabs.pop();\r\n\r\n                if (lastTab) {\r\n                    this._div.appendChild(lastTab.toHtml());\r\n                    this._visibleTabs.push(lastTab);\r\n                }\r\n                // Update more-tab icon in last position if needed\r\n                if (this._div.contains(this._moreTabsIcon)) {\r\n                    this._div.removeChild(this._moreTabsIcon);\r\n                }\r\n            }\r\n        }\r\n        if (this._invisibleTabs.length > 0 && !this._div.contains(this._moreTabsIcon)) {\r\n            this._div.appendChild(this._moreTabsIcon);\r\n        }\r\n    }\r\n\r\n}\r\n","import { AbstractMesh, Nullable, Scene, Tools, Observable } from \"babylonjs\";\r\nimport \"../sass/main.scss\";\r\nimport { Helpers } from \"./helpers/Helpers\";\r\nimport { loadGUIProperties } from \"./properties_gui\";\r\nimport { Scheduler } from \"./scheduler/Scheduler\";\r\nimport { TabBar } from \"./tabs/TabBar\";\r\n\r\nimport * as Split from \"Split\";\r\n\r\nexport class Inspector {\r\n\r\n    private _c2diwrapper: HTMLElement;\r\n    // private _detailsPanel: DetailPanel;\r\n    /** The panel displayed at the top of the inspector */\r\n    private _topPanel: HTMLElement;\r\n    /** The div containing the content of the active tab */\r\n    private _tabPanel: HTMLElement;\r\n    /** The panel containing the list if items */\r\n    // private _treePanel   : HTMLElement;\r\n    private _tabbar: TabBar;\r\n    private _scene: Scene;\r\n    /** The HTML document relative to this inspector (the window or the popup depending on its mode) */\r\n    public static DOCUMENT: HTMLDocument;\r\n    /** The HTML window. In popup mode, it's the popup itself. Otherwise, it's the current tab */\r\n    public static WINDOW: Window;\r\n    /** True if the inspector is built as a popup tab */\r\n    private _popupMode: boolean = false;\r\n    /** The original canvas style, before applying the inspector*/\r\n    private _canvasStyle: any;\r\n\r\n    private _initialTab: number;\r\n\r\n    private _parentElement: Nullable<HTMLElement>;\r\n\r\n    public onGUILoaded: Observable<typeof import(\"babylonjs-gui\")>;\r\n\r\n    public static GUIObject: typeof import(\"babylonjs-gui\"); // should be typeof \"babylonjs-gui\";\r\n\r\n    /** The inspector is created with the given engine.\r\n     * If the parameter 'popup' is false, the inspector is created as a right panel on the main window.\r\n     * If the parameter 'popup' is true, the inspector is created in another popup.\r\n     */\r\n    constructor(scene: Scene, popup?: boolean, initialTab: number = 0, parentElement: Nullable<HTMLElement> = null, newColors?: {\r\n        backgroundColor?: string,\r\n        backgroundColorLighter?: string,\r\n        backgroundColorLighter2?: string,\r\n        backgroundColorLighter3?: string,\r\n        color?: string,\r\n        colorTop?: string,\r\n        colorBot?: string\r\n    }) {\r\n\r\n        this.onGUILoaded = new Observable();\r\n\r\n        import(\"babylonjs-gui\").then(GUI => {\r\n            // Load GUI library if not already done\r\n            if (!GUI || (<Object>GUI).hasOwnProperty(\"default\")) {\r\n                Tools.LoadScript(\"https://preview.babylonjs.com/gui/babylon.gui.min.js\", () => {\r\n                    Inspector.GUIObject = (<any>BABYLON).GUI;\r\n                    this.onGUILoaded.notifyObservers(Inspector.GUIObject);\r\n                    //Load properties of GUI objects now as GUI has to be declared before \r\n                    loadGUIProperties(Inspector.GUIObject);\r\n                }, () => {\r\n                    console.warn('Error : loading \"babylon.gui.min.js\". Please add script https://preview.babylonjs.com/gui/babylon.min.gui.js to the HTML file.');\r\n                });\r\n            }\r\n            else {\r\n                Inspector.GUIObject = GUI;\r\n                this.onGUILoaded.notifyObservers(Inspector.GUIObject);\r\n                //Load properties of GUI objects now as GUI has to be declared before \r\n                loadGUIProperties(Inspector.GUIObject);\r\n            }\r\n        })\r\n        //get Tabbar initialTab\r\n        this._initialTab = initialTab;\r\n\r\n        //get parentElement of our Inspector\r\n        this._parentElement = parentElement;\r\n\r\n        // get canvas parent only if needed.\r\n        this._scene = scene;\r\n\r\n        // Save HTML document and window\r\n        Inspector.DOCUMENT = window.document;\r\n        Inspector.WINDOW = window;\r\n\r\n        // POPUP MODE\r\n        if (popup) {\r\n            // Build the inspector in the given parent\r\n            this.openPopup(true);// set to true in order to NOT dispose the inspector (done in openPopup), as it's not existing yet\r\n        } else {\r\n            // Get canvas and its DOM parent\r\n            let canvas = <HTMLElement>this._scene.getEngine().getRenderingCanvas();\r\n            let canvasParent = canvas.parentElement;\r\n\r\n            // get canvas style                \r\n            let canvasComputedStyle = Inspector.WINDOW.getComputedStyle(canvas);\r\n\r\n            this._canvasStyle = {\r\n                width: Helpers.Css(canvas, 'width'),\r\n                height: Helpers.Css(canvas, 'height'),\r\n\r\n                position: canvasComputedStyle.position,\r\n                top: canvasComputedStyle.top,\r\n                bottom: canvasComputedStyle.bottom,\r\n                left: canvasComputedStyle.left,\r\n                right: canvasComputedStyle.right,\r\n\r\n                padding: canvasComputedStyle.padding,\r\n                paddingBottom: canvasComputedStyle.paddingBottom,\r\n                paddingLeft: canvasComputedStyle.paddingLeft,\r\n                paddingTop: canvasComputedStyle.paddingTop,\r\n                paddingRight: canvasComputedStyle.paddingRight,\r\n\r\n                margin: canvasComputedStyle.margin,\r\n                marginBottom: canvasComputedStyle.marginBottom,\r\n                marginLeft: canvasComputedStyle.marginLeft,\r\n                marginTop: canvasComputedStyle.marginTop,\r\n                marginRight: canvasComputedStyle.marginRight\r\n\r\n            };\r\n\r\n            if (this._parentElement) {\r\n                // Build the inspector wrapper\r\n                this._c2diwrapper = Helpers.CreateDiv('insp-wrapper', this._parentElement);\r\n                this._c2diwrapper.style.width = '100%';\r\n                this._c2diwrapper.style.height = '100%';\r\n                this._c2diwrapper.style.paddingLeft = '5px';\r\n\r\n                // add inspector     \r\n                let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n                inspector.style.width = '100%';\r\n                inspector.style.height = '100%';\r\n                // and build it in the popup  \r\n                this._buildInspector(inspector);\r\n            } else {\r\n                // Create c2di wrapper\r\n                this._c2diwrapper = Helpers.CreateDiv('insp-wrapper');\r\n\r\n                // copy style from canvas to wrapper\r\n                for (let prop in this._canvasStyle) {\r\n                    (<any>this._c2diwrapper.style)[prop] = this._canvasStyle[prop];\r\n                }\r\n\r\n                if (!canvasComputedStyle.width || !canvasComputedStyle.height || !canvasComputedStyle.left) {\r\n                    return;\r\n                }\r\n\r\n                // Convert wrapper size in % (because getComputedStyle returns px only)\r\n                let widthPx = parseFloat(canvasComputedStyle.width.substr(0, canvasComputedStyle.width.length - 2)) || 0;\r\n                let heightPx = parseFloat(canvasComputedStyle.height.substr(0, canvasComputedStyle.height.length - 2)) || 0;\r\n\r\n                // If the canvas position is absolute, restrain the wrapper width to the window width + left positionning\r\n                if (canvasComputedStyle.position === \"absolute\" || canvasComputedStyle.position === \"relative\") {\r\n                    // compute only left as it takes predominance if right is also specified (and it will be for the wrapper)\r\n                    let leftPx = parseFloat(canvasComputedStyle.left.substr(0, canvasComputedStyle.left.length - 2)) || 0;\r\n                    if (widthPx + leftPx >= Inspector.WINDOW.innerWidth) {\r\n                        this._c2diwrapper.style.maxWidth = `${widthPx - leftPx}px`;\r\n                    }\r\n                }\r\n\r\n\r\n                // Check if the parent of the canvas is the body page. If yes, the size ratio is computed\r\n                let parent = this._getRelativeParent(canvas);\r\n\r\n                let parentWidthPx = parent.clientWidth;\r\n                let parentHeightPx = parent.clientHeight;\r\n\r\n                let pWidth = widthPx / parentWidthPx * 100;\r\n                let pheight = heightPx / parentHeightPx * 100;\r\n\r\n                this._c2diwrapper.style.width = pWidth + \"%\";\r\n                this._c2diwrapper.style.height = pheight + \"%\";\r\n\r\n                // reset canvas style\r\n                canvas.style.position = \"static\";\r\n                canvas.style.width = \"100%\";\r\n                canvas.style.height = \"100%\";\r\n                canvas.style.paddingBottom = \"0\";\r\n                canvas.style.paddingLeft = \"0\";\r\n                canvas.style.paddingTop = \"0\";\r\n                canvas.style.paddingRight = \"0\";\r\n\r\n                canvas.style.margin = \"0\";\r\n                canvas.style.marginBottom = \"0\";\r\n                canvas.style.marginLeft = \"0\";\r\n                canvas.style.marginTop = \"0\";\r\n                canvas.style.marginRight = \"0\";\r\n\r\n                // Replace canvas with the wrapper...\r\n                if (canvasParent) {\r\n                    canvasParent.replaceChild(this._c2diwrapper, canvas);\r\n                }\r\n                // ... and add canvas to the wrapper\r\n                this._c2diwrapper.appendChild(canvas);\r\n\r\n                // add inspector\r\n                let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n\r\n                // Add split bar\r\n                if (!this._parentElement) {\r\n                    Split([canvas, inspector], {\r\n                        direction: 'horizontal',\r\n                        sizes: [75, 25],\r\n                        onDrag: () => {\r\n                            Helpers.SEND_EVENT('resize');\r\n                            if (this._tabbar) {\r\n                                this._tabbar.updateWidth()\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Build the inspector\r\n                this._buildInspector(inspector);\r\n            }\r\n            // Send resize event to the window\r\n            Helpers.SEND_EVENT('resize');\r\n            this._tabbar.updateWidth();\r\n        }\r\n\r\n        /*\r\n        * Refresh the inspector if the browser is not edge\r\n        *   Why not ?! Condition commented on 180525\r\n        *   To be tested\r\n        */\r\n        // if (!Helpers.IsBrowserEdge()) {\r\n        this.refresh();\r\n        // }\r\n\r\n        // Check custom css colors\r\n        if (newColors) {\r\n\r\n            let bColor = newColors.backgroundColor || '#242424';\r\n            let bColorl1 = newColors.backgroundColorLighter || '#2c2c2c';\r\n            let bColorl2 = newColors.backgroundColorLighter2 || '#383838';\r\n            let bColorl3 = newColors.backgroundColorLighter3 || '#454545';\r\n\r\n            let color = newColors.color || '#ccc';\r\n            let colorTop = newColors.colorTop || '#f29766';\r\n            let colorBot = newColors.colorBot || '#5db0d7';\r\n\r\n            let styles = Inspector.DOCUMENT.querySelectorAll('style');\r\n            for (let s = 0; s < styles.length; s++) {\r\n                let style = styles[s];\r\n\r\n                if (style.innerHTML.indexOf('insp-wrapper') != -1) {\r\n\r\n                    styles[s].innerHTML = styles[s].innerHTML\r\n                        .replace(/#242424/g, bColor) // background color\r\n                        .replace(/#2c2c2c/g, bColorl1) // background-lighter\r\n                        .replace(/#383838/g, bColorl2) // background-lighter2\r\n                        .replace(/#454545/g, bColorl3) // background-lighter3\r\n                        .replace(/#ccc/g, color) // color\r\n                        .replace(/#f29766/g, colorTop) // color-top\r\n                        .replace(/#5db0d7/g, colorBot) // color-bot\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If the given element has a position 'asbolute' or 'relative', \r\n     * returns the first parent of the given element that has a position 'relative' or 'absolute'.\r\n     * If the given element has no position, returns the first parent\r\n     * \r\n     */\r\n    private _getRelativeParent(elem: HTMLElement, lookForAbsoluteOrRelative?: boolean): HTMLElement {\r\n        // If the elem has no parent, returns himself\r\n        if (!elem.parentElement) {\r\n            return elem;\r\n        }\r\n        let computedStyle = Inspector.WINDOW.getComputedStyle(elem);\r\n        // looking for the first element absolute or relative\r\n        if (lookForAbsoluteOrRelative) {\r\n            // if found, return this one\r\n            if (computedStyle.position === \"relative\" || computedStyle.position === \"absolute\") {\r\n                return elem;\r\n            } else {\r\n                // otherwise keep looking\r\n                return this._getRelativeParent(elem.parentElement, true);\r\n            }\r\n        }\r\n        // looking for the relative parent of the element \r\n        else {\r\n            if (computedStyle.position == \"static\") {\r\n                return elem.parentElement;\r\n            } else {\r\n                // the elem has a position relative or absolute, look for the closest relative/absolute parent\r\n                return this._getRelativeParent(elem.parentElement, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Build the inspector panel in the given HTML element */\r\n    private _buildInspector(parent: HTMLElement) {\r\n        // tabbar\r\n        this._tabbar = new TabBar(this, this._initialTab);\r\n\r\n        // Top panel\r\n        this._topPanel = Helpers.CreateDiv('top-panel', parent);\r\n        // Add tabbar\r\n        this._topPanel.appendChild(this._tabbar.toHtml());\r\n        this._tabbar.updateWidth();\r\n\r\n        // Tab panel\r\n        this._tabPanel = Helpers.CreateDiv('tab-panel-content', this._topPanel);\r\n\r\n    }\r\n\r\n    public get scene(): Scene {\r\n        return this._scene;\r\n    }\r\n    public get popupMode(): boolean {\r\n        return this._popupMode;\r\n    }\r\n\r\n    /**  \r\n     * Filter the list of item present in the tree.\r\n     * All item returned should have the given filter contained in the item id.\r\n    */\r\n    public filterItem(filter: string) {\r\n        let tab = this._tabbar.getActiveTab();\r\n\r\n        if (tab) {\r\n            tab.filter(filter);\r\n        }\r\n    }\r\n\r\n    /** Display the mesh tab on the given object */\r\n    public displayObjectDetails(mesh: AbstractMesh) {\r\n        this._tabbar.switchMeshTab(mesh);\r\n    }\r\n\r\n    /** Clean the whole tree of item and rebuilds it */\r\n    public refresh() {\r\n        // Clean top panel\r\n        Helpers.CleanDiv(this._tabPanel);\r\n\r\n        // Get the active tab and its items\r\n        let activeTab = this._tabbar.getActiveTab();\r\n\r\n        if (!activeTab) {\r\n            return;\r\n        }\r\n        activeTab.update();\r\n        this._tabPanel.appendChild(activeTab.getPanel());\r\n        Helpers.SEND_EVENT('resize');\r\n\r\n    }\r\n\r\n    /** Remove the inspector panel when it's built as a right panel:\r\n     * remove the right panel and remove the wrapper\r\n     */\r\n    public dispose() {\r\n        if (!this._popupMode) {\r\n            let activeTab = this._tabbar.getActiveTab();\r\n            if (activeTab) {\r\n                activeTab.dispose();\r\n            }\r\n\r\n            // Get canvas\r\n            let canvas = <HTMLElement>this._scene.getEngine().getRenderingCanvas();\r\n\r\n            // restore canvas style\r\n            for (let prop in this._canvasStyle) {\r\n                (<any>canvas.style)[prop] = this._canvasStyle[prop];\r\n            }\r\n            // Get parent of the wrapper \r\n            if (canvas.parentElement) {\r\n                let canvasParent = canvas.parentElement.parentElement;\r\n\r\n                if (canvasParent) {\r\n                    canvasParent.insertBefore(canvas, this._c2diwrapper);\r\n                    // Remove wrapper\r\n                    Helpers.CleanDiv(this._c2diwrapper);\r\n                    this._c2diwrapper.remove();\r\n                    // Send resize event to the window\r\n                    Helpers.SEND_EVENT('resize');\r\n                }\r\n            }\r\n        }\r\n        Scheduler.getInstance().dispose();\r\n    }\r\n\r\n    /** Open the inspector in a new popup\r\n     * Set 'firstTime' to true if there is no inspector created beforehands\r\n     */\r\n    public openPopup(firstTime?: boolean) {\r\n\r\n        // Create popup\r\n        let popup = window.open('', 'js INSPECTOR', 'toolbar=no,resizable=yes,menubar=no,width=750,height=1000');\r\n        if (!popup) {\r\n            alert(\"Please update your browser to open the js inspector in an external view.\");\r\n            return;\r\n        }\r\n        popup.document.title = \"js INSPECTOR\";\r\n        // Get the inspector style      \r\n        let styles = Inspector.DOCUMENT.querySelectorAll('style');\r\n        for (let s = 0; s < styles.length; s++) {\r\n            popup.document.body.appendChild(styles[s].cloneNode(true));\r\n        }\r\n        let links = document.querySelectorAll('link');\r\n        for (let l = 0; l < links.length; l++) {\r\n            let link = popup.document.createElement(\"link\");\r\n            link.rel = \"stylesheet\";\r\n            link.href = (links[l] as HTMLLinkElement).href;\r\n            popup.document.head.appendChild(link);\r\n        }\r\n        // Dispose the right panel if existing\r\n        if (!firstTime) {\r\n            this.dispose();\r\n        }\r\n        // set the mode as popup\r\n        this._popupMode = true;\r\n        // Save the HTML document\r\n        Inspector.DOCUMENT = popup.document;\r\n        Inspector.WINDOW = popup;\r\n        // Build the inspector wrapper\r\n        this._c2diwrapper = Helpers.CreateDiv('insp-wrapper', popup.document.body);\r\n        // add inspector     \r\n        let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n        inspector.classList.add('popupmode');\r\n        // and build it in the popup  \r\n        this._buildInspector(inspector);\r\n        // Rebuild it\r\n        this.refresh();\r\n\r\n        popup.addEventListener('resize', () => {\r\n            if (this._tabbar) {\r\n                this._tabbar.updateWidth()\r\n            }\r\n        });\r\n    }\r\n\r\n    public getActiveTabIndex(): number {\r\n        return this._tabbar.getActiveTabIndex();\r\n    }\r\n}","import { Nullable, Tools } from \"babylonjs\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PROPERTIES } from \"../properties\";\r\n\r\nexport class Helpers {\r\n\r\n\r\n    /** \r\n     * Returns the type of the given object. First\r\n     * uses getClassName. If nothing is returned, used the type of the constructor\r\n     */\r\n    public static GET_TYPE(obj: any): string {\r\n        if (typeof obj === 'boolean') {\r\n            return 'boolean';\r\n        }\r\n\r\n        if (obj != null && obj != undefined) {\r\n            let classname = Tools.GetClassName(obj);\r\n            if (!classname || classname === 'object') {\r\n                classname = obj.constructor.name;\r\n                // classname is undefined in IE11\r\n                if (!classname) {\r\n                    classname = this._GetFnName(obj.constructor);\r\n                }\r\n            }\r\n            // If the class name has no matching properties, check every type\r\n            if (!this._CheckIfTypeExists(classname)) {\r\n                return this._GetTypeFor(obj);\r\n            }\r\n\r\n            return classname;\r\n        } else {\r\n\r\n            return 'type_not_defined';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if some properties are defined for the given type.\r\n     */\r\n    private static _CheckIfTypeExists(type: string) {\r\n        let properties = (<any>PROPERTIES)[type];\r\n        if (properties) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the user browser is edge.\r\n     */\r\n    public static IsBrowserEdge(): boolean {\r\n        var regexp = /Edge/\r\n        return regexp.test(navigator.userAgent);\r\n    }\r\n    /**\r\n     * Returns true if the user browser is IE.\r\n     */\r\n    public static IsBrowserIE(): boolean {\r\n        var regexp = /Trident.*rv\\:11\\./\r\n        return regexp.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Returns the name of the type of the given object, where the name \r\n     * is in PROPERTIES constant.\r\n     * Returns 'Undefined' if no type exists for this object\r\n     */\r\n    private static _GetTypeFor(obj: any) {\r\n        for (let type in PROPERTIES) {\r\n            let typeBlock = (<any>PROPERTIES)[type];\r\n            if (typeBlock.type) {\r\n                if (obj instanceof typeBlock.type) {\r\n                    return type;\r\n                }\r\n            }\r\n        }\r\n        return 'type_not_defined';\r\n    }\r\n    /**\r\n     * Returns the name of a function (workaround to get object type for IE11)\r\n     */\r\n    private static _GetFnName(fn: any) {\r\n        var f = typeof fn == 'function';\r\n        var s = f && ((fn.name && ['', fn.name]) || fn.toString().match(/function ([^\\(]+)/));\r\n        return (!f && 'not a function') || (s && s[1] || 'anonymous');\r\n    }\r\n\r\n    /** Send the event which name is given in parameter to the window */\r\n    public static SEND_EVENT(eventName: string) {\r\n        let event;\r\n        if (Inspector.DOCUMENT.createEvent) {\r\n            event = Inspector.DOCUMENT.createEvent('HTMLEvents');\r\n            event.initEvent(eventName, true, true);\r\n        } else {\r\n            event = new Event(eventName);\r\n        }\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    /** Returns the given number with 2 decimal number max if a decimal part exists */\r\n    public static Trunc(nb: number): number {\r\n        if (typeof nb !== 'number') {\r\n            return 0;\r\n        }\r\n        if (Math.round(nb) !== nb) {\r\n            return (<any>nb.toFixed(2));\r\n        }\r\n        return nb;\r\n    };\r\n\r\n    /**\r\n     * Useful function used to create a div\r\n     */\r\n    public static CreateDiv(className: Nullable<string> = null, parent?: HTMLElement): HTMLDivElement {\r\n        return <HTMLDivElement>Helpers.CreateElement('div', className, parent);\r\n    }\r\n\r\n    /**\r\n     * Useful function used to create a input\r\n     */\r\n    public static CreateInput(className?: string, parent?: HTMLElement): HTMLInputElement {\r\n        return <HTMLInputElement>Helpers.CreateElement('input', className, parent);\r\n    }\r\n\r\n    public static CreateElement(element: string, className: Nullable<string> = null, parent?: HTMLElement): HTMLElement {\r\n        let elem = Inspector.DOCUMENT.createElement(element);\r\n\r\n        if (className) {\r\n            elem.className = className;\r\n        }\r\n        if (parent) {\r\n            parent.appendChild(elem);\r\n        }\r\n        return elem;\r\n    }\r\n\r\n    /**\r\n     * Removes all children of the given div.\r\n     */\r\n    public static CleanDiv(div: HTMLElement) {\r\n        while (div.firstChild) {\r\n            div.removeChild(div.firstChild);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the true value of the given CSS Attribute from the given element (in percentage or in pixel, as it was specified in the css)\r\n     */\r\n    public static Css(elem: HTMLElement, cssAttribute: string): string {\r\n        let clone = elem.cloneNode(true) as HTMLElement;\r\n        let div = Helpers.CreateDiv('', Inspector.DOCUMENT.body);\r\n        div.style.display = 'none';\r\n        div.appendChild(clone);\r\n        let value = (<any>Inspector.WINDOW.getComputedStyle(clone))[cssAttribute];\r\n        if (div.parentNode) {\r\n            div.parentNode.removeChild(div);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public static LoadScript() {\r\n        Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/highlight.min.js\", (elem) => {\r\n            let script = Helpers.CreateElement('script', '', Inspector.DOCUMENT.body);\r\n            script.textContent = elem as string;\r\n\r\n            // Load glsl detection\r\n            Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/languages/glsl.min.js\", (elem) => {\r\n                let script = Helpers.CreateElement('script', '', Inspector.DOCUMENT.body);\r\n                script.textContent = elem as string;\r\n\r\n                // Load css style\r\n                Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/styles/zenburn.min.css\", (elem) => {\r\n                    let style = Helpers.CreateElement('style', '', Inspector.DOCUMENT.body);\r\n                    style.textContent = elem as string;\r\n                });\r\n            }, undefined, undefined, undefined, () => {\r\n                console.log('Error : LoadFile \"glsl.min.js\"');\r\n            });\r\n\r\n        }, undefined, undefined, undefined, () => {\r\n            console.log('Error : LoadFile \"highlight.min.js\"')\r\n        });\r\n\r\n    }\r\n\r\n    public static IsSystemName(name: string): boolean {\r\n        if (name == null) {\r\n            return false;\r\n        }\r\n        return name.indexOf(\"###\") === 0 && name.lastIndexOf(\"###\") === (name.length - 3);\r\n    }\r\n\r\n    /**\r\n     * Return an array of PropertyLine for an obj\r\n     * @param obj \r\n     */\r\n    public static GetAllLinesProperties(obj: any): Array<PropertyLine> {\r\n        let propertiesLines: Array<PropertyLine> = [];\r\n        let props = Helpers.GetAllLinesPropertiesAsString(obj);\r\n\r\n        for (let prop of props) {\r\n            let infos = new Property(prop, obj);\r\n            propertiesLines.push(new PropertyLine(infos));\r\n        }\r\n        return propertiesLines;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns an array of string corresponding to tjhe list of properties of the object to be displayed\r\n     * @param obj \r\n     */\r\n    public static GetAllLinesPropertiesAsString(obj: any, dontTakeThis: Array<string> = []): Array<string> {\r\n        let props: Array<string> = [];\r\n\r\n        for (let prop in obj) {\r\n            //No private and no function\r\n            if (dontTakeThis.indexOf(prop) === -1 && prop.substring(0, 1) !== '_' && typeof obj[prop] !== 'function') {\r\n                props.push(prop);\r\n            }\r\n        }\r\n        return props;\r\n    }\r\n\r\n    public static Capitalize(str: string): string {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\n\r\nexport interface ICameraPOV {\r\n    setPOV: () => void,\r\n    getCurrentActiveCamera: () => string,\r\n    id: () => string\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class CameraPOV extends AbstractTreeTool {\r\n    private cameraPOV: ICameraPOV;\r\n\r\n    constructor(camera: ICameraPOV) {\r\n        super();\r\n        this.cameraPOV = camera;\r\n\r\n        // Setting the id of the line with the name of the camera\r\n        this._elem.id = this.cameraPOV.id();\r\n\r\n        // Put the right icon \r\n        if (this._elem.id == this.cameraPOV.getCurrentActiveCamera()) {\r\n            this._elem.classList.add('fa-check-circle');\r\n        } else {\r\n            this._elem.classList.add('fa-circle');\r\n        }\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        this._gotoPOV();\r\n    }\r\n\r\n    private _gotoPOV() {\r\n        // Uncheck all the radio buttons\r\n        let actives = Inspector.DOCUMENT.querySelectorAll(\".fa-check-circle\");\r\n        for (let i = 0; i < actives.length; i++) {\r\n            actives[i].classList.remove('fa-check-circle');\r\n            actives[i].classList.add('fa-circle');\r\n        }\r\n\r\n        // setting the point off view to the right camera\r\n        this.cameraPOV.setPOV();\r\n\r\n        // Check the right radio button\r\n        if (this._elem.id == this.cameraPOV.getCurrentActiveCamera()) {\r\n            this._elem.classList.remove('fa-circle');\r\n            this._elem.classList.add('fa-check-circle');\r\n        }\r\n\r\n    }\r\n}\r\n","import { Camera } from \"babylonjs\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { CameraPOV, ICameraPOV } from \"../treetools/CameraPOV\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class CameraAdapter\r\n    extends Adapter\r\n    implements ICameraPOV {\r\n\r\n    constructor(obj: Camera) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new CameraPOV(this));\r\n        return tools;\r\n    }\r\n\r\n    // Set the point of view of the chosen camera\r\n    public setPOV() {\r\n        (this._obj as Camera).getScene().switchActiveCamera(this._obj);\r\n    }\r\n\r\n    // Return the name of the current active camera\r\n    public getCurrentActiveCamera() {\r\n        let activeCamera = (this._obj as Camera).getScene().activeCamera;\r\n        if (activeCamera != null) {\r\n            return activeCamera.name;\r\n        } else {\r\n            return \"0\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { Color3, Color4 } from \"babylonjs\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div corresponding to the given color\r\n*/\r\nexport class ColorElement extends BasicElement {\r\n\r\n    // The color as hexadecimal string\r\n    constructor(color: Color4 | Color3) {\r\n        super();\r\n        this._div.className = 'color-element';\r\n        this._div.style.backgroundColor = this._toRgba(color);\r\n    }\r\n\r\n    public update(color?: Color4 | Color3) {\r\n        if (color) {\r\n            this._div.style.backgroundColor = this._toRgba(color);\r\n        }\r\n    }\r\n\r\n    private _toRgba(color: Color4 | Color3): string {\r\n        if (color) {\r\n            let r = (color.r * 255) | 0;\r\n            let g = (color.g * 255) | 0;\r\n            let b = (color.b * 255) | 0;\r\n            let a = 1;\r\n            if (color instanceof Color4) {\r\n                a = (color as Color4).a;\r\n            }\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;"],"sourceRoot":""}