{
    "fromTag": "5.27.1",
    "changelog": {
        "5.28.0": [
            {
                "pr": "13105",
                "title": "WebGPU fix PCF shadows",
                "description": "- Fix Uniform analysis for WebGPU\r\n- Update Twgls to latest\r\n- Squeezed in fix for https://forum.babylonjs.com/t/typeerror-using-mesh-serialize/34708/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/shadowsFragmentFunctions.fx",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13104",
                "title": "update the webxr typings to match current state",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/handConstraintBehavior.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRHitTest.ts",
                    "packages/dev/core/src/XR/webXRInput.ts",
                    "packages/dev/core/src/XR/webXRManagedOutputCanvas.ts",
                    "packages/dev/core/src/XR/webXRWebGLLayer.ts"
                ],
                "tags": []
            },
            {
                "pr": "13101",
                "title": "Texture: Make some setters protected for properties not meant to be changed by end user",
                "description": "See https://forum.babylonjs.com/t/set-content-of-texture-array-from-canvas/34710/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/thinTexture.ts",
                    "packages/dev/core/src/Misc/dds.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts",
                    "packages/dev/core/src/XR/features/WebXRLightEstimation.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13099",
                "title": "Implement IAnimatable on GUI controls",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": []
            },
            {
                "pr": "13102",
                "title": "A little fix: links referenced in sceneLoader.ts are not found",
                "description": "A very little fix.\r\nI found a link in the SceneLoader's error message not found.\r\nSo, I fixed from `https://doc.babylonjs.com/how_to/load_from_any_file_type` to `https://doc.babylonjs.com/features/featuresDeepDive/importers/loadingFileTypes`",
                "author": {
                    "name": "drumath2237",
                    "url": "https://github.com/drumath2237"
                },
                "files": [
                    "packages/dev/core/src/Loading/sceneLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "13098",
                "title": "Adding a parameter for setParent() method that takes into account the pivot change",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "13097",
                "title": "Add extension support to assetsManager",
                "description": "Fix #13096",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/assetsManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "loaders"
                ]
            },
            {
                "pr": "13095",
                "title": "`PostProcessRenderPipeline`: Made `_renderEffects` protected to allow subclassing",
                "description": "It is not possible to manipulate the render effects in subclasses of `PostProcessRenderPipeline` so making these attributes protected can do the trick.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13090",
                "title": "Texture inspector in Sandbox does not function correctly",
                "description": "Fixes #13069",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureCanvasManager.ts"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13088",
                "title": "NullEngine Cannot use a ShadowGenerator",
                "description": "https://forum.babylonjs.com/t/cannot-create-shadow-map-with-point-light-in-node-on-server/21450/5",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/test/unit/Lights/Shadows/babylon.shadowGenerator.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13089",
                "title": "Hide change for billboard hierarchy with a static flag",
                "description": "Hides changes in these PRs with a flag for better back compat:\r\nhttps://github.com/BabylonJS/Babylon.js/pull/12984\r\nhttps://github.com/BabylonJS/Babylon.js/pull/13042",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            }
        ],
        "5.27.1": [
            {
                "pr": "13086",
                "title": "Set target to ES2018",
                "description": "Based on feedback and babylon native needs I am moving the target for our es packages to es2018",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "13079",
                "title": "Fixed transform gizmos screen size",
                "description": "Hi,\r\nI noticed that [gizmos](https://doc.babylonjs.com/features/featuresDeepDive/mesh/gizmo) do not correctly preserve the size on the screen.\r\n\r\nYou can notice that if the aspect ratio of the screen is big enough and you move a gizmo to the edge of the screen. It gets bigger. And this doesn't work at all with ORTHO-cameras.\r\n\r\nI've fixed the math a little bit and added branching depending on whether the camera is PERSP or ORTHO\r\nBefore:\r\nhttps://user-images.githubusercontent.com/2855321/194728765-276ae78a-4906-4c95-9ef9-6a4bae9d5501.mp4\r\nAfter:\r\nhttps://user-images.githubusercontent.com/2855321/194755033-bfe76baf-25d3-40a0-9795-f891941d6d51.mp4\r\n\r\n\r\n\r\n",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13085",
                "title": "Fix declaration generation when \"as\" is used",
                "description": "After this change, every `export { C as B } from \"path\"` will be supported when exporting the declaration. This will fix the issue with the TouchHolographicButtonV3",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/gui/src/3D/controls/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "13083",
                "title": "Add epsilon to Quaternion.AreClose",
                "description": "Ref https://forum.babylonjs.com/t/is-this-metric-to-check-how-close-rotation-quaternions-are-useful/34642/7?u=johnk",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13077",
                "title": "Update waterMaterial.ts",
                "description": "Fix the problem of disordered reflection when the water material model is in the sub node",
                "author": {
                    "name": "xg-qd",
                    "url": "https://github.com/xg-qd"
                },
                "files": [
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13060",
                "title": "Handle CSP violation errors when loading images.",
                "description": "Previously, whenever a texture fetch failed, we would try to load the fallback texture with \"data:\". If the user's page has a CSP rule that prohibits this, this fallback load would fail and prompt another fallback load, leading to an infinite loop. Now, we stop trying to load the fallback if we hit a security violation error (which is where CSP falls).\r\n\r\nThis behavior can be reproduced on the Playground by adding the CSP tag to the document:\r\nhttps://playground.babylonjs.com/#YCY2IL#1105\r\nhttps://playground.babylonjs.com/#8LFTCH#1452",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13078",
                "title": "remove in Place from conjugate comments",
                "description": "ref https://forum.babylonjs.com/t/quaternion-conjugate-two-inplace/34551/4?u=johnk",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13080",
                "title": "change CustomProceduralTexture constructor size type",
                "description": "The type of param size in CustomProceduralTexture'constructor is now number, I think it is more appropriate to use TextureSize instead.",
                "author": {
                    "name": "Hypnosss",
                    "url": "https://github.com/Hypnosss"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/customProceduralTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13081",
                "title": "prepass reflectivity channel support unlit materials",
                "description": "Add support for prepass reflectivity channel with unlit materials.\r\nBefore: https://playground.babylonjs.com/#RPBXIC\r\nAfter: https://playground.babylonjs.com/#RPBXIC#1",
                "author": {
                    "name": "Hypnosss",
                    "url": "https://github.com/Hypnosss"
                },
                "files": [
                    "packages/dev/core/src/Shaders/pbr.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "13074",
                "title": "Material block-dirty mechanism",
                "description": "This PR introduces a block-dirty mechanism on the material level, on top of the scene level.\nIt also adds the ability to run an atomic callback to make changes to the material (dirty-setting-wise)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13072",
                "title": "Fix blur kernel size in glow layer second try",
                "description": "https://forum.babylonjs.com/t/glowlayers-kernelblursize-is-reset-on-canvas-resize/34495/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/glowLayer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13070",
                "title": "Depth peeling renderer: Add excluded mesh support",
                "description": "See https://forum.babylonjs.com/t/depthpeeler-transparent-groundmaterial/34511/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            }
        ],
        "5.27.0": [
            {
                "pr": "13062",
                "title": "Allow GLTF Exporter to export WebP images",
                "description": "Adds JPEG and WEBP as valid optional mimetype options when serializing to a GLB. \r\n\r\nUsage:\r\nAdd this to the dev host scene's button:\r\n\r\n```\r\nbutton1.onPointerUpObservable.add(function () {\r\n        GLTF2Export.GLBAsync(scene, \"webp.glb\", {mimeType: ImageMimeType.WEBP}).then((glb) => {\r\n            glb.downloadFiles();\r\n          });\r\n    });\r\n```  \r\n\r\nOutput as per `gltf-transform inspect`\r\n**PNG**\r\n```\r\nTEXTURES\r\n ────────────────────────────────────────────\r\n┌───┬─────────────────────────────────────┬─────┬──────────────────────────┬───────────┬───────────┬────────────┬───────────┬──────────┐\r\n│ # │ name                                │ uri │ slots                    │ instances │ mimeType  │ resolution │ size      │ gpuSize¹ │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼───────────┼────────────┼───────────┼──────────┤\r\n│ 0 │ Material (Base Color) image         │     │ baseColorTexture         │ 1         │ image/png │ 1024x1024  │ 380.17 KB │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼───────────┼────────────┼───────────┼──────────┤\r\n│ 1 │ Material (Metallic Roughness) image │     │ metallicRoughnessTexture │ 1         │ image/png │ 1024x1024  │ 2.66 MB   │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼───────────┼────────────┼───────────┼──────────┤\r\n│ 2 │ Material (Normal) image             │     │ normalTexture            │ 1         │ image/png │ 1024x1024  │ 2.89 MB   │ 5.59 MB  │\r\n└───┴─────────────────────────────────────┴─────┴──────────────────────────┴───────────┴───────────┴────────────┴───────────┴──────────┘\r\n```\r\n\r\n\r\n**JPEG***\r\n```\r\nTEXTURES\r\n ────────────────────────────────────────────\r\n┌───┬─────────────────────────────────────┬─────┬──────────────────────────┬───────────┬────────────┬────────────┬───────────┬──────────┐\r\n│ # │ name                                │ uri │ slots                    │ instances │ mimeType   │ resolution │ size      │ gpuSize¹ │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 0 │ Material (Base Color) image         │     │ baseColorTexture         │ 1         │ image/jpeg │ 1024x1024  │ 42.62 KB  │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 1 │ Material (Metallic Roughness) image │     │ metallicRoughnessTexture │ 1         │ image/jpeg │ 1024x1024  │ 537.51 KB │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 2 │ Material (Normal) image             │     │ normalTexture            │ 1         │ image/jpeg │ 1024x1024  │ 584.05 KB │ 5.59 MB  │\r\n└───┴─────────────────────────────────────┴─────┴──────────────────────────┴───────────┴────────────┴────────────┴───────────┴──────────┘\r\n```\r\n**WEBP**\r\n```\r\nTEXTURES\r\n ────────────────────────────────────────────\r\n┌───┬─────────────────────────────────────┬─────┬──────────────────────────┬───────────┬────────────┬────────────┬───────────┬──────────┐\r\n│ # │ name                                │ uri │ slots                    │ instances │ mimeType   │ resolution │ size      │ gpuSize¹ │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 0 │ Material (Base Color) image         │     │ baseColorTexture         │ 1         │ image/webp │ 1024x1024  │ 12.19 KB  │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 1 │ Material (Metallic Roughness) image │     │ metallicRoughnessTexture │ 1         │ image/webp │ 1024x1024  │ 375.18 KB │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 2 │ Material (Normal) image             │     │ normalTexture            │ 1         │ image/webp │ 1024x1024  │ 418.08 KB │ 5.59 MB  │\r\n└───┴─────────────────────────────────────┴─────┴──────────────────────────┴───────────┴────────────┴────────────┴───────────┴──────────┘\r\n```\r\n\r\nMy first PR for this project, so let me know if I'm missing anything. ",
                "author": {
                    "name": "christaggart",
                    "url": "https://github.com/christaggart"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "13064",
                "title": "deal with dead codes correctly",
                "description": "Playground: #I1Y5YT#47\n\nThis treats dead code as expected minus a few modifiers that are not available in a keyboard event. For example - on a supporting keyboard - when entering a quote (\") and A afterwards we should output ä, but the expected result if entering \" and f (for example) afterwards is: `\"f`. This is not provided in the event. Threfore we are using the default behavior, which is output the dead key if space was entered right after.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputText.ts"
                ],
                "tags": []
            },
            {
                "pr": "13068",
                "title": "fix glow layer kernel set",
                "description": "related to https://forum.babylonjs.com/t/glowlayers-kernelblursize-is-reset-on-canvas-resize/34495\r\n\r\nsuperseeds https://github.com/BabylonJS/Babylon.js/pull/13063",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/glowLayer.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13067",
                "title": "PBR: Reset all defines when enabling/disabling pbr components",
                "description": "See https://forum.babylonjs.com/t/disabling-clearcoat-results-in-missing-object-within-next-screenshot/34479/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrClearCoatConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSheenConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12989",
                "title": "Create mrtkv3 button",
                "description": "This is a continuation of the work started in this PR: https://github.com/BabylonJS/Babylon.js/pull/12707:\r\nAssets PR: https://github.com/BabylonJS/Assets/pull/67\r\n\r\nPreview: \r\n\r\nThe design team is currently working on creating an interactive documentation for showcasing graphics tools components. This PR creates a TouchHolographicV3Button which mirrors the visual design of the MRTK v3.0 button.\r\nFor the time being, we would be using snapshots from this experimental PR and other PRs to create this documentation pending when we figure out the best way to release these new designs.\r\n\r\nTODO\r\n\r\n- [x] Figure out how to handle versioning between this button and the TouchHolographic button. As new designs for MRTK components are released, we might need to figure out the best way for users to switch from one version to the other. Otherwise, the growing list of varying components like the button might become confusing to use. - Solution: https://github.com/BabylonJS/Babylon.js/pull/12707#issuecomment-1230317075\r\n\r\n**Playground ID - /#UHMKE6#1**\r\n\r\n![image](https://user-images.githubusercontent.com/15232740/190650189-dc76d907-2da5-4771-9129-489e8e6384f1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/88052040/184244268-b19be3ca-eef3-429a-8600-9758159f0f77.gif)\r\n",
                "author": {
                    "name": "tayomadein",
                    "url": "https://github.com/tayomadein"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/MRTK3/touchHolographicButton.ts",
                    "packages/dev/gui/src/3D/controls/index.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackglowMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlFrontplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlInnerquadMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlBackglow.fragment.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlBackglow.vertex.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlFrontplate.fragment.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlFrontplate.vertex.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlInnerquad.fragment.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlInnerquad.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "13061",
                "title": "fix undefined self",
                "description": "https://forum.babylonjs.com/t/importasyncmesh-on-server-side-without-scene/34151/20",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13057",
                "title": "Fix Texture Cache",
                "description": "https://forum.babylonjs.com/t/draw-a-layer-using-a-render-target-as-background-to-render-target-2-dont-have-the-right-size/34423",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13056",
                "title": "Fix pipelineContext deletion in releaseEffect",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13054",
                "title": "InputManager: add a property to disable mesh checking in the onPointerOver event",
                "description": "See https://forum.babylonjs.com/t/trigger-onpointerovertrigger-when-hovering-between-2-thin-instances/33943/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "new feature",
                    "inputs"
                ]
            },
            {
                "pr": "13055",
                "title": "Fix negative scaling issue with instances",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/negative scaling with instances.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13053",
                "title": "Fix TmpVectors usage in Polar/Spherical toVector methods",
                "description": null,
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.polar.ts"
                ],
                "tags": []
            },
            {
                "pr": "13052",
                "title": "Inspector: Raise the limit of samples in SSAO",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonRenderingPipelinePropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "13051",
                "title": "Optional camera for all post processes",
                "description": "Camera is now optional for all posteffects except for anaglyph and multiview\r\n\r\n[Thread](https://forum.babylonjs.com/t/issues-in-the-documentation-for-posteffects/34370) in the forums",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/blackAndWhitePostProcess.ts",
                    "packages/dev/core/src/PostProcesses/colorCorrectionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/refractionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/tonemapPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/vrDistortionCorrectionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/vrMultiviewToSingleviewPostProcess.ts",
                    "packages/dev/postProcesses/src/asciiArt/asciiArtPostProcess.ts",
                    "packages/dev/postProcesses/src/digitalRain/digitalRainPostProcess.ts"
                ],
                "tags": []
            },
            {
                "pr": "13050",
                "title": "Provide Example PGs for Vector2s, for new Vector3s and a couple of Quaternions",
                "description": "\r\nProvide example PGs  for methods and properties. Changes to comments only.\r\n",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13040",
                "title": "Don't alter the scene's active cameras in the middle of taking a scre…",
                "description": "…enshot with RenderTargetTexture, because we can just set the RTT active camera instead.\r\n\r\nRelated to: https://forum.babylonjs.com/t/how-to-freeze-the-camera/34284/10 so we don't need to manually set the scene's active camera after taking a screenshot.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13046",
                "title": "Inspector Doc Link Fix",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13045",
                "title": "Change the artboard color on VSM",
                "description": "![vsm-artboard](https://user-images.githubusercontent.com/6002144/193133519-b338107e-5b88-4d9c-94db-e063c0f30798.gif)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/.storybook/main.js",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBar.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBarComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorComponentEntry.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorComponentEntry.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorPicker.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorPicker.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/HexColor.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/HexColor.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorPickerLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorPickerLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/NumericInputComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/NumericInputComponent.tsx",
                    "packages/dev/sharedUiComponents/src/imgs/copy.svg",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandBarComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/colorPicker/ColorPicker.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/ColorLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/ColorPickerLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/NumericInputComponent.stories.tsx",
                    "packages/tools/vsm/src/workbench.modules.scss",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13042",
                "title": "Fix billboard scale in hierarchy",
                "description": "Follow up https://forum.babylonjs.com/t/billboardmode-rotation-bug/33908 and https://forum.babylonjs.com/t/object-scaling-bug/34312/14\r\nFix done in https://github.com/BabylonJS/Babylon.js/pull/12984 was applying scale multiple time. Only taking care of rotation for billboard.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/billboardParentScale.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13043",
                "title": "Fix wrong plugin name check for babylon serialization",
                "description": "Follow up https://forum.babylonjs.com/t/physics-plugin-names-are-different-from-the-name-used-in-babylonfileloader-ts/34345\r\nFix bad plugin name check. Keep previous ones, just in case for back compat.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            }
        ],
        "5.26.1": [
            {
                "pr": "13041",
                "title": "fix declaration generation",
                "description": "The problem was the storybook declarations that were included in the final declaration of the inspector, the gui editor and the node editor",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts",
                    "packages/public/umd/babylonjs-gui/config.json",
                    "packages/public/umd/babylonjs-inspector/config.json",
                    "packages/public/umd/babylonjs-node-editor/config.json",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts"
                ],
                "tags": []
            }
        ],
        "5.26.0": [
            {
                "pr": "13036",
                "title": "Add applyPostProcess flag on ADV to optionally draw it after the post…",
                "description": "… processes have been applied.\r\n\r\nThanks Seb for the guidance :D \r\n\r\nSome Playground examples:\r\n#FBH4J7#144\r\n#J9H084#392 (has renderTarget)",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Layers/layer.ts",
                    "packages/dev/core/src/Layers/layerSceneComponent.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/src/sceneComponent.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/uiUnaffected.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "13035",
                "title": "Remove unneeded prefixes and unused code",
                "description": "Those were found while working on thinEngine/Engine optimizations as part of the ESM work.\r\n\r\nEach function was inspected for backwards compatibility. If a prefix is needed (as the case in some webkit-functionalities) it stayed, otherwise it was removed. ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioEngine.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Gamepads/gamepadManager.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Misc/virtualJoystick.ts",
                    "packages/tools/testTools/src/utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "13034",
                "title": "Initial VSM Design",
                "description": "Just adding a basic menu (with a class extracted from the GE menu, hopefully can be reused back there later).",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".vscode/tasks.json",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBar.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBarComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandButton.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandButtonComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandDropdown.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandDropdownComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/classNames.ts",
                    "packages/dev/sharedUiComponents/src/components/lines/FileButtonLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/FileButtonLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/imgs/betaFlag.svg",
                    "packages/dev/sharedUiComponents/src/imgs/canvasFitIcon.svg",
                    "packages/dev/sharedUiComponents/src/imgs/hamburger.svg",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandBarComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandButtonComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/FileButtonLineComponent.stories.tsx",
                    "packages/tools/vsm/src/customDeclarations.d.ts",
                    "packages/tools/vsm/src/workbench.modules.scss",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13038",
                "title": "Fix creation of cube textures from URL",
                "description": "This PR should fix the issue mentioned in this [forum post](https://forum.babylonjs.com/t/cubetexture-createfromprefiltereddata-does-not-work-with-url-that-contains-uri-params/34097) by cropping the URL params before parsing the file extension.",
                "author": {
                    "name": "HoferMarkus",
                    "url": "https://github.com/HoferMarkus"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13039",
                "title": "add picking for fullscreen ADTs",
                "description": "See https://forum.babylonjs.com/t/how-to-handle-gui-interactions-pointer-events-in-offscreen-canvas/34221",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13031",
                "title": "correction",
                "description": "I did not check https://playground.babylonjs.com/?snapshot=refs/pull/13012/merge#S7HDGQ#5 before merge, the green axis should be tangential to the line and it was not. Should be OK after this PR\r\n\r\nReason for correction\r\n\r\nPitchYawRollToMoveBetweenPointsToRef(start: Vector3, target: Vector3, ref: Vector3)\r\n\r\nCannot guarentee ref with be a zero vector and so need to make ref.z explicitly 0\r\n",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13033",
                "title": "Update Storybook to 7",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/sharedUiComponents/.storybook/main.js",
                    "packages/dev/sharedUiComponents/package.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13029",
                "title": "Improve heap-testing memory leak results",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/src/sceneJs.js",
                    "packages/tools/testsMemoryLeaks/src/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "13032",
                "title": "Fix fallback value",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13012",
                "title": "Add function to get angles between two vectors (Vector3.GetAnglesBetweenVectorsForDirectionChange)",
                "description": "Also add prettier settings to workspace settings.\r\n\r\nSee [this](https://github.com/BabylonJS/Babylon.js/pull/12942) PR for more details.\r\n\r\nDemo PGs: \r\nhttps://playground.babylonjs.com/#QYA3JC#25\r\nhttps://playground.babylonjs.com/#QYA3JC#26\r\n(Press space to start)\r\n\r\n@BabylonJSGuide \r\nI have the opportunity to talk with a physicist almost every day of the week, so I asked him about the problem and worked out the same equations used. After researching how `Math.atan2` works though, and found an issue with the equations: for the phi calculation, the `diff.y` should have been the second parameter of `Math.atan2`, not the first.",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    ".vscode/settings.json",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13019",
                "title": "Restore wasDispatched to false when MaintainStateBetweenFrames is set to false",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13006",
                "title": "Add smoothing for freeCameraDeviceOrientationInputs",
                "description": "Add a simple low-pass filter on alpha/beta/gamma to limit objects \"shaking\"",
                "author": {
                    "name": "ilrico",
                    "url": "https://github.com/ilrico"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraDeviceOrientationInput.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13028",
                "title": "Fix default initialization.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13026",
                "title": "Some fixes to OptionLineComponent related to wrong parent info showin…",
                "description": "…g up on Inspector.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/bug-display-of-parent-in-the-inspector-shows-parenting-that-has-not-been-set/34256",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13022",
                "title": "Test babylon octree scene component active meshes",
                "description": null,
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/test/unit/Culling/babylon.octreeSceneComponent.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13004",
                "title": "Add rotation from one vector3 to another",
                "description": "First commit wherever a result was returned this is now reflected in comments. Only comments changed, if current vector was returned then this was kept and and comment not changed. Ref https://forum.babylonjs.com/t/comments-refer-to-wrong-vectors-returned-by-method-using-toref/34093/3?u=johnk\r\n\r\nAn alternative way of managing an animation along a curve by calculating the rotation needed from a set rotation to a tangent. Example PGs to follow.",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13021",
                "title": "Fix instance buffer",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/thinRenderTargetTexture.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentExtraDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/vertexColorMixing.fx",
                    "packages/dev/core/src/Shaders/color.fragment.fx",
                    "packages/dev/core/src/Shaders/color.vertex.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/default.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/materials/src/cell/cell.fragment.fx",
                    "packages/dev/materials/src/fire/fire.fragment.fx",
                    "packages/dev/materials/src/fur/fur.fragment.fx",
                    "packages/dev/materials/src/gradient/gradient.fragment.fx",
                    "packages/dev/materials/src/lava/lava.fragment.fx",
                    "packages/dev/materials/src/mix/mix.fragment.fx",
                    "packages/dev/materials/src/simple/simple.fragment.fx",
                    "packages/dev/materials/src/simple/simple.vertex.fx",
                    "packages/dev/materials/src/sky/sky.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.vertex.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.fragment.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx",
                    "packages/dev/materials/src/water/water.fragment.fx",
                    "packages/dev/materials/src/water/water.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13023",
                "title": "Fix SSAO2 sample generation",
                "description": "See https://forum.babylonjs.com/t/ssao-2-has-different-results-each-time-i-add-it-to-the-scene-video-showing-it/33967/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-b-and-w.png"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "breaking change"
                ]
            },
            {
                "pr": "13016",
                "title": "Adding memory leak tests using heap snapshots",
                "description": "This adds heap based memory leak tests during integration tests. Using memlab under the hood.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Loading/loadingScreen.ts",
                    "packages/tools/babylonServer/public/test.html",
                    "packages/tools/testsMemoryLeaks/package.json",
                    "packages/tools/testsMemoryLeaks/src/index.ts",
                    "packages/tools/testsMemoryLeaks/tsconfig.build.json",
                    "packages/tools/testsMemoryLeaks/tsconfig.json"
                ],
                "tags": []
            },
            {
                "pr": "13018",
                "title": "Fix particle system support for logarithmic depth",
                "description": "See https://forum.babylonjs.com/t/z-fighting-on-multiple-objects/34067/16",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13017",
                "title": "Nit",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13014",
                "title": "More features for the aggressive performance mode",
                "description": "Some tiny perf changes + a major one: Now in aggressive mode, the renderingGroups are not reset between frames.",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/baseParticleSystem.ts",
                    "packages/dev/core/src/Rendering/renderingManager.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13015",
                "title": "Fix fast",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13011",
                "title": "Tiny perf fix",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13013",
                "title": "Fix some more lint warnings",
                "description": "And add back comment that I forgot to add back in previous PR.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderInterfaces.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13000",
                "title": "Clean up implementation of KHR_animation_pointer",
                "description": "This is the result of trying to fix an issue reported here: https://forum.babylonjs.com/t/breaking-changes-in-gltf-loader/32807. I ended up refactoring/simplifying most of the KHR_animation_pointer code, but the overall idea is still the same.\r\n\r\n- Fix the code such that it will call animation loading extension functions again. This is the main thing that was broken.\r\n- Update the contract for loading animations to support custom extensions to be more flexible without override arguments (e.g., `animationTargetOverride`).\r\n- Break up the animation pointer map into core and extensions to avoid core loader depending on code from an extension.\r\n- Greatly simplify parsing of animation pointers.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.data.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.map.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderAnimation.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderExtension.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderInterfaces.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFUtilities.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "bug",
                    "skip changelog"
                ]
            },
            {
                "pr": "13010",
                "title": "Add Logarithmic Depth Support on ParticleSystem",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/baseParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Shaders/gpuRenderParticles.fragment.fx",
                    "packages/dev/core/src/Shaders/gpuRenderParticles.vertex.fx",
                    "packages/dev/core/src/Shaders/particles.fragment.fx",
                    "packages/dev/core/src/Shaders/particles.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "13009",
                "title": "Bump scss-tokenizer from 0.3.0 to 0.4.3",
                "description": "Bumps [scss-tokenizer](https://github.com/sasstools/scss-tokenizer) from 0.3.0 to 0.4.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/sasstools/scss-tokenizer/releases\">scss-tokenizer's releases</a>.</em></p>\n<blockquote>\n<h2>v0.4.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump acorn from 5.7.3 to 5.7.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/33\">sasstools/scss-tokenizer#33</a></li>\n<li>Fixed ReDoS in &quot;loadAnnotation&quot; function of &quot;previous-map.js&quot; by <a href=\"https://github.com/sushantmittal\"><code>@​sushantmittal</code></a> in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/49\">sasstools/scss-tokenizer#49</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/33\">sasstools/scss-tokenizer#33</a></li>\n<li><a href=\"https://github.com/sushantmittal\"><code>@​sushantmittal</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/49\">sasstools/scss-tokenizer#49</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/sasstools/scss-tokenizer/compare/v0.4.2...v0.4.3\">https://github.com/sasstools/scss-tokenizer/compare/v0.4.2...v0.4.3</a></p>\n<h2>v0.4.2</h2>\n<h2>Misc</h2>\n<ul>\n<li>Restore <code>prepublishOnly</code> npm script (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, ae79d74)</li>\n</ul>\n<h2>v0.4.1</h2>\n<h2>Fixes</h2>\n<ul>\n<li>Error handling utf-8 encoded sourcemap urls (<a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/13\">#13</a>, <a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>)</li>\n</ul>\n<h2>v0.4.0</h2>\n<h2>Fixes</h2>\n<ul>\n<li>Fix <code>endInterpolant</code> not being captured (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/20\">#20</a>)</li>\n<li>Fix tracking of token position (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/22\">#22</a>)</li>\n</ul>\n<h2>Tests</h2>\n<ul>\n<li>Add basic test coverage to interpolant tokenization (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/20\">#20</a>)</li>\n</ul>\n<h2>Dependencies</h2>\n<ul>\n<li>Replace babel-preset-es2015 with babel-preset-env (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>sass-spec@2.5.1 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>babel-core@^6.26.3 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>babel-jest@^23.6.0 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>glob@^7.1.3 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>jest@^23.6.0 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>js-base64@^2.4.9 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>source-map@^0.7.3 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n</ul>\n<h2>Misc</h2>\n<ul>\n<li>TravisCI now tests all supported Node versions</li>\n<li>Commit <code>package-lock.json</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/3e518d908cea22d0ca1bdf927ef752b7539f0533\"><code>3e518d9</code></a> 0.4.3</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/ff8e9945bcf991d30e009e2f0ef4088d2830c92d\"><code>ff8e994</code></a> Update changelog</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/a53b6f233e648cc01acbdd89c58786cf8ba56e35\"><code>a53b6f2</code></a> Fixed ReDoS in 'loadAnnotation' function of previous-map.js.</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/b55257baa54197e7dae8085184cad7948fea0796\"><code>b55257b</code></a> Bump acorn from 5.7.3 to 5.7.4</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/db9b196df81b399fa104928e8361c5c6f3efde10\"><code>db9b196</code></a> 0.4.2</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/ae79d74ad591e2f8a5e61ed68be2595b4bfd37af\"><code>ae79d74</code></a> Restore prepublishOnly npm script</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/32a65d8d8d757f2e0cca0b2e71ec69840466dded\"><code>32a65d8</code></a> 0.4.1</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/cef5140251617c6d15cf639a4ffda246b7704344\"><code>cef5140</code></a> Add support for utf8 name in input source map encoding</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/07c191732c621047a302c68b6718fd6bf0bd90d4\"><code>07c1917</code></a> 0.4.0</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/d74f8038a00673adcb7a3b2fee91eebb7d6153e3\"><code>d74f803</code></a> Commit package-lock.json</li>\n<li>Additional commits viewable in <a href=\"https://github.com/sasstools/scss-tokenizer/compare/v0.3.0...v0.4.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=scss-tokenizer&package-manager=npm_and_yarn&previous-version=0.3.0&new-version=0.4.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.25.0": [
            {
                "pr": "13008",
                "title": "Fix cache issue",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12999",
                "title": "Move from @hidden to @internal",
                "description": "Setting as Draft for now to check side effects\nThere shouldn't be any, just need to be 100% sure :-)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Actions/condition.ts",
                    "packages/dev/core/src/Actions/directActions.ts",
                    "packages/dev/core/src/Actions/directAudioActions.ts",
                    "packages/dev/core/src/Actions/interpolateValueAction.ts",
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/animationEvent.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/easing.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts",
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/src/BakedVertexAnimation/bakedVertexAnimationManager.ts",
                    "packages/dev/core/src/Behaviors/Meshes/attachToBoxBehavior.ts",
                    "packages/dev/core/src/Behaviors/Meshes/followBehavior.ts",
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Buffers/storageBuffer.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraVRDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraKeyboardInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/RigModes/stereoscopicAnaglyphRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/stereoscopicRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/vrRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/webVRRigMode.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicScreenUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrCameraMetrics.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Cameras/VR/webVRCamera.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/deviceOrientationCamera.ts",
                    "packages/dev/core/src/Cameras/flyCamera.ts",
                    "packages/dev/core/src/Cameras/followCamera.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/freeCameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Cameras/touchCamera.ts",
                    "packages/dev/core/src/Collisions/collider.ts",
                    "packages/dev/core/src/Collisions/collisionCoordinator.ts",
                    "packages/dev/core/src/Collisions/intersectionInfo.ts",
                    "packages/dev/core/src/Collisions/meshCollisionData.ts",
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/src/Compute/IComputeContext.ts",
                    "packages/dev/core/src/Compute/IComputePipelineContext.ts",
                    "packages/dev/core/src/Compute/computeEffect.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeBlock.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/src/Culling/boundingBox.ts",
                    "packages/dev/core/src/Culling/boundingInfo.ts",
                    "packages/dev/core/src/Culling/boundingSphere.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceEnums.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/internalDeviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/nativeDeviceInputSystem.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.debugging.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiview.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.textureSelector.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.transformFeedback.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.webVR.ts",
                    "packages/dev/core/src/Engines/IDrawContext.ts",
                    "packages/dev/core/src/Engines/IMaterialContext.ts",
                    "packages/dev/core/src/Engines/IPipelineContext.ts",
                    "packages/dev/core/src/Engines/Native/nativeDataStream.ts",
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineAndOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineArithmeticOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineIsDefinedOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineOrOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/shaderDefineExpression.ts",
                    "packages/dev/core/src/Engines/Processors/iShaderProcessor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeConditionNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeTestNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessingOptions.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGL/webGL2ShaderProcessors.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts"
                ],
                "tags": []
            },
            {
                "pr": "13007",
                "title": "Fix effects onError notifications",
                "description": "https://forum.babylonjs.com/t/how-to-get-onerror-when-shader-fails-to-compile-for-a-postprocess/34086\r\n\r\nTest Playground: https://playground.babylonjs.com/#H5WK8Z",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13001",
                "title": "Fix nme drop",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts"
                ],
                "tags": [
                    "bug",
                    "nme",
                    "skip changelog"
                ]
            },
            {
                "pr": "12998",
                "title": "Fix XR picking in utility laters",
                "description": "See https://forum.babylonjs.com/t/holographicslate-slate-gizmo-seems-to-be-broken-in-oculus-quest-2/34060\n\nThis PR should work after this is merged:\n\nhttps://playground.babylonjs.com/#SYD2M2#40",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/baseSixDofDragBehavior.ts",
                    "packages/dev/core/src/Events/pointerEvents.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Rendering/utilityLayerRenderer.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12958",
                "title": "Add camera refresh rate support in XR enableSpectatorMode().",
                "description": "Fixed #10832. Add enable / disable switch for XR spectator Mode and camera refresh rate support.",
                "author": {
                    "name": "daoshengmu",
                    "url": "https://github.com/daoshengmu"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12997",
                "title": "Update tubeBuilder docs.",
                "description": "Update to make it clearer that the number of points on the path can't change, just their positions.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/tubeBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12990",
                "title": "Add operator functions to Polar and Spherical",
                "description": null,
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.polar.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12996",
                "title": "Test babylon vertex buffer instance divisor",
                "description": "Hi! There are some tests again :)\r\n\r\nSome points here:\r\n1. Simplify the code.\r\n2. Setter was recompute the hash after every set call, but it shuld be only after change the `this._instanced` as it we can see in the `_computeHashCode` method.\r\n3. I found shadowed variable (`data`) in the constructor and fix it (to `vertexData` in the local scope).\r\n\r\nAnd just in case I explain my pipeline:\r\n1. First I wrote test cases.\r\n2. Only after it I started to modify the code.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/test/unit/Buffers/babylon.buffer.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12995",
                "title": "Texture UV animation performance",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12992",
                "title": "test(particles.cloudPoint): add tests for intersectsMesh function",
                "description": "Hi!\r\nI add some tests to Particles/cloudPoint, the function is intersectsMesh.\r\n\r\nHere I found some points.\r\n1. The property of PointsCloudSystem `mesh` has incorrect type. In fact this property may have `undefined` as value, because it's not defined in the constructor. So I add optional mark `?` to type and required checks in the class.\r\n2. And after this I found what the `intersectsMesh` function did not check the mesh property existing in the point cloud system. So I add a new Error here, that notice about required mesh to next calculations.\r\n3. The line `isSphere = isSphere ? isSphere : false;` look like redundant, because TypeScript promise that it have boolean type.\r\n4. Next I move the getBoundingInfo call into one line `const bbox = target.getBoundingInfo().boundingBox;`. It's look for me as potential performance boost, maybe.\r\n5. And at the end I remove `else` branch because it rendundant because the code above have return statements.\r\n\r\nAnd I limited test cases from 729 possible combinations to 126, they seems like corner cases for me. I dont know which cases we can reduce to save the working guarantee.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Particles/cloudPoint.ts",
                    "packages/dev/core/src/Particles/pointsCloudSystem.ts",
                    "packages/dev/core/test/unit/Particles/babylon.cloudPoint.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12991",
                "title": "WebGPU: Fix geometry buffer renderer in WebGPU",
                "description": "In WebGPU (WGSL), if you declare some uniforms in the shader code (even if you don't use those uniforms in the code itself) the drawing code must set their values and can't leave them empty.\r\n\r\nSo, the declarations must be guarded by some `#ifdef` to make sure the uniforms we don't set values for are not declared in the shader code.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/geometry.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12994",
                "title": "Fix typings for the options passed",
                "description": "They options passed are augmented with the required members, so there is no need to define them fully. Partial of those options is enough.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRDefaultExperience.ts"
                ],
                "tags": []
            },
            {
                "pr": "12988",
                "title": "PrePass renderer: Fix engine current render pass id set too early",
                "description": "See https://forum.babylonjs.com/t/issue-when-prepassrenderer-and-rendertargettexture-are-used-at-the-same-time/29317/7\r\n\r\nBasically it's a revert of my changes from:\r\n\r\nhttps://github.com/BabylonJS/Babylon.js/commit/269132ca6281f1cb5c9b59474af1d2e827196d62#diff-5fec6a90573f71adda2b2d7c9364ac6da73fe8cfc6a641b129a051bf38d67cd2\r\n\r\nI don't remember why I did this change at that time, I think it's wrong to set `Engine.currentRenderPassId` in `PrePassRenderer._setRenderTarget` as `RenderTargetTexture._renderToTarget` will set the right pass id before drawing the meshes anyway.\r\n\r\n[EDIT] Ok, I updated the fix which is not simply a revert now: the `engine.currentRenderPassId` needs to be updated but only when setting the default RT.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/prePassRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12962",
                "title": "Issue158",
                "description": "Dragging the mouse up and down zooms in and out. However, I'm having a problem where if you mouse down on a control and drag, that control is not recognized as selected so dragging the control zooms in and out as well. I was wondering if there was anything to identify when control has been selected other than selectedcontrols? ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/coordinateHelper.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12920",
                "title": "Font Family Drowpdown",
                "description": "Created a dropdown menu for font family options, with the ability to add custom fonts beyond the ones already provided",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/buttonPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/checkboxPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/controlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/displayGridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/ellipsePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/gridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/imageBasedSliderPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/imagePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/linePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/radioButtonPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/rectanglePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/scrollViewerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/sliderGenericPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/stackPanelPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/textBlockPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "12986",
                "title": "distance and normal in collision callback for ammojs",
                "description": "Follow up https://forum.babylonjs.com/t/how-to-measure-impulse-in-ammo/33897\r\nAdd more infos to the collision callback coming from ammojs",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            }
        ],
        "5.24.0": [
            {
                "pr": "12978",
                "title": "Some fixes for NME CSS",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12985",
                "title": "Add maths polar export",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/index.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12983",
                "title": "GeometryBufferRenderer: Allow setting the depth texture format",
                "description": "See https://forum.babylonjs.com/t/postprocess-with-prepassrenderer-caused-msaa-not-work/33907/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRendererSceneComponent.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12984",
                "title": "Fix billboard translation with parenting",
                "description": "Follow up with https://forum.babylonjs.com/t/billboardmode-rotation-bug/33908/4\r\n\r\nbillboard translation was not transformed by parent transform. ",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12982",
                "title": "Fix Array Observers",
                "description": "Ref: https://github.com/BabylonJS/Babylon.js/pull/12905",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Misc/arrayTools.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Misc/babylon.arrayTools.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12942",
                "title": "Add polar and spherical coordinate system support",
                "description": "Also fixes a misspelling with the `Vector3.GetAngleBetweenVectors` jsdoc parameters",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.polar.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12980",
                "title": "Fix Typos in Physics",
                "description": "Small typo and wrong comment.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts"
                ],
                "tags": [
                    "documentation"
                ]
            },
            {
                "pr": "12979",
                "title": "If blob or data load the image directly, as no caching is needed.",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "12975",
                "title": "Add teleportationCircleMaterial to WebXR teleportation options",
                "description": null,
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": []
            },
            {
                "pr": "12976",
                "title": "Add createRadialGradient to ICanvas",
                "description": "Description borrowed from: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient",
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts"
                ],
                "tags": []
            },
            {
                "pr": "12974",
                "title": "test(math.vector): add tests for GetAngleBetweenVectorsOnPlane function",
                "description": "I generated 1000 variants of usage the GetAngleBetweenVectorsOnPlane function base on these values:\r\n```\r\nconst possibleValues = [\r\n        // negative values\r\n        Number.MIN_SAFE_INTEGER,\r\n        Number.MIN_SAFE_INTEGER / 2,\r\n        -Math.PI,\r\n        -0.0000000001,\r\n\r\n        0,\r\n\r\n        // positive values\r\n        0.0000000001,\r\n        Math.PI,\r\n        Number.MAX_SAFE_INTEGER / 2,\r\n        Number.MAX_SAFE_INTEGER,\r\n    ];\r\n```\r\n\r\nSo I got time comutation statistics that added to jsdoc.\r\n\r\nWhat do you think about unit tests like this? Or probably we should set just several examples without edge values (like max_safe_integer)?",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.get-angle-between-vectors-on-plane.test-cases.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12970",
                "title": "Babylon eslint plugin",
                "description": "This plugin checks for the existance of tsdoc in typescript files, and is ready to be extended.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Actions/abstractActionManager.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Behaviors/Cameras/autoRotationBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/bouncingBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/gamepadCamera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Cameras/touchCamera.ts",
                    "packages/dev/core/src/Cameras/universalCamera.ts",
                    "packages/dev/core/src/Cameras/virtualJoysticksCamera.ts",
                    "packages/dev/core/src/Culling/boundingBox.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Events/clipboardEvents.ts",
                    "packages/dev/core/src/Gamepads/Controllers/windowsMotionController.ts",
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Layers/glowLayer.ts",
                    "packages/dev/core/src/Layers/highlightLayer.ts",
                    "packages/dev/core/src/Lights/directionalLight.ts",
                    "packages/dev/core/src/Lights/hemisphericLight.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Lights/lightConstants.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/Filtering/hdrFiltering.ts",
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts",
                    "packages/dev/core/src/Materials/Textures/colorGradingTexture.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/rawCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/colorCurves.ts",
                    "packages/dev/core/src/Materials/fresnelParameters.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Maths/math.functions.ts",
                    "packages/dev/core/src/Maths/math.scalar.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/cubemapToSphericalPolynomial.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/hdr.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/panoramaToCubemap.ts",
                    "packages/dev/core/src/Misc/assetsManager.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/observable.ts",
                    "packages/dev/core/src/Misc/performanceMonitor.ts",
                    "packages/dev/core/src/Misc/rgbdTextureTools.ts",
                    "packages/dev/core/src/Misc/sceneOptimizer.ts",
                    "packages/dev/core/src/Misc/stringDictionary.ts",
                    "packages/dev/core/src/Misc/textureTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Misc/videoRecorder.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts",
                    "packages/dev/core/src/PostProcesses/blurPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/Rendering/edgesRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Rendering/subSurfaceConfiguration.ts",
                    "packages/dev/core/src/XR/motionController/webXRAbstractMotionController.ts",
                    "packages/dev/core/src/XR/motionController/webXRControllerComponent.ts",
                    "packages/dev/core/src/XR/motionController/webXRMotionControllerManager.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/loaders/src/OBJ/mtlFileLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/postProcesses/src/asciiArt/asciiArtPostProcess.ts",
                    "packages/dev/postProcesses/src/digitalRain/digitalRainPostProcess.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts",
                    "packages/lts/core/src/scene.ts",
                    "packages/tools/eslintBabylonPlugin/package.json",
                    "packages/tools/eslintBabylonPlugin/src/ConfigCache.ts",
                    "packages/tools/eslintBabylonPlugin/src/Debug.ts",
                    "packages/tools/eslintBabylonPlugin/src/index.ts",
                    "packages/tools/eslintBabylonPlugin/tsconfig.build.json",
                    "packages/tools/eslintBabylonPlugin/tsconfig.json"
                ],
                "tags": []
            },
            {
                "pr": "12973",
                "title": "Fix WebGPU for mobile support.",
                "description": "https://twitter.com/Tojiro/status/1568341051160788993",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12916",
                "title": "OIT aliasing fixes",
                "description": "* Implemented multisampling for DepthPeeling (works but has artifacts along triangle edges because we need to access multisampled depth in the shader, which cannot be done for now)\r\n* Made depth peeling compatible with post processes to be able to use FXAA post process",
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/oitFragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12972",
                "title": "ts config for tests (older syntax) for older node.js",
                "description": "Node 14 and under don't support the 2021 syntax we used when running tests.\nFrom now, when testing we compile to es5",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "jest.config.ts",
                    "packages/dev/core/tsconfig.test.json",
                    "tsconfig.test.json"
                ],
                "tags": []
            },
            {
                "pr": "12971",
                "title": "404 error trying to load “config.json” when using custom procedural texture with ShadersStore",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/customProceduralTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12969",
                "title": "Giz misc",
                "description": "Quick PR for https://forum.babylonjs.com/t/constrain-dragging-to-y-axis-for-boundingboxgizmo/33729",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12966",
                "title": "Freeze instance storage",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12964",
                "title": "Better support for freeze in aggressive mode",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12952",
                "title": "Minimize code in effect and pipeline context",
                "description": "The idea here is to keep the typescript declarations of those functions (i.e. - they exist still), but use a proxy to catch missing functions and call the right function when the missing functions are called. \r\n\r\nThis will minimize the initial needed code when importing those classes.\r\n\r\nRegarding reusability - there might be 2-3 lines of code that are reusable, but the overhead of moving it out of the constructor context will cost more than the code written.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": []
            },
            {
                "pr": "12963",
                "title": "new options for aggressive mode",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12960",
                "title": "Introduce autoFixFaceOrientation feature to solidParticleSystem",
                "description": "**What:**\r\nIntroduce an option to \"autofix face orientation\" in solid particle system\r\n\r\n**How**\r\nWhen there is a transformation which changes the orientation (for example scaling `(-1, 1, 1)`), the solid particle system will automatically flip all the faces of the particle affected by this transformation.\r\n\r\n**Why**\r\nI needed this functionality in my application, so I decided to make a PR and hope that it will get into the babylon itself :D\r\n\r\n**Example**\r\nhttps://playground.babylonjs.com/#GLZ1PX#714\r\nin this example, the cone on the right has flipped faces. Using the new flag will fix this issue. ",
                "author": {
                    "name": "Michalzr",
                    "url": "https://github.com/Michalzr"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": []
            }
        ],
        "5.23.0": [
            {
                "pr": "12945",
                "title": "Optimize animation interpolate function",
                "description": "Not 100% sure this actually helps since we are seeing weird results in the profile, but it is certainly easier to read.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": []
            },
            {
                "pr": "12948",
                "title": "Use CSS Modules in Graph System",
                "description": "This is part of the work to make the graph system more reusable.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/common.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/common.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/outputDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.ts",
                    "packages/tools/nodeEditor/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12954",
                "title": "Performance mode",
                "description": "The goal is to protect backward compatibility but also offer an option for users to say they are ok to not be backward compatible (OR less easy to use) to favor perf by default",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12961",
                "title": "Fix Rendering Pipeline cameras",
                "description": "https://forum.babylonjs.com/t/camera-list-iteration-on-ssaorenderingpipeline/33758",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "12959",
                "title": "Stop vis test in puppeteer if debug enabled",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/visualization.webgl1.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgl2.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgpu.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12957",
                "title": "Fix stl loader right handed",
                "description": "https://forum.babylonjs.com/t/permanently-change-set-of-axes/19096/62",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/STL/stlFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "12956",
                "title": "Update default linter",
                "description": "I thought the old way worked, but it doesn't. This change comes directly from using vscode's UI, so hopefully it will stick this time.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    ".vscode/settings.json"
                ],
                "tags": []
            },
            {
                "pr": "12955",
                "title": "Fix quaternion blending math",
                "description": "See https://forum.babylonjs.com/t/not-able-to-blend-animation-with-beginweightedanimation/32204\r\n\r\nSolution based on quaternion average approximation: https://math.stackexchange.com/questions/61146/averaging-quaternions",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12865",
                "title": "DeviceInputSystem: Pull browser specific code into WebDeviceInputSystem",
                "description": "The purpose of this PR is to pull browser specific code (eg. movementX vs. mozMovementX) into the WebDeviceInputSystem and make it a bit more uniform in execution.  This also simplify things for BabylonNative since a lot of this code is irrelevant to its input execution.  Also, some references to `srcElement` were removed because we no longer need to support that property since dropping support for IE.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Events/deviceInputEvents.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Offline/database.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12953",
                "title": "Use the right function when reaching limits",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/logger.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12951",
                "title": "Fix some NME bugs.",
                "description": "1 - When dragging a unique block to the graph twice and closing the error message, for each subsequent block added (even the non-unique ones), the error message was still appearing.\r\n2 - When using the PerturbNormal block without the connected normalColor input, the following error message appeared:\r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/6002144/188502443-f3ca0a1b-ec89-4185-8deb-3e4524e051e7.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12949",
                "title": "Sprite double pick",
                "description": "https://forum.babylonjs.com/t/babylon-actionmanager-ondoublepicktrigger-on-player-not-working/33647/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Sprites/spriteSceneComponent.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/src/sceneComponent.ts"
                ],
                "tags": [
                    "bug",
                    "sprite"
                ]
            },
            {
                "pr": "12947",
                "title": "Fix Basis Loader",
                "description": "https://forum.babylonjs.com/t/error-in-basis-cubetexture/33516",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Misc/basis.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12944",
                "title": "Animation perf improvments",
                "description": "Improve frame time of https://playground.babylonjs.com/#LYKRYG",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "12950",
                "title": "Improve optimize docstring.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/groundMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12946",
                "title": "Clear some values used during loading at the end of the load",
                "description": "Related issue: https://forum.babylonjs.com/t/imported-meshes-appear-broken-if-they-have-the-same-geometry-uniqueid/33567/3",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12943",
                "title": "Added AudioBuffer as parameter for Sound",
                "description": "I ran into a situation where I wanted to use the sound engine in Babylon to play my pre-generated Web Audio Buffer. I managed to get it to work by looking at the code, but I had to access some private properties. I noticed that it would be pretty small refactoring to implement it correctly since the code was already there. This PR enable the passing of an AudioBuffer to the constructor of BABYLON.Sound.\r\n\r\nThis (very simplified) example shows how it is used:\r\n\r\n\r\n```\r\nvar createScene = function () {\r\n\r\n    var scene = new BABYLON.Scene(engine);\r\n    const camera = new BABYLON.ArcRotateCamera(\"Camera\", -Math.PI / 2, Math.PI / 4, 15, BABYLON.Vector3.Zero());\r\n    camera.attachControl(canvas, true);\r\n\r\n    // Create buffer\r\n    let sineBuffer = BABYLON.Engine.audioEngine.audioContext.createBuffer(1, 12e3, 48e3);\r\n    const hitBufferData = sineBuffer.getChannelData(0);\r\n    for (let i = 12e3; i--;) hitBufferData[i] = Math.cos(i * .04); \r\n\r\n    // Create and use the sound\r\n    this.sineSound = new BABYLON.Sound(\"sine\", sineBuffer); \r\n    this.sineSound.play();\r\n\r\n    return scene;\r\n};\r\n```\r\n\r\n",
                "author": {
                    "name": "sorskoot",
                    "url": "https://github.com/sorskoot"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "enhancement",
                    "audio"
                ]
            }
        ],
        "5.22.1": [
            {
                "pr": "12941",
                "title": "switch to new PG",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12940",
                "title": "Fix reflection block empty output",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12937",
                "title": "Fix loading of base64 svgs",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12939",
                "title": "Empty array, no reassign",
                "description": "Fixes #12938",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Rendering/edgesRenderer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12936",
                "title": "Reducing amount of code in Observable and Logger",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Misc/logger.ts",
                    "packages/dev/core/src/Misc/observable.extensions.ts",
                    "packages/dev/core/src/Misc/observable.ts",
                    "packages/tools/viewer/src/loader/modelLoader.ts",
                    "packages/tools/viewer/src/managers/sceneManager.ts",
                    "packages/tools/viewer/src/model/viewerModel.ts",
                    "packages/tools/viewer/src/viewer/renderOnlyViewer.ts",
                    "packages/tools/viewer/src/viewer/viewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12933",
                "title": "Add Link offset properties to Gui Editor",
                "description": "Related forum issue: https://forum.babylonjs.com/t/improve-the-linewidthmesh-attribute-of-gui-functions/31630\r\n![image](https://user-images.githubusercontent.com/6002144/187906219-015a7a92-f52b-4903-9ed1-f49ed01da695.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/imgs/linkedMeshOffsetIcon.svg",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/coordinateHelper.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "12935",
                "title": "ADT clone method needs special version",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12932",
                "title": "Add dithering effect to image processing.",
                "description": "This can be used to reduce banding in final output. It's good to have it as part of the image processing functions, as the more artistic alternative to this would be the grain post process which requires a separate pass and thus has more overhead. If all you're looking for is to reduce banding, this will be a simple/efficient option.\r\n\r\nI've been testing this change via the inspector -> add a default rendering pipeline -> enable dithering.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/imageProcessingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/PostProcesses/imageProcessingPostProcess.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/imageProcessingDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/imageProcessingFunctions.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12934",
                "title": "Time Factor for crowd agents update",
                "description": "Follow up https://forum.babylonjs.com/t/possible-to-pause-recastjs-crowd-navigation/33025/7\r\nAnd add a little twist.\r\nInstead of just pausing a sim, it's possible to change the time factor. So a pause is possible, and even a progressive one.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12905",
                "title": "Fix scene not clearing in some Default Rendering Pipeline with multicamera cases",
                "description": "Examples of where this would happen:\r\n\r\n- Have a DRP with a camera different than the scene's active camera (rendering to a RTT for instance): https://playground.babylonjs.com/#QW6XJE#4\r\n- Set multiple active cameras AFTER the DRP has been created: https://playground.babylonjs.com/#QW6XJE#13",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Misc/arrayTools.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            }
        ],
        "5.22.0": [
            {
                "pr": "12925",
                "title": "Add support of clipplanes in GlowLayer",
                "description": "https://forum.babylonjs.com/t/clipping-plane-has-no-effect-on-a-meshs-glow-in-a-glow-layer-unsure-if-this-by-design-or-this-is-a-bug/33565",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Shaders/glowMapGeneration.fragment.fx",
                    "packages/dev/core/src/Shaders/glowMapGeneration.vertex.fx"
                ],
                "tags": [
                    "enhancement",
                    "post-process"
                ]
            },
            {
                "pr": "12929",
                "title": "Revert \"Fixed a bug from opening editor from PG\"",
                "description": "Reverts BabylonJS/Babylon.js#12899\r\nRequested by @amritanarasimhan ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12928",
                "title": "Tiny fixes",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerDefaultInput.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12899",
                "title": "Fixed a bug from opening editor from PG",
                "description": "Responsive button was in the wrong state",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12927",
                "title": "Cameras: Add noPreventDefault as argument to attachControl call",
                "description": "A user in the forum ([Forum Post](https://forum.babylonjs.com/t/potential-inconsistency-with-camerainputsmanagers-add-and-attachelement-functions/32639)) found that there was an inconsistency with how the `noPreventDefault` property was being handled with our camera inputs.  Specifically, if new inputs were added after controls were already attached, the value for `noPreventDefault` was not used when attaching those inputs.  This PR modifies the internal attachControl call to use the input's value for `noPreventDefault`.\r\n\r\nThanks to forum user **kvbh** for the fix suggestion.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/cameraInputsManager.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "12926",
                "title": "Fix broken link in `contributing.md` to `what's new.md`",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "contributing.md"
                ],
                "tags": []
            },
            {
                "pr": "12924",
                "title": "Fix Loading Cube Texture from basis file",
                "description": "https://forum.babylonjs.com/t/error-in-basis-cubetexture/33516/16",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12923",
                "title": "Enforce parent blocks being empty in octree",
                "description": "When creating inner blocks the code enforces that the parent blocks `entries` are ignored (in `octree.select` for example) however the actual `entries` array of the parent block is still populated. Probably not an issue when using just a few objects but it is when using thousands.\r\n\r\nThe code comment says the parent block will be emptied but it isn't.\r\n\r\n",
                "author": {
                    "name": "normanb",
                    "url": "https://github.com/normanb"
                },
                "files": [
                    "packages/dev/core/src/Culling/Octrees/octreeBlock.ts"
                ],
                "tags": [
                    "bug",
                    "optimizations"
                ]
            },
            {
                "pr": "12921",
                "title": "Shortcuts for search and placement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "new feature",
                    "skip changelog"
                ]
            },
            {
                "pr": "12919",
                "title": "Shortcuts for search and placement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "new feature",
                    "skip changelog"
                ]
            },
            {
                "pr": "12918",
                "title": "Two small fixes",
                "description": "* Video texture dome should start on pointer down\n* URL should be revoked when not needed anymore",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Helpers/videoDome.ts",
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12915",
                "title": "Fix wording found by @Popov72",
                "description": null,
                "author": {
                    "name": "julien-moreau",
                    "url": "https://github.com/julien-moreau"
                },
                "files": [
                    "packages/dev/core/src/Probes/reflectionProbe.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12913",
                "title": "Generate sampler name in buildBlock",
                "description": "Related issue: https://forum.babylonjs.com/t/nme-bug-about-screen-depth/33404",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12912",
                "title": "Add type on blob creation",
                "description": "This fixes loading of SVG Textures",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12914",
                "title": "Clamp negative rgb values to zero to avoid parse errors in native",
                "description": "When setting a canvas's fill style to `\"rgb(x, y, z)\"`, browsers clamp negative x/y/z values to zero but native throws parse errors like \"Exception in HostFunction: Unable to parse color: rgb(-51, 13, -128)\".\r\n\r\nThis change fixes the issue by clamping negative rgb values to zero before using them in the style's rgb function.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12907",
                "title": "Fixing oit + derivatives branching",
                "description": "https://forum.babylonjs.com/t/order-independent-transparency-bugs-with-bump-texture-and-rendering-pipeline/29173/13",
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12911",
                "title": "Add \"metadata\" support to \"ReflectionProbe\" class",
                "description": null,
                "author": {
                    "name": "julien-moreau",
                    "url": "https://github.com/julien-moreau"
                },
                "files": [
                    "packages/dev/core/src/Probes/reflectionProbe.ts",
                    "what's new.md"
                ],
                "tags": []
            },
            {
                "pr": "12910",
                "title": "TouchButton3D's getPressDepth(position) call has depth discrepancy",
                "description": "Fixes #12109\n\nThe issue is not exactly as described in the ticket. During apointer move, the cached integer was not updated, so onPointerMove you wouldn't be able to check the depth to the button. onPointerDown's depth is correct, as onPointerDown is triggered when the button is defined as pressed, which is not when the sphere's center is at the end of the button, but a little before. This \"little\" before is defined by the pickRadius in near interaction (0.02 units).\n\nThis PR updated the height variable on pointer move as well, which would allow to check the distance correctly when using pointer move.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/touchButton3D.ts"
                ],
                "tags": []
            },
            {
                "pr": "12901",
                "title": "Document the ranges of FromHSV's parameters",
                "description": "PR to help clear up confusion about the range of the hue, saturation, and value parameters to Vector3.FromHSV. :)\r\nForum: https://forum.babylonjs.com/t/color3-fromhsv-constructor-needs-more-detailed-documentation/33374",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": []
            },
            {
                "pr": "12908",
                "title": "Fix drawing a rounded rectangle",
                "description": "Related issue: https://forum.babylonjs.com/t/potential-regression-in-bjs-5-21-0-failed-to-execute-arc-on-canvasrenderingcontext2d/33455\r\nRelated playground: https://playground.babylonjs.com/#R6NPW8",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12909",
                "title": "Fix null error in late animation bindings",
                "description": "https://forum.babylonjs.com/t/error-in-processlateanimationbindings/33464\r\n\r\n```\r\nTypeError: Cannot read properties of null (reading 'm')\r\n    at core_scene.a._processLateAnimationBindings (animatable.js:730:48)\r\n    at core_scene.a._animate (animatable.js:429:1)\r\n    at Scene.animate (scene.js:3661:1)\r\n    at Scene.render (scene.js:3737:1)\r\n```",
                "author": {
                    "name": "jjv360",
                    "url": "https://github.com/jjv360"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": []
            },
            {
                "pr": "12900",
                "title": "Bump trim-newlines from 1.0.0 to 3.0.1",
                "description": "Bumps [trim-newlines](https://github.com/sindresorhus/trim-newlines) from 1.0.0 to 3.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/sindresorhus/trim-newlines/releases\">trim-newlines's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<p>Breaking:</p>\n<ul>\n<li>Require Node.js 8 (<a href=\"https://github-redirect.dependabot.com/sindresorhus/trim-newlines/issues/1\">#1</a>)  75db891</li>\n</ul>\n<p>Enhancements:</p>\n<ul>\n<li>Add TypeScript definition (<a href=\"https://github-redirect.dependabot.com/sindresorhus/trim-newlines/issues/1\">#1</a>)  75db891</li>\n</ul>\n<p><a href=\"https://github.com/sindresorhus/trim-newlines/compare/v2.0.0...v3.0.0\">https://github.com/sindresorhus/trim-newlines/compare/v2.0.0...v3.0.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/sindresorhus/trim-newlines/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=trim-newlines&package-manager=npm_and_yarn&previous-version=1.0.0&new-version=3.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "12904",
                "title": "InstancedMesh should be cloned with the new source mesh",
                "description": "Forum thread:\nhttps://forum.babylonjs.com/t/instancedmeshes-cloned-from-assetcontainer-set-new-source/33301\n\nQuick explanation - when using the assets container to instantiate meshes to the scene and cloning a new InstancedMesh, its sourceMesh is the one that is in the assets container and not the clone that was added to the scene.\n\nThis PR does the following:\n\n* Adding the option to set the new source mesh to the instanced mesh cloning function\n* when cloning a mesh that has an instanced mesh as a child the source mesh will be updated\n* when using the assets container the new instanced mesh will have the cloned mesh as a source mesh.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12897",
                "title": "Remove tslib reference in es6 packages (First step towards esm)",
                "description": "Fixes #12784\n\nThis PR removes the tslib dependency (while still providing it locally in its es6 version). This will allow using the es6 packages in the browser directly and will minimally help tree shaking, as not all of tslib is even needed (ATM only decorators).\n\nAnother change - the output for the esm packages is no longer es5! it is now es2021.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/prepareEs6Build.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json",
                    "tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "12902",
                "title": "Fix picking on ADV to account for texture coordinates",
                "description": "This was the underlying issue for this report: https://forum.babylonjs.com/t/why-elements-holographicslate-are-not-always-clickable/33299, but was also affecting any texture that had transformations (offset, rotation and scale).\r\n\r\nExample playground: https://playground.babylonjs.com/#H8NS43",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12899",
                "title": "Fixed a bug from opening editor from PG",
                "description": "Responsive button was in the wrong state",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            }
        ],
        "5.21.0": [
            {
                "pr": "12883",
                "title": "Testing: Update Safari Interactions test to point to BrowserStack",
                "description": "There are slight modifications that have been made to the safari tests so that they use BrowserStack.  This change should allow these tests to be used in the CI.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/testTools/src/seleniumTestUtils.ts",
                    "packages/tools/tests/test/interactions/safari.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12896",
                "title": "Store which pointerIds have been captured by the ADV so those are the…",
                "description": "… only ones that fire pointerout events.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/nothing-happens-when-you-click-grid/33320\r\n\r\nThis is to compliment another fix from #12887, where the condition should only apply if the control has been captured by the scene only, and not by the GUI.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12891",
                "title": "Use LoadFile when loading images so that WebRequest custom headers ar…",
                "description": "…e properly passed.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/why-does-textureassettask-ignore-webrequest/33197\r\nRelated Playground: https://playground.babylonjs.com/#ZJYNY#1297\r\n\r\n![vvvvvvvv](https://user-images.githubusercontent.com/6002144/186015150-d25a4d1e-8da6-466a-b3ef-2840407fb761.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12893",
                "title": "Allow package name in local packages",
                "description": "Further changes to support that in lts as well",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/ltsTransformer.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/tsconfig.build.json",
                    "packages/dev/gui/tsconfig.build.json",
                    "packages/dev/inspector/tsconfig.build.json",
                    "packages/dev/loaders/tsconfig.build.json",
                    "packages/dev/materials/tsconfig.build.json",
                    "packages/dev/postProcesses/tsconfig.build.json",
                    "packages/dev/proceduralTextures/tsconfig.build.json",
                    "packages/dev/serializers/tsconfig.build.json",
                    "packages/dev/sharedUiComponents/tsconfig.build.json",
                    "packages/lts/core/tsconfig.build.json",
                    "packages/lts/gui/tsconfig.build.json",
                    "packages/lts/loaders/tsconfig.build.json",
                    "packages/lts/materials/tsconfig.build.json",
                    "packages/lts/postProcesses/tsconfig.build.json",
                    "packages/lts/proceduralTextures/tsconfig.build.json",
                    "packages/lts/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/nodeEditor/tsconfig.build.json",
                    "packages/tools/playground/tsconfig.build.json",
                    "tsconfig.devpackages.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12894",
                "title": "make a PR a breaking change and document how to do it",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".build/changelog.json",
                    "buildSystem.md"
                ],
                "tags": []
            },
            {
                "pr": "12890",
                "title": "Fix a bug where deleting a row/column with a control inside wouldn't …",
                "description": "…remove that control from the Scene Explorer.\r\n\r\nRelated issue: https://forum.babylonjs.com/t/gui-editor-bugs-from-editing/33214\r\nRelated Playground: https://gui.babylonjs.com/#LIDH5L#1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/gridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/components/sceneExplorer/sceneExplorerComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12887",
                "title": "Fix Drag/Release Behavior in GUI and Photo Dome",
                "description": "See: https://forum.babylonjs.com/t/ispointerblocker-improvement/31152/10?u=stevendelapena\r\n\r\nRecent changes to GUI mouse behavior breaks previous behavior for scenes utilizing a Video and Photo Domes. See PG: https://playground.babylonjs.com/#SQ5UC1#375 and https://playground.babylonjs.com/#14KRGG#715\r\n\r\nClick and drag from outside of GUI element to gain control of camera. Release mouse from within the GUI element. You’ll notice the camera is still observing the mouse movement and pans around with mouse even though click/pointer has been released\r\n\r\nFix suggested is to allow mouse release to propagate to scene to allow for release of camera observers.",
                "author": {
                    "name": "stevendelapena",
                    "url": "https://github.com/stevendelapena"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12886",
                "title": "Allow package name in local files.",
                "description": "This PR provides the ability to import from the local package's package - for example use `import ... from core/...` in the core directory. So far we had to have relative files.\n\nThere might be other consequences to the change, so I will be monitoring that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/tsconfig.build.json",
                    "packages/dev/gui/tsconfig.build.json",
                    "packages/dev/inspector/tsconfig.build.json",
                    "packages/dev/loaders/tsconfig.build.json",
                    "packages/dev/materials/tsconfig.build.json",
                    "packages/dev/postProcesses/tsconfig.build.json",
                    "packages/dev/proceduralTextures/tsconfig.build.json",
                    "packages/dev/serializers/tsconfig.build.json",
                    "packages/dev/sharedUiComponents/tsconfig.build.json",
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/nodeEditor/tsconfig.build.json",
                    "packages/tools/playground/tsconfig.build.json",
                    "tsconfig.devpackages.json"
                ],
                "tags": []
            },
            {
                "pr": "12888",
                "title": "Create a separate callback for the FileButton",
                "description": "The previous PR I recently submitted to add a FileButton can produce an error in the Typescript compiler since the `callback` function of the inspectable does not expect a parameter (so putting in a File parameter causes a compiler error).\r\n\r\nThis can be worked around by using a callback that takes a file param and then recasting it into a callback that takes no parameter i.e.,\r\n\r\n```\r\n        {\r\n            label: \"File Button demo\",\r\n            propertyName: \"unused\",\r\n            type: InspectableType.FileButton,\r\n            callback: ((file: File) => {\r\n                // ...\r\n            }) as () => void,\r\n            accept: \".jpg, .jpeg\",\r\n        },\r\n```\r\n\r\nBut that's not so great.\r\n\r\nHere's a better solution. Add an explicit fileCallback that takes the file as a parameter. This is the callback that will be used with the FileButton.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12885",
                "title": "run the babylon server in visual test mode",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "buildSystem.md",
                    "packages/tools/babylonServer/src/sceneJs.js"
                ],
                "tags": []
            },
            {
                "pr": "12847",
                "title": "Shared message dialog",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.tsx",
                    "packages/dev/sharedUiComponents/src/stories/MessageDialog.stories.tsx",
                    "packages/tools/guiEditor/src/main.scss",
                    "packages/tools/guiEditor/src/sharedComponents/messageDialog.tsx",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/main.scss",
                    "packages/tools/nodeEditor/src/sharedComponents/messageDialog.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12884",
                "title": "Enable use of Tools.LoadScript in a WebWorker",
                "description": "Fixes #12882 \r\n\r\n* Checks if `LoadScript` is called from a `WebWorker` context and, if so, uses `importScripts` instead of `HTMLScriptElement` to load the script.\r\n* Ensures `LoadScript` always resolves with either `onSuccess` or `onError`\r\n\r\nUse case: using `ImportMeshAsync` in a `WebWorker` for meshes requiring `MeshoptCompression`\r\n\r\nRE the typings: there's apparently no clean solution as [TypeScript is extremely not a fan of code designed to run in both DOM and WebWorker](https://github.com/Microsoft/TypeScript/issues/20595), these hideous double type assertions seemed less bad than falsely declaring importScripts as available on the Window interface\r\n",
                "author": {
                    "name": "wmurphyrd",
                    "url": "https://github.com/wmurphyrd"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/browser.d.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "enhancement",
                    "tools"
                ]
            },
            {
                "pr": "12880",
                "title": "Fix is ready in a few scenari (light dirty, rendering pass id, material changes outside render loop)",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12881",
                "title": "Improve MergeMeshes documentation.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/strategy-for-merging-glb-gltf-files-into-single-mesh/33159",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "documentation"
                ]
            }
        ],
        "5.20.0": [
            {
                "pr": "12867",
                "title": "Add boolean invertDirection to allow inverting the scrollbar navigati…",
                "description": "…on direction.\r\n\r\nForum issue: https://forum.babylonjs.com/t/scrollviewer-horizontal-direction-is-in-reverse/32995/",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/sliders/imageScrollBar.ts",
                    "packages/dev/gui/src/2D/controls/sliders/scrollBar.ts"
                ],
                "tags": []
            },
            {
                "pr": "12868",
                "title": "GUI Editor launches from PG with correct size",
                "description": "Launching the GUI Editor from the PG would always have the GUI texture be at the default size (1024x1024) instead of whatever size it was orignally defined as ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/advancedDynamicTextureTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/guiEditor.ts"
                ],
                "tags": []
            },
            {
                "pr": "12879",
                "title": "add the ability to configure teleportation and near interaction",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRDefaultExperience.ts"
                ],
                "tags": []
            },
            {
                "pr": "12874",
                "title": "Example Playgrounds for Properties and Methods of Vector3",
                "description": "My apologies for the length of this comment, it is because I need advice on whether it will be part of my very limited project or a much larger undertaking by the community. As a large community undertaking it needs considering and approval by @deltakosh along with @PirateJC and @RaananW as it involves the docs even though it is on the API side and I would like to include @sebavan as he as also been very supportive and helpful to me. Please include anyone else you would like to talk to about it.\r\n\r\n**Reason Behind PR**\r\nWithin the API classes the search the playground for each property and method is at best hit and miss, so I thought that each property and method of a class should have its own playground example, which should be simple and as meaningful as possible. For my limited project, except for a few where they were trivial or I couldn't think of a good example or I forgot, I have done this for all the methods and classes of Vector3 in this PR.\r\n\r\n**Implications for a Large Community Undertaking**\r\nAn announcement about the undertaking.\r\nIf members do put in example PGs they could come in piecemeal so lots of individual PRs, unless there was somewhere else to submit them. This would require a moderator or moderators.\r\nSome rules for submitting an example PG, eg\r\n1. PGs should be simple and where possible meaningful.\r\n2. Code for the particular property or method should appear near the top of the PG\r\n        When meaningful means more complex code this can be achieved by wrapping the\r\n        a. method code in a function as in [https://playground.babylonjs.com/#R1F8YU#111](https://playground.babylonjs.com/#R1F8YU#111)\r\n         b. method code within an onBeforeRenderObservable as in [https://playground.babylonjs.com/#R1F8YU#63](https://playground.babylonjs.com/#R1F8YU#63)\r\n         c. complex code within functions as in [https://playground.babylonjs.com/#R1F8YU#106](https://playground.babylonjs.com/#R1F8YU#106)\r\n3. There should be comments at the top describing the method/property also stating the example use matching a template\r\n4. Template PGs for each class would be needed\r\n5. New or edited methods without a PG should have a PG submitted when method PR submitted\r\n\r\nI am sure there are more implications and I am happy for the rules to change. I only came up with them after doing half the methods.\r\n\r\nAlso as members of the community have their own agendas it is probably wishful thinking that enough people would get involved to get it done.\r\n\r\nIn terms of my very limited project I am happy to continue with the math.vector.ts classes, eg Vector2, Vector4, etc\r\n\r\nLet me know what you think and whether it is just my limited project or a community appeal.",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12878",
                "title": "Fix invisible particles being visible again after a call of buildMesh",
                "description": "Related forum issue: https://forum.babylonjs.com/t/expandable-sps-with-invisible-dummy-particle/33096",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "12877",
                "title": "Fix tests running locally",
                "description": "There were two issues preventing tests from running correctly when ran locally.\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts"
                ],
                "tags": []
            },
            {
                "pr": "12850",
                "title": "Created an offset when pasting controls",
                "description": "When controls were pasted, they were visually directly on top of each other. Now, there is a visible change on screen when controls are pasted due to the offset",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "12876",
                "title": "Draw rectangles with properly rounded corners",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-rectangle-cannot-achieve-semicircular-fillet/32934\r\n\r\nBefore, for a rectangle with same width and height, and a high corner radius, we didn't get a circle:\r\n![image](https://user-images.githubusercontent.com/6002144/184880333-2636f5e9-3485-46c7-90ee-ba62e4031d44.png)\r\nNow, using arcs to draw the rect:\r\n![image](https://user-images.githubusercontent.com/6002144/184880425-1ae03483-65e7-4cc7-bd88-f3e5e8be2ce7.png)\r\n\r\nSame for width != height, before:\r\n![image](https://user-images.githubusercontent.com/6002144/184880503-9782c85f-f344-4b07-83f1-ef3e564d24dd.png)\r\nNow:\r\n![image](https://user-images.githubusercontent.com/6002144/184880537-3c50cb3c-a6d8-4390-acbc-792b2321ce31.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12873",
                "title": "fix signature in scene.ts",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12871",
                "title": "Adds a FileButton to the InspectableTypes",
                "description": "This playground would demo how to use it: https://www.babylonjs-playground.com/#XK769K#5",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12870",
                "title": "Pasted controls are selectable",
                "description": null,
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12872",
                "title": "comment corrections",
                "description": "Comment changes only no code changes\r\n\r\nfloored should be fractional\r\n\r\nOne = (1.0, 1.0, 1.0) is not a unit vector as it has magnitude sqrt(3) not 1",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12866",
                "title": "Use glb meshes for sphere and plane in NME preview window",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "12821",
                "title": "DeviceInputSystem: Update Device Input folder structure",
                "description": "The purpose of this PR is to consolidate all of the DeviceInputSystem specific files into the DeviceInput folder.  All of the import references should also be updated.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSource.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/inputInterfaces.ts",
                    "packages/dev/core/src/DeviceInput/internalDeviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/nativeDeviceInputSystem.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12864",
                "title": "Restore viewport on Procedural Texture Render",
                "description": "https://forum.babylonjs.com/t/potential-rendering-change-between-4-2-1-and-5-x/32949",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12863",
                "title": "Rectangles couldn't get correctly rounded because -2 was subtracted f…",
                "description": "…rom corner radius, so remove that subtraction.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/gui-rectangle-cannot-achieve-semicircular-fillet/32934",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12862",
                "title": "NME: add copy and paste support for Mac's meta/command key",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12859",
                "title": "Fix WebXR helper",
                "description": "https://forum.babylonjs.com/t/webxr-properties-of-undefined-error-on-enter/32777",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12860",
                "title": "Add scrollbar, search text and tooltip on animation selection tool.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/add-a-slider-to-the-animation-selection/32920",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/sandbox/src/components/dropUpButton.tsx",
                    "packages/tools/sandbox/src/scss/footer.scss"
                ],
                "tags": []
            },
            {
                "pr": "12857",
                "title": "Nme height2normal",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/index.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12856",
                "title": "Fix scene serialization and loading issues.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/importing-mesh-loses-hierarchy/32779\r\n\r\nWhen we parse a mesh, the parentId from the JSON probably won't be the same as the uniqueId of the recreated parent, so keep a mapping to properly find this recreated parent.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/serializeAndLoadHierarchy.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/serializeWithoutMaterials.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            }
        ],
        "5.19.0": [
            {
                "pr": "12858",
                "title": "Update ComputePressureObserver",
                "description": "Hello.\r\n\r\nI have been working on updating our electron app to the latest electron version (20.0.1, previously we used 17.3.1) and we had a breakage in our use of babylon.js when the scene is disposed:\r\n\r\n> TypeError: Failed to execute 'unobserve' on 'ComputePressureObserver': 1 argument required, but only 0 present.\r\n\r\nNote that not all electron applications will experience this problem. ComputePressureObserver is only exposed if you use `experimentalFeatures: true`.\r\n\r\nIt appears that electron 19 and up is using a Chromium version with an updated ComputePressureObserver API. Here is the relevant change in [the working draft](https://wicg.github.io/compute-pressure/):\r\n- https://github.com/WICG/compute-pressure/issues/21\r\n- https://github.com/WICG/compute-pressure/pull/25\r\n\r\nThe error is ignored in `observe` but not in `unobserve`. My first commit here catches the error in `unobserve`. I first tried to use `catch()` like in `observe` but it didn't work so I had to use `try { ... } catch {}`. Even though it isn't documented in the spec, `observe` is returning a promise but `unobserve` is not.\r\n\r\nThe second commit updates the use of the observer to work with electron >= 19. This disables the observer for electron < 19 (`ComputePressureObserver.supportedSources` is not defined), but I don't think many will notice since the only thing this is used for is the CPU utilization metric in the Realtime Performance Viewer.\r\n\r\n![Screen Shot 2022-08-09 at 14 41 31](https://user-images.githubusercontent.com/1991151/183777526-040bc374-458b-446a-9fd6-5f26676ef13b.png)\r\n\r\nThe spec appears to have more updates than what electron supports. Doesn't look like the `samplerate` property works.\r\n\r\nI made this simple Electron Fiddle that can be used to test with: https://gist.github.com/stefansundin/4cee8e88133efb196f54f2d2a9f05155. You need to run `npm run start` to run the babylon.js server as well.\r\n\r\nPlease let me know if you want me to change anything! Thanks!",
                "author": {
                    "name": "stefansundin",
                    "url": "https://github.com/stefansundin"
                },
                "files": [
                    "packages/dev/core/src/Misc/computePressure.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12855",
                "title": "Fix shortcuts firing while user inputs text",
                "description": "Forum issue: https://forum.babylonjs.com/t/gui-editor-shortcuts-bug-on-inputtext/32884",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12854",
                "title": "Serialize scrollbar properties.",
                "description": "Forum issue: https://forum.babylonjs.com/t/gui-editor-scrollviewer-bug-cannot-change-bar-color/32862",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/scrollViewers/scrollViewer.ts"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12815",
                "title": "Inspector step modifier keys",
                "description": "In one of our projects I had to play around with the positions of objects a bunch to get the perfect position. It annoyed me that the `step` of the position fields was a bit low (pressing the up/down arrow keys only moved it slightly).\r\n\r\nThis PR solves that issue by using modifier keys. You can now hold `shift` to increase the step x10. Additionally, if you hold `ctrl` (`meta` on mac) as well, it will increase x100.\r\n\r\nI implemented this feature for both the `NumericInputComponent` and `FloatLineComponent` so it should work for all number input fields in the inspector.",
                "author": {
                    "name": "vinhui",
                    "url": "https://github.com/vinhui"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/numericInputComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "12853",
                "title": "Fix issues with basis texture and inspector (display format, preview window and broken texture)",
                "description": "https://forum.babylonjs.com/t/basis-texture-compression-in-inspector/32802/6\r\n\r\nThis addresses:\r\n* wrong format being displayed\r\n* texture broken on fallback to 565\r\n* preview image being broken on fallback to 565\r\n* texture broken after opening the texture inspector",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/inspector/src/textureHelper.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12852",
                "title": "Add IGizmo-extending interfaces for standard Gizmo variants",
                "description": "This pull request is a follow-up to #12795 and #12796 and adds interfaces representing what public properties should be implemented by custom gizmos seeking to fulfill the role of one of the standard `Gizmo` variants (`AxisDragGizmo`, `PositionGizmo`, etc).\r\n\r\nAdditionally, `Gizmo`-type properties within relevant classes now use the corresponding gizmo interface instead for easier integration of custom gizmos into `PositionGizmo`/`RotationGizmo`/`ScaleGizmo` as well as the standard `GizmoManager`.",
                "author": {
                    "name": "Hsifnus",
                    "url": "https://github.com/Hsifnus"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "12851",
                "title": "Nme fix",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "12849",
                "title": "Add transform nodes result to assetManager",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/assetsManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "loaders"
                ]
            },
            {
                "pr": "12848",
                "title": "Show full hex color on Color Picker component",
                "description": "Forum issue: https://forum.babylonjs.com/t/gui-editor-bug-on-hex-a-color-input/32817",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/colorPicker/colorPicker.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12843",
                "title": "Avoid hooking rtt renderList multiple times",
                "description": "See https://forum.babylonjs.com/t/rendertargettexture-renderlist-crash/31741",
                "author": {
                    "name": "fchoisy",
                    "url": "https://github.com/fchoisy"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12845",
                "title": "Fixed removal of the last geometry in the \"scene.geometries\" array",
                "description": "We have:\r\n`scene.geometries == [g1,g2,g3] `\r\nwe call:\r\n`scene.removeGeometry(g3)`\r\ng3 stays in the `scene._geometriesByUniqueId`  map with index == 2. This happens because it is the last one in the scene.geometries  list. This is already a bug and you can stop here but I'll describe the further horror I experienced in my project during debugging.\r\n\r\n\r\nWe call:\r\n`scene.removeGeometry(g2)` After that scene.geometries == [g1] which is ok.\r\nAgain we call:\r\n`scene.removeGeometry(g3)`  (This can easily happen e.g. if AssetContainer.removeAllFromScene  is called)\r\n\r\nAfter that `scene.geometries == [g1, empty]` due to the conditions in the code block I'm updating in this PR. This has all sorts of nasty consequences in other parts of the engine that I'm not gonna describe in detail. Basically every iteration over geometries is in danger.",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12846",
                "title": "Add `ZeroReadOnly` to Vector2 and Vector4",
                "description": "Adds a read-only zero vector to both the Vector2 and Vector4 classes, as well as a  `DownReadOnly` to the Vector3 class.",
                "author": {
                    "name": "chapmankyle",
                    "url": "https://github.com/chapmankyle"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12842",
                "title": "Fix getHeightAtCoordinates with Impostors and out of bound",
                "description": "Follow up https://forum.babylonjs.com/t/groundmesh-getheightatcoordinates-is-corrupted-by-physicsimpostor-heightmapimpostor/32774\r\n\r\n2 bugs at once:\r\n- The bounds check was not correct\r\n- This fix was incomplete : https://github.com/BabylonJS/Babylon.js/pull/12818",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/groundMesh.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "12844",
                "title": "GUI Editor Tool buttons now respond on the entire document instead of…",
                "description": "… only in the canvas. Also fix an issue where a control could still be moved even if the space key was pressed to pan.\r\n\r\nForum issue: https://forum.babylonjs.com/t/gui-editor-pan-mode-does-not-work-as-expected/32767/4",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12841",
                "title": "Add the possiblity to create custom top level nodes in the scene tree.",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGridTabComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/emptyPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/embedHost/embedHostComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorer.scss",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/dev/inspector/src/inspector.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12840",
                "title": "Nme drop wire",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss"
                ],
                "tags": []
            },
            {
                "pr": "12838",
                "title": "Safari/Selenium Tests",
                "description": "replace #12811 by simply renaming the test category as requested here: https://github.com/BabylonJS/Babylon.js/pull/12811#pullrequestreview-1060360422\r\n",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    ".vscode/launch.json",
                    "jest.config.ts",
                    "package-lock.json",
                    "package.json",
                    "packages/tools/testTools/package.json",
                    "packages/tools/testTools/src/index.ts",
                    "packages/tools/testTools/src/seleniumTestUtils.ts",
                    "packages/tools/tests/test/interactions/safari.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12837",
                "title": "More Tests on ProjectToPlane",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12836",
                "title": "Export Material Plugin Events",
                "description": "https://forum.babylonjs.com/t/materialpluginevent-is-not-exported-in-materials-index-ts/32760",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/index.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "12811",
                "title": "Safari/Selenium Tests",
                "description": "This PR has the tentative changes to test the input system in Safari",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    ".vscode/launch.json",
                    "jest.config.ts",
                    "package.json",
                    "packages/tools/testTools/package.json",
                    "packages/tools/testTools/src/index.ts",
                    "packages/tools/testTools/src/seleniumTestUtils.ts",
                    "packages/tools/tests/test/selenium/safari.test.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12835",
                "title": "Move typings to Webgl2RenderingContext",
                "description": "Fix #12833 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.transformFeedback.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl.d.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts"
                ],
                "tags": [
                    "enhancement",
                    "tools"
                ]
            },
            {
                "pr": "12834",
                "title": "allow saving a playground when using snapshots",
                "description": "The snapshot was always removed when a snippet was saved. A clear of location.search is not needed.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/saveManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12832",
                "title": "Support for scss modules",
                "description": "css modules is a way to import a css and get a list of classes from it that can be applied to the specific moduels used in a component. It is tree-shaking friendly and a very good practice to avoid global css changes cross-projects.\n\nThis step provides support in our build system for both modules and global scss. If the .scss file is called `whatever.modules.scss` it will be loaded as a module. See the shared ui components project for an example.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/sharedUiComponents/src/components/Button.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Button.tsx",
                    "packages/dev/sharedUiComponents/src/components/Icon.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Icon.tsx",
                    "packages/dev/sharedUiComponents/src/components/Label.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Label.tsx",
                    "packages/dev/sharedUiComponents/src/components/Toggle.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Toggle.tsx",
                    "packages/dev/sharedUiComponents/src/scssDeclaration.d.ts",
                    "packages/tools/guiEditor/src/custom.d.ts",
                    "packages/tools/nodeEditor/src/custom.d.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "5.18.0": [
            {
                "pr": "12796",
                "title": "Change private members in gizmo to protected",
                "description": "close https://github.com/BabylonJS/Babylon.js/issues/12795\r\n\r\nI changed most of member from private to protected, even for those with public setters and getters, as setters and getters can be overwritten.\r\n\r\nExcept for\r\n\r\n1. caching variables like `_tmpQuaternion`\r\n1. static method of mesh creation\r\n\r\nOne thing I'm not sure about is the shader code in`planeRotationGizmo.ts`. If I change from `private` to `protected`, eslint complains about naming convention, but I wonder whether it is worth to rename.\r\n\r\n```ts\r\nprivate static _RotationGizmoFragmentShader\r\n```\r\n\r\nI'll leave this as a draft for discussion for now, and meanwhile continue to test the extendability on this PR.\r\n ",
                "author": {
                    "name": "braineo",
                    "url": "https://github.com/braineo"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12831",
                "title": "Reinstate original version of projectOnPlaneToRef with small amendment",
                "description": "Ref https://forum.babylonjs.com/t/project-3d-point-on-plane/9862/18?u=johnk\r\n\r\nsuperseeds https://github.com/BabylonJS/Babylon.js/pull/12827",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12830",
                "title": "Add support for Integer attributes",
                "description": "superseeds https://github.com/BabylonJS/Babylon.js/pull/12823",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12828",
                "title": "Make sure artboard is resized correctly when resizing the canvas",
                "description": "There seems to be a race condition between the HTML page and the babylon scene/engine.\nI will create an issue to follow up on this and find a proper fix, but for now, it is enough to run the rezise callback 5 times every time it is needed.\n\nFor future reference, there seems to be an issue with the `top` on the Rect created in ArtBoardComponent",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12825",
                "title": "differentiating where control is dropped",
                "description": "WHen dropping a control in a scene tree hierachy, border line is now aligned with the layer of the hierarchy in which user is dropping the control",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12763",
                "title": "VSM skeleton",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".vscode/launch.json",
                    ".vscode/tasks.json",
                    "packages/tools/vsm/README.md",
                    "packages/tools/vsm/package.json",
                    "packages/tools/vsm/public/index.html",
                    "packages/tools/vsm/public/index.js",
                    "packages/tools/vsm/src/index.ts",
                    "packages/tools/vsm/src/legacy/legacy.ts",
                    "packages/tools/vsm/src/vsm.ts",
                    "packages/tools/vsm/src/workbench.tsx",
                    "packages/tools/vsm/tsconfig.build.json",
                    "packages/tools/vsm/tsconfig.json",
                    "packages/tools/vsm/webpack.config.js",
                    "tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "12767",
                "title": "KHR animation pointer",
                "description": "This is the first version of the `KHR_animation_pointer` for the GLTF loader.\r\nThe basic idea behind the code is to turn every kind of animation into a pointer, in order to keep only one code path for all. This has been tested with success with all the samples provided as part of the Khronos proposal.\r\nEven if functional, the code is still not very clean and many ehancement must be done in order to reach a certain level of quality. However, calendar issue drive us to put this onto PR rapidely.\r\n[AnimateAllTheThings.zip](https://github.com/BabylonJS/Babylon.js/files/9144599/AnimateAllTheThings.zip)\r\nThis can be tested with the file above, which encompass all the cases supported by the `KHR_animation_pointer`.\r\nThe main changes are located into 3 files.\r\n`GLTFLoader` has been simplified by moving all the animation related code to the `KHR_animation_pointer.ts` where the extension lies. `KHR_animation_pointer.map.ts` contains the pointer tree mapping and miscellaneous function to serve the pointer parsing and logic.\r\nAll the other change are to support indirection between GLTF entities and Babylon ones. This is subject to discussion, because not very \"clean\".\r\nMay close #12544 \r\n",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.map.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderInterfaces.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFUtilities.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "enhancement",
                    "new feature"
                ]
            },
            {
                "pr": "12822",
                "title": "Change \"TO\" to \"To\" in two places in buildSystem.md",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "buildSystem.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12807",
                "title": "Moved copy, paste, delete to toolbar",
                "description": "Copy, paste, and delete functionalities were previously in the hamburger menu. They have now been moved to the toolbar and appear as icons",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandButtonComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/imgs/buttonBar_deleteIcon.svg",
                    "packages/tools/guiEditor/src/imgs/buttonBar_deleteIcon_disabled.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_copyIcon.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_copyIcon_disabled.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_pasteIcon.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_pasteIcon_disabled.svg",
                    "packages/tools/guiEditor/src/scss/commandBar.scss"
                ],
                "tags": []
            },
            {
                "pr": "12819",
                "title": "Fix babylon native sprites",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/engineFeatures.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Sprites/spriteRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "native"
                ]
            },
            {
                "pr": "12818",
                "title": "Fxi heightmap impostor with Cannon",
                "description": "fixes #12578 \r\nWorld transform was not updated properly and adding/removing delta was happening with different world matrix values leading to a translation each frame.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "12814",
                "title": "fix missing indexedDB reference in nodejs",
                "description": "There is also no need for browser prefixes anymore.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Offline/database.ts"
                ],
                "tags": []
            },
            {
                "pr": "12816",
                "title": "Small changes to EngineView",
                "description": "added before and after view observables, added id for view",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts"
                ],
                "tags": []
            },
            {
                "pr": "12809",
                "title": "Physics typos",
                "description": "Fix some minor typos and comments in physics plugins.",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": []
            },
            {
                "pr": "12808",
                "title": "fix native sprites",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/sprites.fragment.fx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12810",
                "title": "Defensive URL detection",
                "description": "Make sure the environment running babylon has the URL object before using it.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Offline/database.ts"
                ],
                "tags": []
            },
            {
                "pr": "12806",
                "title": "Use Custom NME Material for shadow map shaders",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/lightInformationBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            }
        ],
        "5.17.1": [
            {
                "pr": "12805",
                "title": "Fix crash when loading node material with loadasync",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12804",
                "title": "Allow creation of baseTexture from internalTexture",
                "description": "https://forum.babylonjs.com/t/cubetexture-from-canvas/32412/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            }
        ],
        "5.17.0": [
            {
                "pr": "12803",
                "title": "Expose tbn lines",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12802",
                "title": "Switch `= ` to `.length = 0` where possible",
                "description": "Quickly scraped all references to ` this.[anything] = [];` and checked if they are already created previously. In this case, setting to `length = 0` will be enough and will prevent the array from being garbage-collected.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraKeyboardInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Cameras/VR/webVRCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuOcclusionQuery.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/gradientBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/prePassRenderTarget.ts",
                    "packages/dev/core/src/Materials/materialDefines.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Misc/smartArray.ts",
                    "packages/dev/core/src/Particles/computeShaderParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystemSet.ts",
                    "packages/dev/core/src/Particles/webgl2ParticleSystem.ts",
                    "packages/dev/core/src/Physics/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/standardRenderingPipeline.ts",
                    "packages/dev/core/src/XR/features/WebXRLayers.ts",
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/gui/src/2D/controls/grid.ts",
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts",
                    "packages/dev/gui/src/3D/controls/container3D.ts",
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": []
            },
            {
                "pr": "12800",
                "title": "InputManager: Removed pointerup check that prevented event from being processed.",
                "description": "During some testing, I found that there was a bug that was causing one of `scene.onPointerObservable.notifyObservers` calls to not be called if more than one button was pressed.  This could be reproduced in Chromium, Firefox, and Safari browsers.  \r\n\r\nBasic Repro Steps:\r\n\r\n1. Open Basic PG\r\n2. Press left button, middle button, then right button (Do not let go of any of them)\r\n3. Release them in this order while moving around a bit (Right, Left, Middle)\r\n4. Now camera movement should be locked to your cursor movement\r\n\r\nIt should be noted that the DeviceSourceManager/DeviceInputSystem is still storing the correct values.  This fix removes the check from the InputManager.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12799",
                "title": "Added `Color3.FromHSV`",
                "description": "A simple static method to create a new Color3 from HSV color space.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": []
            },
            {
                "pr": "12798",
                "title": "Fix gui loading from snippet",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12797",
                "title": "Fixing design issue with toolbar",
                "description": "Toolbar expanded to the left (into the panel) instead of to the right (into the artboard)",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/main.scss",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12794",
                "title": "Fix render method of RTT not using its active camera",
                "description": "Related forum issue: https://forum.babylonjs.com/t/how-to-manual-render-rendertargettexture/32398/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12793",
                "title": "Fix version sorting in changelog generator",
                "description": "Versions in CHANGELOG.md were incorrectly sorted because 5.2.0 is sorted higher than 5.16.0\n\nThis sorts the versions according go the right order",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/generateChangelog.js"
                ],
                "tags": []
            },
            {
                "pr": "12792",
                "title": "Vertex buffer override for native",
                "description": "fixes https://github.com/BabylonJS/BabylonNative/issues/1111\r\n\r\nVertexbuffer override was not supported in native. In our cases, this is issued for instancing.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "bug",
                    "native"
                ]
            },
            {
                "pr": "12791",
                "title": "Fix naming convention for parsing from File or snippet",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/loadAnimationComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/tools/playground/public/templates.json"
                ],
                "tags": []
            },
            {
                "pr": "12789",
                "title": "Fix distorted normals in large-radius flat IcoSpheres.",
                "description": "Prior to this commit, a subdivided IcoSphere with a large radius would have distorted normals\r\nfor the vertices that were in the original set prior to subdivision.\r\n\r\nHere is an example of a flat IcoSphere with `radius: 100`:\r\n\r\n![image](https://user-images.githubusercontent.com/4623870/180621057-ea6deece-ea68-475e-874b-460e0bc8e4f2.png)\r\n\r\nAfter some troubleshooting, I discovered that this problem was due to scaling at an inappropriate\r\npoint in the process of generating the mesh. After removing this inappropriate scaling,\r\nthe normals of the vertices now look as expected without distortion.\r\n\r\n![image](https://user-images.githubusercontent.com/4623870/180621074-52e1063a-6a1c-4de6-b077-4c74064f68a8.png)\r\n\r\nNon-flat icospheres are unaffected - they still look appropriately round, as they did before.\r\n\r\n![image](https://user-images.githubusercontent.com/4623870/180621092-0061c0ca-4e6c-4856-aa3d-95ab2a2e01bf.png)\r\n",
                "author": {
                    "name": "jemc",
                    "url": "https://github.com/jemc"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/icoSphereBuilder.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12717",
                "title": "Add tests for the DeviceSourceManager to check for memory leaks",
                "description": "This PR contains a reference to a specific PR ([#IC07YA#2](https://playground.babylonjs.com/#IC07YA#2)) that creates multiple instances of the DeviceSourceManager and runs through some inputs before tearing things down and measuring  memory usage after the test is run.  This is done via our Integration playground test file",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/tests/test/integration/leaks/playgrounds.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12788",
                "title": "pasted controls in the right container",
                "description": "Every pasted control was being pasted in the root container, rather than on the same layer as the selected control",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12775",
                "title": "Rolldown Hierarchy",
                "description": "shift+click for to see all elements in hierarchy. Also fixed issues with a previous PR about the scene tree not sticking",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12787",
                "title": "isPointerBlocker fixes",
                "description": "Related issues:\r\nhttps://forum.babylonjs.com/t/ispointerblocker-improvement/31152\r\nhttps://forum.babylonjs.com/t/on-inputtext-click-the-pointer-should-not-go-through-it/32336\r\n\r\n* Don't pass pointer events up the hierarchy if a control has isPointerBlocker set\r\n* Fix inputText always passing pointer events to the scene even when isPointerBlocker is set to true\r\n* Add some documentation to clarify which controls set isPointerBlocker to true by default",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": []
            },
            {
                "pr": "12786",
                "title": "fix splice hook",
                "description": "https://forum.babylonjs.com/t/how-to-remove-node-in-rendertargettexture-renderlist/32375/5",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12782",
                "title": "Add thinInstance creation check if instanced arrays are not supported.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12785",
                "title": "Wait to add pending data to the scene before loading screen logic",
                "description": "Fix this issue: https://forum.babylonjs.com/t/sceneloader-append-breaks-the-loading-screen-in-5-0/32372",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/sceneLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12776",
                "title": "Bump terser from 4.8.0 to 4.8.1",
                "description": "Bumps [terser](https://github.com/terser/terser) from 4.8.0 to 4.8.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/terser/terser/blob/master/CHANGELOG.md\">terser's changelog</a>.</em></p>\n<blockquote>\n<h2>v4.8.1 (backport)</h2>\n<ul>\n<li>Security fix for RegExps that should not be evaluated (regexp DDOS)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/terser/terser/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=terser&package-manager=npm_and_yarn&previous-version=4.8.0&new-version=4.8.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "12779",
                "title": "Gizmo/camera fixes",
                "description": "https://forum.babylonjs.com/t/the-gizmo-uses-the-latest-cameras-in-inspector/31221\r\n\r\n- scene.activeCamera value is discarded during rendering when having multiple camera. The value set by the user was replaced. \r\n- set the rendering layer camera as the active camera for rendering\r\n\r\nfixes #12650 \r\nhttps://forum.babylonjs.com/t/can-non-uniform-scaling-be-disabled-on-the-bounding-box-gizmo/28735/7\r\n\r\n- simple accessor to get the scaling boxes so user can tweak them\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/sceneTreeItemComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector",
                    "new feature",
                    "gizmos"
                ]
            },
            {
                "pr": "12781",
                "title": "Fix crash on smooth shading for meshes with no index buffers on Babylon Native.",
                "description": "## Overview \r\n\r\nWhen forceSharedVertices is called on a mesh that does not have an index buffer, the forceSharedVertices will create empty arrays for its positions and normals vertex attributes. This will result in a NativeEngine::RecordVertexBuffer been called with undefined arguments been passed as VertexBuffer* argument on Native engine. \r\n\r\nThis problem does not happen on the web engine because it creates vertex attribute arrays of size zero when an empty array is provided, which results in no rendering for those meshes. \r\n\r\n## Issues\r\n- Fixes Native issue [#1108 ](https://github.com/BabylonJS/BabylonNative/issues/1108)",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12778",
                "title": "Add computeBoundingBox as a constructor option on SPS.",
                "description": "Closes #11892 \r\n\r\nThere was already support for setting the bounding box size as the SPS size on the code, but there wasn't an option to enable this on the constructor.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12773",
                "title": "move depth buffer to ThinEngine",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12774",
                "title": "Check autoClear for RTT to fix utility layer on native OpenXR",
                "description": "Illustration showing left and right eyes in a HoloLens 2 running BabylonNative:\r\n<img width=\"600\" alt=\"stereo-clear-artifacts\" src=\"https://user-images.githubusercontent.com/4724014/180064594-238f7fc0-6b3f-4aeb-bd45-9c7e5244362b.png\">\r\n\r\nfixes https://github.com/BabylonJS/BabylonNative/issues/1087\r\n\r\nThere were two issues going on here. The first is that we needed to render the utility layer _after_ rendering to both eyes in the target scene. By rendering the utility layer scene in between eye renders, we were getting weird clearing behavior that is hard to describe. The second is that we were double-clearing our output render target textures in cases where `RenderTargetTexture.skipInitialClear = false`.\r\n\r\nBy changing the observable used in `utilityLayerRenderer` from `onAfterCameraRenderObservable` to `onAfterRenderCameraObservable`, we're making sure to render the layer only once after finishing both eyes (instead of after the left and before the right and then again after both eyes). This doesn't meaningfully change any behavior in rendering scenarios with cameras without sub-cameras.\r\n\r\nBy checking `Scene.autoClear` when clearing the camera's output render target, we avoid clearing our render targets when rendering multiple scenes that are supposed to layer onto those render targets. This means that clearing behavior when rendering a scene to a render target matches the clearing behavior when rendering that same scene to the default frame buffer. **This is a breaking change for experiences that expected the scene not to honor `autoClear = false` when rendering to a RTT, but this is not documented/expected behavior as far as I know.**\r\n\r\nWe weren't seeing this bug in any other scenario (i.e. Oculus on Web, native iOS, native Android, etc) because on all other platforms `RenderTargetTexture.skipInitialClear = true`, and so we never saw any weird clearing behavior because the RTT's were never getting cleared in the first place, which on those platforms is totally acceptable because they get automatically cleared by either the WebXR runtime or the BabylonNative XR implementation at the top of the frame.\r\n\r\n",
                "author": {
                    "name": "rgerd",
                    "url": "https://github.com/rgerd"
                },
                "files": [
                    "packages/dev/core/src/Rendering/utilityLayerRenderer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.16.0": [
            {
                "pr": "12768",
                "title": "Native readPixels implementation",
                "description": "This change provides a native implementation for reading a texture to obtain an rbga8 buffer. It does not currently support cube maps.\r\n\r\nSee the corresponding Babylon Native change here: https://github.com/BabylonJS/BabylonNative/pull/1104",
                "author": {
                    "name": "ryantrem",
                    "url": "https://github.com/ryantrem"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12771",
                "title": "perf: Improve `MaterialHelper` tree-shaking with `LightConstants`",
                "description": "`MaterialHelper` don't need the whole `Light` class (only the `Light` TypeScript type).\r\n\r\nRelated to https://github.com/BabylonJS/Babylon.js/issues/10388",
                "author": {
                    "name": "yvele",
                    "url": "https://github.com/yvele"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12769",
                "title": "Skip some WebAPI calls when setting up VideoTexture in the context of Babylon Native",
                "description": "This change prevents `VideoTexture` from calling `window.URL.createObjectURL` during initialization when running in the context of Babylon Native. Somehow this WebAPI is defined in regular Babylon Native (there is no native polyfill, so is JSC/V8 providing this?), though it is unnecessary (the `src` property is unused in Babylon Native's `VideoTexture` implementation), and in React Native `window.URL.createObjectURL` is polyfilled partially and dies on this call. Avoiding this call makes `VideoTexture` work in Babylon React Native. The extra direct check for `video.isNative` in the BJS code is not great, but other code in this file already does it, so following the existing pattern.",
                "author": {
                    "name": "ryantrem",
                    "url": "https://github.com/ryantrem"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12766",
                "title": "Use only the mesh's enabled state, not its parent's, when cloning.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/cloned-objects-dont-seem-to-have-the-same-enabled-state-as-the-original-object/32311\r\n\r\nExample playground: https://playground.babylonjs.com/#48QWI6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12764",
                "title": "Always clone skinned meshes for AssetContainer.instantiateModelsToScene",
                "description": "See https://forum.babylonjs.com/t/programmatically-setting-separate-bone-transform-node-transforms-for-instances/31910",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12765",
                "title": "InputManager: Added mouse buttons 4 and 5 to InputManager mouse handling",
                "description": "A user in the forums brought an issue to our attention where the mouse 4 and 5 buttons (Browser Back and Browser Forward) weren't triggering `scene.onPointerObservable`.  This had worked previously in 4.2.  Upon further investigation, it was found that the code used in the InputManager to route the input calls had omitted these buttons.  This PR will add them back into the InputManager.\r\n\r\nForum Post: https://forum.babylonjs.com/t/scene-onpointerobservable-doesnt-catch-mouse4-and-mouse5-events-in-babylonjs-5/32225",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12755",
                "title": "toolbar can expand now",
                "description": "No previous functionality for expanding toolbar on smaller screens (scroll only) ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/imgs/toolbarCollapseIcon.svg",
                    "packages/tools/guiEditor/src/imgs/toolbarExpandIcon.svg",
                    "packages/tools/guiEditor/src/main.scss",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12762",
                "title": "ArcRotateCamera: Modify rotation logic to use invertRotation flag",
                "description": "The `invertRotation` flag is primarily used with the FreeCamera and any Cameras that inherit from it.  Since the ArcRotateCamera uses different rotation logic, it never actually makes use of the `invertRotation` flag or its numerical counterpart, the `invertRotationSpeed` property.  This PR allow the user to use this flag with the ArcRotateCamera and specify the inverted rotational speed.  The discrepancy was initially brought up in the forum thread: https://forum.babylonjs.com/t/inverting-arcrotatecamera-controls-for-photodome/32147/6.\r\n\r\n",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12754",
                "title": "fixed scene tree not sticking",
                "description": "When clicking arrow button in scene tree, children were not appearing unless the mouse was moved ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12760",
                "title": "Expose pendingData APIs publicly",
                "description": "Open pendingData management to the public\r\n\r\nhttps://forum.babylonjs.com/t/scene-external-readiness-checking/32179",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12761",
                "title": "DeviceInputSystem: Made mousewheel passive option set to false when supported",
                "description": "Originally, in two PRs (https://github.com/BabylonJS/Babylon.js/pull/12696 and https://github.com/BabylonJS/Babylon.js/pull/12703) there was a violation warning that came up because the mouse wheel was not being treated as a passive event.  My original fixes addressed the original logic, which was incorrectly assigning the passive property, and makes the default value true.  This also includes removal of the preventDefault code from some of our cameras.\r\n\r\nThis current PR will accomplish two things.  One, it will revert the changes from 12703.  Second, it will set the default state of the passive property to false.  This should address an issue found in the forums where the original behavior would successfully allow for preventDefault but the newest one wouldn't.\r\n\r\nForum link: https://forum.babylonjs.com/t/camera-zoom-scrolling-the-page-introduced-in-5-13-1/32223/6",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "12759",
                "title": "Fix 3D slider observables and visibility",
                "description": "- https://forum.babylonjs.com/t/gui3d-slider3d-observables-are-not-triggered/32265\r\n- https://forum.babylonjs.com/t/gui3d-slider3d-isvisible-boolean-not-working/32264",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/control3D.ts",
                    "packages/dev/gui/src/3D/controls/slider3D.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12758",
                "title": "Serialize getters instead of private vars",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "12756",
                "title": "WebGPU: Comply with variable naming restrictions",
                "description": "Fix errors starting in Canary Version 105.0.5183.0.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12753",
                "title": "Fix camera cloning of ortho params",
                "description": "Related forum issue: https://forum.babylonjs.com/t/5-14-to-5-15-camera-clone-does-not-clone-camera-mode/32192/3",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "12750",
                "title": "Add engine option for using exact sRGB conversions in the shader.",
                "description": "This provides an option to use the more expensive but accurate conversion for transforming colors in the shader to and from linear and sRGB color spaces. The conversion constants and formulas are described in the Wikipedia article for sRGB: https://en.wikipedia.org/wiki/SRGB\r\n\r\nI opted to make this option a property passed into the engine, as it feels somewhat similar functionally to the engine option for high precision floats i.e., it affects many things (in this case, many shaders). IMO it would be odd to use the approximation in one shader and the exact formula in another. I think most of the time, you'd either want it always or never.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12751",
                "title": "Remove loading of GLTF files as the current architecture doesn't support them",
                "description": "Related forum issue: https://forum.babylonjs.com/t/nme-cant-upload-custom-gltf-for-preview/32172/2",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewMeshControlComponent.tsx"
                ],
                "tags": []
            }
        ],
        "5.15.1": [
            {
                "pr": "12749",
                "title": "Fix colorline incorrect use of hex line",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/colorLineComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12746",
                "title": "Add VirtualKeyboard support to InputTextArea",
                "description": "This PR adds VirtualKeyboard support to InputTextArea.\r\n\r\nI check  if `this._currentlyConnectedInputText instanceof InputTextArea` to call matching method `this._currentlyConnectedInputText.alternativeProcessKey`, or call `processKey` for InputText.\r\n\r\nBesides, pass different parameters for the input of `Enter` and `Backspace`.\r\n```\r\ninputText.processKey(8);\r\ninputTextArea.alternativeProcessKey('Backspace');\r\n```\r\n\r\n\r\nSo that an InputTextArea could be connected by a VirtualKeyboard and respond to virtual keyboard input.\r\n```\r\nconst textarea = new InputTextArea('Textarea');\r\nconst keyboard = new VirtualKeyboard('Keyboard');\r\nkeyboard.connect(textarea);\r\n\r\n```\r\n \r\nDiscussed in https://forum.babylonjs.com/t/improve-gui-virtualkeyboard-to-support-inputtextarea/32108.",
                "author": {
                    "name": "ycaptain",
                    "url": "https://github.com/ycaptain"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts"
                ],
                "tags": []
            },
            {
                "pr": "12747",
                "title": "Fix copy pasting of frames.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": []
            }
        ],
        "5.15.0": [
            {
                "pr": "12744",
                "title": "Make sure legacy support doesn't throw exceptions",
                "description": "When loading the framework twice on the same page an exception was thrown, as we were re-setting unsettable parameters.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/lts/core/src/Legacy/legacy.ts",
                    "packages/lts/gui/src/legacy/legacy.ts",
                    "packages/lts/loaders/src/legacy/legacy-objFileLoader.ts",
                    "packages/lts/loaders/src/legacy/legacy-stlFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12743",
                "title": "If controls are reordered, relink them to mesh",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-control-zindex-update-unlinks-mesh/32113",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": []
            },
            {
                "pr": "12738",
                "title": "Do not style overlay if custom buttons provided",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXREnterExitUI.ts"
                ],
                "tags": []
            },
            {
                "pr": "12741",
                "title": "Pass ortho camera values down to rigCameras",
                "description": "Related forum issue: https://forum.babylonjs.com/t/is-a-camera-able-to-be-both-anaglyphic-and-orthographic/31887/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12740",
                "title": "Fix internal plugins that use prepareDefines",
                "description": "Stemming from this [prev PR](https://github.com/BabylonJS/Babylon.js/pull/12643) prepareDefines is now called after PrepareDefinesForAttributes so that the plugin's defines aren't overwritten. However some of the built-in plugins rely on prepareDefines being called before PrepareDefinesForAttributes (in particular the ones that call PrepareDefinesForMergedUV which needs to be called before PrepareDefinesForAttributes).\r\n\r\nSo this PR just changes these plugins to use prepareDefinesBeforeAttributes, which is called before PrepareDefinesForAttributes to match the original behavior (this is the same fix that was created for the PBRAnisotropicConfiguration plugin in the original PR, which I thought was the only one affected).\r\n\r\nForum issue about the PBRSheenConfiguration plugin: https://forum.babylonjs.com/t/texture-not-displaying-for-sheen-extension/32110",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrClearCoatConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSheenConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts"
                ],
                "tags": []
            },
            {
                "pr": "12742",
                "title": "Shortcuts for search and placement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/portData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts"
                ],
                "tags": []
            },
            {
                "pr": "12725",
                "title": "Export method 'CreateDiscVertexData'",
                "description": "Exports the local method `CreateDiscVertexData` so it is accessible outside of `discBuilder.ts`",
                "author": {
                    "name": "chapmankyle",
                    "url": "https://github.com/chapmankyle"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/discBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12739",
                "title": "Fix gizmos on elements with padded parents",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/gizmoGeneric.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12737",
                "title": "Automatically change hardware scaling based on browser zoom level",
                "description": "Fixes #12711\nThis does 2 things:\n1) If adapt to device ratio is turned on we are using the delta between the last recorded device pixel ratio and the current one to change the hardware scaling rate.\n2) adaptToDeviceRatio is not public and can be changed not only in the constructor.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12730",
                "title": "Check if the mouse is over canvas and if it is, stop the scroll from …",
                "description": "…happening.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewAreaComponent.tsx",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12733",
                "title": "Remove icon from elbowblock in NME",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts"
                ],
                "tags": []
            },
            {
                "pr": "12734",
                "title": "Add scaleInPlace to Color3 and Color4",
                "description": "And fix some bugs in the existing documentation.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "12736",
                "title": "updated documentation of hoverRadius",
                "description": "fixes https://github.com/BabylonJS/Babylon.js/issues/12724",
                "author": {
                    "name": "marpro200",
                    "url": "https://github.com/marpro200"
                },
                "files": [
                    "packages/dev/gui/src/3D/materials/fluent/fluentMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12732",
                "title": "Fix frame linking",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12729",
                "title": "Fix delete key issue with NME",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/lines/quaternionLineComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationGroupPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/arcRotateCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/commonCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/layers/layerPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonShadowLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/commonMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/nodeMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMetallicRoughnessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrSpecularGlossinessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/skeletonPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/coneEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/cylinderEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/hemisphericEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/sphereEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonPostProcessPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/lensRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssao2RenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssaoRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sounds/soundPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spritePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/tools/gltfComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/matrixLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/sliderLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12731",
                "title": "Fix frame export",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerExportData.ts"
                ],
                "tags": []
            },
            {
                "pr": "12727",
                "title": "Volumetric post process: Add support for setMaterialForRendering",
                "description": "See https://forum.babylonjs.com/t/shadows-and-post-processing-with-custom-material/32034",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": []
            },
            {
                "pr": "12726",
                "title": "Create screenshot: Fix resources not recreated with the right sizes",
                "description": "See https://forum.babylonjs.com/t/babylonjs-5-0-5-5-5-ios-15-4-safari-15-4-issues/30195/27",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "12723",
                "title": "Nme improvements",
                "description": "Fix #12721\r\nFix #12722 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/elbowBlock.ts",
                    "packages/dev/sharedUiComponents/src/imgs/triangle.svg",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/imgs/square.svg",
                    "packages/tools/nodeEditor/src/imgs/triangle.svg"
                ],
                "tags": []
            },
            {
                "pr": "12662",
                "title": "Basis transcoder update",
                "description": "This is an update to the basis transcoder. This allows users to also take advantage of the `UASTC` option of the basis format. \r\n\r\nThe `basis_transcoder.js` and `basis_transcoder.wasm` are a direct copy from the [Basis Universal repository](https://github.com/BinomialLLC/basis_universal/tree/7a2094b/webgl/transcoder/build).",
                "author": {
                    "name": "vinhui",
                    "url": "https://github.com/vinhui"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Loaders/basisTextureLoader.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/tools/babylonServer/public/basisTranscoder/1/basis_transcoder.js",
                    "packages/tools/babylonServer/public/basisTranscoder/1/basis_transcoder.wasm",
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12702",
                "title": "Initial Device Input Test Pattern Setup: Unit Tests",
                "description": "This PR contains a set of tests to verify the functionality of the DeviceSource and DeviceSourceManager objects.  These tests will serve as a baseline for other tests coming up in the future.\r\n\r\nThis also contains a small fix to the DeviceSourceManager when a user tries to query for a device that has no active entries.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/internalDeviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts"
                ],
                "tags": [
                    "inputs"
                ]
            }
        ],
        "5.14.1": [
            {
                "pr": "12720",
                "title": "Move common controls out of NME",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/colorPickerComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/minus.svg",
                    "packages/tools/nodeEditor/src/sharedComponents/numericInputComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/plus.svg"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12719",
                "title": "Warning for protected block names pops while still typing",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/colorPicker/hexColor.tsx",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTab.scss"
                ],
                "tags": []
            },
            {
                "pr": "12686",
                "title": "Update GLTF Animation serializer to include Camera.",
                "description": "`Camera `and `Light` was not exported to GLTF due to single test about `TransformNode`. We introduce a test function, which encompass test for `TransformNode`, `Camera `and `Light`. This test function will evolve to add support for `KHR_animation_pointer`.\r\nSee [this](https://forum.babylonjs.com/t/gltf-bug-freecamera-animation-not-being-exported/31259) forum thread.",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.14.0": [
            {
                "pr": "12714",
                "title": "Pasting hex color from one color3 to another actually pastes the original node as a new node",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/gradientStepComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/toolBar.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/colorGradientStepGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/colorComponentEntry.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/colorPicker.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/hexColor.tsx",
                    "packages/dev/sharedUiComponents/src/lines/colorLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/colorPickerComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/colorPickerComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12706",
                "title": "Move lock object down the graph",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/lines/quaternionLineComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/arcRotateCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/freeCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/fogPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/directionalLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/hemisphericLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/pointLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/spotLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/nodeMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMetallicRoughnessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrSpecularGlossinessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/bonePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/transformNodePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/boxEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/meshEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/pointEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonPostProcessPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spritePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/color3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/color4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/colorLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/matrixLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/numericInputComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector2LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/matrixPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector2PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/framePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12709",
                "title": "Created Visual Tests for GUI Input and Pick Testing",
                "description": "This PR adds two visual tests to our testing suite to check some higher level input functionality.\r\n\r\nPicking Visual Test: https://playground.babylonjs.com/#4J7Y7V#1\r\nThis test validates that picking should work for POINTERMOVE, POINTERDOWN, and POINTERUP.  Additionally, there are tests to verify that our skip booleans (eg. skipPointerUpPredicate) will prevent picking in scenarios where we don't want to pick.  As part of this process, we also can verify that the DeviceInputSystem/DeviceSourceManager can talk to the InputManager to propagate pointer events up.\r\n\r\nGUI Input Test: https://playground.babylonjs.com/#UB4F3B#7\r\nThis test validates that GUI elements such as TextBlocks, InputTexts, and Buttons are usable with Keyboard and Mouse input.  Furthermore, this will verify that the 6 observables will work with our buttons (move, up, down, out, enter, click).  While the first test verifies that the DIS/DSM can talk with the InputManager, this one will show that the InputManager can also talk with GUI elements.\r\n\r\nIt should be noted that all simulated input is done with Pointer/KeyboardEvent objects and the `dispatchEvent` function.  Some modifications will be needed if these tests are to run on Babylon Native.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/tests/test/visualization/ReferenceImages/guiInputTest.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pickingVisualTest.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "gui",
                    "picking",
                    "inputs",
                    "skip changelog"
                ]
            },
            {
                "pr": "12708",
                "title": "Fix some additional issues",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts"
                ],
                "tags": []
            },
            {
                "pr": "12691",
                "title": "move more code to shared-ui",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/nodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/checkBoxLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/floatLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/propertyChangedEvent.ts",
                    "packages/tools/nodeEditor/src/sharedComponents/sliderLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/textLineComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12703",
                "title": "Camera: Remove code execute preventDefault for wheel events",
                "description": "Recently, there was a fix done for mouse wheel events to allow them to properly be identified as supporting the passive flag.  Because of this, there was a side effect introduced where if preventDefault is enabled for camera wheel input objects, it will throw an error because passive events ignore preventDefault calls.  This was brought to our attention in this forum post: https://forum.babylonjs.com/t/updated-babylon-now-getting-unable-to-preventdefault-inside-passive-event-listener-invocation-error/31842\r\n\r\nThis PR removes the, now obsolete, preventDefault calls from our wheel inputs to prevent this error from popping up.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12704",
                "title": "Fix command-drag multiselect for NME on Mac",
                "description": "When doing click-and-drag multiselect of NME nodes, check _multiKeyIsPressed which will be true if either ctrl or command (for Mac) key is pressed down, instead of just checking for ctrl key.\r\n\r\nForum: https://forum.babylonjs.com/t/is-it-possible-to-change-shoutcut-for-node-material-editor/31808/14",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": []
            }
        ],
        "5.13.3": [
            {
                "pr": "12701",
                "title": "Fix loading skinned model with multiple primitives",
                "description": "https://forum.babylonjs.com/t/3d-model-not-showing-up-in-playground-or-sandbox/31821",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.13.2": [
            {
                "pr": "12700",
                "title": "Fix port duplication",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.13.1": [
            {
                "pr": "12697",
                "title": "Engine: Add event listener to disable right-click menu when there's a canvas element",
                "description": "There was an issue found on the forums where the right-click context menu was appearing when a user used custom mouse controls.  Upon closer investigation, it was determined that the reason the context menu didn't appear in other scenarios was that there was specific code to suppress it in all of our cameras' mouse input code.  This proposed fix will add code to suppress the context menu when the rendering canvas is set to a non-null HTMLElement.\r\n\r\nForum Post: https://forum.babylonjs.com/t/even-by-using-evt-preventdefault-the-browser-menu-pops-up-after-i-changed-from-bjs-5-0-to-5-10/31383/8",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12698",
                "title": "Fix node decomposing at drop time",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts"
                ],
                "tags": []
            },
            {
                "pr": "12699",
                "title": "Fix snippet loading on GUI Editor",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-editor-loading-from-snippet-id-only-not-entering-full-link-is-incomplete/31803",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/public/index.js"
                ],
                "tags": []
            },
            {
                "pr": "12696",
                "title": "DeviceInputSystem: Fixed Passive Support Check to prevent Violation Warning",
                "description": "There was a warning found by a user on the forums that, in Verbose mode, a Violation warning was occurring:\r\n![image](https://user-images.githubusercontent.com/50599569/176553040-80f67f6f-a818-4494-9f8a-f36f5e4c4739.png)\r\nThis warning was happening because the `wheel` event listener didn't have the \"passive\" option set to true when able.  After closer investigation, it was found that the code used to determine if passive was supported was always returning false, causing this warning to occur.  This PR modifies the logic to fix this.\r\n\r\nForum link: https://forum.babylonjs.com/t/bjs-console-warnings-when-using-cleargizmoonemptypointerevent/31447/8",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.13.0": [
            {
                "pr": "12694",
                "title": "Only export material from mesh with geometry",
                "description": "See https://forum.babylonjs.com/t/scene-exporter-is-not-working-correctly/28591",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12695",
                "title": "Fix skeleton update cache",
                "description": "Related forum issue: https://forum.babylonjs.com/t/bone-wiring-display-bug/31755\r\nRelated playground: https://playground.babylonjs.com/#1EVNNB#15",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Debug/boneAxesViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12693",
                "title": "Added code to track buttons pressed while meta key is active on MacOS",
                "description": "There was an issue found on the forum where `keyup` events for keys weren't firing while the Meta key (Command) was pressed for all browsers on MacOS.  This has led to a scenario where said buttons weren't being properly treated as released.  Upon investigation, it has been determined that this issue occurs at an OS level and therefore, there isn't much we can do about it (https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser).  This PR contains a workaround so that if BJS is being run in a browser on MacOS, any buttons pressed while the Meta key is active will be tracked and have `keyup` events fired for them when the Meta key is released.  All other platforms will work as before without this tracking code.\r\n\r\nForum Link: https://forum.babylonjs.com/t/modifier-keyboard-shortcuts-with-devicesourcemanager-copy-to-clipboard/31743/7",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12690",
                "title": "Fix serialization when objects have InstancedMesh parents",
                "description": "Related forum issue: https://forum.babylonjs.com/t/sceneserializer-loses-hierarchy/31720\r\nRelated playground: https://playground.babylonjs.com/#6U1BYB#1\r\nSaving the playground as .babylon and loading it in another playground or sandbox will show the objects which previously were arranged in hierarchy as a flat structure.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/serializeAndLoadInstancedHierarchy.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12692",
                "title": "Save the texture url in the name so its not overwritten on render.",
                "description": "Fix #12683",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12681",
                "title": "Turning on two eslint rules",
                "description": "The two rules are:\n\n* `import type` should be used instead of `import` when there is no need to import the file fully.\n* no `this` reassignment",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/core/src/Events/deviceInputEvents.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts",
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/sharedUiComponents/src/components/Label.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/propertyComponentProps.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/selectionChangedOptions.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/propertyLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/typeLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/types/framePortData.ts",
                    "packages/dev/sharedUiComponents/src/stories/Button.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Icon.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Label.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Toggle.stories.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/imagePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoGeneric.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoLine.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoScalePoint.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoWrapper.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/conditionalDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/discardDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/outputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/pbrDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/colorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/conditionalNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/frameNodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/framePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightInformationPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/nodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/transformNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/trigonometryNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/vectorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerDefaultInput.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerElbowSupport.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerNodePortDesign.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts",
                    "packages/tools/nodeEditor/src/serializationTools.ts",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12684",
                "title": "Fix issue with glTF skin node/mesh metadata",
                "description": "See https://forum.babylonjs.com/t/extrasasmetadata-bug/28097/13",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12688",
                "title": "Fix parallaxOcclusion not being reset",
                "description": "https://forum.babylonjs.com/t/removing-textures-with-useparallax-true-causes-material-to-be-black/31694/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12673",
                "title": "Move Node Graph System out of NME",
                "description": "Fix #11818 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/lines/meshPickerComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/commonCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/fogPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/variantsPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/imgs/triangle.svg",
                    "packages/dev/sharedUiComponents/src/lines/buttonLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/color3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/matrixLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/displayLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeLocationInfo.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/portData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/propertyComponentProps.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/selectionChangedOptions.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/propertyLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/tools.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/typeLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/types/framePortData.ts",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewAreaComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts",
                    "packages/tools/nodeEditor/src/components/preview/previewMeshControlComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/matrixPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector2PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/diagram/display/displayManager.ts",
                    "packages/tools/nodeEditor/src/diagram/display/outputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/diagram/display/pbrDisplayManager.ts",
                    "packages/tools/nodeEditor/src/diagram/displayLedger.ts",
                    "packages/tools/nodeEditor/src/diagram/nodePort.ts",
                    "packages/tools/nodeEditor/src/diagram/properties/propertyComponentProps.ts",
                    "packages/tools/nodeEditor/src/diagram/propertyLedger.ts",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/conditionalDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/discardDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/outputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/pbrDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/colorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/conditionalNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/frameNodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/framePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightInformationPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/nodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/transformNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/trigonometryNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/vectorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerDefaultInput.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerElbowSupport.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerExportData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerNodePortDesign.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToDisplayLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToPropertyLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts",
                    "packages/tools/nodeEditor/src/nodeEditor.ts",
                    "packages/tools/nodeEditor/src/serializationTools.ts",
                    "packages/tools/nodeEditor/src/sharedComponents/buttonLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/color3LineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12685",
                "title": "Add support for clip planes to the depth renderer",
                "description": "See https://forum.babylonjs.com/t/ssao-and-clip-planes/4289\r\n\r\nVery similar to #11652",
                "author": {
                    "name": "fchoisy",
                    "url": "https://github.com/fchoisy"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Shaders/depth.fragment.fx",
                    "packages/dev/core/src/Shaders/depth.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "12682",
                "title": "Wrong rotation offset camera correction",
                "description": "When GLB export, camera rotation was set using WorldTransform matrix `camera.getAbsoluteRotation()` instead as local. Resulting on double every rotation from upper hierarchy.\r\nwe update it  using  `camera.rotationQuaternion` which is property of `TargetCamera`\r\nIn order to let other user custom Camera to be exported, we do not change the `Camera` parameter type but cast as `any` to allow the property test.\r\nSee this forum [question](https://forum.babylonjs.com/t/gltf-export-bug-freecamera-rotation-has-wrong-offset/31278).",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12675",
                "title": "Add support for more depth stencil formats.",
                "description": "This requires some rework of the logic in ThinEngine._createDepthStencilTexture, but it should be non-breaking. A similar change was made to extend MultiRenderTarget's depth-stencil texture handling too.\r\n\r\nI've also added visualization tests to exercise the createDepthStencilTexture code path.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12680",
                "title": "Load shared-ui-components from src and not dist",
                "description": "In both gui editor and node material editor, the shared ui components are now loaded from source, as they are not served by the babylon server. any tool using it will require this change to make sure hot reload works as expected.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "12679",
                "title": "Add warning to Bounding Box Gizmo",
                "description": "This reverts commit 15d670c61c29ee3922945bc937fdc9562fc94c66.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/warning-logged-when-gizmomanagers-boundingboxgizmo-is-enabled/31644/4",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12551",
                "title": "Add warning to Bounding Box Gizmo",
                "description": "Related issue: https://forum.babylonjs.com/t/is-that-the-attachednode-setter-wrong/30473/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12674",
                "title": "createTexture onLoad callback passes the texture as arguments",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/colorMergerBlock.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "12676",
                "title": "Fix GL error originating from createDepthStencilTexture on WebGL1.",
                "description": "There is a WebGL1 extension that allows for creating a depth-stencil texture, but these specific APIs are unsupported and lead to GL errors when used. I don't see an extension-based alternative.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12677",
                "title": "Fix pointer up event on leave canvas",
                "description": "Fix #12627",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": []
            }
        ],
        "5.12.1": [],
        "5.12.0": [
            {
                "pr": "12664",
                "title": "Added referrer policy support to GUI Image to control xhr request header",
                "description": "This feature will allow user's to control the **header** in the **xhr request to load the image**, `Referrer Policy`.\r\n\r\nMore info here : \r\nThe Referrer-Policy [HTTP header](https://developer.mozilla.org/en-US/docs/Glossary/HTTP_header) \r\n\r\nDefault value is : `strict-origin-when-cross-origin`",
                "author": {
                    "name": "BrunevalPE",
                    "url": "https://github.com/BrunevalPE"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": []
            },
            {
                "pr": "12672",
                "title": "fix cache miss with instances out of frustrum",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/materials/src/cell/cellMaterial.ts",
                    "packages/dev/materials/src/fire/fireMaterial.ts",
                    "packages/dev/materials/src/fur/furMaterial.ts",
                    "packages/dev/materials/src/gradient/gradientMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts",
                    "packages/dev/materials/src/lava/lavaMaterial.ts",
                    "packages/dev/materials/src/mix/mixMaterial.ts",
                    "packages/dev/materials/src/normal/normalMaterial.ts",
                    "packages/dev/materials/src/shadowOnly/shadowOnlyMaterial.ts",
                    "packages/dev/materials/src/simple/simpleMaterial.ts",
                    "packages/dev/materials/src/terrain/terrainMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triPlanarMaterial.ts",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12671",
                "title": "webgpu update",
                "description": "https://forum.babylonjs.com/t/what-is-the-current-webgpu-support-status/31506/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12670",
                "title": "Lines array is generated later",
                "description": "this._lines is generated when the  control is in view. If you create a control that is not in view it will fail.\n\nThis makes sure it doesn't fail even when out of view. \n\nTest playground - https://www.babylonjs-playground.com/#XCPP9Y#13890",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12668",
                "title": "Add params scene, mesh to function getAttributes",
                "description": "For the class MaterialPluginBase,  add params scene and mesh to the function getAttributes so that they can be used to determine which attributes to use.\r\n\r\nForum: https://forum.babylonjs.com/t/using-custom-attribute-with-material-plugin/31142/7",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginEvent.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12659",
                "title": "Adds ExtrudeShape* options firstNormal and adjustFrame",
                "description": "firstNormal option allows one to pick the first normal of the underlying Path3D path, preventing, in some cases degenerate extrusions.\r\nadjustNormal option causes the underlying Path3D frame of tangents, normals, and binormals to be patched up when the they are either undefined (0,0,0) or reverse direction. This is useful for paths that reverse back on themselves.",
                "author": {
                    "name": "Lowclouds",
                    "url": "https://github.com/Lowclouds"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/shapeBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12669",
                "title": "Inspectable options fix",
                "description": "Custom inspectables could not be provided with an appropriate options array as the type was either undefined or empty array, this way it can be undefined or an array of IInspectableOptions\r\n\r\nHere is an example of being forced to use \"as any\" with current babylonjs in typescript when using the custom inspectable type options, when removing the \"as any\" this will break:\r\nhttps://playground.babylonjs.com/#LTH16U\r\n\r\nHere is an example with the snapshot where we aren't forced to use \"as any\":\r\nhttps://playground.babylonjs.com/?snapshot=refs/pull/12669/merge#TCE5N9\r\n",
                "author": {
                    "name": "GordonTombola",
                    "url": "https://github.com/GordonTombola"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12656",
                "title": "Force render with just that camera on CreateScreenshot",
                "description": "If a camera is specified as an argument, fall back on the CreateScreenshotUsingRenderTarget function.\r\nRelated forum issue: https://forum.babylonjs.com/t/screenshot-tool-does-not-seem-to-respect-camera-argument/31167\r\nRelated Playground: https://playground.babylonjs.com/#M6HFGB",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": []
            },
            {
                "pr": "11710",
                "title": "Creation of InputTextArea component",
                "description": "Based on fneitzel prototype ([Added prototype of InputTextArea](https://github.com/BabylonJS/Babylon.js/pull/8275)), I improved the component to support the margin, the deletion (backspace/del.), the highlighting, deadkeys and copy/paste/cut shortcuts.\r\n\r\nA lot of things remained to do :\r\n- fix the CR on last line\r\n- find why the text clip on single line during autostreching\r\n- resolve todos\r\n- clean/fix/update the code\r\n\r\nMy approach was highly naïve, so maybe a cleaner architecture will be necessery.",
                "author": {
                    "name": "Valerian-Perez-Wanadev",
                    "url": "https://github.com/Valerian-Perez-Wanadev"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/index.ts",
                    "packages/dev/gui/src/2D/controls/inputText.ts",
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts"
                ],
                "tags": []
            },
            {
                "pr": "12667",
                "title": "changes to minZ and maxZ while a session is running should update the XR session",
                "description": "Fixes #12448\r\n\r\nmaxZ should be infinity, but when setting is to a very large number, both the XR emulator and native XR fail. This is why 10000 was chosed to be max (which is 10000 meters in VR).\r\n\r\nTest playground (when merged) https://playground.babylonjs.com/#F41V6N#913",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts",
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12641",
                "title": "Added Quaternion support in `ShaderMaterial`",
                "description": "Last pull request about quaternions (until the next one maybe we never know ^^)\r\n\r\n- added `setQuaternion` as a method of `ShaderMaterial`\r\n- added `setQuaternionArray` as a method of `ShaderMaterial`\r\n- added `toArray` as a method of `Quaternion`",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "12663",
                "title": "Bug Fix - Vector3 project on plane",
                "description": "This proposal fixes an apparent incorrect calculation in the `Vector3.projectOnPlaneToRef` method which returns confusing results for many planes, especially those not centered on the world origin.\r\n\r\nA couple of unit tests were added to logically demonstrate the failure of the existing code, as well as a new original implementation which seems to work correctly for various cases.\r\n\r\nPlayground demonstrating the behavior for testing:\r\nhttps://playground.babylonjs.com/#MHMIPM",
                "author": {
                    "name": "strutcode",
                    "url": "https://github.com/strutcode"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12665",
                "title": "move core dependencies to peer dependencies",
                "description": "Addressing https://forum.babylonjs.com/t/babylon-materials-and-babylon-loaders-resolve-babylon-core-5-4-0-as-a-sub-dependency/30722",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/gui-editor/package.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/inspector/package.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/node-editor/package.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/serializers/package.json"
                ],
                "tags": []
            },
            {
                "pr": "12666",
                "title": "add support for custom attributes to convertToUnIndexedMesh",
                "description": "Add support for custom attributes to the function convertToUnIndexedMesh. Currently calling it on a mesh with custom attribute(s) set causes an error to be thrown since the attribute's stride can't be deduced.\r\n\r\nForum: https://forum.babylonjs.com/t/allow-converttounindexedmesh-to-support-custom-attributes/31486",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12658",
                "title": "update dependencies",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/viewer/package.json",
                    "packages/public/babylonjs-viewer-assets/package.json",
                    "packages/public/umd/babylonjs-gui-editor/package.json",
                    "packages/public/umd/babylonjs-gui/package.json",
                    "packages/public/umd/babylonjs-inspector/package.json",
                    "packages/public/umd/babylonjs-ktx2decoder/package.json",
                    "packages/public/umd/babylonjs-loaders/package.json",
                    "packages/public/umd/babylonjs-materials/package.json",
                    "packages/public/umd/babylonjs-node-editor/package.json",
                    "packages/public/umd/babylonjs-post-process/package.json",
                    "packages/public/umd/babylonjs-procedural-textures/package.json",
                    "packages/public/umd/babylonjs-serializers/package.json",
                    "packages/public/umd/babylonjs-viewer/package.json",
                    "packages/public/umd/babylonjs/package.json",
                    "packages/tools/babylonServer/package.json",
                    "packages/tools/devHost/package.json",
                    "packages/tools/guiEditor/package.json",
                    "packages/tools/ktx2Decoder/package.json",
                    "packages/tools/nodeEditor/package.json",
                    "packages/tools/playground/package.json",
                    "packages/tools/reflector/package.json",
                    "packages/tools/sandbox/package.json",
                    "packages/tools/viewer/package.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12660",
                "title": "Fix bug that prevents subsequent elapsed time queries from completing",
                "description": "Due to the fact an elapsed time query does not typically have results upon the first call to engine.endTimeQuery(), the previous logic that seems intended to prevent overlapping elapsed time queries was causing any subsequent query to always return -1 for the time. Basically, you could only have one query in flight at a given time.\r\n\r\nMoving around the bookkeeping logic fixes my repro playground: https://playground.babylonjs.com/#KBS9I5#23200",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts"
                ],
                "tags": []
            },
            {
                "pr": "12657",
                "title": "Add meta key to the possible multi selection keys on NME",
                "description": "Related Forum Issue: https://forum.babylonjs.com/t/nme-multi-select-ux-unusable-on-mac/30517/8\r\nOn Mac, the CTRL key always opens the browser context menu, making multi-select impossible. This PR adds the meta keys (windows/cmd) to the keys that can perform multi-select.\r\n\r\nPR to test: https://playground.babylonjs.com/#99SQQW",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx"
                ],
                "tags": []
            }
        ],
        "5.11.0": [
            {
                "pr": "12652",
                "title": "Fix texture caching.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/got-wrong-mapping-in-equirectangularcubetexture/31329\r\nRelated playground: https://playground.babylonjs.com/#NIWPUI#1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/hdrCubeTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12655",
                "title": "Camera: Modified isMouseEvent bool logic for Safari",
                "description": "There was an issue found in the forum where movement of the UniversalCamera, using a mouse, on Safari wasn't stopping properly.  After investigating the issue, it was found that the mouse events were triggering both mouse and touch movement.  The main issue was that, in FreeCameraTouchInput, the `isMouseEvent` boolean was incorrect being evaluated as false for mouse because the assigning logic was looking for a parameter that isn't available to mouse events generated in Safari.  The fix was to modify the logic to work with Safari-specific mouse events.\r\n\r\nRelevant Forum Link: https://forum.babylonjs.com/t/keyboard-control-not-working-for-latest-universalcamera-in-desktop-safari/31314/8",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12653",
                "title": "Fix deletion of Grid items in Editor, also fix...",
                "description": "the width of the button panel, and fix an exception that was being thrown when changing the grid row/column of a grid element.\r\n\r\nRelated playground: https://playground.babylonjs.com/#9FW40S",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/parentingPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/main.scss"
                ],
                "tags": []
            },
            {
                "pr": "12643",
                "title": "Prepare plugin defines after material helper defines",
                "description": "For PBRBaseMaterial, this PR moves the call to _callbackPluginEventPrepareDefines to right after the calls to PrepareDefinesForFrameBoundValues and PrepareDefinesForAttributes instead of right before them. This way values set by the plugin for these defines won't be overwritten by these MaterialHelper functions. For StandardMaterial this is already the case (_callbackPluginEventPrepareDefines is called right after them).\r\n\r\nSince the anisotropy plugin is relying on the current order of these function calls, PrepareDefinesBeforeAttributes was added to allow defines to be set right before MaterialHelper.PrepareDefinesForAttributes is called.\r\n\r\nForum: https://forum.babylonjs.com/t/pbrbasematerial-overwrites-plugins-defines/31262\r\nTest PG: https://playground.babylonjs.com/#UIXTIF#6",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12651",
                "title": "make sure component init before render",
                "description": "Reproduction:\n\nThis playground fails - https://www.babylonjs-playground.com/#XCPP9Y#13718\n\nBecause when setting the radius we are setting everything as dirty (including the fontOffset-related function, even though fontOffset is not yet set).\n\nfontOffset is being set when the UI element is being rendered. In this playground the initial state of the component is hidden (it is outside of the frustum).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12646",
                "title": "Fix SSR and procedural textures clear order",
                "description": "https://forum.babylonjs.com/t/ssr-with-noiseproceduraltexture-caused-scene-not-refreshing/31290",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Rendering/prePassRendererSceneComponent.ts",
                    "packages/dev/core/src/sceneComponent.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12645",
                "title": "Fix dirty on inactive meshes",
                "description": "https://forum.babylonjs.com/t/texture-is-not-being-applied-to-out-of-view-meshes/31161/7",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12648",
                "title": "deprecate gltf 1.0 modules",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/1.0/glTFBinaryExtension.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFLoaderUtils.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFMaterialsCommonExtension.ts"
                ],
                "tags": []
            },
            {
                "pr": "12647",
                "title": "Use the errorcallback to report errors",
                "description": "Playground reproduction:\n\n#X2IZQ9#1\n\nwith this fix, the promise rejects correctly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Offline/database.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12649",
                "title": "Camera: Added divide by zero check FreeCameraTouchInput",
                "description": "In the forums, there was an issue raised where movement wasn't working on Safari.  After some investigation, it was found that the `touchMoveSensibility` property was being used in a denominator inside of the `checkInputs` function.  Because of this, if `touchMoveSensibility` was zero, it'd create a divide by zero scenario that would effectively render the camera's `cameraDirection` vector to be a vector of NaNs.  The fix for this was to just add a check to see if `touchMoveSensibility` was zero and handle things accordingly.\r\n\r\nForum link: https://forum.babylonjs.com/t/keyboard-control-not-working-for-latest-universalcamera-in-desktop-safari/31314",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12644",
                "title": "Fixed GPU Gems URL in API docs",
                "description": "The URL was broken, so I changed it to a URL that seems to be correct.",
                "author": {
                    "name": "cx20",
                    "url": "https://github.com/cx20"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": [
                    "bug",
                    "documentation"
                ]
            },
            {
                "pr": "12642",
                "title": "Material plugins: Allow group replacements in injected code when using regular expression",
                "description": "See https://forum.babylonjs.com/t/multiple-shadowgenerators-for-one-light-source/31236/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12640",
                "title": "Add custom attributes for material plugins",
                "description": "Allow material plugins to implement the method getAttributes which pushes the plugin's attribute names onto the array passed to it, similar to the getSamplers function.\r\n\r\nForum discussion: https://forum.babylonjs.com/t/using-custom-attribute-with-material-plugin/31142/3\r\nTest PG: https://playground.babylonjs.com/#UIXTIF",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginEvent.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Misc/computePressure.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            }
        ],
        "5.10.0": [
            {
                "pr": "12622",
                "title": "Disallow users to change the frame of the first key, ensuring that th…",
                "description": "…ere is always a frame at 0. It was already not possible to drag the first frame outside of 0, but this covers the top bar input.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/controls/textInputComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/rangeFrameBarComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/scss/curveEditor.scss",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/topBarComponent.tsx"
                ],
                "tags": []
            }
        ],
        "5.9.1": [
            {
                "pr": "12638",
                "title": "Add a catch",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/computePressure.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12637",
                "title": "Fix pointer hover on descendant controls when action manager is recursive",
                "description": "Related forum issue: https://forum.babylonjs.com/t/hovercursor-does-not-change-when-hovering-child-elements/31104\r\nPlayground: https://playground.babylonjs.com/#68S8IM",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12636",
                "title": "Support for extracting bloom highlights with luminance >1",
                "description": "This is useful for HDR bloom, where the desired, exposed luminance threshold could be greater than 1.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/extractHighlights.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12613",
                "title": "No need to clear (depth) in utility layer",
                "description": "This scene fails when in XR:\n\nhttps://playground.babylonjs.com/#HJZBRG#253\n\nForum reference - https://forum.babylonjs.com/t/button3d-in-vr-is-rendered-on-top-of-everything/30772\n\nI am not 100% sure why it was needed until now, so I am going to wait for reviews first before merging this.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Rendering/utilityLayerRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12632",
                "title": "Serialize iridescene in PBR materials",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12635",
                "title": "Fix where canvas could have a blue highlight effect on tap.",
                "description": "For #12634.\r\n\r\nAdded a line to also disable the webkitTapHighlight when touch actions are disabled.",
                "author": {
                    "name": "saaratrix",
                    "url": "https://github.com/saaratrix"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12633",
                "title": "Added ```setQuaternion``` to ```Effect```",
                "description": "I'm back with more Quaternion's stuff.\r\n\r\nI added ```setQuaternion``` to the Effect class.\r\n\r\nI updated the different pipeline contexts versions to make it possible to set a quaternion as a uniform variable in a shader.\r\nI created a IQuaternionLike interface, though it is the same as IVector4Like I think it makes the code easier to understand and read with this interface.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Engines/IPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Maths/math.like.ts"
                ],
                "tags": []
            },
            {
                "pr": "12629",
                "title": "Force createGlobalSubmesh in Mesh.SetVerticesData if Mesh is Unindexed",
                "description": "This a a fix for the bug reported in the forum here : https://forum.babylonjs.com/t/bug-when-calling-setverticesdata-on-a-unindexed-mesh/31009\r\n\r\nrepro here : https://www.babylonjs-playground.com/#JX7SUF",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Meshes/geometry.ts"
                ],
                "tags": []
            }
        ],
        "5.9.0": [
            {
                "pr": "12624",
                "title": "Fix NME dialog box styling",
                "description": "The dialog box styling wasn't being applied because of the class scope",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/main.scss"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12623",
                "title": "Fix Lines vertex alpha",
                "description": "https://forum.babylonjs.com/t/alpha-color-not-working-in-line-system-anymore/30947/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Meshes/linesMesh.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12617",
                "title": "Fix JPEG environment texture",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/materials/readme.md"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12625",
                "title": "Improve CheckIsReady in scene",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12618",
                "title": "Enable iridescence map in MRDL backplate material",
                "description": "Simple fix, visually pleasing results\r\n![ezgif-3-4fa4eb9834](https://user-images.githubusercontent.com/4724014/171300738-97774c1e-bd8c-43d9-aad4-7ce79fdba313.gif)\r\n",
                "author": {
                    "name": "rgerd",
                    "url": "https://github.com/rgerd"
                },
                "files": [
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackplateMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12598",
                "title": "Added a few methods to Quaternion and Vector3",
                "description": "I noticed there was a few useful methods not implemented regarding transformations of Vector3 by Quaternions.\r\n\r\n# Here is what I added :\r\n\r\n ## Quaternion\r\n\r\n- added ```subtractInPlace```\r\n- added ```invertInPlace```\r\n- added ```invert```\r\n- added ```normalizeToNew```\r\n- added ```lengthSquared```\r\n\r\n## Vector3\r\n\r\n- added ```applyRotationQuaternionToRef```\r\n- added ```applyRotationQuaternionInPlace```\r\n- added ```applyRotationQuaternion```\r\n\r\n## Other\r\n\r\n- Removed a few repetitions",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    ".gitignore",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12620",
                "title": "deprecate action manager array in scene",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/abstractScene.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12616",
                "title": "added postinstall script to \"babylonjs\"",
                "description": "These lines will be presented to anyone installing \"bbylonjs\" package (umd).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/umd/babylonjs/package.json",
                    "packages/public/umd/babylonjs/readme.md",
                    "packages/public/umd/babylonjs/scripts/postinstall.js"
                ],
                "tags": []
            },
            {
                "pr": "12621",
                "title": "Scene.multiPickWithRay signature correction",
                "description": "Fixes #12614",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12563",
                "title": "Removed IE support. It was long overdue ;)",
                "description": "Fix #12324 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/basisTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/ddsTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/envTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/hdrTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/ktxTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/tgaTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/deepCopier.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Misc/promise.ts",
                    "packages/dev/core/src/Misc/reflector.ts",
                    "packages/dev/core/src/Misc/sliceTools.ts",
                    "packages/dev/core/src/Misc/stringTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Particles/solidParticleSystem.ts",
                    "packages/dev/core/src/Rendering/edgesRenderer.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Misc/babylon.promise.test.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/tools/sandbox/src/components/reflectorZone.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx",
                    "packages/tools/viewer/src/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "12607",
                "title": "Grid children disappear once linked mesh is outside view",
                "description": "Fixes #12602\nThis forces resetting the clipping state of children when their matrix is set as dirty.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12609",
                "title": "Fix registerInstancedBuffer after Mesh creation",
                "description": "https://forum.babylonjs.com/t/disappearing-mesh-material-on-registerinstancedbuffer-and-instancedbuffers/30868",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Lights/shadowLight.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12612",
                "title": "Added forcedExtension option to textur creation",
                "description": "If the texture url does not contain any file extensoin (e.g. object url) we should be able to force the extension. Otherwise compressed textures like -dxt.ktx cannot be loaded.\r\nhttps://forum.babylonjs.com/t/loading-compressed-textures-from-object-url/30861",
                "author": {
                    "name": "MBecherKurz",
                    "url": "https://github.com/MBecherKurz"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "12590",
                "title": "Move frame bar on ACE to the top of the window",
                "description": "Previous:\r\n![image](https://user-images.githubusercontent.com/6002144/170536466-5e60d953-bea3-4ebc-ab42-30ef6100275a.png)\r\nWith the PR:\r\n![image](https://user-images.githubusercontent.com/6002144/170536574-e4784010-6794-4ca8-86a6-bd74ccd96c86.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/context.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/canvasComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/playHeadComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/rangeFrameBarComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/scss/canvas.scss"
                ],
                "tags": []
            },
            {
                "pr": "12604",
                "title": "WebGPU: Allow running the standard viz tests with WebGPU",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/tests/test/visualization/visualization.webgpu.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12608",
                "title": "test all packages in modules test",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/src/sceneWithInspector.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "5.8.2": [
            {
                "pr": "12605",
                "title": "Point Cloud System: Add getters",
                "description": "It can come in handy to get the position/colors/uvs of the particles generated by the point cloud system so I have added some getters.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/pointsCloudSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "12603",
                "title": "Small fixes for gizmo and navigation",
                "description": "Small fixes for https://forum.babylonjs.com/t/pointlight-withouth-direction/30262/5\r\nhttps://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/48\r\nand\r\nhttps://forum.babylonjs.com/t/error-calling-getcorners-for-a-crowd-agents-path/30526",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.8.1": [
            {
                "pr": "12523",
                "title": "Add new prepass to compute the specularity-glossiness map whatever the material type",
                "description": "This is the PR following this issue:\r\nhttps://forum.babylonjs.com/t/prepass-get-accurate-reflectance-information/30351\r\n\r\nThe aim is to compute reflectance and glossiness information whatever the material type (standard, PBR, PBR Specular-Glossiness, PBR Metallic-Roughness). The architecture is based on the other PrePasses. The translation model from Metallic-Roughness to Specular-Glossiness is based on: https://marmoset.co/posts/pbr-texture-conversion.",
                "author": {
                    "name": "Mannns",
                    "url": "https://github.com/Mannns"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx",
                    "packages/dev/core/src/Shaders/geometry.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12601",
                "title": "Add missing observer trigger - onLoadedObservable notify method for hdrCubeTexture",
                "description": "I found a minor issue during loading textures through `add task` of `asset manager`\r\nwhen I try to load the same texture files several times for different purposes, `cubeTextureTask` can be finished normally but `hdrCubeTextureTask` can't be finished even though it has been already finished\r\n\r\n* this playground can show task count on `console`\r\nhttps://playground.babylonjs.com/#M5L9FH\r\n\r\nSo, I have debugged and I found the creating function of hdrTexture has lost the `load observable notify` method that is included in the `creating function of cubeTexture`\r\n\r\n- `engine.cubeTexture.ts` \r\n<img width=\"385\" alt=\"스크린샷 2022-05-30 오후 3 57 43\" src=\"https://user-images.githubusercontent.com/70849655/170935258-89b47f42-e6a3-4366-bde0-003f602b558e.png\">\r\n<img width=\"473\" alt=\"스크린샷 2022-05-30 오후 3 57 36\" src=\"https://user-images.githubusercontent.com/70849655/170935273-108c1e51-48bf-4190-bcec-a38084b0ddb2.png\">\r\n\r\n- `engine.rawTexture.ts`\r\n<img width=\"820\" alt=\"스크린샷 2022-05-30 오후 3 57 57\" src=\"https://user-images.githubusercontent.com/70849655/170935403-edc25ad8-6a49-417f-bf9b-f6a6d9a0fbfd.png\">\r\n<img width=\"452\" alt=\"스크린샷 2022-05-30 오후 3 59 26\" src=\"https://user-images.githubusercontent.com/70849655/170935417-11a8b868-e752-4451-982f-4e99ad92b7c1.png\">\r\n\r\nI add above code in `raw texture` and then it worked well\r\n![스크린샷 2022-05-30 오후 4 06 10](https://user-images.githubusercontent.com/70849655/170936119-0438806d-e447-4027-ab92-7540e4c3c65e.png)\r\n",
                "author": {
                    "name": "slash9494",
                    "url": "https://github.com/slash9494"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12596",
                "title": "remove private variables from WebGPU declaration",
                "description": "The reason behind this is the documentation page that fails compilation because of this error:\r\n\r\n```\r\n Class 'GPUOutOfMemoryError' incorrectly implements class 'GPUError'. Did you mean to extend 'GPUError' and inherit its members as a subclass?\r\n  Types have separate declarations of a private property '__brand'.\r\nError: C:/Users/raweber/Documents/GitHub/Documentation/.temp/docdirectory/doc.d.ts(97057)\r\n Class 'GPUValidationError' incorrectly implements class 'GPUError'. Did you mean to extend 'GPUError' and inherit its members as a subclass?\r\n  Types have separate declarations of a private property '__brand'.\r\n```\r\n\r\nThe reason for the error is probably an older version of typedoc (work is being done to update that), which uses an older version of typescript to analyze the file.\r\n\r\nAs this private variable is not being used anywhere in the code I took delibery of suggesting to remove it, but I will wait for @Popov72 to approve this PR before merging",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12495",
                "title": "GLTFSerializer : Ext mesh gpu instancing",
                "description": "Add support to EXT_mesh_gpu_instancing to Babylon GLTF Serializer.\r\nThin instances are used to save transformation into GLTF buffer.\r\nThis extension is NOT official and not supported yet by many viewer. This may be used with caution while terminology between Local Transformation and World transformation are not consistent beetwen this Extension and the babylon Thin instances.\r\nTest has been conducted sucessfully with playground and sandbox, using respectively coding samples and imported gltf sample.\r\nThe main sample used was the \"official\" [gltf sample](https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/samples/teapots_galore)\r\nAlso add Visualization test.\r\nNote - deleted previous PR for configuration issues.",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporterExtension.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/glTFSerializerKhrGpuInstancing.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12597",
                "title": "Fix render frame identification issue with instances",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12595",
                "title": "Fix `AssetManager` `addTextureTask` resolving with `task.texture === undefined` when using `NullEngine`",
                "description": "This PR is a follow up on https://forum.babylonjs.com/t/using-assetsmanager-with-nullengine-to-load-textures/8758",
                "author": {
                    "name": "alvov-evo",
                    "url": "https://github.com/alvov-evo"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/test/unit/Misc/babylon.assetsManager.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12524",
                "title": "InputManager: Fix Picking on PointerUp and add bool to skip pointerup picking",
                "description": "Recently on the forums ([forum post](https://forum.babylonjs.com/t/no-api-to-disable-mesh-picking-for-some-buttons-and-keep-onpointerobservable/29887)), there was a user who found an issue with the pointerUpPredicate not being used by the InputManager properly.  When a dummy predicate was used (`() => false`), there was still a pickedmesh/point in the pickInfo object.  This PR does a couple of things:\r\n- Fix for the picking logic to use the `pointerUpPredicate` and actually call `scene.pick`\r\n- Add a boolean to scene that allows the user to skip picking on pointerup (same as move and down)",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12592",
                "title": "Make scene param optional for NodeMaterial.ParseFromSnippetAsync",
                "description": "Make scene param optional for NodeMaterial.ParseFromSnippetAsync\r\n\r\nForum: https://forum.babylonjs.com/t/make-scene-param-optional-for-nodematerial-parsefromsnippetasync/30747/7",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12594",
                "title": "fix memory leak",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": []
            },
            {
                "pr": "12589",
                "title": "WebGPU: fix typescript",
                "description": "See https://forum.babylonjs.com/t/gpuoutofmemoryerror-and-gpuvalidationerror-error-with-latest-5-8-0-release/30755",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12587",
                "title": "Fix readme.md CDN notes",
                "description": null,
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "readme.md"
                ],
                "tags": []
            },
            {
                "pr": "12579",
                "title": "make sure to watch changes in the assets lib",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.8.0": [
            {
                "pr": "12588",
                "title": "minor improvements to `toEulerAnglesTo()`",
                "description": "- Reuse `zAxisY` to avoid unnecessary arithmetic\r\n- Moved some constants inside of the branch where they are used\r\n\r\nForum post: https://forum.babylonjs.com/t/some-tweaks-toeuleranglestoref/30738",
                "author": {
                    "name": "nmrugg",
                    "url": "https://github.com/nmrugg"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12586",
                "title": "DeviceInputSystem: Add check for matchMedia in WebDeviceInputSystem",
                "description": "A user in the forum recently found an issue where the error `matchMedia is not defined` was occurring in an offscreen canvas.  Because the offscreen canvas was in a worker thread, it had no context of the `Window` interface and the `matchMedia` function.  This PR will add a check in the `WebDeviceInputSystem` to verify the existence of this function before attempting to execute it.\r\n\r\nForum Link: https://forum.babylonjs.com/t/offscreen-canvas-matchmedia/30682/10",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12585",
                "title": "Fix memoryleak",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders",
                    "memory leak"
                ]
            },
            {
                "pr": "12584",
                "title": "Add missing interpolation to glTF animation key targeting weights",
                "description": "See https://forum.babylonjs.com/t/gltf-loader-animation-path-weights-ignores-step-interpolation/30719",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12565",
                "title": "Change glTF skinned mesh reference to a callback",
                "description": "See https://forum.babylonjs.com/t/converting-circular-structure-to-json/30641",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12564",
                "title": "Fix ThinEngine.updateDynamicIndexBuffer",
                "description": "This is to fix a bug we ran into.\r\n\r\nTo repro :\r\n- at creation time, provide a mesh with indices of type `Array<number>`  => if all the indies are below 65535, the `Array<number>` is normallized into an `UInt16Array` in `ThinEngine._normalizeIndexData`\r\n\r\n- call `Mesh.updateIndices` with a `UInt32Array` => instead of converting to `UInt16Array` as if a `Array<number>` had been passed, the `UInt32Array` is forwarded to WebGL, leading to wrong indexing.\r\n\r\n",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.dynamicBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.dynamicBuffer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12574",
                "title": "Add default formatter as prettier",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    ".vscode/settings.json"
                ],
                "tags": []
            },
            {
                "pr": "12567",
                "title": "Add sRGB handling for ETC texture formats",
                "description": "Because ETC2 is an extension of ETC1, we should also be able to use the ETC2 sRGB format when sRGB is requested for an ETC1 texture.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12551",
                "title": "Add warning to Bounding Box Gizmo",
                "description": "Related issue: https://forum.babylonjs.com/t/is-that-the-attachednode-setter-wrong/30473/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12571",
                "title": "Check if document is available before accessing it",
                "description": "##  Description\r\n\r\nHi,\r\n\r\nIn `ThinEngine` the `getHostDocument` method is not react-native \"safe\", when accessed from a react-native application, we try to access `document` without checking that it exists first, thus causing the app to crash.\r\n\r\n## Repro\r\n\r\nTo repro the issue, all you need is to create a `FollowCamera` and make it follow a target.\r\nI got this issue to repro by using this code in an Expo environment:\r\n\r\n```ts\r\n function initGame(gl: ExpoWebGLRenderingContext) {\r\n  const engine = new Engine(gl, true, {}, false);\r\n\r\n  const scene = new Scene(engine);\r\n  // Our built-in 'box' shape. Params: name, size, scene\r\n  const box = MeshBuilder.CreateBox(\"box\", { size: 2 }, scene);\r\n\r\n  new FollowCamera(\"ArcRotateCamera\", new Vector3(2, 0, 0), scene, box);\r\n  const light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\r\n\r\n  // Default intensity is 1. Let's dim the light a small amount\r\n  light.intensity = 0.7;\r\n\r\n  scene.registerBeforeRender(() => {\r\n    if (this.updatePan) {\r\n      (scene.activeCamera as any).alpha -= this._translateX / 6000;\r\n      (scene.activeCamera as any).beta -= this._translateY / 6000;\r\n    }\r\n    if (this.updatePinch) {\r\n      (scene.activeCamera as any).radius -= this._scale * 60;\r\n    }\r\n\r\n    gl.endFrameEXP();\r\n  });\r\n\r\n  engine.runRenderLoop(() => {\r\n    if (scene) {\r\n      scene.render();\r\n    }\r\n  });\r\n}\r\n\r\n```\r\n\r\n## Cause\r\n\r\nWhat happens here is that at some point, the `Effect` class (packages/dev/core/src/Materials/effect.ts) will try to access the host document by only checking if `IsWindowObjectExist` returns true:\r\n\r\n```ts\r\nconst hostDocument = IsWindowObjectExist() ? this._engine.getHostDocument() : null;\r\n```\r\n\r\nThis issue is, in this react-native context `window` will exist but not `document`, leading to this issue.\r\n\r\n## Fix\r\n\r\nTo fix this,  I added a check in `getHostDocument` to make sure that `document` actually exist before returning it. If it doesn't, I simply return `null`.\r\n\r\nThis is my first PR in this repo, please let me know if I forgot anything.",
                "author": {
                    "name": "antoine-gannat",
                    "url": "https://github.com/antoine-gannat"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12572",
                "title": "PBR refractionIntensityTexture in the inspector",
                "description": "https://forum.babylonjs.com/t/refractionintensitytexture-is-not-being-displayed-in-the-inspector/30697",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "12570",
                "title": "Prevent calling stop recursively",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/src/model/modelAnimation.ts"
                ],
                "tags": []
            },
            {
                "pr": "12569",
                "title": "WebGPU: Synchronize with spec",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12562",
                "title": "Fix prepass view uniform",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/defaultFragmentDeclaration.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12525",
                "title": "Initial storybook setup",
                "description": "Initial PR to create a storybook with a few simple components. Mainly wanting to verify the architecture makes sense. Takes advantage of some nice features of CSS loader, like :local scopes rules and composition (importing classes from other CSS files).\r\n\r\nComponents right now:\r\n1. Toggle\r\n2. Label\r\n3. Button\r\n\r\nNOT IN THIS PR:\r\n- Snapshots\r\n- Jest testing",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/sharedUiComponents/.storybook/main.js",
                    "packages/dev/sharedUiComponents/.storybook/preview.js",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/dev/sharedUiComponents/readme.md",
                    "packages/dev/sharedUiComponents/src/components/Button.scss",
                    "packages/dev/sharedUiComponents/src/components/Button.tsx",
                    "packages/dev/sharedUiComponents/src/components/Colors.scss",
                    "packages/dev/sharedUiComponents/src/components/Fonts.scss",
                    "packages/dev/sharedUiComponents/src/components/Icon.scss",
                    "packages/dev/sharedUiComponents/src/components/Icon.tsx",
                    "packages/dev/sharedUiComponents/src/components/Label.scss",
                    "packages/dev/sharedUiComponents/src/components/Label.tsx",
                    "packages/dev/sharedUiComponents/src/components/Toggle.scss",
                    "packages/dev/sharedUiComponents/src/components/Toggle.tsx",
                    "packages/dev/sharedUiComponents/src/components/classNames.ts",
                    "packages/dev/sharedUiComponents/src/scssDeclaration.d.ts",
                    "packages/dev/sharedUiComponents/src/stories/Button.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Icon.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Introduction.stories.mdx",
                    "packages/dev/sharedUiComponents/src/stories/Label.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Toggle.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/assets/code-brackets.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/colors.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/comments.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/direction.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/flow.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/plugin.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/repo.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/stackalt.svg"
                ],
                "tags": [
                    "tools"
                ]
            },
            {
                "pr": "12561",
                "title": "Make setMaterialForRenderPass call resetDrawCache",
                "description": "Make setMaterialForRenderPass call resetDrawCache to prevent the error when switching e.g. between StandardMaterial and NodeMaterial.\r\n\r\nForum: https://forum.babylonjs.com/t/need-to-call-resetdrawcache-before-setmaterialforrendering/30642",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12559",
                "title": "Make Mesh.increaseVertices() work without uvs or normals; set default…",
                "description": "… additional vertex per edge to 1 (as per doc).\r\n\r\nPR discussed [here](https://forum.babylonjs.com/t/possibility-to-use-mesh-increasevertices-on-custom-meshes-without-vertexdata-uvs/30090).\r\n\r\nI took the liberty of also allowing the use of `Mesh.increaseVertices()` on meshes with no normals. (Only uv-less meshes were discussed on the forum.) I hope that's OK.",
                "author": {
                    "name": "OptiStrat",
                    "url": "https://github.com/OptiStrat"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12557",
                "title": "Fix return type for CreateGround",
                "description": "Just noticed that the return type for CreateGround is Mesh but it should be GroundMesh. :)",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12560",
                "title": "Fix warning when cloning with instanced mesh",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12555",
                "title": "Fix Instances Color Alpha",
                "description": "https://forum.babylonjs.com/t/different-transparency-while-using-thin-instances/30574\r\n\r\nThe main issue is that instances color alpha value were not used with if vertex colors were not defined.\r\n\r\nThis playground can be tested on the snapshot once available: https://playground.babylonjs.com/#8L50Q3#129",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/vertexColorMixing.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/materials/src/cell/cell.fragment.fx",
                    "packages/dev/materials/src/fire/fire.fragment.fx",
                    "packages/dev/materials/src/fur/fur.fragment.fx",
                    "packages/dev/materials/src/gradient/gradient.fragment.fx",
                    "packages/dev/materials/src/lava/lava.fragment.fx",
                    "packages/dev/materials/src/mix/mix.fragment.fx",
                    "packages/dev/materials/src/simple/simple.fragment.fx",
                    "packages/dev/materials/src/sky/sky.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.fragment.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.fragment.fx",
                    "packages/dev/materials/src/water/water.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12553",
                "title": "Add sRGB option to 2D RawTexture",
                "description": null,
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/rawTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12556",
                "title": "Allow HDR texture types in DepthOfFieldBlurPostProcess",
                "description": "This increases the quality of the depth of field effect (note the banding in the before image below), but it comes with a slight perf cost since the intermediate blur textures are now an HDR texture format instead of RGBA8.\r\n\r\n![image](https://user-images.githubusercontent.com/20366429/169629876-195e808a-3359-40dd-96c3-27ab76bb965c.png)\r\n",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/depthOfFieldBlurPostProcess.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12550",
                "title": "Fix abstractMesh scaling overloads",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12552",
                "title": "if pick exists, make sure to return it",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts"
                ],
                "tags": []
            },
            {
                "pr": "12548",
                "title": "Add param skipBuild when parsing node material",
                "description": "Add parameter skipBuild to NodeMaterial functions ParseFromFileAsync and ParseFromSnippetAsync\r\nhttps://forum.babylonjs.com/t/parsefromsnippetasync-option-to-skip-build/30544",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12547",
                "title": "Fix nme tangents back compat and instance color",
                "description": "https://forum.babylonjs.com/t/how-to-make-nme-material-for-thin-instances-with-color-attribute/30469/11",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/loaders/src/OBJ/solidParser.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/diagram/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12537",
                "title": "fix wheel behaviour and overscroll",
                "description": "- fix #12536\r\n- disable horizontal scroll (handle return back/next page)\r\n- fix page overscroll\r\n\r\n<br/>\r\n\r\nB E F O R E\r\n![ezgif-2-d49c4d843b](https://user-images.githubusercontent.com/28831375/168671077-44c9ecbf-eb1d-4a69-a3c4-da9fe5fe09a2.gif)\r\n\r\nA F T E R\r\n![ezgif-2-6eac051240](https://user-images.githubusercontent.com/28831375/168673574-1bf514de-c0cf-4c4d-9af3-4effa334c546.gif)\r\n\r\n",
                "author": {
                    "name": "3GOMESz",
                    "url": "https://github.com/3GOMESz"
                },
                "files": [
                    "packages/tools/nodeEditor/public/index.html",
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": []
            }
        ],
        "5.7.0": [
            {
                "pr": "12546",
                "title": "Problems loading .obj with groups.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "12539",
                "title": "Fix ClearCoat Refraction V direction",
                "description": "https://forum.babylonjs.com/t/clear-coat-shader-compute-question/30440/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockClearcoat.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12541",
                "title": "Fixed Logic for FreeCameraTouchInput to properly detect when input is mouse input",
                "description": "A user in the forums found that there was no touch input working with the universal camera, which uses FreeCameraTouchInput as part of its attached inputs.  Upon closer inspection, it was determined that the logic that was used to detect if the input was from a mouse or not was incorrect.  It originally said that if the browser was a not from mobile browser and if the event was an instance of MouseEvent, that it was from the mouse.  The new logic just checks the pointer type and uses that, which is a much more reliable method and also works with touch devices using non-mobile browsers.\r\n\r\nForum Link: https://forum.babylonjs.com/t/guys-i-got-a-problem-with-on-some-android-pad-cant-use-universalcamera-to-move-on-touch/30448/3",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "12512",
                "title": "Add custom word divider for TextBlock",
                "description": "Some languages such as Japanese and Chinese has no \"word divider\" (the character between words).\r\nCurrently, when rendering Japanese in TextBlock, an unnecessary space is inserted between words.\r\njsfiddle: [https://jsfiddle.net/3ph9m0cx/](https://jsfiddle.net/3ph9m0cx/)\r\n\r\nThis PR makes it customizable.\r\nIn case of Japanese, setting `wordDivider = \"\"` resolves it.",
                "author": {
                    "name": "miudit",
                    "url": "https://github.com/miudit"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12540",
                "title": "remove remaining www.babylonjs.com references",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12532",
                "title": "Add modules compilation",
                "description": "This PR adds modules compilation using es6 syntax. It also adds module-file-size test that will run against the snapshot on every PR to make sure no extra code is being added and that tree shaking is still running correctly.\n\nNote that the CI needs to be changed in order for that to work correctly so mering this PR is only half of the solution.\n\nFixes #12350",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/prepareSnapshot.ts",
                    "packages/tools/guiEditor/package.json",
                    "packages/tools/nodeEditor/package.json",
                    "packages/tools/tests/package.json",
                    "packages/tools/tests/scripts/generateFileSizes.js",
                    "packages/tools/tests/src/engineOnly.ts",
                    "packages/tools/tests/src/minGridMaterial.ts",
                    "packages/tools/tests/src/minStandardMaterial.ts",
                    "packages/tools/tests/src/sceneOnly.ts",
                    "packages/tools/tests/src/sceneWithInspector.ts",
                    "packages/tools/tests/src/thinEngineOnly.ts",
                    "packages/tools/tests/test/unit/moduleFileSize.test.ts",
                    "packages/tools/tests/test/unit/packageSizeBaseline.json",
                    "packages/tools/tests/tsconfig.build.json",
                    "packages/tools/tests/tsconfig.json",
                    "packages/tools/tests/webpack.config.js",
                    "packages/tools/viewer/README-ES6.md",
                    "packages/tools/viewer/README.md",
                    "packages/tools/viewer/tests/commons/boot.ts",
                    "packages/tools/viewer/tests/commons/helper.ts",
                    "packages/tools/viewer/tests/commons/mockWebGL.ts",
                    "packages/tools/viewer/tests/karma.conf.js",
                    "packages/tools/viewer/tests/unit/src/configuration/loader.ts",
                    "packages/tools/viewer/tests/unit/src/configuration/mappers.ts",
                    "packages/tools/viewer/tests/unit/src/configuration/updateConfiguration.ts",
                    "packages/tools/viewer/tests/unit/src/helper.ts",
                    "packages/tools/viewer/tests/unit/src/index.ts",
                    "packages/tools/viewer/tests/unit/src/viewer/sceneManager.ts",
                    "packages/tools/viewer/tests/unit/src/viewer/viewer.ts",
                    "packages/tools/viewer/tests/unit/src/viewer/viewerManager.ts",
                    "packages/tools/viewer/tests/unit/src/viewerReference.ts",
                    "packages/tools/viewer/tests/unit/tsconfig.json",
                    "packages/tools/viewer/tests/unit/webpack.config.js",
                    "packages/tools/viewer/tests/validation/LogoV3.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/BrainStem.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/BrainStemEnv.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/BrainStemTransformation.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraContrast0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraContrast1.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraExposure0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraExposure1.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Control.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/ControlDefault.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Diffuse.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Emissive.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv0-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv0-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv0-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv100-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv100-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv100-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv50-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv50-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv50-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv0-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv0-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv0-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv100-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv100-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv100-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv50-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv50-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv50-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Transparency.png",
                    "packages/tools/viewer/tests/validation/config.json",
                    "packages/tools/viewer/tests/validation/index.css",
                    "packages/tools/viewer/tests/validation/index.html",
                    "packages/tools/viewer/tests/validation/integration.js",
                    "packages/tools/viewer/tests/validation/karma.conf.browserstack.js",
                    "packages/tools/viewer/tests/validation/karma.conf.js",
                    "packages/tools/viewer/tests/validation/loading.gif",
                    "packages/tools/viewer/tests/validation/validate.html",
                    "packages/tools/viewer/tests/validation/validation.js"
                ],
                "tags": []
            }
        ],
        "5.6.1": [
            {
                "pr": "12538",
                "title": "More fix for glTF loader skinning code",
                "description": "Previous code still had some weird issues as pointed out by the forum: https://forum.babylonjs.com/t/assetcontainer-dispose-throws-typeerror-r-metadata-is-null/30360/9",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12534",
                "title": "Add Safari 15.4 to Exception list",
                "description": "This adds two regexp to the exception list, setting antialia off and maxMSAASamples to 1 on safari 15.4 browsers.\nIt ain't pretty. But it'll fix a lot of issues with this version of safari.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12509",
                "title": "Add a warning when using ignored options with Dashed Lines update.",
                "description": "From: https://forum.babylonjs.com/t/dashed-line-not-correctly-updated/29250 this is to make the behavior clearer to users.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts"
                ],
                "tags": [
                    "documentation"
                ]
            },
            {
                "pr": "12515",
                "title": "Exposed Native Engine capabilities to Babylon.js, fixes morph targets on Babylon Native Android",
                "description": "## Overview\r\n\r\nMorph targets are currently failing on Babylon Native when running on Android since bgfx does not support Texture2D arrays for Android API BGFX_CONFIG_RENDERER_OPENGLES lower than 31 (currently set to 30). The appropriate way of handling this type of problem would be to check bgfx capabilities and handle it appropriately on the JS side by setting ```canUseTextureForTargets``` property at ```MorphTargetManager```. This PR exposes all capabilities info provided by the Native Engine so they can be accessed by the js NativeEngine and appropriately handled by Babylon.js \r\n\r\n## Aditions\r\n\r\n- Exposed Native engine caps to javascript. \r\n- After this PR gets merged the following [Babylon Native PR](https://github.com/BabylonJS/BabylonNative/pull/1075) can be merged.\r\n- Fixes [Android Morph Targets](https://github.com/BabylonJS/BabylonNative/issues/1049) issue on Babylon Native.  ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Morph/morphTargetManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12533",
                "title": "Fix inspector not working after download",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/scene.ts",
                    "packages/tools/playground/src/tools/downloadManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12529",
                "title": "Fix SubMesh IsGlobal",
                "description": "Currently IsGlobal returns true if the subMesh has all the vertices of the mesh but it should check if the subMesh also has all the indices of the mesh IMO.\r\n\r\nBecause otherwise the mesh's full bounding info is returned by getBoundingInfo when the subMesh has all the vertices **but only some of the indices** of the whole mesh. E.G. the subMeshes created by CreateTiledGround, which shouldn't return the bounding info for the whole mesh but currently are.\r\n\r\nForum discussion w/ test PGs: https://forum.babylonjs.com/t/find-or-define-center-point-of-submesh/30400/3",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/subMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12530",
                "title": "Fix doc for property \"bloomThreshold\"",
                "description": "Fix the documentation for the property [bloomThreshold](https://doc.babylonjs.com/typedoc/classes/babylon.defaultrenderingpipeline#bloomthreshold) to be the same as the documentation for the [BloomEffect property](https://doc.babylonjs.com/typedoc/classes/babylon.bloomeffect#threshold) that it wraps. Currently the documentation is mistakenly copied from the documentation for the [weight](https://doc.babylonjs.com/typedoc/classes/babylon.bloomeffect#weight) property.\r\n\r\nhttps://forum.babylonjs.com/t/white-texture-seems-overexposure-if-open-bloom-post-process/30384/8",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts"
                ],
                "tags": []
            },
            {
                "pr": "12498",
                "title": "Add getNormalsData to AbstractMesh and refactor common part with getP…",
                "description": "…ositionData\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/how-to-get-vertex-normals-of-mesh-with-skeleton-morph/29959/12\r\n\r\nPlayground: playground.babylonjs.com/#SYQW69#1061",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12526",
                "title": "Fix a bug in glTF loader when loading skins",
                "description": "See https://forum.babylonjs.com/t/assetcontainer-dispose-throws-typeerror-r-metadata-is-null/30360",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12527",
                "title": "Fixed easing function links in API docs",
                "description": "Ref https://forum.babylonjs.com/t/the-easing-function-link-in-the-api-documentation-may-be-incorrect/30377",
                "author": {
                    "name": "cx20",
                    "url": "https://github.com/cx20"
                },
                "files": [
                    "packages/dev/core/src/Animations/easing.ts"
                ],
                "tags": []
            },
            {
                "pr": "12522",
                "title": "disable antialias in safari 15.4",
                "description": "Fixing #12507\n\nThis will match all ua strings that have both AppleWebKit and Safari, and has a reference to the version 15.4\n\nAmong others, the following were (positivly) tested:\n\n```\n// iOS 15.4.1 Chrome 101\nMozilla/5.0 (iPhone; CPU iPhone OS 15_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/101.0.4951.44 Mobile/15E148 Safari/604.1\n// iOS 15.4.1 Safari 15.4.1\nMozilla/5.0 (iPhone; CPU iPhone OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1\n\n// iPadOS 15.4.1 Chrome 101\nMozilla/5.0 (iPad; CPU OS 15_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/101.0.4951.44 Mobile/15E148 Safari/604.1\n// iPadOS 15.4.1 Safari 15.4.1\nMozilla/5.0 (iPad; CPU OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15H321 Safari/604.1\n\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Safari/605.1.15\n```",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12521",
                "title": "Fix Mirror Reflection in right handed system",
                "description": "https://forum.babylonjs.com/t/bugs-on-mirrortexture-caused-by-userighthandedsystem-true-flag/29474/7",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12520",
                "title": "Add a constant for the Snippet Server URL in all dev packages.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/tools/playground/src/globalState.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12519",
                "title": "Fix: NME TBNBlock world input doesn't work if connected to a vertex node",
                "description": "This fixes: https://forum.babylonjs.com/t/nme-tbnblock-world-input-doesnt-work-if-connected-to-another-vertex-node-block/30322\r\n\r\nWhole TNBBlock is switched to `Fragment` target type as it already kind of was. And moved to Fragment nodes folder where it now belongs.\r\n\r\nWith this fix in place Playground example [#VL1FPT#8](https://playground.babylonjs.com/#VL1FPT#8) should now work without a shader error.",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12516",
                "title": "Add sRGB option to MultiRenderTarget",
                "description": null,
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts"
                ],
                "tags": []
            },
            {
                "pr": "12518",
                "title": "Fix Scissor Doc",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/engineFactory.ts"
                ],
                "tags": [
                    "bug",
                    "documentation"
                ]
            }
        ],
        "5.6.0": [
            {
                "pr": "12517",
                "title": "switch to enum (instead of const-enum)",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12511",
                "title": "Plumb through useSRGBBuffer for _createInternalTexture.",
                "description": "This is a follow up change to #12486; A little more plumbing is required to get the useSRGBBuffer value applied to the texture format. With current logic, `fullOptions.useSRGBBuffer` is always undefined.\r\n",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12510",
                "title": "Make NME TBNBlock fragment compatible",
                "description": "Allows using fragment as well as vertex inputs with the TBNBlock node. This can for example be used to flip backface normals.\r\n\r\nThis change still works with vertex normal/tangent inputs, like this playground example: https://playground.babylonjs.com/#VL1FPT#5\r\n\r\nBut now it also works with fragment inputs, such as this Playground that flips backface normals and tangents and therefore rendering the backside correctly: https://playground.babylonjs.com/#VL1FPT#7\r\nThis one currently fails with `Uncaught (in promise) FrontFacingBlock must only be used in a fragment shader` error in the master branch but works with this PR change.",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/TBNBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12493",
                "title": "Fix NME Morph block with tangents",
                "description": "https://forum.babylonjs.com/t/nodematerial-renders-incorrectly-when-using-mesh-tangents/29784/12?u=sebavan",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12499",
                "title": "Fix PointerDragBehavior to account for button context, add button filter",
                "description": "This PR contains two changes to `PointerDragBehavior`.\r\n- When a mouse button is pressed to initiate a drag, the button is stored and only a `pointerup` event from that button can release the drag (except for detach and other non-input behaviors).\r\n- There is now an array of mouse buttons that are used to define what buttons are eligible to start a drag behavior.  This can be changed by the user (LMB, MMB, and RMB are set as defaults).\r\n\r\nTested on Chrome, Firefox, Edge, and Safari (MacOS only).",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "bug",
                    "enhancement"
                ]
            },
            {
                "pr": "12506",
                "title": "Add skinned mesh reference when loading glTF skins",
                "description": "See https://forum.babylonjs.com/t/gltf-parsing-is-creating-doubles-and-reparenting-meshes/30079",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12505",
                "title": "Fix BoundingBoxGizmo rotate incorrectly when using RightHand system.",
                "description": "This PR fix a bug of BoundingBoxGizmo. when scene.useRightHandedSystem = true, BoundingBoxGizmo rotate to opposite direction.\r\nRelated issue: [https://forum.babylonjs.com/t/bounding-box-gizmo-rotate-incorrectly-when-scene-is-using-right-hand-system/30206](url)\r\nPlayground: [https://playground.babylonjs.com/#SG9ZZB#15](url)",
                "author": {
                    "name": "gongsiyi123",
                    "url": "https://github.com/gongsiyi123"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12487",
                "title": "Still test disable meshes because gltf loaders them them on later",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.5.6": [
            {
                "pr": "12504",
                "title": "Fix a stupid bug",
                "description": "@RaananW can you generate a new release after that?\r\n\r\nthanks a ton",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12503",
                "title": "Skip modifications of babylon CDN web requests",
                "description": "When setting headers and loading files from our CDN, the CDN throws a 405 error and refuses to send the file.\nApart from making sure our CDN is configured correctly, we should also ignore modifications of web requests sent to either one of our CDNs. No headers should be sent to the CDNs, only simple GET (and OPTIONS) requests",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/webRequest.ts"
                ],
                "tags": []
            },
            {
                "pr": "12497",
                "title": "A couple of minor fixes",
                "description": "- Fix the PG link for Draco Compression doc comment as the path to the bin path changed in the glTF-Sample-Models repo.\r\n- Allow empty morph targets in the glTF loader (see [here](https://github.com/KhronosGroup/glTF/issues/2154#issuecomment-1116701277))",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12502",
                "title": "Fix ubo not of the right size when using material plugins",
                "description": "See https://forum.babylonjs.com/t/pluginmaterial-bug/30098\r\n\r\nTo fix the problem I simply generate a specific #define for each plugin and use this define in the vertex/fragment shaders when the plugin is used.\r\n\r\nI have also added a visualization test to test this case.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/materialPlugin.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12496",
                "title": "test tools initial support",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/test-tools/license.md",
                    "packages/public/@babylonjs/test-tools/package.json",
                    "packages/public/@babylonjs/test-tools/readme.md",
                    "packages/public/@babylonjs/test-tools/tsconfig.build.json",
                    "packages/public/@babylonjs/test-tools/tsconfig.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12501",
                "title": "allow skipping a PR in the changelog",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/generateChangelog.js"
                ],
                "tags": []
            },
            {
                "pr": "12489",
                "title": "GLTFSerializer : Prevent empty skin to export invalid GLTF",
                "description": "If for any reason, skeletons.length is corrupted, then exported GLTF was invalid. This is a very unlikely situation, but because of the public nature of the serializer, putting a guard in place is always usefull ",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "12480",
                "title": "fix viewer import from loaders",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/src/index.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12490",
                "title": "Changed rendering group for local axes to make them render on top.",
                "description": "Not sure this is the right way to do it, but it seems to do the trick.",
                "author": {
                    "name": "reimund",
                    "url": "https://github.com/reimund"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12494",
                "title": "NME Generate code has error on ColorMergerBlock",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/colorMergerBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12488",
                "title": "Add support for COMPRESSED_SRGB_S3TC_DXT1_EXT",
                "description": "If requesting sRGB for an ST3C **RGB** texture, the previous logic was using an sRGB + **ALPHA** format. This change will use RGB (no alpha) instead.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12486",
                "title": "Add creation of sRGB Render Targets",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureCreationOptions.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "12482",
                "title": "warning and checks for noimpostor children",
                "description": "fixes #12446 \r\n\r\n2 issues :\r\n- when creating impostor for children mesh, their impostor will effectively be created with the NoImpostor. So shapes are not available and you get the crash. I've added a check and log a warning\r\n- The correct way to debugdisplay impostor in this case is to do the call on the NoImpostor parent. But you have to provide a 2nd parameter or nothing appears. I've also added a warning in that particular case.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts"
                ],
                "tags": [
                    "bug",
                    "enhancement"
                ]
            },
            {
                "pr": "12485",
                "title": "Fixed wrong matrix used when creating local rotation axes.",
                "description": "Only the first bone got the correct orientation before this change, now the entire chain of rotations in taken into account.\r\n<img width=\"550\" alt=\"Screenshot 2022-05-05 at 21 41 15\" src=\"https://user-images.githubusercontent.com/83687/167014155-4b2f3de2-6ffb-40c9-bbc0-a459b100bf21.png\">\r\n\r\n",
                "author": {
                    "name": "reimund",
                    "url": "https://github.com/reimund"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12477",
                "title": "Optimize rendering to reuse material as much as possible",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingGroup.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12483",
                "title": "Antialias for Sarafi 15.4 is turned of per default.",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12475",
                "title": "reduce the call to dirty",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": []
            }
        ],
        "5.5.5": [
            {
                "pr": "12476",
                "title": "More perf improvements",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Rendering/renderingGroup.ts"
                ],
                "tags": []
            },
            {
                "pr": "12478",
                "title": "Make AbstractMesh props protected instead of private",
                "description": null,
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12472",
                "title": "Instance color mixing",
                "description": "Follow up https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492\r\n\r\nMixing color instances from thin instances and vertex colors from mesh.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/vertexColorMixing.fx",
                    "packages/dev/core/src/Shaders/color.vertex.fx",
                    "packages/dev/core/src/Shaders/default.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/materials/src/cell/cell.vertex.fx",
                    "packages/dev/materials/src/fire/fire.vertex.fx",
                    "packages/dev/materials/src/fur/fur.vertex.fx",
                    "packages/dev/materials/src/gradient/gradient.vertex.fx",
                    "packages/dev/materials/src/lava/lava.vertex.fx",
                    "packages/dev/materials/src/mix/mix.vertex.fx",
                    "packages/dev/materials/src/simple/simple.vertex.fx",
                    "packages/dev/materials/src/terrain/terrain.vertex.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx",
                    "packages/dev/materials/src/water/water.vertex.fx"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12479",
                "title": "typescript update, fix build",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/inspector/tsconfig.build.json",
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/nodeEditor/tsconfig.build.json",
                    "tsconfig.devpackages.json"
                ],
                "tags": []
            }
        ],
        "5.5.0": [
            {
                "pr": "12474",
                "title": "better isReadyCheck",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12473",
                "title": "remove prototype morph",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12469",
                "title": "Fix infinite recursion with glTF skeleton",
                "description": "See forum: https://forum.babylonjs.com/t/sandbox-cant-open-glb-file/29859\r\n\r\nThis fixes a bug where the parent of a node will be assigned to itself which causes the code to infinite recurse.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12461",
                "title": "Create a TBN NME node to handle tangent space orientation",
                "description": "https://forum.babylonjs.com/t/nodematerial-renders-incorrectly-when-using-mesh-tangents/29784/7",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/diagram/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12470",
                "title": "Tiny perf improvement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12463",
                "title": "fix default material init",
                "description": "If a mesh has no material the default material would initialize too late, not being applied correctly.\n\nThis PR fixes that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/src/viewer/defaultViewer.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12468",
                "title": "no plane update for axis gizmos",
                "description": "follow up https://forum.babylonjs.com/t/breaking-change-in-axisscalegizmo/4167/3\r\n\r\nAxis scale and axis drag gizmo used to update plane for pointerDragBehavior. This leads to instability when gizmo gets out of screen.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12458",
                "title": "Remove BABYLON namespace references in the Inspector",
                "description": "Fixes #12343\n\nThe build system now allows to set dependencies to both the es6 and the umd packages, so importing from gui-editor is enough",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureEditorComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/tools/devHost/webpack.config.js",
                    "packages/tools/guiEditor/src/guiEditor.ts",
                    "packages/tools/guiEditor/src/legacy/legacy.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12464",
                "title": "Nine patch overlap fix",
                "description": "https://forum.babylonjs.com/t/nine-patch-showing-gaps-with-alpha-png/29365/7\r\n\r\n![image](https://user-images.githubusercontent.com/1538857/166270139-4cf3bba8-3795-4828-8f41-982779757ec9.png)\r\nThe edges look weird because I edited it in photoshop before converting it to a blob for testing inline.  I have tested on firefox and brave that the interior artifacts are gone.",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12462",
                "title": "Add the possibility to pass forcedExtension for a serialized environment texture",
                "description": null,
                "author": {
                    "name": "ton-solutions",
                    "url": "https://github.com/ton-solutions"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12466",
                "title": "Fix light selection in Light Information Block",
                "description": "Forum issue: https://forum.babylonjs.com/t/nme-lightinformationblock-properties-cant-select-light-1-or-light-2/29888\r\n\r\nThe light property was correctly selected, but the options element wasn't updated.\r\nSimple NME example: https://nme.babylonjs.com/#KDHJPM",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/properties/lightInformationPropertyTabComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12467",
                "title": "Add feature testing to text metrics width",
                "description": "In between 4.2 and 5.0, we switched to calculating text width using the `actualBoundingBox` properties rather than the `width`. These properties are more accurate, but they are not available in older browsers. This means that text would no longer render correctly on older browsers.\r\n\r\nThe simple fix here is to add feature testing so that we fallback to using `width` if `actualBoundingBox` is not defined.\r\n\r\nSome playgrounds to demonstrate this:\r\nhttps://playground.babylonjs.com/#44KYLP\r\nhttps://playground.babylonjs.com/#XCPP9Y#1\r\n\r\nThese were previously broken on Chrome/73.0.3683.75 but will now render the text correctly.\r\n\r\nSee forum issue: https://forum.babylonjs.com/t/babylonjs-v5-0-and-chromium/29938",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12465",
                "title": "Missing null for First go to frame in Animation",
                "description": "Follow up https://forum.babylonjs.com/t/issue-animation-gotoframe/29493/3\r\n\r\n`_frameToSyncFromJump` for was null and was not used correctly for 1st go to frame. After the 1st go to frame, it's set to null and everything is fine.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12459",
                "title": "WebGPU: Fix terrain erosion visualization test",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/tests/test/visualization/webgpu.json"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12460",
                "title": "Fix GetAngleBetweenVectors precision issue",
                "description": "https://forum.babylonjs.com/t/need-some-help-with-vector/29865",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12433",
                "title": "Add backward compatibability for param kind to be \"color\" for thin instance methods",
                "description": "If kind \"color\" is passed to the function thinInstanceSetAttributeAt, it will be converted to \"instanceColor\", for back compat.\r\nForum: https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492/19\r\n\r\n(Update: added this back compat to all thin instance methods that accept param kind)",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12456",
                "title": "fix tsdoc and add an entry point to set improvementMode for SceneOpti…",
                "description": "…mizer",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/sceneOptimizer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12455",
                "title": "Save resources by not binding a color texture to a render target",
                "description": "This PR allows the user to indicate that the color texture should not be created/bound when creating a render target.\r\n\r\nIt's a waste of resources (a texture the size of the render target) if all you want is generating the depth buffer/texture and don't have anything to write in a color texture.\r\n\r\nHere's a PG to test it: https://playground.babylonjs.com/#0PYWXZ#1\r\n\r\nWith Spector, you will see that only the depth buffer is bound:\r\n![image](https://user-images.githubusercontent.com/4152247/165773484-5532cab3-989b-470e-8474-6dbdafe03b8e.png)\r\n\r\nWithout the PR, a color texture is also bound:\r\n![image](https://user-images.githubusercontent.com/4152247/165773612-9ef55b45-f03a-45be-af14-3d92cf15e5d5.png)\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBundleList.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuClearQuad.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuRenderPassWrapper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureCreationOptions.ts"
                ],
                "tags": []
            },
            {
                "pr": "12454",
                "title": "Fix PBR input textures typings.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12453",
                "title": "Bump ejs from 3.1.6 to 3.1.7",
                "description": "Bumps [ejs](https://github.com/mde/ejs) from 3.1.6 to 3.1.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mde/ejs/releases\">ejs's releases</a>.</em></p>\n<blockquote>\n<h2>v3.1.7</h2>\n<p>Version 3.1.7</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mde/ejs/commit/820855ad75034e303be82c482c5eb8c6616da5c5\"><code>820855a</code></a> Version 3.1.7</li>\n<li><a href=\"https://github.com/mde/ejs/commit/076dcb643c5aed2e10c2847639c98fd923b72854\"><code>076dcb6</code></a> Don't use template literal</li>\n<li><a href=\"https://github.com/mde/ejs/commit/faf8b849a4e46db21fa813a08a7cbe00256a188a\"><code>faf8b84</code></a> Skip test -- error message vary depending on JS runtime</li>\n<li><a href=\"https://github.com/mde/ejs/commit/c028c343c127859f7189c3feee1e5239c199fec9\"><code>c028c34</code></a> Update packages</li>\n<li><a href=\"https://github.com/mde/ejs/commit/e4180b4fa2dd0e06d811f2c155f9d993ee9d8edd\"><code>e4180b4</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/629\">#629</a> from markbrouwer96/main</li>\n<li><a href=\"https://github.com/mde/ejs/commit/d5404d6e68d64c165580d238e7562ea6532c2541\"><code>d5404d6</code></a> Updated jsdoc to 3.6.7</li>\n<li><a href=\"https://github.com/mde/ejs/commit/7b0845d6aab044d244e8ec3818f0f70d05ef13c1\"><code>7b0845d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/609\">#609</a> from mde/dependabot/npm_and_yarn/glob-parent-5.1.2</li>\n<li><a href=\"https://github.com/mde/ejs/commit/32fb8ee387383c67eaa5feff05347ef0504f3b15\"><code>32fb8ee</code></a> Bump glob-parent from 5.1.1 to 5.1.2</li>\n<li><a href=\"https://github.com/mde/ejs/commit/f21a9e464337032af5e61352c54b9dd8dae8fd1b\"><code>f21a9e4</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/603\">#603</a> from mde/mde-null-proto-where-possible</li>\n<li><a href=\"https://github.com/mde/ejs/commit/a50e46f002a78544e10982a037742cfb67fc7b80\"><code>a50e46f</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/606\">#606</a> from akash-55/main</li>\n<li>Additional commits viewable in <a href=\"https://github.com/mde/ejs/compare/v3.1.6...v3.1.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ejs&package-manager=npm_and_yarn&previous-version=3.1.6&new-version=3.1.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.4.0": [
            {
                "pr": "12452",
                "title": "WebGPU: more changes and fixes for stencil support",
                "description": "When a texture has both a depth and stencil aspects, only one of these can be used in a texture lookup. So, when creating a texture view, we must choose between depth and stencil.\r\n\r\nWe currently choose \"depth\" as it is what the user would most likely want, but we will need to come up with a way to be able to specify \"stencil\" instead. However, I don't know how we can do that, that would require some annotations in the shader so that we know a texture should be bound with the stencil aspect...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12450",
                "title": "WebGPU: Fix crash when creating the engine without stencil buffer support",
                "description": "Also fix a warning when setting a value in gl_FragDepth.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12429",
                "title": "Allow arc rotate auto rotation to rotate to a certain alpha value",
                "description": "add `targetAlpha` to autoRotateBehavior to serve as a limit. When the limit is reached, the autoRotateBehavoir would stop.\r\n",
                "author": {
                    "name": "TheCrowd",
                    "url": "https://github.com/TheCrowd"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Cameras/autoRotationBehavior.ts"
                ],
                "tags": []
            },
            {
                "pr": "12445",
                "title": "move tests to the cdn instead of main page",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/testTools/src/visualizationUtils.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12443",
                "title": "Fix camera cloning by adding newParent parameter",
                "description": "Related forum issue: https://forum.babylonjs.com/t/invoke-clone-with-camera-childnode-can-not-keep-structure/29648 and Playground: https://playground.babylonjs.com/#FZPMS1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12440",
                "title": "make sure pointer up only triggers once",
                "description": "Adressing this:\n\nhttps://forum.babylonjs.com/t/webxr-pointer-up-event-trigger-twice-on-one-single-touch/29370?u=raananw",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12432",
                "title": "Fix iridescence texture transform",
                "description": "Fix #12431 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12442",
                "title": "Fix OimoJS plugin syncMeshWithImpostor method.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/physicsviewer-working-only-with-meshimposter/29654 and Playground: https://playground.babylonjs.com/#WIR77Z#1317",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "12434",
                "title": "Fix thinInstanceCount setter to work with mesh clone",
                "description": "After cloning a mesh that has thin instances, setting thinInstanceCount on the clone currently doesn't work (unless it is set to 0 the setter will return without updating the internal instanceCount).\r\n\r\nWith this PR, if a mesh doesn't have the thin instance matrixData, then it checks to see if the mesh's source has it before defaulting the max instance count to 0.\r\n\r\nPG Repro: https://playground.babylonjs.com/#217750#76\r\nForum: https://forum.babylonjs.com/t/cant-set-thininstancecount-for-clone/29674\r\n",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12436",
                "title": "Fix crash when cloning meshes with thin instances that are using instance color",
                "description": "See https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492/23",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12428",
                "title": "Fix GridMaterial serialization",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12437",
                "title": "Fix audit issues",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": []
            },
            {
                "pr": "12427",
                "title": "Fix effectLayer vertex alpha detection",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12424",
                "title": "Enable more features for PG in JS mode",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12425",
                "title": "NME: uploading a static cube texture in a Reflection block does not work",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/tools/nodeEditor/src/diagram/display/textureDisplayManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12389",
                "title": "Export KHR extensions: IOR, Transmission and Volume",
                "description": "GLTF 2.0 Serializer is missing the \r\n\r\n- KHR_materials_ior \r\n- KHR_materials_volume \r\n- KHR_materials_transmissions\r\n\r\nextensions\r\n\r\nThis PR add support for these extensions to the GLTF2.0 serializer.\r\nAlso, some minor modification has been made into the GLTF Loader extensions to be consistant with the GLTF definitions.\r\nTest has been conducted using [this](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/StainedGlassLamp) standard sample model\r\nMaterials has been loaded and serialized succesfully without any diff.",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_draco_mesh_compression.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_volume.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_ior.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_specular.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_transmission.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_volume.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12421",
                "title": "Remove some unnecessary computations",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Rendering/renderingGroup.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12420",
                "title": "WebGPU: Fix RenderAttachment flag for 3D textures",
                "description": "See https://forum.babylonjs.com/t/how-to-get-error-callback-when-computeshader-dispatch-work-wrong/29571/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12419",
                "title": "ShaderMaterial: keep uniqueId in serialize()",
                "description": "Like Material here: https://github.com/BabylonJS/Babylon.js/blob/c654c7303965a43f340f8c1e0eab3fc804c566f1/packages/dev/core/src/Materials/material.ts#L1719\r\nRelated commit: https://github.com/BabylonJS/Babylon.js/commit/738236a7578d1c6dfcae4f93cfffeb768ea5a826",
                "author": {
                    "name": "lxq100",
                    "url": "https://github.com/lxq100"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts"
                ],
                "tags": []
            }
        ],
        "5.3.0": [
            {
                "pr": "12418",
                "title": "Added function call to focus on canvas when setting PointerLock",
                "description": "In this PR, I've added a line to `_RequestPointerlock` called by `enterPointerlock` in the Engine that will set focus on the canvas when a pointerlock is set with `enterPointerlock`.  This reason for this fix was because a user had identified an issue where the pointerlock was successfully being set but keyboard input wasn't working.  This was due to the fact that requestPointerlock does not set focus when setting the pointerlock element so no keyboard input was being routed to the canvas.  This fix simply sets focus once the pointerlock element has been set.\r\n\r\nThis fix is in reference to this Forum post: https://forum.babylonjs.com/t/input-not-recognised-until-window-resize-triggered-or-change-focus/15653",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12417",
                "title": "width height swizzle",
                "description": "fix per\r\nhttps://forum.babylonjs.com/t/height-and-width-mean-the-opposite-thing/29401/3\r\n\r\n",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/core/src/Shaders/spriteMap.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12416",
                "title": "Volumetric light scattering post process: Fix support for thin instances",
                "description": "See https://forum.babylonjs.com/t/how-i-can-use-volumetric-rendering-pipeline-vrp-with-thininstances/29544",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": []
            },
            {
                "pr": "12410",
                "title": "Fix uninitialized last ray for PointerDragBehavior",
                "description": "Follow up https://forum.babylonjs.com/t/pointerdragbehavior-ghost-movement-on-click-bug/29512\r\n`this._lastPointerRay` was not reinitialized when detaching a mesh.\r\nSo, when a new mesh is attached, the previous ray is still active a newly picked mesh translates to the previous position.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12413",
                "title": "Do not use determinant when preserving scaling",
                "description": "Yet another fix for scaling perservation with Gizmos. https://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/35\r\nMesh Matrix determinant is used to check if Y axis should be inverted. This should not happen with PreverseScaling.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12414",
                "title": "Fix typo in warning message",
                "description": "back-face culling and two-sided lighting warning message was erroneous.\r\n\r\nfor more info, check [this forum thread](https://forum.babylonjs.com/t/warning-in-gltfexporter-about-double-sided-lighting-and-backface-culling/29395)",
                "author": {
                    "name": "Krenodeno",
                    "url": "https://github.com/Krenodeno"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "12415",
                "title": "Skeleton._sortBones() crash for bones with parents from other skeletons",
                "description": "It is possible for a bone to have a parent bone from a skeleton different from the original one.\r\nCurrently, the method crashes when this is the case.\r\nThis simple check fixes it. Notice that \"index\" might be -1 when the parent is from another skeleton in the previous iteration.",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts"
                ],
                "tags": []
            },
            {
                "pr": "12409",
                "title": "Inspector: render N/A for internal texture unique ID when internal texture is undefined",
                "description": "Fixes an issue where the internal texture being undefined could lead to an inspector crash due to rendering call throwing. Will now render \"N/A\" if there is no internal texture.\r\n\r\nSee PG: https://playground.babylonjs.com/#436DIW#2",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "12408",
                "title": "Remove dead code",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "12397",
                "title": "DeviceInputSystem: Remove pollInput calls for MouseWheel from EventFactory",
                "description": "This PR contains two changes.  First, all pollInput calls that reference MouseWheelX/Y/Z as it's not necessary for Native to get that value.  Additionally, the Move conditional has been removed from NativeDeviceInputSystem as it's not needed.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/Helpers/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceTypes.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/nativeDeviceInputSystem.ts"
                ],
                "tags": [
                    "inputs",
                    "breaking change"
                ]
            },
            {
                "pr": "12404",
                "title": "fix container regression",
                "description": "Fixes a regression in GUI introduced by #12392. Invisible children were not being laid out correctly. See forum thread: https://forum.babylonjs.com/t/2d-gui-elements-not-hiding-in-5-2-0/29390/6\r\n\r\nNow, we still call layout, but we just don't count them towards the computedWidth/computedHeight of the parent container.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12406",
                "title": "Fix Transparent shadows",
                "description": "Fix #12405 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "bug",
                    "materials",
                    "shadows"
                ]
            },
            {
                "pr": "12403",
                "title": "Scaling preservation fix for boundingBoxGizmo",
                "description": "More use cases fixed for scaling perservation. follow up https://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/29",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12400",
                "title": "Block pointer events to scene when pointer is captured",
                "description": "When a pointer is captured (for example, if the user is dragging a scrollbar), pointer events should not be passed to the scene.\r\n\r\nThis matches the behavior of setPointerCapture() on the web, which forces all pointer events to fire on a particular element.\r\n\r\nResolves forum issue: https://forum.babylonjs.com/t/scrollbar-and-pointerblocker/28732\r\nSee playground: #XNY77K#3",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12402",
                "title": "Fix empty screenshot when enabling antialiasing",
                "description": "See https://forum.babylonjs.com/t/chrome-issue-with-create-screenshot-using-render-target/29367/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12401",
                "title": "Add the possibility to pass forcedExtension for an environment texture",
                "description": null,
                "author": {
                    "name": "ton-solutions",
                    "url": "https://github.com/ton-solutions"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12399",
                "title": "Deselect keys when active channels are changed.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/context.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12396",
                "title": "Add the possibility to pass prefilterOnLoad flag for an environment texture",
                "description": null,
                "author": {
                    "name": "ton-solutions",
                    "url": "https://github.com/ton-solutions"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            }
        ],
        "5.2.0": [
            {
                "pr": "12362",
                "title": "ktxTextureLoader: Mark _useSRGBBuffers when loading an SRGB-enabled texture format",
                "description": "Also set texture.format to the correct value,\r\nsince it seems the code elsewhere, like in the WebGPU engine, would\r\nlike a \"base\" texture format.\r\n\r\nCompletely untested patch to try and fix https://forum.babylonjs.com/t/compressed-ktx-texture-appears-too-dark/29060/4",
                "author": {
                    "name": "magcius",
                    "url": "https://github.com/magcius"
                },
                "files": [
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/ktxTextureLoader.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12395",
                "title": "DebugLayer : Accessors onNodeSelectedObservable",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12392",
                "title": "Skip invisible or unrenderable children in layout calculations",
                "description": "When doing layout calculations on a container, we should skip over children which are invisible or un-renderable. This will fix the case where a visible child would cause a container with `adaptWidthToChildren` to extend its width, even though it shouldn't.\r\n\r\nAs a general principle, invisible children should not take up any space in the layout. (This is what we are already doing for stack panel.)\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/gui-stackpanel-not-settings-correct-width-height-when-it-has-invisible-child-controls/29149",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12388",
                "title": "Add normal input to clear coat Block",
                "description": "https://forum.babylonjs.com/t/expose-worldnormal-input-in-nodematerial-clearcoatblock/29225/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "12390",
                "title": "Add a flag to use opacity instead of diffuse texture for transparent shadows.",
                "description": "Associated forum topic: https://forum.babylonjs.com/t/shadows-and-opacity-texture/28609/9\r\n\r\nExample playground: https://playground.babylonjs.com/#ICLAU3#10",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12391",
                "title": "Unicode/emoji characters in Playground are lost upon Save",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/playground/src/tools/loadManager.ts",
                    "packages/tools/playground/src/tools/saveManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12393",
                "title": "Fix wrong PG key saving",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/components/commandDropdownComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12387",
                "title": "switch sandbox to double (and fix a tiny GC issue with audio)",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12386",
                "title": "include loaders and serializers in typedoc definition",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/public/umd/babylonjs-loaders/config.json",
                    "packages/public/umd/babylonjs-serializers/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12385",
                "title": "New flag to preserve scaling when using gizmos",
                "description": "Followup https://forum.babylonjs.com/t/mesh-with-scaling-1-1-1-will-set-an-unbelievable-scaling-when-drag-positiongizmo/28850/13\r\nand https://forum.babylonjs.com/t/how-can-i-get-the-correct-scaling-and-rotation-with-boundingboxgizmo/29243/3\r\n\r\nOption to preserve TransformNode scaling when using Gizmos.\r\nOff by default to preserve back compat.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12384",
                "title": "remove legacy directory",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "legacy/.gitpod.Dockerfile",
                    "legacy/.gitpod.yml",
                    "legacy/.vscode/launch.json",
                    "legacy/.vscode/settings.json",
                    "legacy/.vscode/tasks.json",
                    "legacy/Exporters/readme.md",
                    "legacy/Tools/CompressedTextured/ktx-files.bat",
                    "legacy/Tools/CompressedTextured/make-ktx-batch.bat",
                    "legacy/Tools/Config/config.js",
                    "legacy/Tools/Config/config.json",
                    "legacy/Tools/DevLoader/BabylonLoader.js",
                    "legacy/Tools/Gulp/gulpfile.js",
                    "legacy/Tools/Gulp/helpers/gulp-addModuleExports.js",
                    "legacy/Tools/Gulp/helpers/gulp-importFromJsFiles.js",
                    "legacy/Tools/Gulp/helpers/gulp-karmaJunitPlugin.js",
                    "legacy/Tools/Gulp/helpers/gulp-processAmdDeclarationToModule.js",
                    "legacy/Tools/Gulp/helpers/gulp-processConstants.js",
                    "legacy/Tools/Gulp/helpers/gulp-processImportsToEs6.js",
                    "legacy/Tools/Gulp/helpers/gulp-processLooseDeclarationsEs6.js",
                    "legacy/Tools/Gulp/helpers/gulp-processModuleDeclarationToNamespace.js",
                    "legacy/Tools/Gulp/helpers/gulp-processShaders.js",
                    "legacy/Tools/Gulp/helpers/gulp-remapPaths.js",
                    "legacy/Tools/Gulp/helpers/gulp-removeShaderComments.js",
                    "legacy/Tools/Gulp/helpers/gulp-validateImports.js",
                    "legacy/Tools/Gulp/helpers/gulp-validateTypedoc.js",
                    "legacy/Tools/Gulp/profiling.html",
                    "legacy/Tools/Gulp/readme.md",
                    "legacy/Tools/Gulp/tasks/gulpTasks-apps.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-dependencies.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-documentation.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-importLint.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-libraries.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-librariesES6.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-localRun.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-netlify.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-npmPackages.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-remapPaths.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-symlink.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-tests.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-testsES6.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-tsLint.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-typedoc.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-viewerLibraries.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-watchApps.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-watchCore.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-watchLibraries.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-whatsNew.js",
                    "legacy/Tools/NodeHelpers/colorConsole.js",
                    "legacy/Tools/NodeHelpers/rmDir.js",
                    "legacy/Tools/Publisher/helpers/getFiles.js",
                    "legacy/Tools/Publisher/helpers/publish.js",
                    "legacy/Tools/Publisher/index.js",
                    "legacy/Tools/Publisher/production.js",
                    "legacy/Tools/Publisher/tasks/buildBabylonJSAndDependencies.js",
                    "legacy/Tools/Publisher/tasks/main.js",
                    "legacy/Tools/Publisher/tasks/prepareAdditionalDevPackages.js",
                    "legacy/Tools/Publisher/tasks/prepareEs6DevPackages.js",
                    "legacy/Tools/Publisher/tasks/prepareUMDDevPackages.js",
                    "legacy/Tools/Publisher/tasks/processAdditionalPackages.js",
                    "legacy/Tools/Publisher/tasks/processEs6Packages.js",
                    "legacy/Tools/Publisher/tasks/processUMDPackages.js",
                    "legacy/Tools/Publisher/tasks/processUMDViewer.js",
                    "legacy/Tools/Publisher/tasks/versionNumberManager.js",
                    "legacy/Tools/WebpackPlugins/babylonExternals.js",
                    "legacy/Tools/WebpackPlugins/babylonWebpackConfig.js",
                    "legacy/Tools/WebpackPlugins/viewerResolve.js",
                    "legacy/azure-pipelines-cd.yml",
                    "legacy/azure-pipelines.yml",
                    "legacy/babel.config.json",
                    "legacy/bower.json",
                    "legacy/dist/Oimo.js",
                    "legacy/dist/Oimo.license",
                    "legacy/dist/ammo.js",
                    "legacy/dist/ammo.wasm.js",
                    "legacy/dist/ammo.wasm.wasm",
                    "legacy/dist/babylon.d.ts",
                    "legacy/dist/babylon.js",
                    "legacy/dist/babylon.ktx2Decoder.js",
                    "legacy/dist/babylon.max.js",
                    "legacy/dist/babylon.max.js.map",
                    "legacy/dist/babylon.module.d.ts",
                    "legacy/dist/basisTranscoder/basis_transcoder.js",
                    "legacy/dist/basisTranscoder/basis_transcoder.wasm",
                    "legacy/dist/cannon.js",
                    "legacy/dist/cannon.license",
                    "legacy/dist/documentation.d.ts",
                    "legacy/dist/draco.license",
                    "legacy/dist/draco_decoder_gltf.js",
                    "legacy/dist/draco_decoder_gltf.wasm",
                    "legacy/dist/draco_wasm_wrapper_gltf.js",
                    "legacy/dist/earcut.license",
                    "legacy/dist/earcut.min.js",
                    "legacy/dist/glslang/glslang.js",
                    "legacy/dist/glslang/glslang.wasm",
                    "legacy/dist/gltf2Interface/babylon.glTF2Interface.d.ts",
                    "legacy/dist/gltf_validator.js",
                    "legacy/dist/gui/babylon.gui.d.ts",
                    "legacy/dist/gui/babylon.gui.js",
                    "legacy/dist/gui/babylon.gui.js.map",
                    "legacy/dist/gui/babylon.gui.min.js"
                ],
                "tags": []
            },
            {
                "pr": "12383",
                "title": "update package lock",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": []
            },
            {
                "pr": "12373",
                "title": "Different selection priorities for nodes and frames dependent of marquee or click selecting",
                "description": "Closes #12355 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/diagram/graphFrame.ts",
                    "packages/tools/nodeEditor/src/diagram/graphNode.ts",
                    "packages/tools/nodeEditor/src/globalState.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12378",
                "title": "add overrideCloneAlphaBetaRadius to ArcRotateCamera",
                "description": "Adds new property overrideCloneAlphaBetaRadius to the class ArcRotateCamera. This allows the parameter to setTarget to be specified when animating the camera's target property.\r\n\r\nFor example, when using FramingBehavior the override can be set to true, which then allows the framingTime (i.e. speed) of the framing animation to be changed independently, without altering anything else about the animation.\r\n\r\nForum discussion: https://forum.babylonjs.com/t/zoomonmesheshierarchy-inconsistent-camera-rotation/29100/8",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "breaking change"
                ]
            },
            {
                "pr": "12382",
                "title": "gltf2interface must be transpiled, otherwise it's not available.",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/tools/babylonServer/src/loaders/index-dev.ts",
                    "packages/tools/babylonServer/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "12377",
                "title": "support debug in older versions",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js"
                ],
                "tags": []
            },
            {
                "pr": "12376",
                "title": "Add some missing onPropertyChangedObservable to inspector…",
                "description": "… components.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12375",
                "title": "fix: getPositionData missing slice of vertex positions",
                "description": "Change getPositionData  to slice the vertex position array after getting it from the geometry to fix the issue that when getPositionData is called repeatedly it only worked correctly the first time.\r\n\r\nPG: https://playground.babylonjs.com/#SYQW69#1034\r\nForum: https://forum.babylonjs.com/t/bug-mesh-getpositiondata-blows-up-everytime-you-run-it/29246\r\n",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12176",
                "title": "Additional WebXR image tracking changes for native integration",
                "description": "This PR includes some more changes for WebXR Image Tracking integration for BabylonNative. and some cleanup from the previous change: https://github.com/BabylonJS/Babylon.js/pull/12097\r\n\r\nThe primary change is to  update nativeXRFrame to pull the results array directly from the frame object rather than marshalling back to native code every time.  This should improve per-frame CPU load.\r\n\r\nSee: https://github.com/BabylonJS/BabylonNative/pull/1032 for the consuming BabylonNative change.",
                "author": {
                    "name": "Alex-MSFT",
                    "url": "https://github.com/Alex-MSFT"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/XR/features/WebXRImageTracking.ts",
                    "packages/dev/core/src/XR/native/nativeXRFrame.ts"
                ],
                "tags": []
            },
            {
                "pr": "12332",
                "title": "Add support for GLTF 2.0 Serializer KHR_materials_specular",
                "description": "GLTF 2.0 Serializer is missing the KHR_materials_specular extension\r\nThis PR add support for the KHR_materials_specular to the GLTF2.0 serializer.\r\nValues are mapped as\r\n\r\n- specularFactor : metallicF0Factor \r\n- specularTexture : metallicReflectanceTexture \r\n- specularColorFactor : metallicReflectanceColor\r\n- specularColorTexture : reflectanceTexture\r\n\r\nusing default value or `undefined ` to decide wether or not the data should be serialized.\r\ndefault values are \r\n- specularFactor : 1.0f \r\n- specularColorFactor : [1.0f,1.0f,1.0f] \r\n\r\nTest has been conducted using this standard sample [model](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/SpecularTest)\r\nMaterials has been loaded and serialized succesfully without any diff.\r\nclose #8968\r\n",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_specular.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12372",
                "title": "Fixing typings for camera detachControl",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "12374",
                "title": "Physics,scene Bug fixes",
                "description": "- Bug fix https://forum.babylonjs.com/t/inspector-bug-with-wireframe-not-being-aligned-on-mesh/29021/10\r\nClone for wireframe mesh was also cloning physics impostor. And the impostor having a delta rotation, it was applied twice (parent's delta + delta) causing invalid rendering\r\n- Bug fix https://forum.babylonjs.com/t/physicsimpostor-ignoreparent-causes-crash/29194/4\r\n- scene `skipPointerDownPicking` : do not pick ray in scene when not appropriate. This is causing massive performance drop on native.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12369",
                "title": "Fix minor shader compiler issues",
                "description": "Changes:\r\n - Allow semicolons in shader single line comments\r\n - ~~Allow indented multiline macros~~\r\n \r\nRelated post in forum showing reproduction for the single line comment issue:\r\n- https://forum.babylonjs.com/t/possible-shader-compiler-bug-with-single-line-comments/29182\r\n\r\n~~There are no reports for the indented multiline macro issue, but I verified locally that indenting a multiline macro would break compiler, and with this fix, it works.~~\r\n",
                "author": {
                    "name": "kaliatech",
                    "url": "https://github.com/kaliatech"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12370",
                "title": "Fix babylon mesh parsing, materials were not reattached.",
                "description": "https://forum.babylonjs.com/t/serialized-object-then-reload-without-material/29193/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "12363",
                "title": "Move the local server to compile using ts-loader",
                "description": "Webpack will now compile typescript using ts-loader and will not use the compiled sources from the dist folders of the dev / lts packages.\nNote that this might break LTS development, but as this hasn't started yet it is not urgent.\n\nThe time it takes to compile is actually the same (might be a little slower this way), but the server won't let you load the resources while compiling.\n\nThe server will now wait before reloading the resources while compiling.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/tasks.json",
                    "package.json",
                    "packages/dev/buildTools/src/devWatcher.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/index.ts",
                    "packages/dev/inspector/src/components/actionTabs/actionTabsComponent.tsx",
                    "packages/tools/babylonServer/src/core/index-dev.ts",
                    "packages/tools/babylonServer/src/core/index-lts.ts",
                    "packages/tools/babylonServer/src/gui/index-dev.ts",
                    "packages/tools/babylonServer/src/gui/index-lts.ts",
                    "packages/tools/babylonServer/src/guiEditor/index.ts",
                    "packages/tools/babylonServer/src/inspector/index.ts",
                    "packages/tools/babylonServer/src/loaders/index-dev.ts",
                    "packages/tools/babylonServer/src/loaders/index-lts.ts",
                    "packages/tools/babylonServer/src/loaders/index.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF1FileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF2.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF2FileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTFFileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-objFileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-stlFileLoader.ts",
                    "packages/tools/babylonServer/src/materials/index-dev.ts",
                    "packages/tools/babylonServer/src/materials/index-lts.ts",
                    "packages/tools/babylonServer/src/nodeEditor/index.ts",
                    "packages/tools/babylonServer/src/postProcesses/index-dev.ts",
                    "packages/tools/babylonServer/src/postProcesses/index-lts.ts",
                    "packages/tools/babylonServer/src/proceduralTextures/index-dev.ts",
                    "packages/tools/babylonServer/src/proceduralTextures/index-lts.ts",
                    "packages/tools/babylonServer/src/sceneJs.js",
                    "packages/tools/babylonServer/src/serializers/index-dev.ts",
                    "packages/tools/babylonServer/src/serializers/index-lts.ts",
                    "packages/tools/babylonServer/src/serializers/legacy-dev.ts",
                    "packages/tools/babylonServer/src/serializers/legacy-lts.ts",
                    "packages/tools/babylonServer/src/serializers/legacy-stlSerializer.ts",
                    "packages/tools/babylonServer/src/serializers/legacy.ts",
                    "packages/tools/babylonServer/tsconfig.build.json",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.snapshot.js"
                ],
                "tags": [
                    "build",
                    "new feature"
                ]
            },
            {
                "pr": "12367",
                "title": "Revert the missing fix and add some logs",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12365",
                "title": "Add support for Iridescence in PBR and GLTF",
                "description": "* Support iridescence in PBR Material\r\n* Support iridescence in NME PBR Material\r\n* Support iridescence in GLTF Loader\r\n* Support iridescence in GLTF Exporter\r\n\r\nDoc is available here: https://documentation-git-iridescence-babylonjs.vercel.app/divingDeeper/materials/using/masterPBR#iridescence on PR https://github.com/BabylonJS/Documentation/pull/521\r\n\r\n![iridescence_nme](https://user-images.githubusercontent.com/16655165/162496948-0509c192-58d0-44ab-9358-a23565ef8bcd.png)\r\n\r\nCan Be tested on Playgrounds:\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/12365/merge/index.html#2FDQT5#1505\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/12365/merge/index.html#2FDQT5#1507\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/12365/merge/index.html#2FDQT5#1508\r\n\r\n",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/iridescenceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/PBR/index.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/materialFlags.ts",
                    "packages/dev/core/src/Materials/materialPluginFactoryExport.ts",
                    "packages/dev/core/src/Rendering/boundingBoxRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/boundingBoxRendererUboDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/lightFragment.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBRDFFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockIridescence.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDirectLightingFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDirectLightingSetupFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentSamplersDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrVertexDeclaration.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/tools/gltfComponent.tsx",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence_gltf.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence_nme.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "materials",
                    "glTF",
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "12366",
                "title": "Reset cached vertex data after CPU skinning is turned off",
                "description": "When CPU skinning is turned off (by setting computeBonesUsingShaders to true), then the vertex positions and normals are reset to cached values. With this PR the cached values are then nulled so that if CPU skinning is later enabled again, the cache will be re-populated with the latest values.\r\n\r\nIssue: https://github.com/BabylonJS/Babylon.js/issues/12364\r\nForum: https://forum.babylonjs.com/t/computebonesusingshaders-on-off-on-is-causing-a-major-bug/29162/18\r\n\r\nTest PGs: https://playground.babylonjs.com/#SYQW69#1031\r\nhttps://playground.babylonjs.com/#SYQW69#1014",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12361",
                "title": "make param defaults explicit for function getPositionData",
                "description": "For the function getPositionData that I PR'ed a few months ago, the params applySkeleton and applyMorph default to false implicitly (an oversight). This PR just makes those param defaults explicit for clarity and proper typing (e.g. for TS).",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12359",
                "title": "Prevent alt+click shortcut to drop elbow on complex node connections",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/nodeLink.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12356",
                "title": "Fix default settings in video texture",
                "description": "Fixing this - https://forum.babylonjs.com/t/babylon-5-0-video-not-playing/29132",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12357",
                "title": "Avoid double loading a scene when the playground is saved.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/playground/src/tools/saveManager.ts"
                ],
                "tags": []
            }
        ],
        "5.1.0": [
            {
                "pr": "12353",
                "title": "add timestamp to CDN assets",
                "description": "Every time a snapshot is created a timestamp.js file willbe updated. this timestamp will be loaded before all babylon resources, and it is never cached.\nThe timestamp will be used to load from the CDN, which will cache for longer time with the query string included in the cache, meaning - the resources will be cached until a new timestamp is generated.\n\nThis way we will not have to force-refresh anymore after a nightly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/prepareSnapshot.ts",
                    "packages/tools/guiEditor/public/index.js",
                    "packages/tools/nodeEditor/public/index.js",
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/tools/monacoManager.ts",
                    "packages/tools/sandbox/public/index.js"
                ],
                "tags": [
                    "build",
                    "new feature"
                ]
            }
        ],
        "5.0.4": [
            {
                "pr": "12348",
                "title": "On parse, reconnects the keys of the virtual keyboard",
                "description": "Forum thread: https://forum.babylonjs.com/t/webxr-gui-editor-and-virtualkeyboard/27826\r\n\r\nWhen parsing a virtual keyboard, we can scan the children for any key buttons and reconnect them to the keyboard. This PR uses the name of the button to do this - this will work unless they have renamed the control. We could also consider using the text of the button instead.\r\n\r\n@RaananW curious about your thoughts on this. I know we debated whether or not this was worth supporting but I think it's a small enough change that it might be worth having.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts"
                ],
                "tags": [
                    "gui"
                ]
            },
            {
                "pr": "12352",
                "title": "Fix SSAORenderingPipeline with multi cameras",
                "description": "https://forum.babylonjs.com/t/ssao-pipeline-not-working-properly-when-2-different-cameras-involved/29069",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12351",
                "title": "Allow editors packages to be included in a single project",
                "description": "Due to the way the shared ui components were declared it was not possible to include both editors in a single typescript project.\nThis generates a different namespace to the shared ui components so they are not declared twice.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/packageMapping.ts"
                ],
                "tags": [
                    "bug",
                    "build"
                ]
            },
            {
                "pr": "12345",
                "title": "use ignoreAdaptiveScaling on containers width adaptWidthToChildren or adaptHeightToChildren",
                "description": "See forum thread: https://forum.babylonjs.com/t/gui-adaptwidthtochildren-not-working-with-adaptive-scaling/28911/7\r\n\r\nContainers with adaptWidthToChildren or adaptHeightToChildren currently have adaptative scaling applied twice, once when their children's dimensions are computed and once when their own dimensions are computed. This PR simply turns off adaptive scaling on the relevant property when it's being adapted to the children's dimensions.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12346",
                "title": "Fix Color3.asArray, Color4.asArray, Color4.toArray and docs for Color…",
                "description": "…4.fromHexString.\r\n\r\nAs proposed in the forum: https://forum.babylonjs.com/t/several-small-issues-with-color3-and-color4/29092/2\r\n\r\nThree small fixes for Color3 and Color4:\r\n- Simpler implementation of Color3.asArray and Color4.asArray as the original implementation was slow in my experience.\r\n- Use FloatArray as first argument of Color4.toArray so it can write to Float32Array.\r\n- Improve documentation for Color4.fromHexString to document behaviour, including the change introduced in Babylon 5.",
                "author": {
                    "name": "axeljaeger",
                    "url": "https://github.com/axeljaeger"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": [
                    "bug",
                    "math"
                ]
            },
            {
                "pr": "12337",
                "title": "fix physics regression",
                "description": "followup https://forum.babylonjs.com/t/compound-to-empty-mesh-demo-works-differently-for-cannon-omio-vs-ammo/29062\r\n\r\nWhen computing bounding info from scratch, before this change, the min and max position was `mesh.position`. So, in this case:\r\n```\r\nvar compoundBody = new BABYLON.Mesh(\"compoundBody\", scene);\r\ncompoundBody.position.y=3;\r\n\r\ncompoundBody.computeWorldMatrix(true);\r\nconsole.log(compoundBody.getBoundingInfo().boundingSphere.centerWorld.y);\r\nconsole.log(compoundBody.position.y);\r\n```\r\nmin and max are (0,3,0), bouding sphere local center is (0,3,0).\r\nworld bounding sphere center is local center transformed by world matrix and its value is (0,6, 0) which is not correct. It breaks the physics for oimo and cannon. Computation is different with ammo and was not touched by this issue.\r\n\r\n\r\n@RaananW Git blame indicates you changed it last. Do you remember why/what it fixed?",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12344",
                "title": "Let AssetContainer add/instantiate/remove individual components",
                "description": "Fix #12152 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12340",
                "title": "assign the number of textures correctly",
                "description": "The number of samples was not assigned correctly and was always 1 when binding to multisampled multiview (i.e. the oculus browser).\n\nThis PR fixes that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/MultiviewRenderTarget.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12339",
                "title": "rotate the hand mesh opposed to the based transform node.",
                "description": "Fixing #12338",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12342",
                "title": "Update the GLTF breaking change in What's new with a workaround.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "what's new.md"
                ],
                "tags": []
            },
            {
                "pr": "12341",
                "title": "Playground fails permanently when Babylon.js 3.3 is selected",
                "description": "Fixes #12336\nRemoves 3.3,\nmoves the 4.2.X branch to 4.2.1",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12325",
                "title": "Fix item duplication when gui editor is opened through the playground.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            }
        ],
        "5.0.3": [
            {
                "pr": "12334",
                "title": "fix mergemesh when using RH",
                "description": "We are already taking in account the worldmatrix as the vertices are transformed by it in the process\r\nWe are also inverting indices in that case\r\n\r\nSo there is no need for a side override as the mesh will be left handed",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12333",
                "title": "Fix instance color forwarding for PBR Instances",
                "description": "Followup https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492/13\r\nInstance colors were not properly forwarded for PBR materials",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12328",
                "title": "Native textures",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    ".gitignore",
                    "packages/dev/core/src/Engines/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12329",
                "title": "Get error",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            }
        ],
        "5.0.1": [
            {
                "pr": "12319",
                "title": "revamp declarations",
                "description": "Making declaration build a bit more future-safe\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureEditorComponent.tsx",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/public/@babylonjs/inspector/package.json",
                    "packages/public/umd/babylonjs-gui/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12320",
                "title": "empty loadingUIText setter for null engine",
                "description": "using null engine and setting loading ui text to it causes crash...\nadded 'do nothing' setter for `loadingUIText`",
                "author": {
                    "name": "nekochanoide",
                    "url": "https://github.com/nekochanoide"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12312",
                "title": "WebGPU Update",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/meshUboDeclaration.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/sceneUboDeclaration.fx",
                    "packages/dev/core/src/ShadersWGSL/gpuUpdateParticles.compute.fx",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": []
            },
            {
                "pr": "12311",
                "title": "Only update the GUI size when arrow control's drag is stopped.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12314",
                "title": "Update Display Grid Parameters",
                "description": "Updates the display grid parameters to bring it into line with the other controls. Introduces three new icons as part of this change",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/imgs/displayGridLine1Icon.svg",
                    "packages/dev/sharedUiComponents/src/imgs/displayGridLine2Icon.svg",
                    "packages/dev/sharedUiComponents/src/imgs/frequencyIcon.svg",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/displayGridPropertyGridComponent.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12315",
                "title": "Fix overflows on left panel",
                "description": "Fixes issue where the tree view and the creation buttons could overflow and disappear. This is a temporary solution which just adds scrollbars when necessary. We will want to explore other design solutions in future.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/main.scss"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12313",
                "title": "update the give feedback link to the beta thread",
                "description": "Feedback link now points to the beta thread instead of the alpha thread.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12316",
                "title": "Removed outdated section about building from readme.md.",
                "description": null,
                "author": {
                    "name": "syntheticmagus",
                    "url": "https://github.com/syntheticmagus"
                },
                "files": [
                    "readme.md"
                ],
                "tags": []
            },
            {
                "pr": "12318",
                "title": "Added a new flag for checking double sided mesh in collision",
                "description": "Added a new flag for checking double sided mesh in collision detection (disable by default)\r\n\r\nfollow up https://forum.babylonjs.com/t/movewithcollisions-cant-handle-doublesided-meshes/28928\r\ndouble sided face are evaluated 2 times, by design. With this change, they are only evaluated once.\r\nTo not break back compat, it's hidden behind a flag.\r\nTo enable it :\r\n```\r\nBABYLON.Collider.DoubleSidedCheck = true;\r\n```",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Collisions/collider.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12301",
                "title": "Changes to saving and cleanup",
                "description": "Fixes a bug where saving the GUI multiple times would trigger a crash.\r\n\r\nAlso modifies the behavior around saving and restoring GUI properties when opening a live GUI scene. Now we store a list of all observers attached to the control, remove them all, and then restore them when the editor is closed. This seems like the best way to handle observers - they should not trigger while the GUI editor is open.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12290",
                "title": "Beta release",
                "description": "Turns off the alpha warning message and adds the beta flag to signify the release of the GUI editor beta! Will merge it tomorrow assuming all is well :)",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/scss/commandBar.scss"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12300",
                "title": "Update components on unit change",
                "description": "Adds back in the units comparison in shouldComponentUpdate, which allows the input components to re-render if units change. (unitLocked is still removed as this is now part of the UnitButton component rather than the input itself)",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/sliderLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12271",
                "title": "Fix deletion of descendant controls in the gui editor",
                "description": "Without this change, deleting a button, for example, would only delete it on the live texture but not on the linked GUI editor",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "12299",
                "title": "Separate reframing with selected controls and the entire screen",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "12309",
                "title": "update build config script",
                "description": "\nHow to use:\n\nFrom the command line run the following:\nnode ./scripts/updateBuildConfig.js versionType\nversionType can be either \"major\", \"minor\", \"patch\", or \"prerelease\"\nWhen prerelease the second argument is the prerelease id (alpha, beta, rc). keep empty to keep the same one.\n \nThis will be triggered by the CI when running the right pipeline (publish minor, publish major, publish patch)\n\nCommit the file change afterwards and submit a pull request to first allow the tests to run.\n ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/updateBuildConfig.js"
                ],
                "tags": []
            },
            {
                "pr": "12296",
                "title": "Add the viewer to the automated build process",
                "description": "**To be merged after 5.0 release!**\r\n\r\nThis adds the viewer to the automated build process.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/settings.json",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/public/@babylonjs/viewer/license.md",
                    "packages/public/@babylonjs/viewer/package.json",
                    "packages/public/@babylonjs/viewer/readme.md",
                    "packages/public/@babylonjs/viewer/tsconfig.build.json",
                    "packages/public/@babylonjs/viewer/tsconfig.json",
                    "packages/public/umd/babylonjs-viewer/.npmignore",
                    "packages/public/umd/babylonjs-viewer/config.json",
                    "packages/public/umd/babylonjs-viewer/license.md",
                    "packages/public/umd/babylonjs-viewer/package.json",
                    "packages/public/umd/babylonjs-viewer/readme.md",
                    "packages/public/umd/babylonjs-viewer/src/index.ts",
                    "packages/public/umd/babylonjs-viewer/tsconfig.build.json",
                    "packages/public/umd/babylonjs-viewer/tsconfig.json",
                    "packages/public/umd/babylonjs-viewer/webpack.config.js",
                    "packages/tools/viewer/package.json",
                    "packages/tools/viewer/src/assets/font.ts",
                    "packages/tools/viewer/src/assets/img.ts",
                    "packages/tools/viewer/src/assets/index.ts",
                    "packages/tools/viewer/src/assets/templates.ts",
                    "packages/tools/viewer/src/configuration/configuration.ts",
                    "packages/tools/viewer/src/configuration/interfaces/sceneConfiguration.ts",
                    "packages/tools/viewer/src/configuration/interfaces/vrConfiguration.ts",
                    "packages/tools/viewer/src/configuration/mappers.ts",
                    "packages/tools/viewer/src/helper/index.ts",
                    "packages/tools/viewer/src/index.ts",
                    "packages/tools/viewer/src/initializer.ts",
                    "packages/tools/viewer/src/labs/viewerLabs.ts",
                    "packages/tools/viewer/src/loader/modelLoader.ts",
                    "packages/tools/viewer/src/loader/plugins/loaderPlugin.ts",
                    "packages/tools/viewer/src/managers/sceneManager.ts",
                    "packages/tools/viewer/src/managers/telemetryManager.ts",
                    "packages/tools/viewer/src/model/viewerModel.ts",
                    "packages/tools/viewer/src/templating/templateManager.ts",
                    "packages/tools/viewer/src/templating/viewerTemplatePlugin.ts",
                    "packages/tools/viewer/src/viewer/defaultViewer.ts",
                    "packages/tools/viewer/src/viewer/viewer.ts",
                    "packages/tools/viewer/webpack.config.js",
                    "tsconfig.build.json",
                    "tsconfig.json"
                ],
                "tags": []
            }
        ],
        "5.0.2": [
            {
                "pr": "12327",
                "title": "Adjust behavior of NME selection to only select a frame if there aren…",
                "description": "…'t nodes selected. Also fix an error that showed up on compile.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12326",
                "title": "make sure externals are only the public dev packages",
                "description": "Shared UI components were considered as external package instead of embedded. due to a recent change I have made.\n\nThis fixes the issue.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/buildTools/src/webpackTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "12323",
                "title": "add ability to change node parent in inspector",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/commonCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/transformNodePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12321",
                "title": "Inspector - Empty mesh nodes should display with the mesh icon",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemSpecializedComponent.tsx"
                ],
                "tags": []
            }
        ]
    }
}