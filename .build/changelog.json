{
    "fromTag": "6.43.0",
    "changelog": {
        "6.43.0": [
            {
                "pr": "14780",
                "title": "Fix camera panning issue when camera is parented",
                "description": "fix https://forum.babylonjs.com/t/camera-panning-issue-when-using-parenting/48014",
                "author": {
                    "name": "2315137135",
                    "url": "https://github.com/2315137135"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "14783",
                "title": "TAA: Fix when using an orthographic camera",
                "description": "PG: https://playground.babylonjs.com/#539X0P#42",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/taaRenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14781",
                "title": "Gaussian Splatting: Fix incorrect name setting",
                "description": "It was using `window.name` instead of `this.name`",
                "author": {
                    "name": "noname0310",
                    "url": "https://github.com/noname0310"
                },
                "files": [
                    "packages/dev/core/src/Meshes/GaussianSplatting/gaussianSplattingMesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14779",
                "title": "TrailMesh: Add texture coordinates to trail mesh",
                "description": "See https://forum.babylonjs.com/t/trail-mesh-with-uvs/47965/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/trailMesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14778",
                "title": "TriPlanar material: Fix shader crash when using instances",
                "description": "See https://forum.babylonjs.com/t/a-serialized-mesh-with-triplanarmateriel-does-not-create-an-instance-afterwards/47954",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14777",
                "title": "fix Plugin V2 timestep",
                "description": "Follow up https://forum.babylonjs.com/t/how-to-make-havok-physics-simulation-faster/47972/6",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14775",
                "title": "Dev Host improvements",
                "description": "The dev host allows you to write code directly related to the typescript files in the dev packages instead of using the UMD pattern.\r\n\r\nThis allows you to better experiment with es6 modules.\r\n\r\nThis improves the dev host by doing the following:\r\n\r\n1) Module resolution using the module's name (without the @babylon part). \r\n2) Server is much quicker to reload\r\n3) Full sruppot for all of our modules.\r\n4) A new analyze script that allows you to show a report of the modules loaded with your current code.\r\n\r\nTo run the analyzer, do the following:\r\n\r\n`npm run analyze -w @tools/dev-host`\r\n\r\nThe HTML page will open automatically and will look roughly like this:\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1381702/48a63bab-de3d-402d-afdd-6901d9938b7c)\r\n\r\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/devHost/package.json",
                    "packages/tools/devHost/src/babylon.glTF2Interface.ts",
                    "packages/tools/devHost/src/createScene.ts",
                    "packages/tools/devHost/src/createSceneJS.js",
                    "packages/tools/devHost/src/engine.ts",
                    "packages/tools/devHost/src/index.ts",
                    "packages/tools/devHost/tsconfig.build.json",
                    "packages/tools/devHost/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "14774",
                "title": "NME: Fix preview for some of the pre-defined meshes",
                "description": "See https://forum.babylonjs.com/t/pbr-node-material-with-coarse-roughness-issue-with-non-omni-lights/47812/5\r\n\r\nConcerned meshes: sphere, cube, plane\r\n\r\nThe problem was that we bake the current transformation but don't move the mesh to the top of the hierarchy (`parent=nullhttps://forum.babylonjs.com/t/pbr-node-material-with-coarse-roughness-issue-with-non-omni-lights/47812/5). So, the parent transformation is applied two times, one time during baking and another time when rendering the mesh.\r\n\r\nAlso, there was a bug in the baking method, because tangents were not transformed.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            }
        ],
        "6.44.0": [
            {
                "pr": "14803",
                "title": "Add nodes to Node Geometry to augment TextureFetch",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryLengthBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryRotate2dBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14800",
                "title": "Add nodes to Node Geometry to augment TextureFetch",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14801",
                "title": "Nge nodes2",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryDistanceBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryDotBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryPosterizeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryReplaceColorBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14802",
                "title": "SkeletonViewer: Try to display a spur for the last bone of a chain",
                "description": "In the \"spur\" or \"sphere/spur\" mode, a spur is drawn from the current bone to its child(ren). But for the last bone of a chain, there's no next, so we can't draw the \"spur\".\r\n\r\nThis PR attempts to draw a \"spur\" in this case, calculating the bounding sphere of the vertices affected by the bone and using the center of this sphere to calculate the length of the spur.\r\n\r\nPG: https://playground.babylonjs.com/#HFWCMJ#30\r\n\r\n|Without PR|With PR|\r\n|------------|-|\r\n|<img src=\"https://github.com/BabylonJS/Babylon.js/assets/4152247/6045372e-49e8-48fb-b354-4bf4e9ea81c3\" height=\"300px\">|<img src=\"https://github.com/BabylonJS/Babylon.js/assets/4152247/901952f0-2b3d-4de9-b6b5-ce680a1b74c2\" height=\"300px\">|\r\n|<img src=\"https://github.com/BabylonJS/Babylon.js/assets/4152247/e844b111-3c44-4953-956a-f940245a9303\" width=\"400px\">|<img src=\"https://github.com/BabylonJS/Babylon.js/assets/4152247/5dc33a70-2b3f-458d-8960-7ab7d0d3ad24)\" width=\"400px\">|\r\n\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations",
                    "debug tool"
                ]
            },
            {
                "pr": "14799",
                "title": "Add timeStep option to NullEngine",
                "description": "This allows specifying `timeStep` when creating a `NullEngine`\r\n\r\nRef. https://forum.babylonjs.com/t/how-to-set-nullengine-timestep-missing-from-options/48082\r\n\r\nAlso adds simple unit test for `NullEngine` and it's options.",
                "author": {
                    "name": "pjoe",
                    "url": "https://github.com/pjoe"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/test/unit/Engines/nullEngine.test.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14798",
                "title": "make vision OS emulator work",
                "description": "Vision OS emulator 1.1 delivers transient pointer input events, which were not supported until this PR.\n\nNote - this is for the emulator only, the real device should have proper hand support.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14797",
                "title": "AnimationGroup: Add setters for \"from\" and \"to\" properties",
                "description": "See https://forum.babylonjs.com/t/the-correct-way-to-extend-an-animation-group/48181",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14796",
                "title": "Rendering custom render targets in XR",
                "description": "Initially I have added this loop during the creation of the camera, but this way we are guaranteeing that even if the scene changes while in XR, or after leaving XR, the XR cameras will still render custom render targets correctly.\n\nThis will also allow adding RTTs direcly to the camera's custom render target, so the arrays stay independent.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14793",
                "title": "Update and cleanup dependencies",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".gitignore",
                    "nx.json",
                    "package-lock.json",
                    "package.json",
                    "packages/public/@babylonjs/test-tools/package.json",
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/tests/package.json",
                    "packages/tools/tests/test/visualization/visualization.utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "14789",
                "title": "Add triangle predicates to pointer down and up events.",
                "description": "This PR adds `scene.pointerDownTrianglePredicate` and `scene.pointerUpTrianglePredicate`, which function analogous to the already implemented `scene.pointerMoveTrianglePredicate`. This allows to set triangle predicates for use with `ActionManager` or Behaviors like `PointerDragBehavior`, which currently is not possible.\r\n\r\nThere should be no performance impact when not setting the predicates, as is with `pointerMoveTrianglePredicate`.\r\n\r\nRelevant forum post: https://forum.babylonjs.com/t/triangle-predicate-for-picking-triggers-in-actionmanager-and-pointerdragbehaviour/47761\r\n\r\nI hope this fits all the guidelines. :)\r\nOpen for review!",
                "author": {
                    "name": "f-rooom",
                    "url": "https://github.com/f-rooom"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "14792",
                "title": "Fix declaration issue",
                "description": "The issue (that typescript has not detected, interesting enough) is that an optional parameter cannot come before a required variable. The declaration was generated incorrectly, and the playground has no proper typings.\n\nAs this was never released (only available in the playground so far), this is not a breaking change",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts"
                ],
                "tags": []
            },
            {
                "pr": "14788",
                "title": "Added the option to dispose hand meshes on XR session ending",
                "description": "Hand meshes were only disposed when the feature was disabled (and not detached). This was done to allow better caching of the hand meshes, and a faster re-enter to the scene.\nThis adds the option to dispose the meshes on session ended, to have a better resource management for your desktop scene after leaving XR.\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts"
                ],
                "tags": []
            },
            {
                "pr": "14785",
                "title": "Animation: Fix animation delta time in deterministic mode",
                "description": "See https://forum.babylonjs.com/t/how-can-i-step-physics-and-animations-manually-when-lockstep-is-active/47689/7",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14787",
                "title": "Allow XR near interaction to interact with all meshes and GUI",
                "description": "This PR generates the needed data for full interaction with any object using near interaction.\nbu and bv were missing, which prevented elements like the GUI from working correctly with near interaction.\n\nPG used for testing: #9K3MRA#1484",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts"
                ],
                "tags": []
            },
            {
                "pr": "14786",
                "title": "GreasedLines: Fix material not disposed",
                "description": "See https://forum.babylonjs.com/t/potential-memory-leak-when-disposing-greasedline/48098",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineBaseMesh.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14753",
                "title": "WebXR improvements",
                "description": "* It is now possible to add a fullscreen GUI ADT to WebXR using the XR Layers feature. This reuses the same API that is used on desktop, so the experience can work on both desktop and XR. Note - no interaction is possible in XR (as this is a layer that is rendered on top of the XR environment)\n* Added the ability to add a quad XR layer. At the moment only internally, as I want to change the API and make sure we can easily support all other XR layer types.\n* Firefox reality is no longer a thing - removed code directly related to it.\n* Added hand tracking as an optional feature - this will allow devs to use the hand meshes directly instead of seeing the static default hand models.\n* Fix an issue where the baseLayer will be created twice when using XR Layers\n* Added a warning when attaching or detaching a feature didn't work as expected\n* Remodelled the internal architecture of WebXR layers, imrp\n* Small fixes for the webxr declaration\n* Moved WebXR composition layer implementation(s) to a new directory for structure. These are internal classes so it's not a breaking change.\n* Fixed an issue that is apparent when using the webxr emulator\n* made small changes to the session manager's architecture.\n* fixed an issue with clearing when in multiview mode and in layers\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/Layers/WebXRCompositionLayer.ts",
                    "packages/dev/core/src/XR/features/Layers/WebXRProjectionLayer.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts",
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRLayers.ts",
                    "packages/dev/core/src/XR/webXRDefaultExperience.ts",
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts",
                    "packages/dev/core/src/XR/webXRFeaturesManager.ts",
                    "packages/dev/core/src/XR/webXRLayerWrapper.ts",
                    "packages/dev/core/src/XR/webXRRenderTargetTextureProvider.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "14784",
                "title": "Animation: Allow to pass a custom delta time to the scene animate method",
                "description": "See https://forum.babylonjs.com/t/how-can-i-step-physics-and-animations-manually-when-lockstep-is-active/47689/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            }
        ],
        "6.42.0": [
            {
                "pr": "14771",
                "title": "PostProcess: Add a simple TAA rendering pipeline",
                "description": "This rendering pipeline is a simple implementation of Temporal Anti-Aliasing, which can be used to enhance static rendering / screenshots.\r\n\r\nSee https://medium.com/@babylonjs/an-introduction-to-temporal-anti-aliasing-with-babylon-js-7aa29c2f8a0f\r\n\r\nPG: https://playground.babylonjs.com/#539X0P#39\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Maths/halton2DSequence.ts",
                    "packages/dev/core/src/Maths/index.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/index.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/taaRenderingPipeline.ts",
                    "packages/dev/core/src/Shaders/taa.fragment.fx"
                ],
                "tags": [
                    "new feature",
                    "post-process"
                ]
            },
            {
                "pr": "14772",
                "title": "Ray: set non 0 epsilon",
                "description": "See https://forum.babylonjs.com/t/pickwithray-misses-front-surface-triangle-corner/47829/13",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": [
                    "enhancement",
                    "collisions"
                ]
            }
        ],
        "6.41.2": [
            {
                "pr": "14769",
                "title": "Fixing an issue with NGE parsing",
                "description": "Quick note - this might cause NGEs creted in the last 2-3 weeks to fail.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTrigonometryBlock.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/nodeGeometryBuildingGenerator.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14758",
                "title": "Add back convertion to float for Matrix Indices",
                "description": "We believe this change was made by accident. Babylon Native currently needs matrix index buffers to be converted to float in the JS side. ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": []
            }
        ],
        "6.41.1": [
            {
                "pr": "14765",
                "title": "Particle systems: add support for fog",
                "description": "See https://forum.babylonjs.com/t/hide-particles-in-the-built-in-fog/47815",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Particles/baseParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Shaders/gpuRenderParticles.fragment.fx",
                    "packages/dev/core/src/Shaders/gpuRenderParticles.vertex.fx",
                    "packages/dev/core/src/Shaders/particles.fragment.fx",
                    "packages/dev/core/src/Shaders/particles.vertex.fx"
                ],
                "tags": [
                    "enhancement",
                    "particles"
                ]
            },
            {
                "pr": "14768",
                "title": "ShaderMaterial: add support for fog",
                "description": "See https://forum.babylonjs.com/t/hide-particles-in-the-built-in-fog/47815/4\r\n\r\n[EDIT] Example: https://babylonsnapshots.z22.web.core.windows.net/refs/pull/14768/merge/index.html#T90MQ4#16",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Shaders/color.fragment.fx",
                    "packages/dev/core/src/Shaders/color.vertex.fx"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "14767",
                "title": "Ray: use an epsilon when calculating ray/triangle intersections",
                "description": "See https://forum.babylonjs.com/t/pickwithray-misses-front-surface-triangle-corner/47829/5",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": [
                    "enhancement",
                    "collisions"
                ]
            },
            {
                "pr": "14766",
                "title": "Move core to es2020 as well",
                "description": "The rest of the packages have already switched to ES2020",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/core/tsconfig.lts.json"
                ],
                "tags": []
            },
            {
                "pr": "14764",
                "title": "Camera: Add hasMoved property",
                "description": "Knowing if the camera has moved since the last frame is something that comes regularly in the forum, and I also needed it in my [blog post](https://medium.com/@babylonjs/an-introduction-to-temporal-anti-aliasing-with-babylon-js-7aa29c2f8a0f).\r\n\r\nSo, I thought it would be nice to add a property in the `Camera` class for this purpose.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14763",
                "title": "Morph targets: Add missing morph count uniforms to some renderers/materials",
                "description": "MorphTarget optimizations added in #14734 were not being applied to some renderers.\r\n\r\nThis PullRequest will prevent some renderers or materials that do not use `MaterialHelper.PrepareDefinesForMorphTargets` from being recompiled by morph influence changes.\r\n\r\n@Popov72 ",
                "author": {
                    "name": "noname0310",
                    "url": "https://github.com/noname0310"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/outlineRenderer.ts"
                ],
                "tags": []
            },
            {
                "pr": "14762",
                "title": "Misc updates for RSM & WebGPU timestamp queries",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTimestampQuery.ts",
                    "packages/dev/core/src/Rendering/reflectiveShadowMap.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14761",
                "title": "Allow loading .ply with loadFileAsync",
                "description": "Follow up https://forum.babylonjs.com/t/unable-to-load-gaussian-spalt-ply-file/47707",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/GaussianSplatting/gaussianSplattingMesh.ts",
                    "packages/dev/loaders/src/SPLAT/splatFileLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14760",
                "title": "Add the code inspection to enable unity toolkit",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14752",
                "title": "Havok Heightmaps",
                "description": "This PR adds support for the Heightfield shape in Havok. This shape requires that an array of heights is provided. This array can be optionally passed in the `CreateGroundFromHeightMap` callback, allowing for easy creation.\r\n\r\nExample PG in: #I37D8G#15",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14759",
                "title": "Clear world scale observers correctly",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts",
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14757",
                "title": "Vision OS missing enabledFeatures",
                "description": "Vision OS's WebXR session is missing a feature we are using. This causes some scenes to throw an exception and fail.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRAbstractFeature.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14755",
                "title": "Use shader material written in wgsl as shadow depth wrapper",
                "description": "## Allow ShaderMaterial written in WGSL to be used as shadow depth wrapper. \r\n\r\n[Original issue discussion](https://forum.babylonjs.com/t/shadowdepthwrapper-error-with-wgsl-shader-syntax)\r\n\r\n### Changes involved\r\n\r\n- Avoids GLSL specific shader includes to be called when using WGSL for shadow depth wrapper.\r\n- This PR does not implement shadow map specific shader includes in WGSL. When option `doNotInjectCode=false`, BJS will log error in dev tool console about missing shader includes by default. The reason is BJS does not yet have full support for StandardMaterial or PBRMaterial implemented in WGSL. It is a lot of work to setup WGSL shader from scratch with transparent shadows, self shadow, etc to test the missing shader includes for shadow map. The idea is: for now, if a developer has implement a complete WGSL shader that require these shader includes, this developer can create these shader includes in WGSL, and include them in ShaderStore.IncludesShadersStoreWGSL. [This example](https://github.com/shen-lin/Babylon.js/blob/wgls-dev/packages/tools/devHost/src/createScene.ts#L30) has been tested with some dumm WGSL code included into final runtime WGSL shader. If I later on need these shader includes and I have a test case, I will implement them and add to BJS WGSL shader include.\r\n\r\nThe shader includes that could be added in the future (WGSL version) mentioned above refers to:\r\n- shadowMapVertexExtraDeclaration\r\n- shadowMapVertexNormalBias\r\n- shadowMapVertexMetric\r\n- shadowMapFragmentSoftTransparentShadow\r\n- shadowMapFragment\r\n\r\n### Example outcome\r\n\r\nSee [dev branch](https://github.com/shen-lin/Babylon.js/tree/wgls-dev) for test scenario setup in dev host.\r\n\r\nScreenshot of local test result as shown below. A WGSL vertex shader is applied to animate both sphere and shadow vertex displacement.\r\n\r\n![Screenshot 2024-01-30 at 4 26 19 PM](https://github.com/BabylonJS/Babylon.js/assets/4505448/9fc6146b-2ee9-4be5-b15d-020115759512)\r\n\r\n",
                "author": {
                    "name": "shen-lin",
                    "url": "https://github.com/shen-lin"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/shadowDepthWrapper.ts"
                ],
                "tags": [
                    "materials",
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "14754",
                "title": "Unity Toolkit Workaround",
                "description": "Workaround to temp disable the Unity Toolkit scripts loading from playground loadScriptAsync. But load from BABYLON.Tools.LoadScriptAsync while debugging the issue",
                "author": {
                    "name": "MackeyK24",
                    "url": "https://github.com/MackeyK24"
                },
                "files": [
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/tools/playground/src/components/rendererComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.41.0": [
            {
                "pr": "14756",
                "title": "Fix a few issues with world scale in XR",
                "description": "* Hands scale wasn't aplied if the hand was not in the frustum\n* Near interaction meshes were not scaled correctly\n* camera maxZ was not scaled with the world scale.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts",
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "14751",
                "title": "Unity Toolkit Playground Content",
                "description": null,
                "author": {
                    "name": "MackeyK24",
                    "url": "https://github.com/MackeyK24"
                },
                "files": [
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "14741",
                "title": "Materials: Improve management of frozen materials",
                "description": "Closes #13776 \r\n\r\nBasically, I did what I explained in #13376:\r\n> The problem is that _wasPreviouslyReady, _wasPreviouslyUsingInstances and _forceRebindOnNextCall which are currently stored on the effect should be stored on the DrawWrapper instead (that's because an effect can be shared by multiple submeshes).\r\n\r\nI will also update the docs shortly.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/GaussianSplatting/gaussianSplattingMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/drawWrapper.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/effectRenderer.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/pushMaterial.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/gui/src/3D/materials/fluent/fluentMaterial.ts",
                    "packages/dev/gui/src/3D/materials/fluentBackplate/fluentBackplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/fluentButton/fluentButtonMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackglowMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlFrontplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlInnerquadMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderBarMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderThumbMaterial.ts",
                    "packages/dev/materials/src/cell/cellMaterial.ts",
                    "packages/dev/materials/src/custom/customMaterial.ts",
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts",
                    "packages/dev/materials/src/fire/fireMaterial.ts",
                    "packages/dev/materials/src/fur/furMaterial.ts",
                    "packages/dev/materials/src/gradient/gradientMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts",
                    "packages/dev/materials/src/lava/lavaMaterial.ts",
                    "packages/dev/materials/src/mix/mixMaterial.ts",
                    "packages/dev/materials/src/normal/normalMaterial.ts",
                    "packages/dev/materials/src/shadowOnly/shadowOnlyMaterial.ts",
                    "packages/dev/materials/src/simple/simpleMaterial.ts",
                    "packages/dev/materials/src/sky/skyMaterial.ts",
                    "packages/dev/materials/src/terrain/terrainMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triPlanarMaterial.ts",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "14748",
                "title": "Remove unneeded doc keys",
                "description": "Those were added by an auto-fix command (which was removed by then).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/boxBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/cylinderBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/decalBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/discBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/geodesicBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/hemisphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/icoSphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/latheBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/planeBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/polygonBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/polyhedronBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/ribbonBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/shapeBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/sphereBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "14736",
                "title": "Point Proximity, Shape Proximity and Shape Cast in Havok",
                "description": "This PR wraps these three Havok functionalities into methods on the plugin.\r\n\r\nPoint Proximity takes a IPointProximityQuery and stores its results in a ContactPoint representing the closest point on a body.\r\nShape Proximity takes a IShapeProximityQuery and stores its results in two ContactPoints, representing the hit point in shape space and world space.\r\nShape Cast takes a IShapeCastQuery and stores its results in two ContactPoints, representing the hit point in shape space and world space.\r\n\r\nI'd love feedback here if the API and naming looks all right 🙂 One thing I'm not sure of is the `hitDistance` name in the ContactPoint class. For point prox and shape prox, it does really represent the distance to the hit point, but in the case of the shape cast, it is a fraction along the cast ray. So the name doesn't really describe it, but I'm not sure if it warrants a new class just to have a different name, or if there's a better name that works with both notions. I initially wanted to reuse the PhysicsRaycastResult class, but that also didn't work because that class has `hitPoint*World*` and one of the hit points is not in world space for shape prox/shape cast.\r\n\r\nHere's some Playground examples:\r\nPoint Proximity: #I6AR8X#21\r\nShape Proximity: #1VT1BK#11\r\nShape Cast: #1VT1BK#12\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/castingResult.ts",
                    "packages/dev/core/src/Physics/index.ts",
                    "packages/dev/core/src/Physics/physicsPointProximityQuery.ts",
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/physicsShapeCastQuery.ts",
                    "packages/dev/core/src/Physics/physicsShapeProximityCastQuery.ts",
                    "packages/dev/core/src/Physics/proximityCastResult.ts",
                    "packages/dev/core/src/Physics/shapeCastResult.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14746",
                "title": "Unity Playground Update",
                "description": "Update playground cdn locations.\r\nUpdate playground sample scenes.",
                "author": {
                    "name": "MackeyK24",
                    "url": "https://github.com/MackeyK24"
                },
                "files": [
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "14745",
                "title": "Update dependencies and use latest azure reporter",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14742",
                "title": "If checkbox's default color is not set, use white.",
                "description": "This helps avoid confusion with the default transparent color, which doesn't show if the box is checked or not.\r\n\r\nForum topic: https://forum.babylonjs.com/t/checkbox-look-the-same-regardles-checked-value/47481",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/checkbox.ts"
                ],
                "tags": [
                    "gui"
                ]
            },
            {
                "pr": "14743",
                "title": "Add nodes to Node Geometry to augment TextureFetch",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryDesaturateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14740",
                "title": "Animations: Fix broken loop when speedRatio is negative",
                "description": "See https://forum.babylonjs.com/t/animationgroup-play-backwards-issue/47502/5 and https://forum.babylonjs.com/t/gltf-animation-loops-when-i-click-how-to-stop-the-loop/38477.\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14738",
                "title": "Babylon Toolkit For Unity",
                "description": "Babylon Toolkit Unity Exporter Playground Update",
                "author": {
                    "name": "MackeyK24",
                    "url": "https://github.com/MackeyK24"
                },
                "files": [
                    "packages/tools/playground/public/libs/babylon.manager.d.ts",
                    "packages/tools/playground/public/libs/babylon.manager.js",
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.40.0": [
            {
                "pr": "14737",
                "title": "Add nodes to Node Geometry to augment TextureFetch",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14735",
                "title": "Remove zOffset from inspector wireframe mesh",
                "description": "As discussed in forum topic\r\nhttps://forum.babylonjs.com/t/zoffset-and-wireframe-meshes/47392",
                "author": {
                    "name": "Michalzr",
                    "url": "https://github.com/Michalzr"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14734",
                "title": "Morph targets: Pass the number of active targets to the shader as a uniform",
                "description": "See https://forum.babylonjs.com/t/babylon-blendshapes-animation-player-fps-drops-and-glitch/41884/13.\r\n\r\nThis PR allows to set a maximum number of active targets, to avoid a shader recompilation each time the number of active targets changes. If non-zero, we compile the shader with `NUM_MORPH_INFLUENCERS=this value`, and `NUM_MORPH_INFLUENCERS` is used as the upper bound of a loop over the targets. We use a uniform variable to break from the loop when we reach the number of active targets.\r\n\r\nNote that for WebGPU / WGSL, up to now, we didn't have a mean to make preprocessing variable replacements (we didn't need it)! When defining something like `#define TEST 23`, `TEST` could be used in a `#if` / `#ifdef` / `#elif` statement, but not as a replacement like in `int test = TEST;`. It works in WebGL because such replacements are automatically handled by the GLSL parser/compiler (there's no specific code in Babylon to do it).\r\n\r\nSo, I added this feature in WebGPU, but the replacement variable name should be enclosed inside $...$ (I can change the enclosing character!). I did it this way because I think this code would be too time consuming:\r\n```typescript\r\nconst defineToValue: { [key: string]: string } = {};\r\n// fill defineToValue with the replacement variables\r\ncode.replace(/(\\w+)/g, (_, p1) => {\r\n    return defineToValue[p1] ?? p1;\r\n});\r\n```\r\nThis would mean hundred or thousand (or more!) of replacements (because `(\\w+)` will match a lot of time) + the possibility of wrong replacements (in case a replacement variable is a subset of a string).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    ".vscode/settings.json",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Morph/morphTargetManager.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/morphTargetsVertex.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/morphTargetsVertexDeclaration.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/morphTargetsVertex.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/morphTargetsVertexDeclaration.fx"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14733",
                "title": "glTF loader: allow no root node",
                "description": "Follow up to #14730 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_variants.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "enhancement",
                    "glTF"
                ]
            },
            {
                "pr": "14732",
                "title": "Better feature handling",
                "description": "A feature that is a native WebXR feature will not attach if the session was not enabled with it, or that the session doesn't support it.\n\nIn addition, a warning will be shown if the feature was initialized after the session has started.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRAbstractFeature.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "14731",
                "title": "small fixes to physics",
                "description": "Forum: https://forum.babylonjs.com/t/help-with-disposing-and-havok/47467",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics",
                    "skip changelog"
                ]
            },
            {
                "pr": "14730",
                "title": "glTF loader: Add an option to pass a custom root node",
                "description": "Test PG: https://playground.babylonjs.com/#I3UH7N#1",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_variants.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "enhancement",
                    "glTF"
                ]
            },
            {
                "pr": "14726",
                "title": "Move delegate picking to children to container",
                "description": "Closes [#13692](https://github.com/BabylonJS/Babylon.js/issues/13692)\r\n\r\nWith the property moved to the Container class, other types of container besides Button can have this behavior. \r\nPG #94FPZ3#3 shows an example with Rectangle, Button and StackPanel\r\nPG #DLI9YW shows an example with Grid\r\n\r\nAlso added the property to GUI Editor for easier editing.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/button.ts",
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/containerPropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui"
                ]
            },
            {
                "pr": "14728",
                "title": "Add no-throw-literal eslint rule.",
                "description": "Existing instances that would fail this rule are ignored so back-compat is kept. This could be changed for the 7.0 release.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".eslintrc.js",
                    "packages/dev/core/src/Animations/pathCursor.ts",
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiview.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessingContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureManager.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragCoordBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/frontFacingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/screenSizeBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildStateSharedData.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/envTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/hdrTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/tgaTextureLoader.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlockConnectionPoint.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/dev/core/src/Meshes/csg.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/hdr.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/panoramaToCubemap.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/videoRecorder.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Rendering/depthRendererSceneComponent.ts",
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/xmlLoader.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/dev/materials/src/fur/furMaterial.ts",
                    "packages/tools/guiEditor/src/guiNodeTools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14727",
                "title": "Run playwright tests on the same page instance",
                "description": "This will speed up running tests, especially on CI.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/playwright/visualizationPlaywright.utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "14729",
                "title": "Flush for Native does nothing",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "native"
                ]
            },
            {
                "pr": "14724",
                "title": "Fix audio engine unlock issue",
                "description": "When sound playback fails, the `Sound` class assumes the browser's audio context is suspended and waiting for user interaction, so it locks the audio engine and shows the unmute button. In the case of streaming sounds, playback fails in Chrome with `DOMException: The play method is not allowed by the user agent` ... **but the audio context is not suspended**. Since the audio engine assumes the audio context is `suspended`, the current `AudioEngine.unlock()` implementation fails when the audio context state is actually `running`.\r\n\r\nThis change fixes the `AudioEngine.unlock()` issue by setting `AudioEngine.unlocked` to `true` and notifying `onAudioUnlockedObservable` observers when the audio context state is `running`.\r\n\r\nTested on playground https://playground.babylonjs.com/#BB4105#1.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14723",
                "title": "Particle systems: Fix serialization and parsing of CustomParticleEmitter",
                "description": "See https://forum.babylonjs.com/t/get-typeerror-when-apply-custom-emitter-to-a-sub-emitter/47370",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/EmitterTypes/customParticleEmitter.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14722",
                "title": "Add isSerializable flag to GUI controls",
                "description": "Closes https://github.com/BabylonJS/ThePirateCove/issues/475\r\n\r\nThis PR adds a isSerializable property to GUI Controls which is true by default. When it is set to false, the control (and any of its children) will not be serialized. This facilitates scenarios of mixing and editing GUI Editor controls and code-created controls. It also adds a corresponding switch on the editor, so it can be changed easily.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/package.json",
                    "packages/dev/gui/src/2D/controls/button.ts",
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/focusableButton.ts",
                    "packages/dev/gui/src/2D/controls/grid.ts",
                    "packages/dev/gui/src/2D/controls/stackPanel.ts",
                    "packages/dev/gui/test/unit/serialization.test.ts",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui"
                ]
            },
            {
                "pr": "14721",
                "title": "Particle systems: When using the cylinder-directed particle emitter, fix the start direction when in local space",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/EmitterTypes/cylinderParticleEmitter.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14718",
                "title": "Basic inspector for V2 physics",
                "description": "Related to [#13711](https://github.com/BabylonJS/Babylon.js/issues/13711)\r\nThis adds a basic interface for physics properties on the inspector, following the same style as V1 physics. One possible evolution would be to display physics bodies and shapes in their own entity tree, instead of being a property of the mesh.\r\n<img width=\"776\" alt=\"image\" src=\"https://github.com/BabylonJS/Babylon.js/assets/6002144/f712e0fe-5869-4dae-adde-68caecea5a5c\">\r\n\r\nWhen the body is instanced, it is possible to select an instance through the first line:\r\n<img width=\"792\" alt=\"image\" src=\"https://github.com/BabylonJS/Babylon.js/assets/6002144/776e9e64-9430-48ab-b2a6-48b799ebaa90\">\r\n\r\nOnly the mass is editable, because friction/restitution are properties of a shape, which can be shared between different bodies, so changing it could affect other bodies.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/physics/physicsBodyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/physics/physicsMassPropertiesGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/physics/physicsMaterialGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14720",
                "title": "Gizmo manager enhancement",
                "description": "been working with gizmo manager for a quite a while and it's super painful to check if we're dragging a gizmo (gizmo axis or bounding box sphere/cubes) so I added a isDragging variable for that. \r\n\r\nwhile on it, a releaseDrag method both on each gizmo (position, rotation, scale,boundingBox) and on gizmo manager can be quite handy and will save the developers so much time. \r\n\r\nalso, we can attach mesh/node but if we want to get that specific mesh/node we have to check which gizmo is enabled and get the data from there. so I added getters for the attachedMesh and attachedNode.",
                "author": {
                    "name": "SalmaBesbes",
                    "url": "https://github.com/SalmaBesbes"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "14719",
                "title": "Linting - require returns, params",
                "description": "It is now an error (lint error) not to define a return ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc.js",
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Actions/condition.ts",
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/followCamera.ts",
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Decorators/nodeDecorator.ts",
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/Engines/Native/nativePipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheBindGroups.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCoordinateTransformBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphMultiGateBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSequenceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSwitchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts",
                    "packages/dev/core/src/Gamepads/gamepadSceneComponent.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts",
                    "packages/dev/core/src/Helpers/environmentHelper.ts",
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Layers/glowLayer.ts",
                    "packages/dev/core/src/Layers/highlightLayer.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/worleyNoise3DBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/Packer/packer.ts",
                    "packages/dev/core/src/Materials/Textures/colorGradingTexture.ts",
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/hdrCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/htmlElementTexture.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Maths/math.path.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/Builders/hemisphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/noiseBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/csg.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/linesMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/cubemapToSphericalPolynomial.ts",
                    "packages/dev/core/src/Misc/assetsManager.ts",
                    "packages/dev/core/src/Misc/decorators.ts",
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "14716",
                "title": "WebXR world scaling factor",
                "description": "Fixes #12441\n\nThe webxr session manager now has a world scaling factor that allows to set the units in which your world is defined. i.e., if, in your world, 1 unit is 1 cm, you would define the factor to be 100. the native XR component will still maintain the 1 unit 1 meter relation, but the data from and to XR are scaled correctly according to the scale factor.\n\nControllers and hands are scaled as well. So is the teleportation ring.\n\nNote - any other values should be scaled by the dev itself. For example, the ray's distance will be in world scale. Another example - to define gestures for the hands components you would need to use the components' absolute position and scale the distances accordingly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts",
                    "packages/dev/core/src/XR/features/WebXREyeTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRHitTest.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts",
                    "packages/dev/core/src/XR/webXRCamera.ts",
                    "packages/dev/core/src/XR/webXRInput.ts",
                    "packages/dev/core/src/XR/webXRInputSource.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14717",
                "title": "Add typedoc missing comments",
                "description": "This PR adds missing comments detected by our typedoc script. It also marks the method ReviewUniform in the CustomMaterial class as `@internal`. And it adds an extra check to the typedoc script to detect some comments that weren't picked up.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Actions/directActions.ts",
                    "packages/dev/core/src/Behaviors/Cameras/autoRotationBehavior.ts",
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Engines/Native/nativeDataStream.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConditionalDataBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCoordinateTransformBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphTernaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphMultiGateBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSequenceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSwitchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts",
                    "packages/dev/core/src/Gamepads/gamepad.ts",
                    "packages/dev/core/src/Helpers/environmentHelper.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Materials/material.decalMapConfiguration.ts",
                    "packages/dev/core/src/Meshes/csg.ts",
                    "packages/dev/core/src/Misc/filesInput.ts",
                    "packages/dev/core/src/Particles/solidParticleSystem.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/gradient/BaseGradient.ts",
                    "packages/dev/gui/src/3D/controls/touchHolographicMenu.ts",
                    "packages/dev/loaders/src/SPLAT/splatFileLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/dev/materials/src/custom/customMaterial.ts",
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_dispersion.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_emissive_strength.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_ior.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_specular.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_transmission.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_volume.ts",
                    "scripts/comment-analyzer.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14714",
                "title": "WebGPU: Allow to pass an offscreen canvas to the constructor",
                "description": "See https://forum.babylonjs.com/t/babylon-webgpuengine-and-offscreencanvas-roadmap-for-support/47312",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14715",
                "title": "fix animation events not firing for 1 key animations",
                "description": "Forum issue: https://forum.babylonjs.com/t/animation-event-not-being-executed-when-animation-has-only-single-key-frame/47262",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14711",
                "title": "Gaussian Splatting: add a gaussian splatting mesh and material",
                "description": "Replaces #14585",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/GaussianSplatting/gaussianSplattingMaterial.ts",
                    "packages/dev/core/src/Materials/index.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/core/src/Meshes/GaussianSplatting/gaussianSplattingMesh.ts",
                    "packages/dev/core/src/Meshes/index.ts",
                    "packages/dev/core/src/Rendering/GaussianSplatting/gaussianSplatting.ts",
                    "packages/dev/core/src/Rendering/GaussianSplatting/index.ts",
                    "packages/dev/core/src/Rendering/index.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/gaussianSplattingUboDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/gaussianSplattingVertexDeclaration.fx",
                    "packages/dev/core/src/Shaders/gaussianSplatting.fragment.fx",
                    "packages/dev/core/src/Shaders/gaussianSplatting.vertex.fx",
                    "packages/dev/loaders/src/SPLAT/splatFileLoader.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            }
        ],
        "6.39.0": [
            {
                "pr": "14712",
                "title": "Further updates to typedoc script and missing docs",
                "description": "* It is now possible to filter according to package\n* Fixed most issues in code\n* It is now exporting line and character on top of the filename\n* No more duplications\n* Fixed a small issue with overloaded functions",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Culling/Octrees/octree.ts",
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineMaterialInterfaces.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/prePassTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/Procedurals/noiseProceduralTexture.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts",
                    "packages/dev/core/src/Materials/Textures/thinRenderTargetTexture.ts",
                    "packages/dev/core/src/Maths/math.polar.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineBaseMesh.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureBlock.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/linesMesh.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/hdr.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/panoramaToCubemap.ts",
                    "packages/dev/core/src/Misc/decorators.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Misc/webRequest.ts",
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/v1/physicsImpostor.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/dev/core/src/XR/index.ts",
                    "scripts/comment-analyzer.js",
                    "scripts/typedoc-generator.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14710",
                "title": "TransformNode: Serialize animations",
                "description": "See https://forum.babylonjs.com/t/unable-to-save-the-animations-property-of-the-transformnode/47245",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14709",
                "title": "Error on Naming Convention using eslint",
                "description": "Moved to typescript only, fixed/ignored a few issues found",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc.js",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/src/Engines/Native/nativeRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCachedOperationBlock.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/thinTexture.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Rendering/GlobalIllumination/giRSMManager.ts",
                    "packages/dev/core/src/Rendering/reflectiveShadowMap.ts",
                    "packages/dev/gui/src/2D/controls/inputText.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/propertiesBar.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/dev/loaders/src/SPLAT/splatFileLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathToObjectConverter.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.tsx",
                    "packages/dev/sharedUiComponents/src/components/Toggle.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/NodeRenderer.tsx",
                    "packages/dev/sharedUiComponents/src/lines/checkBoxLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/tools/eslintBabylonPlugin/src/ConfigCache.ts",
                    "packages/tools/eslintBabylonPlugin/src/index.ts",
                    "packages/tools/guiEditor/src/diagram/gizmoScalePoint.tsx",
                    "packages/tools/vsm/src/components/StateBehaviorNodeRenderer.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14708",
                "title": "Fix parent transformations being applied to position/rotation deltas …",
                "description": "…on sixDofDragBehavior\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/strange-sixddrag-behavior-when-the-parent-is-normalized-to-unit-cube/47171",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/sixDofDragBehavior.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14707",
                "title": "add canvas option for VideoRecorder",
                "description": "by default VideoRecoder records the rendering canvas we get from the engine, this optional prop will be useful in case we have multiple canvases ",
                "author": {
                    "name": "SalmaBesbes",
                    "url": "https://github.com/SalmaBesbes"
                },
                "files": [
                    "packages/dev/core/src/Misc/videoRecorder.ts"
                ],
                "tags": []
            },
            {
                "pr": "14706",
                "title": "Some fixes for the doc checks",
                "description": "Slight improvement for the doc checker\n\n* Make sure it parses paths correctly\n* avoid using exclude internal. Reason here is that if the omment is on the internal parent class, it will be marked as not found\n* Avoid cleanup\n\nAlso changed a few sources to fix some missing docs",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc.js",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Maths/math.like.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineBaseMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts",
                    "packages/dev/core/src/Meshes/geodesicMesh.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/Rendering/GlobalIllumination/giRSMManager.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Rendering/reflectiveShadowMap.ts",
                    "packages/dev/core/src/Rendering/renderingManager.ts",
                    "packages/dev/core/src/XR/features/WebXRAbstractFeature.ts",
                    "packages/dev/core/src/XR/features/WebXRDepthSensing.ts",
                    "packages/dev/core/src/XR/features/WebXRSpaceWarp.ts",
                    "packages/dev/core/src/assetContainer.ts",
                    "scripts/comment-analyzer.js",
                    "scripts/typedoc-generator.js"
                ],
                "tags": []
            }
        ],
        "6.38.1": [
            {
                "pr": "14704",
                "title": "add clarification to pbrmaterial docs",
                "description": "Just making the useRoughnessFromMetallicTextureGreen usage a bit clearer. Related forum question: https://forum.babylonjs.com/t/metallic-roughness-specular-glossiness-gltf-sample-assets/47152",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14703",
                "title": "Move public es6 pckages to es2020",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/tsconfig.lts.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/tsconfig.lts.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/tsconfig.lts.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.lts.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.lts.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/tsconfig.lts.json",
                    "packages/public/@babylonjs/shared-ui-components/tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "14702",
                "title": "Updating typedoc check script",
                "description": "This changes slightly the script to check missing docs\n\n* It returns a sierialized object that holds all of the needed information to generate an error message\n* it returns an error code (1) if failed\n* it checks dev files, and allows checking only changed files (based on git's changed files)\n* It checks all of the packages in dev\n* it is possible to run a full check using --full\n* adding typedoc as dependency to be sure it is running correctly",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "scripts/comment-analyzer.js",
                    "scripts/typedoc-generator.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14701",
                "title": "Fixes for native async shader compilation",
                "description": "The main reason for this change is to make it possible to turn off async shader compilation when using native engine. Set `engine.getCaps().parallelShaderCompile = undefined` to turn off async shader compilation.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/IPipelineContext.ts",
                    "packages/dev/core/src/Engines/Native/nativePipelineContext.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14698",
                "title": "WebGPU: Sync with specification",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14691",
                "title": "Flow graph integer math",
                "description": "Implement the nodes described in: https://github.com/KhronosGroup/glTF/pull/2293/commits/d0325892927b9bccecd2375c6a1ca3495ff0bed2\r\n\r\nAdded\r\n- FlowGraphTransposeBlock\r\n- FlowGraphDeterminantBlock\r\n- FlowGraphInvertMatrixBlock\r\n- FlowGraphMatMulBlock\r\n\r\nThe Bitwise Blocks were moved from the Logic module to the Math module.\r\nThe Unary Operation block's input was renamed from \"input\" to \"a\" to match Interactivity.\r\nA new type, FlowGraphInteger, was created. This type is used for representing an integer value, and can be constructed from floats.\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/flowGraphBitwiseBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphInteger.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPathConverterComponent.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts",
                    "packages/dev/core/src/FlowGraph/serialization.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityUtils.ts",
                    "packages/dev/loaders/test/unit/Interactivity/babylon.interactivity.test.ts",
                    "packages/dev/loaders/test/unit/Interactivity/testData.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14695",
                "title": "recast.js update, fix link transform for ragdoll",
                "description": "in sync with https://github.com/BabylonJS/Extensions/pull/265\r\n- random seed mgmt for https://forum.babylonjs.com/t/recastjsplugins-getrandompointaround-is-not-random/46834/4\r\n- smooth path computation for https://forum.babylonjs.com/t/navmesh-paths-dont-follow-navmesh-surface/46713/10\r\n\r\nQuick fix with link transform for ragdoll physics.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Navigation/INavigationEngine.ts",
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts",
                    "packages/dev/core/src/Physics/v2/ragdoll.ts",
                    "packages/tools/babylonServer/public/recast.d.ts",
                    "packages/tools/babylonServer/public/recast.js"
                ],
                "tags": [
                    "enhancement",
                    "navigation"
                ]
            },
            {
                "pr": "14696",
                "title": "Fix issue with movement and 6DOF in XR",
                "description": "Fixes #12439\n\nThe z factor of 6DoF behavior was incorrect. If we define originMesh (which the XR controller has) it uses the right z factor. Also made sure there is no change to xr near interaction.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts"
                ],
                "tags": []
            },
            {
                "pr": "14699",
                "title": "locking in new patch versions for our dependencies",
                "description": "Also removing uneeded dependency (already included where needed)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/sharedUiComponents/package.json"
                ],
                "tags": []
            },
            {
                "pr": "14700",
                "title": "Type matching test in NME inputs fails when replacing Vector on Multiply node",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/addBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/divideBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/multiplyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/subtractBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14697",
                "title": "Spotlight: Fix wrong projected texture when light is parented",
                "description": "See https://forum.babylonjs.com/t/flashlight-follow-camera/20623/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/spotLight.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14693",
                "title": "typedoc comment analyzer",
                "description": "This script is intended to run Typedoc on the code, and use the output JSON to check for any public methods or attributes that don't have a comment.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts",
                    "packages/dev/core/src/Engines/Native/validatedNativeDataStream.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSequenceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/ObjectModel/objectModelInterfaces.ts",
                    "packages/dev/core/src/node.ts",
                    "scripts/comment-analyzer.js",
                    "scripts/typedoc-generator.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14694",
                "title": "Bump follow-redirects from 1.15.3 to 1.15.4",
                "description": "Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.15.3 to 1.15.4.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a> Release version 1.15.4 of the npm package.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a> Disallow bracketed hostnames.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a> Prefer native URL instead of deprecated url.parse.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a> Prefer native URL instead of legacy url.resolve.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a> Simplify _processResponse error handling.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/3d42aecdca39b144a0a2f27ea134b4cf67dd796a\"><code>3d42aec</code></a> Add bracket tests.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/bcbb096b32686ecad6cd34235358ed6f2217d4f0\"><code>bcbb096</code></a> Do not directly set Error properties.</li>\n<li>See full diff in <a href=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.3...v1.15.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.3&new-version=1.15.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "6.38.0": [
            {
                "pr": "14684",
                "title": "improve speed of GaussianSplatting",
                "description": "Current GaussianSplatting uses instances matrices to store gaussian info, this makes the large buffer of ThinInstances dynamic (issue discussed [here](https://forum.babylonjs.com/t/mesh-with-thin-instance-slower-than-with-full-vertices/46756)), which is the current bottleneck on large dataset (e.g. [truck with 2.5 million splats](https://projects.markkellogg.org/threejs/assets/data/truck/truck_high.ksplat)).\r\n\r\nIn this commit, following changes are made:\r\n1. Four sampler2D textures are used to store `covA`, `covB`, `centers`, and `colors`. These textures will not be changed after initialization.\r\n2. `splatIndex` attribute are used to store the sorting index of splats, and it is the only instance attribute to be changed after each sorting.\r\n3. positions are only post to worker once, only `_modelViewMatrix` is updated often\r\n\r\nWith the modification above, [large dataset](https://projects.markkellogg.org/threejs/assets/data/truck/truck_high.ksplat) could be rendered with fps 60, which is originally around 15.",
                "author": {
                    "name": "xiasun",
                    "url": "https://github.com/xiasun"
                },
                "files": [
                    "packages/dev/core/src/Rendering/GaussianSplatting/gaussianSplatting.ts"
                ],
                "tags": []
            },
            {
                "pr": "14690",
                "title": "Adding loadeddata event listener in videoTexture",
                "description": "When in XR, due to interesting network conditions, the video, once updated, is stuck in a readyState === 1, and then stops updating.\nThis adds an extra update call when the video's readyState has changed (i.e. update the video texture, setting it ready, when the video is ready to be played). This solves ths issue, presented in this PG (enter XR, force keyboard event keydown \"p\"):\n\nhttps://playground.babylonjs.com/#YJLYCB#10",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "14688",
                "title": "Port teleportation observable to feature",
                "description": "See https://github.com/BabylonJS/Babylon.js/pull/14660#issuecomment-1880887068\nDeprecated the actual observables, created a reference where they should be used. \nThere was no proper way to do it the other way (which would be cleaner), because the feature is not guaranteed to have been initilized before the camera is constructed.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts",
                    "packages/dev/core/src/XR/webXRCamera.ts",
                    "packages/dev/core/test/unit/XR/webXRFeaturesManager.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14685",
                "title": "Fix camera gizmo set custom mesh",
                "description": "since camera gizmo is composed of **cameraMesh** and **cameraLinesMesh**, using the setCustomMesh method will dispose both of the meshes. the override method will only dispose **cameraMesh** \r\n\r\nwhile on it, I added another optional color3 attribute for frustum lines to allow the user to set gizmo colors separately.",
                "author": {
                    "name": "SalmaBesbes",
                    "url": "https://github.com/SalmaBesbes"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "14689",
                "title": "Add clarification about transformed position in shadowLight.",
                "description": "Related forum post: https://forum.babylonjs.com/t/spotlight-absoluteposition/47055/2",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Lights/shadowLight.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14687",
                "title": "BoudingBoxGizmo Scale Boxes Fix",
                "description": "There was a bug where if the active utility layers camera was a child of an object the calculations would use the local position instead of the desired global position.",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "14686",
                "title": "Add GA to GUI",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/public/index.html"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14680",
                "title": "RSM: add support for reflective shadow maps generation + GI based on RSM",
                "description": "I wasn't sure where to add the files / how to name them (as well as the classes)...\r\nPlease let me know if I need to change anything in this regard.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Rendering/GlobalIllumination/giRSM.ts",
                    "packages/dev/core/src/Rendering/GlobalIllumination/giRSMManager.ts",
                    "packages/dev/core/src/Rendering/GlobalIllumination/index.ts",
                    "packages/dev/core/src/Rendering/index.ts",
                    "packages/dev/core/src/Rendering/reflectiveShadowMap.ts",
                    "packages/dev/core/src/Shaders/bilateralBlur.fragment.fx",
                    "packages/dev/core/src/Shaders/bilateralBlurQuality.fragment.fx",
                    "packages/dev/core/src/Shaders/rsmFullGlobalIllumination.fragment.fx",
                    "packages/dev/core/src/Shaders/rsmGlobalIllumination.fragment.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "14683",
                "title": "Update WebXRControllerTeleportation.ts",
                "description": "Fixes https://github.com/BabylonJS/Documentation/issues/1036",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": []
            },
            {
                "pr": "14681",
                "title": "Allow different versions in PG and Sandbox",
                "description": "This PR will allow adding `version=6.22.0` to a PG or sandbox URL to force a specific babylon version\n\nNote that this works only from version 5.40 and up. For earlier versions we still have the version selector in the playground itself.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/tools/monacoManager.ts",
                    "packages/tools/sandbox/public/index.js"
                ],
                "tags": []
            },
            {
                "pr": "14679",
                "title": "Thin instances: Change default value for the staticBuffer parameter",
                "description": "See https://forum.babylonjs.com/t/mesh-with-thin-instance-slower-than-with-full-vertices/46756/7\r\n\r\nWhen `staticBuffer = false`, Angle (in DirectX mode only - OpenGL is fine) can rearrange the buffers under the hood and completely break performance...\r\n\r\nSo, even if it's a breaking change, it's probably best to have it `true` by default...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "rendering engine",
                    "breaking change"
                ]
            },
            {
                "pr": "14682",
                "title": "Skeleton: Fix empty transform matrices when cloning a mesh",
                "description": "See https://forum.babylonjs.com/t/cloning-mesh-with-skeleton-that-has-needinitialskinmatrix-true-after-some-delay-fails/47054",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts"
                ],
                "tags": [
                    "bug",
                    "bones"
                ]
            },
            {
                "pr": "14674",
                "title": "WebGPU: manage context loss and restoration (part 2)",
                "description": "Follow up to #14655 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.align.ts",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureManager.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRendererSceneComponent.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14678",
                "title": "prevent internal misuse of VB",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.align.ts",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Meshes/geometry.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14677",
                "title": "Fix camera not being reattached after a two pointer SixDofDragBehavior",
                "description": "Forum post: https://forum.babylonjs.com/t/unselected-meshes-move-alongside-the-selected-mesh/46627\r\n\r\nWhen there was more than one pointer activating the SixDofDragBehavior, the `_attachedToElement` property was being set to false, and the camera was not reattached because of it.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/baseSixDofDragBehavior.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14676",
                "title": "Force texture loading with bitmap when in offscreen canvas",
                "description": "Related forum issue: https://forum.babylonjs.com/t/crash-with-web-worker-since-release-6-34-2/46983",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14669",
                "title": "Fix scaling problems in sixDofDragBehavior",
                "description": "Related forum issue: https://forum.babylonjs.com/t/unselected-meshes-move-alongside-the-selected-mesh/46627/11?u=carolhmj\r\n\r\nThe resetting/setting of the parent in `_sceneRenderObserver` seems to be causing some instability in the scale decomposition for nodes with parents and certain rotation/scales, so instead of doing this process (which is also more costly in performance terms), the idea is to do all the operations in the node's local space.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/sixDofDragBehavior.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14673",
                "title": "Expose _rootUrl of gltf loader as public get property",
                "description": "See https://forum.babylonjs.com/t/expose-gltfloader-rooturl-property-for-extensions/46958",
                "author": {
                    "name": "tholub99",
                    "url": "https://github.com/tholub99"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "14672",
                "title": "Nge add2",
                "description": "Associated with #14595 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryClampBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryCrossBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryModBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryPowBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTrigonometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14671",
                "title": "Nge new blocks",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryArcTan2Block.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryLerpBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryNLerpBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometrySmoothStepBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryStepBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTrigonometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.37.1": [
            {
                "pr": "14670",
                "title": "Camera framing behavior: Fix crash",
                "description": "Fix after #14666",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "14668",
                "title": "Clean up ground mesh documentation",
                "description": "I noticed some repetition between the option descriptions and option parameters, so I moved all the descriptions to inside the parameters to make it easier to read. Also added a clarification in `CreateGroundFromHeightMap` to make it clearer that the mesh creation is not immediate.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14667",
                "title": "Sandbox: Allow to drop .webp files",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": [
                    "enhancement",
                    "sandbox"
                ]
            },
            {
                "pr": "14666",
                "title": "ArcRotateCamera: Allow to pass a transform node to setTarget / targetHost",
                "description": "See https://forum.babylonjs.com/t/update-camera-position-as-an-orbit-around-a-transformnode/46773/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Cameras/bouncingBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "enhancement",
                    "inputs"
                ]
            }
        ],
        "6.37.0": [
            {
                "pr": "14660",
                "title": "Add observers to WebXRCamera when a rotation is performed",
                "description": "Add observables `onBeforeCameraTeleportRotation` and `onAfterCameraTeleportRotation` to `WebXRMotionControllerTeleportation`.\r\n\r\n```shell\r\nnpm run format:fix\r\n```",
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts",
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "14655",
                "title": "WebGPU: Manage context lost and restoration",
                "description": "There are still a number of visualization tests that fail after context loss/restoration, but they also fail in WebGL. I'll do another PR to fix them.\r\n\r\nNote: the update to the \"Geometry buffer renderer\" visualization test is due to the fact that it was still using the old SSR post-process. I've updated it with the SSR rendering pipeline.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.dynamicTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.dynamicTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBufferManager.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheBindGroups.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipelineTree.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheSampler.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuClearQuad.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuQuerySet.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureManager.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/hardwareTextureWrapper.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/core/src/Meshes/WebGPU/webgpuDataBuffer.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Misc/brdfTextureTools.ts",
                    "packages/dev/core/src/Misc/rgbdTextureTools.ts",
                    "packages/dev/core/src/Particles/computeShaderParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts",
                    "packages/dev/core/src/types.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/geometrybufferrenderer.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14665",
                "title": "Fix arcrotate gamepad input",
                "description": "https://forum.babylonjs.com/t/gamepad-controller/34409/10",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraGamepadInput.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "14608",
                "title": "Flow Graph/Interactivity/Animation Pointer Object model",
                "description": "# Changes\r\n\r\nThis PR adds a new module, \"ObjectModel\", and interfaces, whose main objective is to perform the conversion between a string \"path\" and a object that can be manipulated. This is useful for some glTF extensions, such as Interactivity and Animation Pointer. For example, an Animation Pointer path, such as `/nodes/0/translation` is converted to a list of AnimationProperty objects which are used to construct a Babylon animation.\r\n\r\nThis translation is performed by the implementers of an interface IPathToObjectConverter, whose method `convert` takes a path and returns this special object. There are three implementations of it. One (FlowGraphPathConverter) is aimed to resolve paths in the FlowGraphContext, and two are aimed to resolve glTF paths.\r\n\r\nAs part of this change, the existing FlowGraphPath class was deleted, as its functionality is superseded by the FlowGraphPathConverter class. \r\n\r\nIn addition, the KHR_animation_pointer class was slightly tweaked to use its path converter.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphPlayAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphStopAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlockWithOutSignal.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPath.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPathComponent.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPathConverter.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPathConverterComponent.ts",
                    "packages/dev/core/src/FlowGraph/index.ts",
                    "packages/dev/core/src/FlowGraph/serialization.ts",
                    "packages/dev/core/src/FlowGraph/typeDefinitions.ts",
                    "packages/dev/core/src/ObjectModel/index.ts",
                    "packages/dev/core/src/ObjectModel/objectModelInterfaces.ts",
                    "packages/dev/core/src/index.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphEventNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphSerialization.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphUtils.test.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_interactivity.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/gltfPathToObjectConverter.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityFunctions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathCameraExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathMaterialExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathToObjectConverter.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathTransformNodeExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/test/unit/Interactivity/babylon.interactivity.test.ts",
                    "packages/dev/loaders/test/unit/Interactivity/testData.ts"
                ],
                "tags": [
                    "flow graph"
                ]
            },
            {
                "pr": "14664",
                "title": "Fix material plugin calls without register",
                "description": "Superseds https://github.com/BabylonJS/Babylon.js/pull/14662",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "14661",
                "title": "fix(ShaderMaterial): correct serialization key spelling mistake",
                "description": "correct spelling mistake of serializationObject of `ShaderMaterial`\r\nthe key about `floatsArray` in serialized and deserialized object are inconsistent，then deserializing `floatsArray` will fail.\r\n\r\nserialize\r\n<img width=\"595\" alt=\"截屏2024-01-01 04 49 18\" src=\"https://github.com/BabylonJS/Babylon.js/assets/33159342/e6d7a971-8298-4f71-9754-341b96436d04\">\r\n\r\nParse\r\n<img width=\"560\" alt=\"截屏2024-01-01 04 50 08\" src=\"https://github.com/BabylonJS/Babylon.js/assets/33159342/85ac61b9-16d7-4ce5-ac7e-07a4e212b884\">\r\n",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14657",
                "title": "DynamicTexture: add sanity check in dispose",
                "description": "See https://forum.babylonjs.com/t/detached-element-memory-leak-when-disposing-dynamic-textures/46668/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/dynamicTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "14650",
                "title": "refactor(renderTargetTexture): optimized render",
                "description": "improved the performance of render a bit",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Rendering/renderingManager.ts"
                ],
                "tags": []
            }
        ],
        "6.36.1": [
            {
                "pr": "14659",
                "title": "Declaration generation for UMD",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts"
                ],
                "tags": []
            }
        ],
        "6.36.0": [
            {
                "pr": "14652",
                "title": "WebGPU: Fix breaking change in the constructor of ComputeShader",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Compute/computeShader.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14651",
                "title": "ProceduralTexture: Add options when creating a (custom) procedural texture",
                "description": "See https://forum.babylonjs.com/t/how-to-make-the-render-result-type-of-customproceduretexture-float/46724",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/customProceduralTexture.ts",
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "14649",
                "title": "fix comments",
                "description": "just fix comments",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14647",
                "title": "DynamicTexture: Add a dispose method",
                "description": "See https://forum.babylonjs.com/t/detached-element-memory-leak-when-disposing-dynamic-textures/46668",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts",
                    "packages/dev/core/src/Materials/Textures/dynamicTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "14646",
                "title": "SSR: Add support for world/unsigned normals",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx"
                ],
                "tags": [
                    "enhancement",
                    "post-process"
                ]
            },
            {
                "pr": "14645",
                "title": "GeometryBufferRenderer: Add a getter for \"unsigned normals\"",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14644",
                "title": "GeometryBufferRenderer: Allow to define texture type and format",
                "description": "I also added a capability to know if RG11B10UFloat is color renderable.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRendererSceneComponent.ts",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14642",
                "title": "Incremental bounding box scaling",
                "description": "followup https://forum.babylonjs.com/t/incremental-snapping-for-bbox-gizmo/46527/3",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14640",
                "title": "WebGPU: Inject dynamic and uniform buffer extensions in WebGPU engine",
                "description": "Replaces #14639 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.dynamicBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.uniformBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/index.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            }
        ],
        "6.35.0": [
            {
                "pr": "14638",
                "title": "refactor(scaleGizmo): isHovered",
                "description": "Optimize `isHovered` execution efficiency and readability",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14636",
                "title": "Nit",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts",
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14634",
                "title": "fix Loading Image for Native",
                "description": "fix regression for Native introduced with https://github.com/BabylonJS/Babylon.js/pull/14620",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14633",
                "title": "SSR: Don't recalculate the camera view/projection matrices each frame",
                "description": "See https://forum.babylonjs.com/t/problems-when-ssr-is-enabled/46587",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "14632",
                "title": "Bake morph data: allow negative influences",
                "description": "See https://forum.babylonjs.com/t/getpositiondata-false-true-does-not-return-updated-morphtarget-vertices-when-influences-are-negative/46580",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14631",
                "title": "LH/RH support for Ragdolls",
                "description": "Removed LH/RH limitation.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/ragdoll.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14629",
                "title": "Fix issue when exporting to glTF with a node material",
                "description": "Fixes #14618",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "14628",
                "title": "Force alpha to be 1 with opaque alpha mode in glTF",
                "description": "See https://forum.babylonjs.com/t/why-do-importing-the-same-glb-model-have-different-rendering-details-on-the-sandbox-page-and-locally/46422",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMaterialMetallicRoughness0.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMaterialMetallicRoughness1.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMaterialSpecularGlossiness0.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMaterialSpecularGlossiness1.png"
                ],
                "tags": [
                    "bug",
                    "loaders",
                    "glTF"
                ]
            }
        ],
        "6.34.3": [
            {
                "pr": "14624",
                "title": "WebGPU: Add support for GPU timing for compute shaders, render targets and main render pass",
                "description": "This PR adds a `gpuTimeInFrame` property on `ComputeShader`, `RenderTargetWrapper` and `WebGPUEngine` and is updated with the corresponding GPU time for the last frame (for `WebGPUEngine`, it is the time we spend in the main render pass).\r\n\r\nFor this to work, the \"timestamp-query\" extension must be supported by the browser and enabled when creating the device (the Playground does it automatically if the browser supports it, because it enables all supported extensions). At the time, only Canary supports it. You must enable the feature at runtime by doing `engine.enableGPUTimingMeasurements = true` (will do nothing in WebGL of course!).\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/4152247/e06e6beb-9ea1-4b5b-a5e2-008b69cb8385)\r\n\r\nI also performed some changes so that we don't generate errors for mapped buffers when the device is destroyed.\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Compute/computeShader.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBufferManager.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuOcclusionQuery.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPerfCounter.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuQuerySet.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTimestampQuery.ts",
                    "packages/dev/core/src/Engines/index.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts",
                    "packages/dev/core/src/Misc/perfCounter.ts",
                    "packages/dev/core/src/Particles/computeShaderParticleSystem.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockSubSurface.fx"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            }
        ],
        "6.34.2": [
            {
                "pr": "14627",
                "title": "add isDisposed method to physicsbody",
                "description": "Forum issue: https://forum.babylonjs.com/t/safe-way-to-check-if-a-physicsbody-object-has-been-disposed-in-babylon-js/46512 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            },
            {
                "pr": "14626",
                "title": "small improvements for ragdoll",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/ragdoll.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14625",
                "title": "Fix rearm for crowd agent onreach observable",
                "description": "follow up https://forum.babylonjs.com/t/question-about-crowd-agentgoto/46532",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14622",
                "title": "Fix broken glTF validator array buffer management",
                "description": "Fixes #14597\r\n\r\nThis change also adds better type safety to load file async functions.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Rendering/GaussianSplatting/gaussianSplatting.ts",
                    "packages/dev/core/src/XR/motionController/webXRMotionControllerManager.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFValidation.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14623",
                "title": "WebGPU: Reseting ubos in flushFramebuffer does not work",
                "description": "Rollback one of the change from #14611 ([this PG](https://playground.babylonjs.com/?webgpu#XDNVAY#0) fails because of it, for eg).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14621",
                "title": "RenderTargetTexture: Fix wrong transformation matrix set on scene when multiple scenes are defined",
                "description": "This PR set the scene transformation matrix at the end of the `RenderTargetTexture.render` call as soon as two or more scenes are created:\r\n\r\n#6363 \r\n\r\nWithout this change, this PG does not work: https://playground.babylonjs.com/#01KDKN\r\n\r\nHowever, the PG is wrong! As `scene2.render()` is never called, the scene transformation matrix is not updated. In this case, it's the user responsibility to call `scene.updateTransformationMatrix(true)` so that the transformation matrix is up to date.\r\n\r\nHere's the corrected PG: https://playground.babylonjs.com/#01KDKN#14\r\n\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14596",
                "title": "Allow triangle list with glTF draco",
                "description": "See https://forum.babylonjs.com/t/draco-compressed-triangle-strips-not-loaded/46182.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_draco_mesh_compression.ts"
                ],
                "tags": []
            },
            {
                "pr": "14620",
                "title": "Add buffer based variants of displacement and height",
                "description": "Closes #14610 by adding a buffer based version of the images based process for heightmap and displacement.\r\n",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "6.34.1": [
            {
                "pr": "14614",
                "title": "No console es lint rule",
                "description": "Avoid using console.log, especially in our core libraries. \nTools can use Logger, as they are served in the browser",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    ".eslintrc.js",
                    "package.json",
                    "packages/dev/buildTools/src/addJSToCompiledFiles.ts",
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/buildTools/src/copyAssets.ts",
                    "packages/dev/buildTools/src/declarationsEs6.ts",
                    "packages/dev/buildTools/src/devWatcher.ts",
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/index.ts",
                    "packages/dev/buildTools/src/ltsTransformer.ts",
                    "packages/dev/buildTools/src/prepareEs6Build.ts",
                    "packages/dev/buildTools/src/utils.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/followCameraInputsManager.ts",
                    "packages/dev/core/src/Debug/skeletonViewer.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeInliner.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.ts",
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/reflectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/core/src/Misc/assetsManager.ts",
                    "packages/dev/core/src/Misc/dds.ts",
                    "packages/dev/core/src/Misc/logger.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/screenSpaceCurvaturePostProcess.ts",
                    "packages/dev/core/src/PostProcesses/screenSpaceReflectionPostProcess.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPhysics.ts",
                    "packages/dev/core/src/XR/features/WebXRMeshDetector.ts",
                    "packages/dev/core/src/XR/features/WebXRWalkingLocomotion.ts",
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts",
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphDataNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphEventNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphSerialization.test.ts",
                    "packages/dev/gui/src/2D/controls/sliders/baseSlider.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/metadata/metadataPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/inspector/src/components/graph/canvasGraphComponent.tsx",
                    "packages/dev/inspector/src/components/popupComponent.tsx",
                    "packages/dev/loaders/src/OBJ/solidParser.ts",
                    "packages/dev/loaders/test/unit/Interactivity/babylon.interactivity.test.ts",
                    "packages/dev/sharedUiComponents/src/colorPicker/colorPicker.tsx",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandDropdownComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorPicker.tsx",
                    "packages/dev/sharedUiComponents/src/lines/popup.ts",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandBarComponent.stories.tsx",
                    "packages/tools/babylonServer/src/sceneJs.js",
                    "packages/tools/devHost/src/createScene.ts",
                    "packages/tools/guiEditor/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts",
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/playground/src/tools/monacoManager.ts",
                    "packages/tools/reflector/src/index.ts",
                    "packages/tools/sandbox/src/components/reflectorZone.tsx",
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts",
                    "packages/tools/testsMemoryLeaks/src/index.ts",
                    "packages/tools/viewer/src/index.ts",
                    "packages/tools/viewer/src/viewer/defaultViewer.ts",
                    "packages/tools/viewer/src/viewer/renderOnlyViewer.ts",
                    "packages/tools/viewer/src/viewer/viewer.ts",
                    "packages/tools/vsm/src/actions/actions/LogAction.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14617",
                "title": "ArcRotateCamera: Fix alpha offset inversion to not include beta = 0",
                "description": "User @Starryi found a bug where the camera work invert alpha rotation when the beta angle was 0.  Based on their approach, I've generalized their fix to just exclude a 0 beta angle from that inversion.\r\n\r\nOriginal PR: https://github.com/BabylonJS/Babylon.js/pull/14609\r\n(Thanks for @Starryi for the find and initial fix)",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "14616",
                "title": "Always use volume IOR for refraction",
                "description": "I noticed that, after my PR that added dispersion rendering, we were no longer using the volume's IOR for refraction. Instead, the surface's IOR was always being used. This is incorrect.",
                "author": {
                    "name": "MiiBond",
                    "url": "https://github.com/MiiBond"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockSubSurface.fx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14611",
                "title": "WebGPU: ubos and storage buffers optimizations",
                "description": "See https://forum.babylonjs.com/t/i-am-writing-webgpu-ray-tracer-is-anyone-interested-in-this-topic/42188/25",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Buffers/storageBuffer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14615",
                "title": "Animation: Fix return value of createKeyForFrame when key already exists",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14613",
                "title": "Keep initial value for incremental scaling",
                "description": "follow up https://forum.babylonjs.com/t/incrementalsnap-resets-mesh-scaling/46290",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14606",
                "title": "Physics V2 ragdolls",
                "description": "Experimental\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1312968/9e1fb827-eaac-4149-9ee6-78fe916fe276)\r\n\r\nTest PG : https://playground.babylonjs.com/#PS5DF6",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/index.ts",
                    "packages/dev/core/src/Physics/v2/ragdoll.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics",
                    "animations",
                    "new feature",
                    "bones"
                ]
            },
            {
                "pr": "14612",
                "title": "fix circular dependency",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts"
                ],
                "tags": []
            }
        ],
        "6.34.0": [
            {
                "pr": "14607",
                "title": "Fixing two issues",
                "description": "See https://forum.babylonjs.com/t/malformed-regular-expression-and-reassignment-issue-in-inspector/46269",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/stringTools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14605",
                "title": "Morph: Fix baking of morph data when multiple non zero influences",
                "description": "See https://forum.babylonjs.com/t/ray-tracing-for-nested-meshes/46088/28",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            }
        ],
        "6.33.2": [
            {
                "pr": "14604",
                "title": "ComputeShader: Add a fastMode switch",
                "description": "See https://forum.babylonjs.com/t/i-am-writing-webgpu-ray-tracer-is-anyone-interested-in-this-topic/42188/16",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Compute/computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.computeShader.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14543",
                "title": "WebXR mesh detection",
                "description": "This PR augments the current implementation of the WebXR mesh detection to support the webxr specs - https://immersive-web.github.io/real-world-meshing/\n\nA new option was added - generate mesh based on the geometry provided. The mesh will be updated if the vertex data is updated by the underlying system.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.nativeextensions.d.ts",
                    "packages/dev/core/src/XR/features/WebXRMeshDetector.ts"
                ],
                "tags": [
                    "enhancement",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "14601",
                "title": "GaussianSplat .PLY file format support",
                "description": ".ply file format support\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1312968/ce063bb5-ede0-4722-be8c-14641f5af30d)\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/loaders/src/SPLAT/splatFileLoader.ts"
                ],
                "tags": [
                    "loaders",
                    "new feature"
                ]
            },
            {
                "pr": "14603",
                "title": "Disable UBOs in Chrome mobile...",
                "description": "UBOs are broken on Chrome Mobile 120+\r\n\r\nhttps://forum.babylonjs.com/t/problems-on-chrome-mobile-since-december-7th-2023/46288/16",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14602",
                "title": "AnimationGroupMask: Add a disabled property",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/animationGroupMask.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14592",
                "title": "Add a log with the test name when using playwright",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/playwright/visualizationPlaywright.utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "14500",
                "title": "Flow Graph: glTF parsing v1",
                "description": "I'm opening the PR early on so I can collect some feedback on it. \r\nThe main method of parsing is to first convert from the glTF format to a serialized Flow Graph format, then, parse that serialized graph.\r\nSome additional changes are: \r\n- Many node sockets had their names changed so they match better the glTF names, such as \"onStart\" -> \"in\", \"onDone\" -> \"out\", \"leftInput\" -> \"a\", \"rightInput\" -> b.\r\n- Most math nodes were deleted and new math nodes are being added that are polymorphic, so the type of the operation inputs doesn't need to be known in advance. The rest of the math nodes will be added later.\r\n- GetProperty node was added.\r\n- Some nodes had input values moved to configuration values, such as the GetVariable node.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMatrixBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphNumberMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector2MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector3MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector4MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCachedOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphTernaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphPlayAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphStopAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSequenceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphAsyncExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPath.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphWithOnDoneExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/index.ts",
                    "packages/dev/core/src/FlowGraph/serialization.ts",
                    "packages/dev/core/src/FlowGraph/typeDefinitions.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphDataNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphEventNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphSerialization.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphUtils.test.ts",
                    "packages/dev/loaders/package.json",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_interactivity.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityFunctions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathCameraExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathMaterialExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityPathTransformNodeExtensions.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/interactivityUtils.ts",
                    "packages/dev/loaders/test/unit/Interactivity/babylon.interactivity.test.ts",
                    "packages/dev/loaders/test/unit/Interactivity/testData.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "14600",
                "title": "Fix code generation in GeometryInputBlock.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/nodegeometry-connector-error-and-a-question-on-mapping-height/46275",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts"
                ],
                "tags": [
                    "bug",
                    "nge"
                ]
            },
            {
                "pr": "14598",
                "title": "Light: Add helper methods to retrieve view and projection matrices",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Lights/shadowLight.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14599",
                "title": "Scene: Fix return type of getMeshesByTags",
                "description": "See https://forum.babylonjs.com/t/inconsistent-getmeshesbyxxx-functions-return-types/46324",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14594",
                "title": "ACE: Fixed incorrect display of loop mode when editing a property",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/editAnimationComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "ace"
                ]
            },
            {
                "pr": "14593",
                "title": "PBRCustomMaterial & CustomMaterial support MaterialPlugin",
                "description": "`PBRCustomMaterial` is a subclass of `PBRMaterial`,  but does not support MaterialPlugin.\r\n\r\nIn the implementation of PBRCustomMaterial, the shader injection point is removed ,  causing material plugin to be unable to inject custom code.\r\n\r\n`CustomMaterial` has the same problem.\r\n\r\nThis playground https://www.babylonjs-playground.com/#VNLCRN can reproduce the issue. \r\nIn the playground, PBRCustomMaterial using MeshDebugPluginMaterial, does not rendering wireframe.\r\n\r\nThe playgroud rendering result is as follows\r\n<img width=\"406\" alt=\"截屏2023-12-08 23 33 18\" src=\"https://github.com/BabylonJS/Babylon.js/assets/33159342/3f31574c-d501-417e-a125-8998c0f71594\">\r\n**red** mesh use `PBRCustomMaterial`, **green** mesh use `PBRMaterial`\r\n**yellow** mesh use `CustomMaterial`, **blue** mesh use `StandardMaterial`\r\n\r\nI hope to fix the problem by this commit.\r\nIn the commit, \r\n1. reorganize the shader creation  in `PBRCustomMaterial` and `CustomMaterial`\r\n2. replace the shader code only if the corresponding injected code is not empty\r\n3. retain injection points\r\n\r\nAfter fixing this issue, the above plaground rendering result is as follows\r\n\r\n<img width=\"406\" alt=\"截屏2023-12-08 23 38 49\" src=\"https://github.com/BabylonJS/Babylon.js/assets/33159342/2aec0c4d-a3e8-46f8-a029-aff3b7737a99\">\r\n\r\n",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/materials/src/custom/customMaterial.ts",
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts"
                ],
                "tags": []
            }
        ],
        "6.33.1": [
            {
                "pr": "14589",
                "title": "Gaussian Splatting file loader",
                "description": "with  `@experimental` flag\r\nMore file format are expected to be supported in (near) future like .PLY format.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Rendering/GaussianSplatting/gaussianSplatting.ts",
                    "packages/dev/loaders/src/SPLAT/index.ts",
                    "packages/dev/loaders/src/SPLAT/splatFileLoader.ts",
                    "packages/dev/loaders/src/index.ts"
                ],
                "tags": [
                    "loaders"
                ]
            },
            {
                "pr": "14591",
                "title": "PBR material: Fix duplication of colorinstance in attribute array",
                "description": "See https://forum.babylonjs.com/t/data-transfer-from-compute-shader-to-renderer/45576",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14577",
                "title": "MeshUVSpaceRenderer UV Edge Blending",
                "description": "This PR fixes the UV island seam issue by introducing an optional blending step where the edges of the UVs are blended, enabled using the flag: uvEdgeBlending. Very useful for UV islands.\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/51108458/0b562012-3299-4905-acf5-e6ae73080ff4)\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/51108458/69a8370b-6f00-4dc4-9fce-4283efe5a7e4)\r\n\r\n\r\n## How to enable the Flag:\r\nmesh.decalMap = new MeshUVSpaceRenderer(m, scene, {width: 4096, height: 4096, uvEdgeBlending: true});\r\n\r\n## Caveats\r\nRTT must have same dimensions as the Mesh UV Space Renderer for the UV Edge Blending to work.\r\nThere may be a way around this, but it would make sense to let the user know through JSDoc comment.\r\n\r\n## Optimisations\r\nMask texture, and final post processing effect only generated once\r\n\r\n## Playground to test:\r\nhttp://localhost:1338/#N10DXG#365\r\n\r\nThe following guidelines have been followed:\r\nhttps://github.com/BabylonJS/Babylon.js/blob/d01337f9d3428033e4d723f9a10187bfddf381e5/contributing.md",
                "author": {
                    "name": "torchesburn",
                    "url": "https://github.com/torchesburn"
                },
                "files": [
                    "packages/dev/core/src/Meshes/meshUVSpaceRenderer.ts",
                    "packages/dev/core/src/Shaders/meshUVSpaceRenderer.vertex.fx",
                    "packages/dev/core/src/Shaders/meshUVSpaceRendererFinaliser.fragment.fx",
                    "packages/dev/core/src/Shaders/meshUVSpaceRendererFinaliser.vertex.fx",
                    "packages/dev/core/src/Shaders/meshUVSpaceRendererMasker.fragment.fx",
                    "packages/dev/core/src/Shaders/meshUVSpaceRendererMasker.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "14587",
                "title": "Make inputTextArea show placeholder",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-inputtextarea-placeholder-does-not-work/46196",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/gui-inputtextarea-withplaceholder.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14590",
                "title": "Mesh: Fix calculation for targets other than position in getNormalsData",
                "description": "See https://forum.babylonjs.com/t/ray-tracing-for-nested-meshes/46088/16",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            }
        ],
        "6.33.0": [
            {
                "pr": "14588",
                "title": "Fix reentrance of  updated vertex data",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setColorsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setPositionsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setTangentsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mergeGeometryBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14586",
                "title": "Fix attribute set difference",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14581",
                "title": "Materials: Add support for logarithmic depth to all materials",
                "description": "See https://forum.babylonjs.com/t/log-depth-buffer-makes-overlapping-meshes-edge-disappear/46152",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/vertexOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildStateSharedData.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/background.fragment.fx",
                    "packages/dev/core/src/Shaders/background.vertex.fx",
                    "packages/dev/core/src/Shaders/line.fragment.fx",
                    "packages/dev/core/src/Shaders/line.vertex.fx",
                    "packages/dev/materials/src/cell/cell.fragment.fx",
                    "packages/dev/materials/src/cell/cell.vertex.fx",
                    "packages/dev/materials/src/cell/cellMaterial.ts",
                    "packages/dev/materials/src/fire/fire.fragment.fx",
                    "packages/dev/materials/src/fire/fire.vertex.fx",
                    "packages/dev/materials/src/fire/fireMaterial.ts",
                    "packages/dev/materials/src/fur/fur.fragment.fx",
                    "packages/dev/materials/src/fur/fur.vertex.fx",
                    "packages/dev/materials/src/fur/furMaterial.ts",
                    "packages/dev/materials/src/gradient/gradient.fragment.fx",
                    "packages/dev/materials/src/gradient/gradient.vertex.fx",
                    "packages/dev/materials/src/gradient/gradientMaterial.ts",
                    "packages/dev/materials/src/grid/grid.fragment.fx",
                    "packages/dev/materials/src/grid/grid.vertex.fx",
                    "packages/dev/materials/src/grid/gridMaterial.ts",
                    "packages/dev/materials/src/lava/lava.fragment.fx",
                    "packages/dev/materials/src/lava/lava.vertex.fx",
                    "packages/dev/materials/src/lava/lavaMaterial.ts",
                    "packages/dev/materials/src/mix/mix.fragment.fx",
                    "packages/dev/materials/src/mix/mix.vertex.fx",
                    "packages/dev/materials/src/mix/mixMaterial.ts",
                    "packages/dev/materials/src/normal/normal.fragment.fx",
                    "packages/dev/materials/src/normal/normal.vertex.fx",
                    "packages/dev/materials/src/normal/normalMaterial.ts",
                    "packages/dev/materials/src/shadowOnly/shadowOnly.fragment.fx",
                    "packages/dev/materials/src/shadowOnly/shadowOnly.vertex.fx",
                    "packages/dev/materials/src/shadowOnly/shadowOnlyMaterial.ts",
                    "packages/dev/materials/src/simple/simple.fragment.fx",
                    "packages/dev/materials/src/simple/simple.vertex.fx",
                    "packages/dev/materials/src/simple/simpleMaterial.ts",
                    "packages/dev/materials/src/sky/sky.fragment.fx",
                    "packages/dev/materials/src/sky/sky.vertex.fx",
                    "packages/dev/materials/src/sky/skyMaterial.ts",
                    "packages/dev/materials/src/terrain/terrain.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.vertex.fx",
                    "packages/dev/materials/src/terrain/terrainMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triPlanarMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triplanar.fragment.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "14584",
                "title": "Animations: Use a new mode for \"relative from current\" animation loop",
                "description": "Follow up to #14563 \r\n\r\nIt was breaking existing code (see https://forum.babylonjs.com/t/camera-animation-bug/46211 among others), so this PR adds a new loop mode for \"relative from current\".",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/addAnimationComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/editAnimationComponent.tsx"
                ],
                "tags": [
                    "animations",
                    "new feature"
                ]
            },
            {
                "pr": "14578",
                "title": "Gaussian Splatting",
                "description": "PG to test: https://playground.babylonjs.com/#Y54RPQ\r\nwith snapshot : https://playground.babylonjs.com/?snapshot=refs/pull/14578/merge#Y54RPQ#0\r\nI'm not very experienced with webworkers and array sharing/detaching, so thank you for an extra care on that part in your review.\r\nKnown issue: when manipulating the GS with a gizmo, it disappears. It's under investigation.\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Rendering/GaussianSplatting/gaussianSplatting.ts",
                    "packages/dev/core/src/Rendering/GaussianSplatting/index.ts",
                    "packages/dev/core/src/Rendering/index.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14583",
                "title": "Factorize",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.plane.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14501",
                "title": "Quick KHR_materials_dispersion implementation",
                "description": "Here's a go at implementing dispersion in the renderer as well as support for the glTF KHR_materials_dispersion extension.\r\n\r\nI'm not completely satisfied with the implementation in the shader. It's a bit ugly but creating another function was the only way I could see to avoid duplicating lots of code.\r\nTo mimic the dispersion effect, I compute the refraction coords 3 times with slightly different IOR's and then sample the environment refraction with each of these. The final refraction is a combination of R from the first, G from the second and B from the last.\r\n<img width=\"670\" alt=\"Screenshot 2023-11-07 at 4 26 55 PM\" src=\"https://github.com/BabylonJS/Babylon.js/assets/1069125/34daa5bb-7225-4014-8bae-8c35c75392b8\">\r\n",
                "author": {
                    "name": "MiiBond",
                    "url": "https://github.com/MiiBond"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/subSurfaceBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockSubSurface.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/tools/gltfComponent.tsx",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.data.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_dispersion.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_dispersion.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "14570",
                "title": "feat (plane):  copyFromPositionAndNormal",
                "description": "It's also common to update planes based on points and normal, so the `copyFromPositionAndNormal` method has been added",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.plane.ts"
                ],
                "tags": []
            },
            {
                "pr": "14582",
                "title": "Fix random generator bug",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/randomBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14580",
                "title": "Fix missing internal sized formats for MSAA render targets",
                "description": "Original issue described here: https://forum.babylonjs.com/t/using-msaa-causes-opengl-errors-with-certain-color-renderable-formats/45994\r\n\r\nFixed by removing `thinEngine._getRGBAMultiSampleBufferFormat` as when creating an MSAA render target, I think you always want the same format in your resolved render target, as in your MSAA render target.\r\n\r\nDoes not validate the formats are color-renderable. But it didn't do that before either, and the function for creating normal render targets doesn't do that either, as far as I can see.",
                "author": {
                    "name": "rapid-images-tore-levenstam",
                    "url": "https://github.com/rapid-images-tore-levenstam"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14559",
                "title": "Gizmo fixes/improvements",
                "description": "November 23 edition\r\n\r\n- https://forum.babylonjs.com/t/use-customrotationquaternion-to-modify-gizmos-posture-but-not-avalible/46021\r\n- https://forum.babylonjs.com/t/gizmo-wrong-rotation-after-usage-of-position-gizmo/45985\r\n- https://forum.babylonjs.com/t/few-gizmo-bugs-and-improvements-requests/45955\r\n- https://forum.babylonjs.com/t/absolute-value-of-snapdistance-in-onsnapobservable-of-positiongizmo/44124\r\n- https://forum.babylonjs.com/t/bug-with-gizmo-after-setpivotmatrix-function/45249",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug",
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14573",
                "title": "Mesh Pick event bubbling",
                "description": "# Changes\r\n\r\nAdds the functionality of \"event bubbling\" to the FlowGraphMeshPickEventBlock. With this, picking a child mesh will lead to any of its parents' picks also being fired. The ordering is that first the child mesh event fires, then the parents, no matter in what order the event blocks were added to the graph. For this, when we start a graph, we need to recompute the order where the event blocks fire for each context. The reordering is done so that, if two FlowGraphMeshPickEventBlocks appear in the ordering, the first one's referenced mesh is a descendant of the second one's reference mesh.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/utils.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphEventNodes.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "14576",
                "title": "PBR custom materials: Fix default shader name",
                "description": "See https://forum.babylonjs.com/t/compute-shaders-ocean-demo-is-not-working/46139\r\n\r\nThere was a name collision with the `CustomMaterial`, which also uses \"custom_\" as the prefix name.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14574",
                "title": "Fix dynamic texture when context restored",
                "description": "https://forum.babylonjs.com/t/restoring-webgl-context-fails-for-dynamictextures/46093",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.dynamicTexture.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14575",
                "title": "Detect procedural texture readyness.",
                "description": "https://forum.babylonjs.com/t/webgl-warning-when-binding-procedural-texture-to-postprocess/46047/6",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            }
        ],
        "6.32.1": [
            {
                "pr": "14571",
                "title": "Avoid duplicate shader created by customMaterial & pbrCustomMaterial",
                "description": "I define a new class extending `PBRCustomMaterial` and declare getter/setter for uniform value, as follows\r\n```js\r\nclass TintColorifyPBRCustomMaterial extends BABYLON.PBRCustomMaterial {\r\n    _tintColor = BABYLON.Color3.Black();\r\n    set tintColor(v) {\r\n        this._tintColor = v;\r\n    }\r\n    get tintColor() {\r\n        return this._tintColor;\r\n    }\r\n\r\n    constructor(name, scene) {\r\n        super(name, scene);\r\n\r\n        this.unlit = true;\r\n\r\n        this.AddUniform('tintColor', 'vec3', this.tintColor);\r\n        this.Fragment_Before_FragColor(`\r\n        finalColor.rgb = tintColor;\r\n        `);\r\n\r\n        this.onBindObservable.add(() => {\r\n            const effect = this.getEffect();\r\n            effect.setColor3('tintColor', this.tintColor);\r\n        });\r\n    }\r\n}\r\n```\r\n\r\nIn use, `TintColorifyPBRCustomMaterial` likes `PBRMaterial` and other builtin material types in babylon library, and is very convenient to use, like follows \r\n```js\r\nconst mat = new TintColorifyPBRCustomMaterial('mat', scene);\r\nmat.tintColor = BABYLON.Color3.Red();\r\n```\r\nThat is my main purpose to define new class.\r\n\r\n\r\nbut, the above code will insert duplicate shaders to `Effect.ShadersStore` in such case: \r\n```js\r\nconst mat1 = new TintColorifyPBRCustomMaterial('mat1', scene);\r\nconst mat2 = new TintColorifyPBRCustomMaterial('mat2', scene);\r\n```\r\nhttps://www.babylonjs-playground.com/#W90UFJ#1 can reproduce the issue.\r\n\r\n\r\nIn this commit, I hope to fix the problem.\r\n\r\nWhen defining new class extending `PBRCustomMaterial` and `CustomMaterial`,  if you specify a shader name for your new material type,  by assigning a value to `this._createdShaderName`, as follows\r\n```js\r\nclass TintColorifyPBRCustomMaterial extends BABYLON.PBRCustomMaterial {\r\n    _tintColor = BABYLON.Color3.Black();\r\n    set tintColor(v) {\r\n        this._tintColor = v;\r\n    }\r\n    get tintColor() {\r\n        return this._tintColor;\r\n    }\r\n\r\n    constructor(name, scene) {\r\n        super(name, scene);\r\n\r\n        this.unlit = true;\r\n\r\n        this.AddUniform('tintColor', 'vec3', this.tintColor);\r\n        this.Fragment_Before_FragColor(`\r\n        finalColor.rgb = tintColor;\r\n        `);\r\n\r\n        this._createdShaderName = 'TingColorify';\r\n\r\n\r\n        this.onBindObservable.add(() => {\r\n            const effect = this.getEffect();\r\n            effect.setColor3('tintColor', this.tintColor);\r\n        });\r\n    }\r\n}\r\n```\r\nbecause `mat1` and `mat2` has same `_createdShaderName`, so no duplicate shaders in `Effect.ShadersStore`\r\n\r\n\r\nIf you do not assign a value to `_createdShaderName`, then the shader name resolving logic as before,  nothing is changed.\r\n",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/materials/src/custom/customMaterial.ts",
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14572",
                "title": "Allow forcing chrome instead of chromium on playwright",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/playwright.config.ts"
                ],
                "tags": []
            },
            {
                "pr": "14549",
                "title": "Better handling of StackPanel layout warning",
                "description": "Related forum issue: https://forum.babylonjs.com/t/control-is-using-height-in-percentage-mode-inside-a-vertical-stackpanel-warnings-after-update-to-6-25-0/45071\r\n\r\nThis PR tries to make more consistent the handling of cases where to display a warning about sizes inside a StackPanel. The main reason this warning should be displayed is in cases where it is not possible to determine the sizes of all controls inside the StackPanel by using just the controls themselves and their children. I'm calling \"fully defined\" the width/height of controls that can be determined using just the size of the control and its children - i.e, the control doesn't depend on its parent for sizing. A regular Control would be fully defined if its size is expressed in pixels instead of percentage. And a Container control would be fully defined if it has `adaptWidth/HeightToChildren` set to true and all its children are fully defined. For a StackPanel, we want its width (in horizontal mode) or height (in vertical mode) to be fully defined, because they adapt to their children. So we display the warning when the corresponding dimension is not fully defined. I didn't reword the warning itself because I couldn't think of a better phrasing, but it might be good to change the phrasing too.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/stackPanel.ts",
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14569",
                "title": "Add analytics",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/public/index.html",
                    "packages/tools/nodeGeometryEditor/public/index.html",
                    "packages/tools/playground/public/debug.html",
                    "packages/tools/playground/public/frame.html",
                    "packages/tools/playground/public/full.html",
                    "packages/tools/playground/public/index.html",
                    "packages/tools/sandbox/public/index.html"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14568",
                "title": "Post process: Add support for uniform buffers",
                "description": "See https://forum.babylonjs.com/t/how-to-use-glsl-uniform-struct-with-webgpu/46071",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/postProcess.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "14563",
                "title": "Animations: Fix loop relative mode to start at the current value of the animated object",
                "description": "See https://forum.babylonjs.com/t/issue-with-relative-animation/46042/4\r\n\r\nI don't know if we should make the change (there's a workaround, see the thread), as it is a breaking change (except if we consider it to be a bug, but it will still break existing animations that use the relative loop mode)...\r\n\r\nPG to test: https://playground.babylonjs.com/#SK7C9Y#7\r\n\r\nAnimations should start from the starting position, but this is not the case.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "bug",
                    "animations",
                    "breaking change"
                ]
            },
            {
                "pr": "14565",
                "title": "Parent group entities to object entities on the OBJ loader",
                "description": "Related forum issue: https://forum.babylonjs.com/t/obj-export-to-babylon-nodes-are-doubled/46028\r\nThe cause for the apparent doubling of nodes was having an \"o\" entity followed by a \"g\" entity:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/c2189f28-3d9d-419c-8889-b3acadcce0fd)\r\nIn our loader, encountering both of these definitions results in creating a new mesh. However, groups are _parts_ of objects, so we should be parenting the group to the object to make that relationship explicit. ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "14566",
                "title": "feat(gizmo): support hover & disable color",
                "description": "### What\r\n\r\n- support hover & disable color for `PlanDragGizmo` & `AxisScaleGizmo`\r\n- relates to https://github.com/BabylonJS/Babylon.js/pull/14525\r\n\r\n### Why\r\n\r\n- to be consistent with `AxisDragGizmo` & `PlaneRotationGizmo`\r\n",
                "author": {
                    "name": "PhilippeMorier",
                    "url": "https://github.com/PhilippeMorier"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14561",
                "title": "Fix opaque only picking for rotated controls",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-issue-with-detectpointeronopaqueonly-when-using-rotation/46033\r\nCurrently, when drawing a GUI Image to the secondary canvas used to test for opaque picking, the current context's rotation and scaling are not considered. This PR adds these transformations.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts",
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14562",
                "title": "Fix camera rotation when exporting glTF",
                "description": "See https://forum.babylonjs.com/t/gltfexport-flipped-camera/45986.\r\n\r\nIntroduced partially by https://github.com/BabylonJS/Babylon.js/pull/13909 but it was already somewhat broken.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "6.32.0": [
            {
                "pr": "14558",
                "title": "Fix Add Color Uniform of CustomMaterial & PBRCustomMaterial",
                "description": "In CustomMaterial & PBRCustomMaterial,  `AddUniform` can not pass color value to shader.\r\n\r\nhttps://www.babylonjs-playground.com/#9ZQL2G can reproduce the bug.\r\n\r\n",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/materials/src/custom/customMaterial.ts",
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14560",
                "title": "Fix for animations with relative loop mode.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/ace-input-value-doesnt-change/46022\r\nThe reason for the errors in ACE was that, when editing values/moving the playhead/etc, the `_interpolate` function was called, but the animation state's `offsetValue` is undefined at the time. Since `offsetValue` is defined as optional, I added a check for the undefined case, returning the previously defined `_staticOffsetValueXXX` values.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts",
                    "packages/dev/core/src/Maths/math.size.ts"
                ],
                "tags": [
                    "bug",
                    "animations",
                    "ace"
                ]
            },
            {
                "pr": "14556",
                "title": "Fix Matrix getRowToRef function",
                "description": "https://forum.babylonjs.com/t/matrix-getrowtoref-incorrectly-handles-4th-row/45995/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "bug",
                    "math"
                ]
            },
            {
                "pr": "14557",
                "title": "Fix incorrect range check when reading glTF buffer",
                "description": "This is a follow up to #14540 which still has an incorrect range check. The intention of the `readViewAsync` checks is to make sure the arguments fit within the given array buffer view.\r\n\r\nI've tested against the PG from [the forum issue](https://forum.babylonjs.com/t/gltffileloader-array-length-out-of-bounds/45849) to make sure it still works.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14551",
                "title": "Mesh: Add a setIndexBuffer method",
                "description": "See https://forum.babylonjs.com/t/how-to-keep-buffers-on-the-gpu-when-using-compute-shaders-for-instancing-or-vertex-data-generation/45951/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "14554",
                "title": "Simple One Word Typo Fix",
                "description": "Fix typo of the word \"gradients\" in the particle system editor.",
                "author": {
                    "name": "FrameBuffer4096",
                    "url": "https://github.com/FrameBuffer4096"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14544",
                "title": "Flow graph path",
                "description": "# Changes\r\nA new class called `FlowGraphPath` was introduced. The intention behind this class is to serve as a generic implementation of the glTF Object Model (https://github.com/KhronosGroup/glTF/blob/d8c3ef5bd9e2054e2caff34c99103953aa29a610/specification/2.0/ObjectModel.adoc), as assets in the interactivity extension are referenced by this model. The path will be resolved against the user variables in the Flow Graph's context. For example, given a context with\r\n```javascript\r\nconst context = new FlowGraphContext(...);\r\ncontext._userVariables = {\r\n a: [ { b: 1 } ]\r\n}\r\n```\r\n\r\nthen, `a/0/b` would resolve to the value \"1\". The dot also works as an separator, so `a/0.b` should also resolve to \"1\".\r\n\r\nIt is also possible to perform runtime substitutions with numeric values on these paths. One example would be `a/{runTimeValue}/b`, where `runTimeValue` can be substituted for any number. The string \"runTimeValue\" is called a \"template string\", and nodes created with paths containing template strings will have an input connection for each of these values. A concrete example:\r\n\r\n```javascript\r\nconst block = new FlowGraphSetPropertyBlock({path: new FlowGraphPath(\"/a/{runTimeValue}/b\")});\r\nblock.getDataInput(\"runTimeValue\").setValue(0, ... );\r\n```\r\nThen, at run-time, the value of the \"runTimeValue\" input would be evaluated, and the string `a/{runTimeValue}/b` resolved as `a/0/b`. Using template strings wouldn't make much sense in this example, as I could just have created the path with the final value I wanted, but if the \"runTimeValue\" input is connected to other data nodes, then we have the dynamic resolution of assets.\r\n\r\nBesides the SetProperty block, other blocks that utilize paths are PlayAnimation and MeshPick. MeshPick is a little special because it is an Event Block - meaning it shouldn't depend on arbitrary input data to function (at least from my understanding - this can be discussed). In this case, it shouldn't receive paths with template strings.\r\n\r\n[EDIT: NEW ADDITION]\r\nTo simplify the common pattern of generating numeric data inputs from a path, and getting those values and substituting them in the path, a new class named FlowGraphPathComponent was added. This class is intended to be a member of blocks that realize this pattern, such as SetProperty or PlayAnimation. So, for example, in the SetProperty constructor:\r\n```javascript\r\npublic constructor(public config: IFlowGraphSetPropertyBlockConfiguration) {\r\n        super(config);\r\n\r\n        this.value = this.registerDataInput(\"value\", RichTypeAny);\r\n        this.templateComponent = new FlowGraphPathComponent(config.path, this);\r\n}\r\n```\r\n\r\nand in execute:\r\n\r\n```javascript\r\npublic _execute(context: FlowGraphContext): void {\r\n        const value = this.value.getValue(context);\r\n        const path = this.templateComponent.substitutePath(context);\r\n        path.setProperty(context, value);\r\n\r\n        this.onDone._activateSignal(context);\r\n}\r\n```\r\n\r\n---\r\n\r\nSome additional changes that ended up being made: on the FlowGraphContext, I switched the `_userVariables`, `_executionVariables`, etc, i.e, the Map values, to be simple Records. The reason for that is just making the nested access in _userVariables easier, and the others were changed to keep the same style. It should have a bonus of not having any overhead from the Map class. \r\n\r\n# Examples\r\nSome PGs that use the paths:\r\n- #KSTQJU#9 - SetProperty with path: click on the left sphere and the right sphere will change position\r\n- #KSTQJU#10 - SetProperty with template string\r\n- #KSTQJU#11 - MeshPick and SetProperty with template string\r\n- #KSTQJU#13 - MeshPick and PlayAnimation with template string\r\n- #GPPEUA#11 - Car semaphore example\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMatrixBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphNumberMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector2MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector3MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector4MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCachedOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConditionalDataBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCoordinateTransformBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphPlayAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphStopAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphMultiGateBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSwitchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPath.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphPathComponent.ts",
                    "packages/dev/core/src/FlowGraph/index.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphSerialization.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphUtils.test.ts",
                    "tsconfig.test.json"
                ],
                "tags": []
            },
            {
                "pr": "14550",
                "title": "Update dependencies",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraDeviceOrientationInput.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSource.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceTypes.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/core/src/Misc/dds.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/types.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/tools/reflector/package.json"
                ],
                "tags": []
            },
            {
                "pr": "14553",
                "title": "Thin instances: Support forcedInstanceCount with thin instances",
                "description": "See https://forum.babylonjs.com/t/how-to-keep-buffers-on-the-gpu-when-using-compute-shaders-for-instancing-or-vertex-data-generation/45951/7",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "14552",
                "title": "Engine: Misc helpers",
                "description": "Follow up to #14546 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14547",
                "title": "Allow Mod Node to use float as second operand",
                "description": "https://docs.gl/sl4/mod\r\n\r\nallow mod block's firtst operand to be float/vec2/vec3/vec4 and second operand be float, such as `mod(vec2(0.5, 0.5), 0.5)`",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/modBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14548",
                "title": "GeometryBufferRenderer: Use bone texture if supported",
                "description": "See https://forum.babylonjs.com/t/error-on-new-ssrrenderingpipeline/41812/16\r\n\r\nWe used uniforms even when bone texture was supported because of the velocity target (which only supports passing previous bone data through uniforms). The PR let use bone texture for the model while still using uniforms for previous bone data.\r\n\r\nPG to test: https://playground.babylonjs.com/#E5YGEL#59\r\n\r\nYou can see with Spector that with the current code, the bone matrices are passed through uniforms, whereas the shader uses the bone texture when the PR is applied.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/bonesDeclaration.fx"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14546",
                "title": "Engine: Misc helpers",
                "description": "Miscellaneous changes I needed for my pet project.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRendererSceneComponent.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14542",
                "title": "glTF transmission: Fix rendering sprites and particle systems in the opaque texture",
                "description": "See https://forum.babylonjs.com/t/sprite-not-showing-behind-a-glass-material/45874/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_transmission.ts"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "14538",
                "title": "Allows SkeletonViewer to render skeleton without mesh",
                "description": "Allows SkeletonViewer to render skeleton without mesh, handling null mesh.\r\n\r\nTested in the following playgrounds:\r\nBroke in Master:\r\nhttps://playground.babylonjs.com/#HJEBQF#5\r\n\r\nWorks with the PR:\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/14538/merge/index.html#HJEBQF#5\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/14538/merge/index.html#HJEBQF#6",
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/skeletonPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14541",
                "title": "Fix highlight layer properties in inspector",
                "description": "https://forum.babylonjs.com/t/highlightlayer-showing-invalid-parameters-in-the-inspector/45863/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRRawCameraAccess.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/layers/layerPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            }
        ],
        "6.31.0": [
            {
                "pr": "14540",
                "title": "glTF loader: Fix checking bounds when creating a typed array",
                "description": "See https://forum.babylonjs.com/t/gltffileloader-array-length-out-of-bounds/45849",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "14539",
                "title": "docs: s/the the/the",
                "description": "### What\r\n\r\n- remove double \"the\" in comments :detective:\r\n\r\n### Why\r\n\r\n- comments without typos are easier to read :innocent: ",
                "author": {
                    "name": "PhilippeMorier",
                    "url": "https://github.com/PhilippeMorier"
                },
                "files": [
                    ".build/changelog.json",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineBaseMesh.ts",
                    "packages/dev/core/src/Meshes/groundMesh.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/bloomEffect.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/harmonicsFunctions.fx",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/viewer/src/initializer.ts"
                ],
                "tags": []
            },
            {
                "pr": "14537",
                "title": "Update skeletonViewer.ts",
                "description": "Skip mesh operations when they are not required.\r\n\r\nThis is the first step to render skeletons without a mesh.",
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14536",
                "title": "OIT: Add a isReady method to the depth peeling renderer",
                "description": "See https://forum.babylonjs.com/t/screenshots-while-using-oit-seems-broken/45767/4\r\n\r\nNote: this PR also adds names to some textures, to help debugging",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts",
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14535",
                "title": "Multi canvas rendering: Allow multiple cameras when registering a view",
                "description": "See https://forum.babylonjs.com/t/multi-canvas-picture-in-picture/45808/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14534",
                "title": "feat(gizmo): set custom rotation color",
                "description": "### What\r\n\r\n- adds setter to allow changing color of the drag angle sector drawn by the rotation shader  \r\n  <img src=\"https://github.com/BabylonJS/Babylon.js/assets/12933406/059a53a1-aceb-41a7-aed5-2962fba9b369\" height=\"40\">\r\n- relates to https://github.com/BabylonJS/Babylon.js/pull/14525\r\n\r\n### Why\r\n\r\n- to allow changing the color after the gizmo is created\r\n- to allow having different color for mesh (torus) and drag angle sector\r\n\r\n### Visuals\r\n\r\n|Before [PG](https://playground.babylonjs.com/#VJ0MJD#1)|After [PG](https://babylonsnapshots.z22.web.core.windows.net/refs/pull/14534/merge/index.html#VJ0MJD#1) (blue & yellow)|\r\n|-|-|\r\n|![babylonjs-gizmo-before](https://github.com/BabylonJS/Babylon.js/assets/12933406/00b727a4-19e8-4bb2-aaa2-5896120333ee)|![babylonjs-gizmo-after](https://github.com/BabylonJS/Babylon.js/assets/12933406/2b80ad0f-1e33-4f98-8f79-a1177f09603e)|\r\n\r\n",
                "author": {
                    "name": "PhilippeMorier",
                    "url": "https://github.com/PhilippeMorier"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "14532",
                "title": "Usability Fix",
                "description": "https://forum.babylonjs.com/t/matrix-lookatlhtoref-not-returning/45754",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14533",
                "title": "Fix inputTextArea isReadOnly",
                "description": "https://forum.babylonjs.com/t/inputtextarea-isreadonly-how-to/45818",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14526",
                "title": "Add HDR Filtering to webxr light estimation",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRLightEstimation.ts"
                ],
                "tags": []
            },
            {
                "pr": "14531",
                "title": "refactor: optimize getForwardRayToRef",
                "description": "optimize getForwardRayToRef",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": []
            },
            {
                "pr": "14525",
                "title": "feat(gizmo): custom colors for gizmos",
                "description": "### What\r\n\r\n- support setting custom colors for hover & disable material for\r\n  - plane-drag gizmo\r\n  - plane-rotation gizmo\r\n- related https://forum.babylonjs.com/t/setts-of-gizmo-color-when-events/22271\r\n\r\n### Why\r\n\r\n- to avoid setting it via accessing \"private\" members\r\n- to avoid white reflection color on manually set hover material  \r\n  ![image](https://github.com/BabylonJS/Babylon.js/assets/12933406/2949f297-5ec8-4ded-9ff4-7c1dcfde4465)\r\n\r\n### Visuals\r\n\r\n|Before [PG](https://playground.babylonjs.com/#VJ0MJD)|After|\r\n|-|-|\r\n|![babylonjs-gizmo-before](https://github.com/BabylonJS/Babylon.js/assets/12933406/18c46247-3da2-4830-9d1f-5d2ea12c5211)|![babylonjs-gizmo-after](https://github.com/BabylonJS/Babylon.js/assets/12933406/46331989-716f-4b15-b2eb-3723a8075bf0)|\r\n\r\n",
                "author": {
                    "name": "PhilippeMorier",
                    "url": "https://github.com/PhilippeMorier"
                },
                "files": [
                    "contributing.md",
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "14530",
                "title": "fix: correct two misspellings",
                "description": null,
                "author": {
                    "name": "wy-luke",
                    "url": "https://github.com/wy-luke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14527",
                "title": "Raw camera access feature",
                "description": "This new feature implemented according to the specs in https://github.com/immersive-web/raw-camera-access/blob/main/explainer.md\n\nPlayground demo (once merged on using the snapshot) : #UV8FAB#2\n\nA new feature was added - features now have an observable that will trigger when the feature attach or detach.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRAbstractFeature.ts",
                    "packages/dev/core/src/XR/features/WebXRRawCameraAccess.ts",
                    "packages/dev/core/src/XR/features/index.ts",
                    "packages/dev/core/src/XR/webXRFeaturesManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "14529",
                "title": "Fix teleport node target",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14528",
                "title": "DepthRenderer: Support point rendering",
                "description": "Example PG: https://playground.babylonjs.com/#UTHA7W#35\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Shaders/depth.vertex.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "14523",
                "title": "Optimize duplicate member visits",
                "description": "This is a small optimization that includes the following areas\r\n- scene\r\n- LinesBuilder",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "14524",
                "title": "refactor: Optimized createPickingRay",
                "description": "Optimize the performance of Ray's following methods：\r\n- createPickingRayToRef\r\n- createPickingRayInCameraSpaceToRef",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": []
            }
        ],
        "6.30.0": [
            {
                "pr": "14522",
                "title": "Fix crash when one teleport was not serialized",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.29.2": [
            {
                "pr": "14519",
                "title": "refactor: optimize the code of angle calculations",
                "description": "1. Improved computing performance\r\n2. Superior annotation",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.path.ts"
                ],
                "tags": []
            },
            {
                "pr": "14520",
                "title": "Material: Fix wrong normal when material has two sided lighting enabled",
                "description": "See https://forum.babylonjs.com/t/gl-state-has-incorrect-front-face-when-rendering-a-2-sided-lighting-material-on-a-mesh-with-a-negative-determinant-world-transform/45596\r\n\r\nTest PG: https://playground.babylonjs.com/#0XYMA9#168",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14521",
                "title": "Add requests and generated info to loop blocks (setXXX) in NGE",
                "description": "Not sure why the format fix changed so many files",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/boxBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/capsuleBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/cylinderBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/discBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/gridBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/icoSphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/planeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/sphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/torusBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlockConnectionPoint.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14517",
                "title": "Update interface to match changes in Havok 1.3.0 plugin",
                "description": "Discussed with @RaananW - just updates raycast to match interface changes in the Havok 1.3.0 WASM with reasonable defaults (don't hit triggers, don't exclude any particular body.) Will expose new functionality to users in a future PR.",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm"
                ],
                "tags": []
            },
            {
                "pr": "14518",
                "title": "AxesViewer: Fix scaleLines property",
                "description": "See https://forum.babylonjs.com/t/axesviewer-scalelines-cant-be-changed/45676",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Debug/axesViewer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14506",
                "title": "WebGPU: remove rtt encoder + misc changes",
                "description": "The main purpose of the PR is to remove the renderTargetEncoder and keep only two encoders, \"copy\" and \"render\".\r\n\r\nIt simplifies the code and fixes some problems (see the two visualization tests I added - they don't work as expected without the PR).\r\n\r\nI took this opportunity to rework some parts of the code to simplify it further.\r\n\r\nAlso:\r\n* I had to disable the \"Instances + GBR + motion blur\" visualization test because Chrome now reports an error for it (\"Total color attachment bytes per sample (48) exceeds maximum (32)\"). We will have to wait for an extension that allows to raise this  limit before re-enabling it.\r\n* With the latest version of Chrome (119), I also had to handle depth textures in much the same way as float textures when linear filtering is not supported for them: the sampler type must be forced to \"unfilterable float\" for depth textures in the bind group layout.\r\n* The \"float32-filtering\" extension is now supported by Chrome, which revealed some bugs I had to fix in the code (I had to create a new \"supportFloatTexturesResolve\" caps because WebGPU can currently render to a R32float but not resolve it).\r\n* I fixed a bug with greased lines, which didn't work in WebGPU.\r\n* I've added the visualization tests I used specifically for WebGPU to the regular list (in `config.json`), as it's no problem to have them for WebGL too.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderCodeInliner.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.debugging.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.dynamicTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.videoTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBundleList.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheBindGroups.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipelineTree.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheSampler.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuClearQuad.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuMaterialContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuOcclusionQuery.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuRenderPassWrapper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuSnapshotRendering.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineMaterialDefaults.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/externalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureSampler.ts",
                    "packages/dev/core/src/Misc/codeStringParsingTools.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingDepthTextureCopy.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/hdrFilteringFunctions.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/CommandEncodedWebGPU1.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/CommandEncodedWebGPU2.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/apply-all-post-processes.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/ascii-art.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/blur-cube-with-the-effect-renderer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/cascaded-shadow-maps-and-flying-saucers.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/change-texture-of-material.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/create-environment-texture.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/cube-reflection-with-probe-and-mirrors.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/cube-with-holes-using-stencil-buffer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/custom-handling-of-materials-for-render-target-pass.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/default-render-pipeline.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/depth-renderer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/digital-rain.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/dissolve-effect-with-node-material-and-glow-layer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/edge-renderer-and-zOffset.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/halo-particle-system.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/lens-flare.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/neon-pipe-with-glow-layer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/particle-system-matrix-like.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/particle-system-with-custom-nme-shader.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pillars-sphere-and-torus-with-PCSS-shadows.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/procedural-texture-with-node-material.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/screen-space-curvature.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/show-all-procedural-textures.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/show-bounding-box.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/show-multiple-guis.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/simple-custom-shader.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/simple-render-target-with-blue-spheres.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/simple-sphere-in-4-mirrors.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/skybox-with-boombox.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/soft-transparent-shadows.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/sphere-with-custom-shader-to-display-wireframe-using-glow-layer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/terrain-erosion.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/torus-knot-mirror.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/update-sampler-info.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/water-material.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/apply-all-post-processes.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/ascii-art.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/blur-cube-with-the-effect-renderer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/cascaded-shadow-maps-and-flying-saucers.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/change-texture-of-material.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/create-environment-texture.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/cube-reflection-with-probe-and-mirrors.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/cube-with-holes-using-stencil-buffer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/custom-handling-of-materials-for-render-target-pass.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/default-render-pipeline.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/depth-renderer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/digital-rain.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/dissolve-effect-with-node-material-and-glow-layer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/edge-renderer-and-zOffset.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/halo-particle-system.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/lens-flare.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/neon-pipe-with-glow-layer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/particle-system-matrix-like.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/particle-system-with-custom-nme-shader.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/pillars-sphere-and-torus-with-PCSS-shadows.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/procedural-texture-with-node-material.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/screen-space-curvature.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/show-all-procedural-textures.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/show-bounding-box.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/show-multiple-guis.png"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14511",
                "title": "Dot normal angle",
                "description": "- Unify dot and normalize APIs for Vector2, Vector3, Vector4, Vector2, Quaternion\r\n- Add the BetweenTwoVectors method to Unger\r\n\r\n\r\nThe benefit of the unified API is that you can make indiscriminate calls to the union types of Vector2, Vector3, Vector4, Vector2, Quaternion, as follows:\r\n```ts\r\npublic static BetweenTwoVectors<Vec extends Vector2 | Vector3 | Vector4>(a: DeepImmutable<Vec>, b: DeepImmutable<Vec>): Angle {\r\n        const na = a.normalizeToNew() as Vec;\r\n        const nb = b.normalizeToNew() as Vec;\r\n        let cosv = na.dot(nb as any);\r\n        cosv = Scalar.Clamp(cosv, -1, 1);\r\n        const theta = Math.acos(cosv);\r\n        return new Angle(theta);\r\n}\r\n```",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.path.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "14514",
                "title": "Fix light in NME",
                "description": "https://forum.babylonjs.com/t/genshin-toon-shader-babylonjs-nodematerial/24581/39",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "14513",
                "title": "Bump axios from 1.5.1 to 1.6.1",
                "description": "Bumps [axios](https://github.com/axios/axios) from 1.5.1 to 1.6.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/axios/axios/releases\">axios's releases</a>.</em></p>\n<blockquote>\n<h2>Release v1.6.1</h2>\n<h2>Release notes:</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>formdata:</strong> fixed content-type header normalization for non-standard browser environments; (<a href=\"https://redirect.github.com/axios/axios/issues/6056\">#6056</a>) (<a href=\"https://github.com/axios/axios/commit/dd465ab22bbfa262c6567be6574bf46a057d5288\">dd465ab</a>)</li>\n<li><strong>platform:</strong> fixed emulated browser detection in node.js environment; (<a href=\"https://redirect.github.com/axios/axios/issues/6055\">#6055</a>) (<a href=\"https://github.com/axios/axios/commit/3dc8369e505e32a4e12c22f154c55fd63ac67fbb\">3dc8369</a>)</li>\n</ul>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+432/-65 ([#6059](https://github.com/axios/axios/issues/6059) [#6056](https://github.com/axios/axios/issues/6056) [#6055](https://github.com/axios/axios/issues/6055) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/meyfa\" title=\"+5/-2 ([#5835](https://github.com/axios/axios/issues/5835) )\">Fabian Meyer</a></li>\n</ul>\n<h2>Release v1.6.0</h2>\n<h2>Release notes:</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>CSRF:</strong> fixed CSRF vulnerability CVE-2023-45857 (<a href=\"https://redirect.github.com/axios/axios/issues/6028\">#6028</a>) (<a href=\"https://github.com/axios/axios/commit/96ee232bd3ee4de2e657333d4d2191cd389e14d0\">96ee232</a>)</li>\n<li><strong>dns:</strong> fixed lookup function decorator to work properly in node v20; (<a href=\"https://redirect.github.com/axios/axios/issues/6011\">#6011</a>) (<a href=\"https://github.com/axios/axios/commit/5aaff532a6b820bb9ab6a8cd0f77131b47e2adb8\">5aaff53</a>)</li>\n<li><strong>types:</strong> fix AxiosHeaders types; (<a href=\"https://redirect.github.com/axios/axios/issues/5931\">#5931</a>) (<a href=\"https://github.com/axios/axios/commit/a1c8ad008b3c13d53e135bbd0862587fb9d3fc09\">a1c8ad0</a>)</li>\n</ul>\n<h3>PRs</h3>\n<ul>\n<li>CVE 2023 45857 ( <a href=\"https://api.github.com/repos/axios/axios/pulls/6028\">#6028</a> )</li>\n</ul>\n<pre><code>\n⚠️ Critical vulnerability fix. See https://security.snyk.io/vuln/SNYK-JS-AXIOS-6032459\n</code></pre>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+449/-114 ([#6032](https://github.com/axios/axios/issues/6032) [#6021](https://github.com/axios/axios/issues/6021) [#6011](https://github.com/axios/axios/issues/6011) [#5932](https://github.com/axios/axios/issues/5932) [#5931](https://github.com/axios/axios/issues/5931) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/valentin-panov\" title=\"+4/-4 ([#6028](https://github.com/axios/axios/issues/6028) )\">Valentin Panov</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/therealrinku\" title=\"+1/-1 ([#5889](https://github.com/axios/axios/issues/5889) )\">Rinku Chaudhari</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/axios/axios/blob/v1.x/CHANGELOG.md\">axios's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/axios/axios/compare/v1.6.0...v1.6.1\">1.6.1</a> (2023-11-08)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>formdata:</strong> fixed content-type header normalization for non-standard browser environments; (<a href=\"https://redirect.github.com/axios/axios/issues/6056\">#6056</a>) (<a href=\"https://github.com/axios/axios/commit/dd465ab22bbfa262c6567be6574bf46a057d5288\">dd465ab</a>)</li>\n<li><strong>platform:</strong> fixed emulated browser detection in node.js environment; (<a href=\"https://redirect.github.com/axios/axios/issues/6055\">#6055</a>) (<a href=\"https://github.com/axios/axios/commit/3dc8369e505e32a4e12c22f154c55fd63ac67fbb\">3dc8369</a>)</li>\n</ul>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+432/-65 ([#6059](https://github.com/axios/axios/issues/6059) [#6056](https://github.com/axios/axios/issues/6056) [#6055](https://github.com/axios/axios/issues/6055) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/meyfa\" title=\"+5/-2 ([#5835](https://github.com/axios/axios/issues/5835) )\">Fabian Meyer</a></li>\n</ul>\n<h1><a href=\"https://github.com/axios/axios/compare/v1.5.1...v1.6.0\">1.6.0</a> (2023-10-26)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>CSRF:</strong> fixed CSRF vulnerability CVE-2023-45857 (<a href=\"https://redirect.github.com/axios/axios/issues/6028\">#6028</a>) (<a href=\"https://github.com/axios/axios/commit/96ee232bd3ee4de2e657333d4d2191cd389e14d0\">96ee232</a>)</li>\n<li><strong>dns:</strong> fixed lookup function decorator to work properly in node v20; (<a href=\"https://redirect.github.com/axios/axios/issues/6011\">#6011</a>) (<a href=\"https://github.com/axios/axios/commit/5aaff532a6b820bb9ab6a8cd0f77131b47e2adb8\">5aaff53</a>)</li>\n<li><strong>types:</strong> fix AxiosHeaders types; (<a href=\"https://redirect.github.com/axios/axios/issues/5931\">#5931</a>) (<a href=\"https://github.com/axios/axios/commit/a1c8ad008b3c13d53e135bbd0862587fb9d3fc09\">a1c8ad0</a>)</li>\n</ul>\n<h3>PRs</h3>\n<ul>\n<li>CVE 2023 45857 ( <a href=\"https://api.github.com/repos/axios/axios/pulls/6028\">#6028</a> )</li>\n</ul>\n<pre><code>\n⚠️ Critical vulnerability fix. See https://security.snyk.io/vuln/SNYK-JS-AXIOS-6032459\n</code></pre>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+449/-114 ([#6032](https://github.com/axios/axios/issues/6032) [#6021](https://github.com/axios/axios/issues/6021) [#6011](https://github.com/axios/axios/issues/6011) [#5932](https://github.com/axios/axios/issues/5932) [#5931](https://github.com/axios/axios/issues/5931) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/valentin-panov\" title=\"+4/-4 ([#6028](https://github.com/axios/axios/issues/6028) )\">Valentin Panov</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/therealrinku\" title=\"+1/-1 ([#5889](https://github.com/axios/axios/issues/5889) )\">Rinku Chaudhari</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/axios/axios/commit/f6d2cf9763bfa124f15c2dc6a5d5d5d9d3e26169\"><code>f6d2cf9</code></a> chore(ci): fix publish action content permission; (<a href=\"https://redirect.github.com/axios/axios/issues/6061\">#6061</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/a22f4b918a71a4d4caa57ff23d8247eac93765de\"><code>a22f4b9</code></a> chore(release): v1.6.1 (<a href=\"https://redirect.github.com/axios/axios/issues/6060\">#6060</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/cb8bb2beb215a94a29f19b0d66ab05d32b390230\"><code>cb8bb2b</code></a> chore(ci): Publish to NPM with provenance (<a href=\"https://redirect.github.com/axios/axios/issues/5835\">#5835</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/37cbf9214a1140d25c2c1a5ff097666c96721d6a\"><code>37cbf92</code></a> chore(ci): added labeling and notification for published PRs; (<a href=\"https://redirect.github.com/axios/axios/issues/6059\">#6059</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/dd465ab22bbfa262c6567be6574bf46a057d5288\"><code>dd465ab</code></a> fix(formdata): fixed content-type header normalization for non-standard brows...</li>\n<li><a href=\"https://github.com/axios/axios/commit/3dc8369e505e32a4e12c22f154c55fd63ac67fbb\"><code>3dc8369</code></a> fix(platform): fixed emulated browser detection in node.js environment; (<a href=\"https://redirect.github.com/axios/axios/issues/6055\">#6055</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/f7adacdbaa569281253c8cfc623ad3f4dc909c60\"><code>f7adacd</code></a> chore(release): v1.6.0 (<a href=\"https://redirect.github.com/axios/axios/issues/6031\">#6031</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/9917e67cbb6c157382863bad8c741de58e3f3c2b\"><code>9917e67</code></a> chore(ci): fix release-it arg; (<a href=\"https://redirect.github.com/axios/axios/issues/6032\">#6032</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/96ee232bd3ee4de2e657333d4d2191cd389e14d0\"><code>96ee232</code></a> fix(CSRF): fixed CSRF vulnerability CVE-2023-45857 (<a href=\"https://redirect.github.com/axios/axios/issues/6028\">#6028</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/7d45ab2e2ad6e59f5475e39afd4b286b1f393fc0\"><code>7d45ab2</code></a> chore(tests): fixed tests to pass in node v19 and v20 with <code>keep-alive</code> enabl...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/axios/axios/compare/v1.5.1...v1.6.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=axios&package-manager=npm_and_yarn&previous-version=1.5.1&new-version=1.6.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "6.29.1": [
            {
                "pr": "14510",
                "title": "Revert \"Camera: Modify Camera Movement to work off of time",
                "description": "Reverting https://github.com/BabylonJS/Babylon.js/pull/14482 due to an issue with gravity",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Behaviors/Meshes/fadeInOutBehavior.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Misc/precisionDate.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/SpaceDeK.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/particles.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-particles.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/subemitters.png"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14512",
                "title": "Remove redundant memory leak tests (now using memlab)",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/integration/leaks/camera.test.ts",
                    "packages/tools/tests/test/integration/leaks/playgrounds.test.ts",
                    "packages/tools/tests/test/integration/leaks/scene.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "14482",
                "title": "Camera: Modify Camera Movement to work off of time, instead of frame rate",
                "description": "This PR modifies all cameras to take the animation ratio (time to complete a single frame) and uses it to make all camera movements take the same amount of time as 60 FPS (AR of 1).\r\n\r\nUpdate: Since the animation ratio (ratio used to scale inertia and movement offsets) is only updated in `scene.render()`, we had to add a custom timing method for users that have a custom rendering loop/cadence.  This PR also adds the following changes:\r\n\r\n- `PrecisionDate.Now` has been updated to be more efficient\r\n- The variable `constantAnimationDeltaTime` has been added so that users can change the delta time for testing purposes\r\n\r\nPGs Used to Test: \r\n- https://playground.babylonjs.com/#DLIIMQ\r\n- https://playground.babylonjs.com/#DLIIMQ#1\r\n- https://playground.babylonjs.com/#DLIIMQ#3\r\n- https://playground.babylonjs.com/#DLIIMQ#4\r\n\r\nUpdate 2: Because we're now using 1000 / 60 (16.6666...) instead of 16 for the default constant animation ratio, some of the particle tests were broke.  I've updated the PNGs against the new ratio.\r\n\r\nIn order to get the camera to move correctly, regardless of frame rate, I had to create a scaling factor that has to be multiplied against the offsets to be added.  Because the math isn't quite clear as to how the scaling factor is found, here's an explanation:\r\n\r\nGiven the following variables:\r\n**r = initial offset\r\nn = inertia\r\na = relative inertia (with respect to frame deltaTime ratio; currentDeltaTime/standardDeltaTime) = n^t\r\ns = scale factor\r\nt = deltaTime ratio = currentDeltaTime/standardDeltaTime**\r\n\r\nLet's assume that the work to be done for our current frame rate can be represented as `scaleFactor * initial offset * relative inertia` `(inertia ^ (currentDeltaTime/standardDeltaTime))`.  The equivalent amount of time could be represented as the sum _from (1 to t)_ of our `initial offset * inertia^x`\r\nsra = rn^t + ... + rn\r\n\r\nIf we factor out a common value of `rn`, we then have our initial value * the sum of a geometric series.\r\nsra = rn(n^(t-1) + ... + 1)\r\n\r\nWe can also factor out our initial offset\r\nsa = n(n^(t-1) + ... + 1)\r\n\r\nNext, we can substitute the closed formula for the sum of a geometric series\r\nsa = n((n^t - 1) / (n - 1))\r\n\r\nFinally, we set everything equal to s\r\ns = n((n^t - 1) / (n - 1)) / a\r\n\r\nLet's substitute a for n^t and clean up the fractions a bit\r\ns = n * (1/a) * ((a - 1) / (n - 1))\r\n**s = (n/a) * ((a - 1) / (n - 1))**",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Behaviors/Meshes/fadeInOutBehavior.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Misc/precisionDate.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/SpaceDeK.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/particles.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-particles.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/subemitters.png"
                ],
                "tags": [
                    "bug",
                    "inputs",
                    "breaking change"
                ]
            },
            {
                "pr": "14509",
                "title": "CreateText does not align text on z",
                "description": "Follow up on https://github.com/BabylonJS/Babylon.js/pull/14493",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14507",
                "title": "Fix dynamic texture clear with transparency",
                "description": "https://forum.babylonjs.com/t/get-dynamictexture-text-and-change-it/45583/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/dynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14505",
                "title": "PostProcess: Fix target not created after parsing",
                "description": "See https://forum.babylonjs.com/t/double-fxaa-deserialize-error/45561\r\n\r\nThe problem occurred when parsing a previously serialized post-process, if the current width/height of the output window is the same as the serialized width/height: in this case, we didn't execute the target creation code, which led to the error.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/postProcess.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "14502",
                "title": "Add optional color option to camera gizmo",
                "description": "Related forum issue: https://forum.babylonjs.com/t/change-cameragizmo-frustum-color/45548",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "14503",
                "title": "refactor: change the way arrays are literals",
                "description": "change the way arrays are literals\r\n\r\nChanged all the way in which arrays were created by constructors to array literals throughout the project, because array literals are more performant.",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Actions/abstractActionManager.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/pathCursor.ts",
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Audio/soundTrack.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Culling/Octrees/octree.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeBlock.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.textureSelector.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/engineStore.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Layers/effectLayerSceneComponent.ts",
                    "packages/dev/core/src/Layers/layerSceneComponent.ts",
                    "packages/dev/core/src/LensFlares/lensFlareSystem.ts",
                    "packages/dev/core/src/LensFlares/lensFlareSystemSceneComponent.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildStateSharedData.ts",
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTextureSceneComponent.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/multiMaterial.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Maths/math.path.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/Builders/cylinderBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/decalBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/discBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/goldbergBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/icoSphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/latheBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/polyhedronBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/shapeBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/torusKnotBuilder.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlockConnectionPoint.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/csg.ts",
                    "packages/dev/core/src/Meshes/geodesicMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/core/src/Meshes/meshSimplification.ts",
                    "packages/dev/core/src/Meshes/polygonMesh.ts",
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts",
                    "packages/dev/core/src/Misc/dds.ts",
                    "packages/dev/core/src/Misc/filesInput.ts",
                    "packages/dev/core/src/Misc/sceneOptimizer.ts",
                    "packages/dev/core/src/Morph/morphTarget.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystemComponent.ts",
                    "packages/dev/core/src/Particles/particleSystemSet.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/Probes/reflectionProbe.ts",
                    "packages/dev/core/src/Rendering/edgesRenderer.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/core/src/Sprites/spriteMap.ts",
                    "packages/dev/core/src/Sprites/spriteSceneComponent.ts",
                    "packages/dev/core/src/XR/features/WebXRFeaturePointSystem.ts",
                    "packages/dev/core/src/abstractScene.ts",
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Misc/babylon.arrayTools.test.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/3D/materials/fluent/fluentMaterial.ts",
                    "packages/dev/gui/src/3D/materials/fluentBackplate/fluentBackplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/fluentButton/fluentButtonMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackglowMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlFrontplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlInnerquadMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderBarMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderThumbMaterial.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/curve.ts",
                    "packages/dev/loaders/src/OBJ/objFileLoader.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/MSFT_lod.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/test/integration/babylon.sceneLoader.test.ts",
                    "packages/dev/materials/src/cell/cellMaterial.ts",
                    "packages/dev/materials/src/fur/furMaterial.ts"
                ],
                "tags": []
            }
        ],
        "6.29.0": [
            {
                "pr": "14482",
                "title": "Camera: Modify Camera Movement to work off of time, instead of frame rate",
                "description": "This PR modifies all cameras to take the animation ratio (time to complete a single frame) and uses it to make all camera movements take the same amount of time as 60 FPS (AR of 1).\r\n\r\nUpdate: Since the animation ratio (ratio used to scale inertia and movement offsets) is only updated in `scene.render()`, we had to add a custom timing method for users that have a custom rendering loop/cadence.  This PR also adds the following changes:\r\n\r\n- `PrecisionDate.Now` has been updated to be more efficient\r\n- The variable `constantAnimationDeltaTime` has been added so that users can change the delta time for testing purposes\r\n\r\nPGs Used to Test: \r\n- https://playground.babylonjs.com/#DLIIMQ\r\n- https://playground.babylonjs.com/#DLIIMQ#1\r\n- https://playground.babylonjs.com/#DLIIMQ#3\r\n- https://playground.babylonjs.com/#DLIIMQ#4\r\n\r\nUpdate 2: Because we're now using 1000 / 60 (16.6666...) instead of 16 for the default constant animation ratio, some of the particle tests were broke.  I've updated the PNGs against the new ratio.\r\n\r\nIn order to get the camera to move correctly, regardless of frame rate, I had to create a scaling factor that has to be multiplied against the offsets to be added.  Because the math isn't quite clear as to how the scaling factor is found, here's an explanation:\r\n\r\nGiven the following variables:\r\n**r = initial offset\r\nn = inertia\r\na = relative inertia (with respect to frame deltaTime ratio; currentDeltaTime/standardDeltaTime) = n^t\r\ns = scale factor\r\nt = deltaTime ratio = currentDeltaTime/standardDeltaTime**\r\n\r\nLet's assume that the work to be done for our current frame rate can be represented as `scaleFactor * initial offset * relative inertia` `(inertia ^ (currentDeltaTime/standardDeltaTime))`.  The equivalent amount of time could be represented as the sum _from (1 to t)_ of our `initial offset * inertia^x`\r\nsra = rn^t + ... + rn\r\n\r\nIf we factor out a common value of `rn`, we then have our initial value * the sum of a geometric series.\r\nsra = rn(n^(t-1) + ... + 1)\r\n\r\nWe can also factor out our initial offset\r\nsa = n(n^(t-1) + ... + 1)\r\n\r\nNext, we can substitute the closed formula for the sum of a geometric series\r\nsa = n((n^t - 1) / (n - 1))\r\n\r\nFinally, we set everything equal to s\r\ns = n((n^t - 1) / (n - 1)) / a\r\n\r\nLet's substitute a for n^t and clean up the fractions a bit\r\ns = n * (1/a) * ((a - 1) / (n - 1))\r\n**s = (n/a) * ((a - 1) / (n - 1))**",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Behaviors/Meshes/fadeInOutBehavior.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Misc/precisionDate.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/SpaceDeK.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/particles.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-particles.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/subemitters.png"
                ],
                "tags": [
                    "bug",
                    "inputs",
                    "breaking change"
                ]
            },
            {
                "pr": "14499",
                "title": "Flow graph remove event coordinator",
                "description": "# Changes\r\n- This PR removes the FlowGraphEventCoordinator class and moves its functionality to the FlowGraphCoordinator class. The purpose of it is to make the structure of the Flow Graph a bit simpler.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCustomEvent.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphEventCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/index.ts"
                ],
                "tags": [
                    "skip changelog",
                    "flow graph"
                ]
            },
            {
                "pr": "14498",
                "title": "feat: optimize vector3",
                "description": "Optimize the performance of the following methods for vector3:\r\n- `projectOnPlaneToRef()`：Change `Math.pow(10, -10)` to a constant\r\n- `reorderInPlace()`：Reduce function calls and member access\r\n- `GetClipFactor()`：Reduce function calls and member access",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "14497",
                "title": "Animations: Add an easingFunction property to IAnimationKey",
                "description": "See https://forum.babylonjs.com/t/how-to-add-easing-function-to-babylon-js-keyframe/45400",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/animationKey.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14481",
                "title": "Flow Graph Path Mapping",
                "description": "# Changes\r\n - On the SetPropertyBlock, add a new parameter named `subString`, which represents a string that will be substituted by a node value if encountered between `{}`. For example, if the subString is `nodeIndex`, and the path is `/node/{nodeIndex}/`, when this node is activated, it will look into the nodeIndex socket, and substitute its value (which could be 0, then the path would be `/node/0`). This allows dynamic paths that are resolved based on the current state of the scene.\r\n   - This change will be needed because of how the glTF Interactivity uses paths. In some cases, paths are defined as `/node/{nodeIndex}/property`, and we want these paths to be resolved at runtime.\r\n-  The SetProperty node was changed to use a configuration object instead of sockets. The configuration object contains a string path (as defined in the context variables), and a string property, such as translation, rotation, etc.\r\n- I also moved the default serialization and parsing functions to a separate module, and added handling of vector values.\r\n- I also removed the variableDefinitions value, as it wasn't being used and made things more complex.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphVariableDefinitions.ts",
                    "packages/dev/core/src/FlowGraph/serialization.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphSerialization.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "14495",
                "title": "Flow Graph Context Logger",
                "description": "# Changes\r\n- Add a new observable in the context, `onNodeExecutedObservable`, which is notified every time a node is executed. This observable can be subscribed to for various functionalities, such as logging\r\n- Add the FlowGraphContextLogger, which is subscribed to the observable above and logs when each node is executed.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContextLogger.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts",
                    "packages/dev/core/src/FlowGraph/index.ts"
                ],
                "tags": [
                    "enhancement",
                    "flow graph"
                ]
            },
            {
                "pr": "14494",
                "title": "Rename internal classes in CSG",
                "description": "CSG didn't export the internal declarations until 6.22.1 . In this version a new function was added (in #14368) that used those internal classes, which forced typescript to export them as well.\n\nAs they are only internal classes this is not exactly a breaking change. It is out of the question to not export these classes, as this will fail the build due to missing declarations.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/csg.ts"
                ],
                "tags": []
            },
            {
                "pr": "14492",
                "title": "Fix ray cast skipBoundingInfo with in intersects",
                "description": "https://forum.babylonjs.com/t/the-problem-when-picking-the-merged-mesh-thin-instance/45336/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "bug",
                    "math"
                ]
            },
            {
                "pr": "14493",
                "title": "CreateText does not align text on z",
                "description": "https://forum.babylonjs.com/t/meshbuilder-createtext/40958/13\r\n\r\n[breaking change]: The created text will not be positioned at the same position as before along z but this is a necessary bug fix.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts"
                ],
                "tags": [
                    "bug",
                    "breaking change",
                    "geometry"
                ]
            }
        ],
        "6.28.1": [
            {
                "pr": "14491",
                "title": "refactor: Optimized the Observable.add type",
                "description": "Use type overloading to make the type recommendations of the `Observable.add` method smarter and more precise\r\n\r\nThis is better than generics\r\n\r\nThe related discussion is here: <https://github.com/BabylonJS/Babylon.js/pull/14479>",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Misc/observable.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14487",
                "title": "GLTF loading dirty mechanism perf",
                "description": "Lets try to not dirty the entire scene if possible when only adding new nodes/materials without changing the current state of the scene.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/EXT_lights_image_based.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "enhancement",
                    "glTF"
                ]
            },
            {
                "pr": "14489",
                "title": "Performance mode: Restore dispached flags in aggressive mode",
                "description": "https://forum.babylonjs.com/t/sceneperformancepriority-aggressive-bugs/45304",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Misc/deepCopier.ts",
                    "packages/dev/core/src/Rendering/renderingManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14488",
                "title": "Better eval context evaluation",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/boxBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/capsuleBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/cylinderBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/discBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/gridBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/icoSphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/planeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/sphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/torusBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14486",
                "title": "Fix shallow copies of referenced objects",
                "description": "https://forum.babylonjs.com/t/babylonjs-core-6-27-1-mesh-actionmanager-hasspecifictriggers2-is-not-a-function/45366",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts",
                    "packages/dev/core/src/Misc/deepCopier.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14485",
                "title": "Allow matrix transposeToRef to work in place",
                "description": "https://forum.babylonjs.com/t/wrong-value-transposing-matrix-itself/45367",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "bug",
                    "math"
                ]
            },
            {
                "pr": "14474",
                "title": "feat: Added a default configuration to DebugLayer",
                "description": "If you need to configure DebugLayer, you need to pass your own configuration every time you call DebugLayer.show(config), which is more troublesome, and when you wrap the SDK based on babylon, you need to replace the show method in order to solve this problem;\r\n\r\nThe best solution would be to give DebugLayer a default config item, which is more configurable and compatible with previous code",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts"
                ],
                "tags": []
            }
        ],
        "6.28.0": [
            {
                "pr": "14484",
                "title": "Fix undeclared identifier error in NodeMaterial shader",
                "description": "[this playground](https://www.babylonjs-playground.com/#TN9A7W) can reproduce the bug\r\nthe crash info as follow\r\n<img width=\"1230\" alt=\"截屏2023-11-01 21 00 29\" src=\"https://github.com/BabylonJS/Babylon.js/assets/33159342/40c3f974-4830-4743-bdea-f27087ffb594\">\r\n\r\nin [this commit](https://github.com/BabylonJS/Babylon.js/commit/a421cc939416902d462aa2554f38749f0fde2034), vPositionW is removed from shadowsFragmentFunctions.fx and used by lightFragment.fx\r\nBut PBRMetallicRoughnessBlock still only replaces 'vPositionW' in shadowsFragmentFunctions.fx.\r\n\r\nSo, if a mesh use nodematerial using PBRBlock and receiveShadows, the final shader code will have 'vPositionW' , then\r\nthe error reported.\r\n\r\n",
                "author": {
                    "name": "Starryi",
                    "url": "https://github.com/Starryi"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14483",
                "title": "refactor: optimized scene.constructor",
                "description": "The following optimizations have been made to 'scene.constructor':\r\n- Remove unnecessary non-runs from '!fullOptions.virtual' \r\n- Use the engine variable directly, instead of 'this._engine', which can improve the hit rate of the identifier;",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "14480",
                "title": "ShaderMaterial: Make sure the color attribute is not duplicated",
                "description": "See https://forum.babylonjs.com/t/linemesh-is-not-fully-backwards-compatible-in-webgpu/45339",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14451",
                "title": "Adapt post process to viewport in DefaultRenderingPipeline",
                "description": "This ensures an efficient use of the resources without using a bigger texture than the actual size it will be blit to in the main canvas.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts"
                ],
                "tags": [
                    "enhancement",
                    "post-process"
                ]
            },
            {
                "pr": "14477",
                "title": "Warn about missing dependency, but only once",
                "description": "When the Ray import is missing no warning is shown when using the pick function (which is part of the default scene behavior).\n\nThis will display a single warning if Ray is not impoted. It also extends the warning mechanism to allow to throw/warn only once.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/devTools.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "14476",
                "title": "Use the static member of default CDN URL",
                "description": "Addressing @sebavan's comment in the last PR",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/core/src/Meshes/Compression/meshoptCompression.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/dev/loaders/src/glTF/glTFValidation.ts"
                ],
                "tags": []
            },
            {
                "pr": "14475",
                "title": "fix stack panel GUI warnings",
                "description": "This is to cover a case that wasn't covered in https://github.com/BabylonJS/Babylon.js/pull/14452\r\nForum discussion: https://forum.babylonjs.com/t/control-is-using-height-in-percentage-mode-inside-a-vertical-stackpanel-warnings-after-update-to-6-25-0/45071/4",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/stackPanel.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14472",
                "title": "Fix breaking issue with ScriptBaseUrl",
                "description": "The general idea here is this - change the ScriptBaseUrl functionality. If it is provided AND the URL is an absolute URL that starts with cdn.babylonjs.com, change this portion of the URL with the data provided in ScriptBaseURL",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/core/src/Meshes/Compression/meshoptCompression.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/dev/loaders/src/glTF/glTFValidation.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_ASTC.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_BC7.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_R8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RG8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_SRGB.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/mscTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/transcoder.ts",
                    "packages/tools/ktx2Decoder/src/zstddec.ts"
                ],
                "tags": []
            },
            {
                "pr": "14469",
                "title": "world vs finalWorld fix in shader material",
                "description": null,
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/GreasedLine/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Shaders/greasedLine.vertex.fx"
                ],
                "tags": []
            }
        ],
        "6.27.1": [
            {
                "pr": "14473",
                "title": "Fix gltf validator url",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/glTFValidation.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.27.0": [
            {
                "pr": "14470",
                "title": "Add ground projection support",
                "description": "https://forum.babylonjs.com/t/projected-ground-skybox/40568\r\n\r\ncan be tested with https://playground.babylonjs.com/#XG08YC\r\n\r\nrelated doc PR https://github.com/BabylonJS/Documentation/pull/1000",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/backgroundFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/backgroundUboDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrHelperFunctions.fx",
                    "packages/dev/core/src/Shaders/background.fragment.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/groundProjection.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "14461",
                "title": "Update linter and formatter",
                "description": "Updating linter and formatter to a newer version.\n\nOld formatter seems to have ignored a rule that was set, so a few files require formatting.\n\nTHis also add a rule to set the auto-fix for type-adding to be separated and not inline.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Behaviors/Meshes/attachToBoxBehavior.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Collisions/intersectionInfo.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineArithmeticOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineIsDefinedOperator.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBundleList.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts",
                    "packages/dev/core/src/Layers/highlightLayer.ts",
                    "packages/dev/core/src/Loading/loadingScreen.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineBaseMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts",
                    "packages/dev/core/src/Meshes/csg.ts",
                    "packages/dev/core/src/Meshes/geodesicMesh.ts",
                    "packages/dev/core/src/Meshes/meshSimplification.ts",
                    "packages/dev/core/src/Misc/PerformanceViewer/performanceViewerCollector.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts",
                    "packages/dev/core/src/PostProcesses/bloomEffect.ts",
                    "packages/dev/core/src/Rendering/boundingBoxRenderer.ts",
                    "packages/dev/core/src/XR/features/WebXRAnchorSystem.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPhysics.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts",
                    "packages/dev/core/src/XR/features/WebXRDepthSensing.ts",
                    "packages/dev/core/src/XR/features/WebXRLayers.ts",
                    "packages/dev/core/src/XR/features/WebXRMeshDetector.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts",
                    "packages/dev/core/src/XR/features/WebXRPlaneDetector.ts",
                    "packages/dev/core/src/XR/features/WebXRSpaceWarp.ts",
                    "packages/dev/core/src/XR/native/nativeXRRenderTarget.ts",
                    "packages/dev/core/src/XR/webXRCamera.ts",
                    "packages/dev/core/src/XR/webXRManagedOutputCanvas.ts",
                    "packages/dev/core/src/XR/webXRRenderTargetTextureProvider.ts",
                    "packages/dev/core/src/XR/webXRWebGLLayer.ts",
                    "packages/dev/gui/src/2D/controls/image.ts",
                    "packages/dev/gui/src/2D/controls/inputText.ts",
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts",
                    "packages/dev/gui/src/2D/controls/toggleButton.ts",
                    "packages/dev/gui/src/3D/controls/holographicBackplate.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureEditor.scss",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderAnimation.ts",
                    "packages/dev/materials/src/water/waterMaterial.ts",
                    "packages/dev/sharedUiComponents/src/colorPicker/colorPicker.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorPicker.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/tools/guiEditor/src/components/log/logComponent.tsx",
                    "packages/tools/nodeEditor/src/components/log/logComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeGeometryEditor/src/components/log/logComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/viewer/src/labs/texture.ts",
                    "packages/tools/viewer/src/loader/modelLoader.ts",
                    "packages/tools/viewer/src/managers/sceneManager.ts",
                    "packages/tools/viewer/src/model/viewerModel.ts",
                    "packages/tools/viewer/src/templating/templateManager.ts",
                    "packages/tools/viewer/src/viewer/defaultViewer.ts",
                    "packages/tools/viewer/src/viewer/renderOnlyViewer.ts",
                    "packages/tools/viewer/src/viewer/viewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "14471",
                "title": "Allow instantiateOnFaces block of node geometry to infer UV coordinates",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Interfaces/nodeGeometryExecutionContext.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14453",
                "title": "Flow graph node caching",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCachedOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphDataNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.26.0": [
            {
                "pr": "14467",
                "title": "Fix transform node world space rotation when parent has negative world matrix determinant",
                "description": "https://forum.babylonjs.com/t/unexpected-behaviour-when-rotating-a-mesh-in-world-space/43298/8\r\n\r\nPlayground to try out: https://playground.babylonjs.com/#2GVE4L#40 (both buttons should rotate in the same direction)",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14465",
                "title": "fix: missing export for public property type",
                "description": "I'm unable to build my project with the missing type.\r\nhttps://forum.babylonjs.com/t/public-property-type-not-exported/45169/5",
                "author": {
                    "name": "brianzinn",
                    "url": "https://github.com/brianzinn"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "14463",
                "title": "CreateScreenshotUsingRenderTarget: Render to texture only when texture and camera are ready",
                "description": "See https://forum.babylonjs.com/t/screenshot-with-post-process-not-includes-meshes/45168\r\n\r\nChecking `camera.isReady(true)` make sure that post-processes are ready before going on.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14460",
                "title": "GRL - instancing support",
                "description": null,
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/GreasedLine/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineSimpleMaterial.ts",
                    "packages/dev/core/src/Shaders/greasedLine.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "14457",
                "title": "Function to add element and all its children to AssetContainer",
                "description": "Fixes https://github.com/BabylonJS/ThePirateCove/issues/663\r\n\r\nThe function `addAllAssetsToContainer` receives a Node as argument and adds that node and all its children and derived elements (such as materials and skeletons) to an asset container. It is intended to work as a utility function used after loading a mesh with AssetsManager, for example. Usage example on: #TLFUIB#1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            }
        ],
        "6.25.1": [
            {
                "pr": "14464",
                "title": "Add mesh without vertex normals to SPS",
                "description": "Fix https://github.com/BabylonJS/ThePirateCove/issues/571",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/AddmeshwithoutvertexnormalstoSPS.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14456",
                "title": "Fix instanced buffers of cloned meshes",
                "description": "Forum issue: https://forum.babylonjs.com/t/error-after-cloning-mesh-with-instanced-buffer/45154\r\nAdding @Popov72 to check if this solution makes sense 😉 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14462",
                "title": "incorrect CDN link for some packages",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "14459",
                "title": "Move type out of import clause",
                "description": "TypeScript 4.5 introduces inline type imports. But for anyone who uses typescript < 4.5 the build will fail.\n\nThere is no lint rule to disallow that, as it is a perfectly correct syntax. I will keep on checking for that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector2MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector3MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector4MathBlocks.ts",
                    "packages/dev/core/src/Meshes/Builders/greasedLineBuilder.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateRadialBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14452",
                "title": "Fix stack panel giving a warning for children with resizeToFit.",
                "description": "Forum issue: https://forum.babylonjs.com/t/control-is-using-height-in-percentage-mode-inside-a-vertical-stackpanel-warnings-after-update-to-6-25-0/45071",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/stackPanel.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14455",
                "title": "Fix an issue in the mesh parsing code",
                "description": "Causes `overrideMaterialSideOrientation` to be `undefined`\r\n\r\nFixes #14445",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14447",
                "title": "Change script loading architecture",
                "description": "Scripts (js and wasm) should now be loaded using the Tools'  GetScriptUrl function.\r\n\r\nThis function will check if the URL is absolute or relative. if relative it will append the BaseScriptUrl defined in Tools to the URL. Otherwise it will run a preprocessor and will make sure, if requested, that the URL is absolute.\r\n\r\nThis one you can either define a new URL per module OR a new global base URL for the scripts and thus replace the babylon's CDN in one call.\r\n\r\nThe preprocessor can be defined by the devs themselves to modify the URL to whatever it needs to be. Checking if the URL is absolute (GetAbsoluteUrl) was kept for back-compat reasons.\r\n\r\nNotes\r\n\r\n* Tools.LoadScript will automatically use GetScriptUrl\r\n* It is possible to define a blob or data URL instead of a (relative) URL.\r\n* KTXDecoder has a different, simpler mechanism to change the base URL",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/core/src/Meshes/Compression/meshoptCompression.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/dev/loaders/src/glTF/glTFValidation.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_ASTC.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_BC7.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_R8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RG8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_SRGB.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/mscTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/transcoder.ts",
                    "packages/tools/ktx2Decoder/src/zstddec.ts",
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts"
                ],
                "tags": []
            },
            {
                "pr": "14449",
                "title": "ShadowDepthWrapper: Fix a memory leak when new effects must be created",
                "description": "This is the PR #14406 by @nonlinearthink with a fix for the Webgl warnings (see https://github.com/BabylonJS/Babylon.js/pull/14406#discussion_r1367293207).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/shadowDepthWrapper.ts"
                ],
                "tags": [
                    "bug",
                    "shadows"
                ]
            },
            {
                "pr": "14450",
                "title": "Fix key navigation in scene explorer",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "14448",
                "title": "Fix texture sampler precision for skinning and morph",
                "description": "See https://forum.babylonjs.com/t/mesh-of-fingers-jitter-on-mobile/44760",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/bonesDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/morphTargetsVertexGlobalDeclaration.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14441",
                "title": "Faster twin renderer",
                "description": "This PR is a rearchitecture of the HTMLTwinRenderer, aiming to improve its speed. \r\n\r\nSome PGs I tested with:\r\nThe ones in: https://doc.babylonjs.com/toolsAndResources/accessibility/screenReaders\r\nStress test: #C9GZTF#43\r\nAddAllControls: #C9GZTF#49\r\nWeapons demo with accessibility: #I6V1ST#240",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinAccessibilityItem.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinGUIItem.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinItem.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinItem.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinItemAdapter.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinNodeItem.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinSceneContext.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinSceneTree.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinTreeComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "accessibility"
                ]
            },
            {
                "pr": "14442",
                "title": "Gui editor metadata",
                "description": "I added a section in the GUI editor's property tab for editing and viewing metadata of controls.\r\nIt only makes strings, numbers and booleans editable, but it will display objects as a JSON string.\r\n\r\nIt hides any metadata keys that start with an `_` or if the key is `guiEditor` (because all controls in the editor get that key).\r\n\r\nA good snippet to test with is `#CITCWC#52` because it has some pre-existing metadata items.",
                "author": {
                    "name": "vinhui",
                    "url": "https://github.com/vinhui"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTab.scss"
                ],
                "tags": []
            }
        ],
        "6.25.0": [
            {
                "pr": "14428",
                "title": "Oblique Camera Implementation",
                "description": "This PR contains a new mode for handling camera projections, `OBLIQUE_CAMERA`.  This mode works just like `ORTHOGRAPHIC_CAMERA` but also adds three new variables: `obliqueAngle`, `obliqueLength`, and `obliqueOffset`.\r\n- `obliqueAngle`: This is the angle of the shear used (along X/Y plane, with respect to the Camera)\r\n- `obliqueLength`: The degree/amount of shearing\r\n- `obliqueOffset`: The offset from the camera's target (with respect to the Camera's z) to shear against\r\nThis PR also adds support for the new mode to cameras in the Inspector.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14191",
                "title": "GRL - camera facing",
                "description": "TODOs:\r\n\r\n- [x] Create base mesh class for camera facing and non camera facing greased line meshes\r\n- [x] Widths in instance modes\r\n- [x] Calculate correct UVs for non camera facing meshes\r\n- [x] Do not join ribbon paths in path_mode\r\n- [x] Set default values for the options, same as for the camera facing GRL\r\n- [x] Calculate slopes faster\r\n- [x] Widths in instance mode and different point modes\r\n- [x] Color tables in instance mode and different point modes\r\n- [x] Clone\r\n- [x] Serialize\r\n- [x] Parse\r\n- [x] Doublesided\r\n- [x] Closed paths\r\n- [x] Lazy mode\r\n- [x] Check UVs\r\n- [x] Offsets\r\n- [x] Add face modes in options (single, doublesided, single no culling). Remove doubleSided option.\r\n- [x] Check color pointers / move to base mesh\r\n- [x] Share color textures\r\n- [x] Calculate directions in points mode points if no direction is specified. Don't use default direction. Add auto calc modes.\r\n- [x] Visualization tests\r\n\r\nOPTIMALIZATIONS:\r\n\r\n- [x] Don't use ribbon builder class for building the mesh but create it manually in a more optimal way",
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineMaterialDefaults.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineMaterialInterfaces.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Materials/GreasedLine/greasedLineSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/index.ts",
                    "packages/dev/core/src/Meshes/Builders/greasedLineBuilder.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineBaseMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/GreasedLine/greasedLineRibbonMesh.ts",
                    "packages/dev/core/src/Meshes/index.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/deepCopier.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts",
                    "packages/dev/core/src/Shaders/greasedLine.fragment.fx",
                    "packages/dev/core/src/Shaders/greasedLine.vertex.fx",
                    "packages/tools/tests/test/visualization/ReferenceImages/greased-line-non-camera-facing.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14431",
                "title": "font inheritance changes",
                "description": "Fix #13130",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Childoverridingparentfontproperties.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Font-style-inheritance.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Fontsizeinheritance.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "14438",
                "title": "Add flag on ADT to skip blocking certain events",
                "description": "This PR adds a new flag to the ADT, skipBlockEvents, defined as 0 by default, to which can be added events that will NOT be blocked even if the control is defined as a pointer blocker. This allows, for example, for a pointer blocker button to still allow wheel events to pass through.\n\nExample PG: #XCPP9Y#19861",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "gui",
                    "new feature"
                ]
            },
            {
                "pr": "14440",
                "title": "Unification and allowedHosts in local dev",
                "description": "I got a request to add allowedHosts to our dev server as an extra measure of security.\r\n\r\nThis PR unifies dev-server generation in all of our webpack configurations, and, of course, add allowedHosts as an optional environment variable.\r\n\r\nAfter this is merged you will need to run `npm install` to get everything to work correctly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/public/babylonjs-viewer-assets/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.snapshot.js",
                    "packages/tools/devHost/webpack.config.js",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js",
                    "packages/tools/nodeGeometryEditor/webpack.config.js",
                    "packages/tools/playground/webpack.config.js",
                    "packages/tools/sandbox/webpack.config.js",
                    "packages/tools/viewer/webpack.config.js",
                    "packages/tools/vsm/webpack.config.js"
                ],
                "tags": [
                    "enhancement",
                    "build"
                ]
            },
            {
                "pr": "14434",
                "title": "P8 Nine Patch clear fix",
                "description": "I still need to test this, but here is the draft PR.",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": []
            },
            {
                "pr": "14436",
                "title": "Fix createTexture for R and RG format textures",
                "description": "I think I've found a bug in createTexture when the texture creation options pass format: Engine.TEXTUREFORMAT_R or _RG. Repro is in this playground https://playground.babylonjs.com/#YCY2IL#1861, I've also [posted to the forum](https://forum.babylonjs.com/t/bug-and-proposed-fix-createtexture-does-not-work-with-textureformat-r-or-rg-on-webgl2/44763) with some extra information.\r\n\r\nThis PR is my attempt to fix it by using _getRGBABufferInternalSizedFormat to get the sized format, similar to other forms of texture creation in thinEngine.ts.\r\n\r\n(This is a recreation of PR #14404. I realised I had committed with an email address I don't use for public repos so I've recreated the PR with exactly the same changes but a different committer email. I'm really sorry about the hassle.)",
                "author": {
                    "name": "djn24",
                    "url": "https://github.com/djn24"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/test/unit/Engines/thinEngine.test.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "14429",
                "title": "optimize EngineFactory",
                "description": "1. The value can be returned directly in the then of the Promise, and there is no need to create a new Promise\r\n2. The optimized code is more concise and easy to read",
                "author": {
                    "name": "GuoBinyong",
                    "url": "https://github.com/GuoBinyong"
                },
                "files": [
                    "packages/dev/core/src/Engines/engineFactory.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14439",
                "title": "Remove deprecated WebVR",
                "description": "This PR removes all traces of WebVR from the engine.\nThe only thing that was left is the VR Experience helper. This will prevent from old code using the experience helper to stop working, and WebXR will be used as a fallback.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/RigModes/index.ts",
                    "packages/dev/core/src/Cameras/RigModes/vrRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/webVRRigMode.ts",
                    "packages/dev/core/src/Cameras/VR/index.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Cameras/VR/webVRCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.webVR.ts",
                    "packages/dev/core/src/Engines/Extensions/index.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Gamepads/Controllers/daydreamController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/gearVRController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/genericController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/index.ts",
                    "packages/dev/core/src/Gamepads/Controllers/oculusTouchController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/poseEnabledController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/viveController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/webVRController.ts",
                    "packages/dev/core/src/Gamepads/Controllers/windowsMotionController.ts",
                    "packages/dev/core/src/Gamepads/gamepadManager.ts",
                    "packages/dev/core/src/Gamepads/index.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/LibDeclarations/webvr.d.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/XR/webXRDefaultExperience.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/tools/viewer/src/managers/sceneManager.ts",
                    "packages/tools/viewer/src/viewer/defaultViewer.ts"
                ],
                "tags": [
                    "VR/AR/XR",
                    "breaking change"
                ]
            },
            {
                "pr": "14427",
                "title": "proper use filter in getTags function",
                "description": "Fix #14424",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Scene/babylon.scene.test.ts"
                ],
                "tags": [
                    "bug",
                    "breaking change"
                ]
            },
            {
                "pr": "14435",
                "title": "Remove crash",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureFetchBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14433",
                "title": "Add \"Remove\" buttons for data on Texture and Mesh in NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/meshNodePropertyComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/textureNodePropertyComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerExportData.ts",
                    "packages/tools/nodeGeometryEditor/src/serializationTools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14430",
                "title": "GeometryBufferRenderer: Fix wrong index being returned for the depth and normal textures",
                "description": "See https://forum.babylonjs.com/t/shader-and-motionblur/44953",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/motionBlurPostProcess.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14426",
                "title": "Polyfill VideoFrame for older versions of typescript",
                "description": "In typescript < 5.1 VideoFrame is undefined, which makes certain build configurations fail.\n\nThis is a direct copy from ts 5.1's DOM lib.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "14425",
                "title": "DefaultRenderingPipeline: Fix pipeline reconstruction",
                "description": "See https://forum.babylonjs.com/t/msaaframebuffer-undefined/44897\r\n\r\nIt seems my fix in #13535 was too broad, so I added code to only perform the deferred call during the construction of the `DefaultRenderingPipeline` object.\r\n\r\nHere's the PG that #13535 fixed: https://playground.babylonjs.com/#5CX9XL\r\n\r\nHere's a PG that fails with the fix from #13535 (look at the console) but works with the current PR: https://playground.babylonjs.com/#C43LFR#6\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "14413",
                "title": "WebGPU: support vertex buffers with non multiple of 4 bytes strides",
                "description": "I added the support as a whole and not to WebGPU specifically, this way it can benefit to any engine that requires that strides be a multiple of 4 bytes (like probably Native does).\r\n\r\nIf the stride is not a multiple of 4 bytes, each time you call `VertexBuffer.update()`, it will create a new GPU buffer. But calling `VertexBuffer.update()` is slow anyway, because we must create a new buffer on the js side to make space for padding data. So, I prefered not to handle this case and simply create a new GPU buffer instead of making the PR more complex. If necessary, we can update the docs to explain what happens with non aligned strides and how to handle it on the user side.\r\n\r\n[EDIT] Ready for review again!",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.align.ts",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Buffers/index.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/engineFeatures.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/VertexBuffer-non-aligned-strides.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "rendering engine",
                    "WebGPU"
                ]
            },
            {
                "pr": "14421",
                "title": "Fix a legacy issue with older ts versions",
                "description": "type in an import is 100% correct, but fails if used with an older version of typescript.\n\nThe thinEngine change is just for consistency.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/prePassTextureBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14422",
                "title": "WebGL engine: Add a loseContextOnDispose option",
                "description": "EAFP, so here's a tentative PR to allow the user to free WebGL resources when disposing the engine.\r\n\r\nSee https://forum.babylonjs.com/t/request-for-adding-canvas-webgl-context-cleanup-method/44749/11 for context and why I chose to add an option instead of a parameter to the `dispose` function.\r\n\r\nI can change it, but at least we got the ball rolling!",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14389",
                "title": "Flow graphs serialization",
                "description": "# Changes\r\n\r\n- This PR adds \"serialize\" and \"parse\" functions to the flow graph, which work similarly to the other serialization functions we have in the framework\r\n- It also standardizes the construction of the blocks, with a generic construction parameters interface (which has a name for all blocks), and a generic \"configure\" function that configures blocks according to its construction parameters. This is used, for example, in the \"multiGate\" block to configure how many outputs the block has.\r\n- It also adds a getClassName function for all blocks (and I'm very sorry for the size the PR ended up with 😢 )\r\n- It also adds all the blocks to the class register\r\n- Removed the CustomFunctionBlock since it's not on the spec and I was just using it for tests. Instead now I'm using the Log block and mocking the console.log function\r\n\r\n# Examples\r\n- Serialize: #KSTQJU#3\r\n- Parse: #CVDC94#2",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/flowGraphBitwiseBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/flowGraphLogicBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMatrixBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphNumberMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector2MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector3MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector4MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConditionalDataBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCoordinateTransformBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphPlayAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphStopAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphMultiGateBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSwitchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphCustomFunctionBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphAsyncExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphVariableDefinitions.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphWithOnDoneExecutionBlock.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphDataNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphEventNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphSerialization.test.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14420",
                "title": "WebGPU: Fix anisotropy usage when mipmap filtering is nearest",
                "description": "Linear filtering was forced for min/mag/mip when anisotropy was enabled, even if mip filtering was nearest.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheSampler.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14419",
                "title": "Texture: Serialize the noMipmap property",
                "description": "See https://forum.babylonjs.com/t/particle-editor-texture-props-spritesheet-order-particles/44837",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14416",
                "title": "Exploration of extracting scene texture data to use with node geometry",
                "description": "This PG will work when merged: https://playground.babylonjs.com/#F825Q6",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14409",
                "title": "NME: multiple-import Custom Block and Custom Frame",
                "description": "allow user to multiple-import Custom Block and Custom Frame in NME",
                "author": {
                    "name": "onekit-boss",
                    "url": "https://github.com/onekit-boss"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/lineWithFileButtonComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14412",
                "title": "Add _postMeasure method to GUI Control",
                "description": "Adding `_postMeasure` method to GUI.Control to allow derived classes take some post-measurement actions. This is necessary if we want to change a property such top, after the `_measure()` action but before the `_computeAlignment() `call.\r\nSame should be obtained by overriding `_measure()` or `_computeAlignment()` into the derived class  \r\n\r\n```\r\n public _measure(): void {\r\n      super._measure();\r\n      this.top = this._i * this._currentMeasure.height ;\r\n }\r\n```\r\nbut this will not prevent regression later (as it is defined as prefixed _ private method) while the intend of `_postMeasure `is clear and should be maintened to serve child purposes\r\n\r\nso the above code may be replaced with\r\n```\r\nprotected _postMeasure(parentMeasure: Measure, context: ICanvasRenderingContext): void {\r\n     this.top = this._i * this._currentMeasure.height ;\r\n}\r\n```",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": []
            },
            {
                "pr": "14418",
                "title": "Fix render to texture mips",
                "description": "https://forum.babylonjs.com/t/render-to-mipmap-level/44540\r\n\r\nfix visible in https://playground.babylonjs.com/#T9J1HL",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "texture"
                ]
            },
            {
                "pr": "14415",
                "title": "add reminders for cdn usage",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/public/umd/babylonjs-gui/readme.md",
                    "packages/public/umd/babylonjs-inspector/readme.md",
                    "packages/public/umd/babylonjs-loaders/readme.md",
                    "packages/public/umd/babylonjs-materials/readme.md",
                    "packages/public/umd/babylonjs-post-process/readme.md",
                    "packages/public/umd/babylonjs-procedural-textures/readme.md",
                    "packages/public/umd/babylonjs-viewer/readme.md",
                    "readme.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.24.0": [],
        "6.23.1": [
            {
                "pr": "14411",
                "title": "update dependencies and move to inline sourcemaps for dev",
                "description": "Newer versions of VSCode seem to not follow the webpack-internal eval sourcemaps (like browsers are doing).\nApart from moving to inline sourcemaps i couldn't find a working solution.\nThere will be a slight change in compile time, but it is neglectable. Generated files (in development) will be larger, but memory consumption should be the same.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/launch.json",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/public/babylonjs-viewer-assets/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.snapshot.js",
                    "packages/tools/devHost/webpack.config.js",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js",
                    "packages/tools/nodeGeometryEditor/webpack.config.js",
                    "packages/tools/playground/webpack.config.js",
                    "packages/tools/reflector/webpack.config.js",
                    "packages/tools/sandbox/webpack.config.js",
                    "packages/tools/tests/webpack.config.js",
                    "packages/tools/viewer/webpack.config.js",
                    "packages/tools/vsm/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "14408",
                "title": "fix feedback from 14398",
                "description": "reference to https://github.com/BabylonJS/Babylon.js/pull/14398",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/svgs/icon-ibl.svg"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14407",
                "title": "Reuse / fix maths / simplify",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBaseBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateLinearBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateRadialBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14398",
                "title": "add Env to NME Preview",
                "description": "We can custom Env, Image and toggle Env / Background color now.",
                "author": {
                    "name": "onekit-boss",
                    "url": "https://github.com/onekit-boss"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewAreaComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts",
                    "packages/tools/nodeEditor/src/components/preview/previewMeshControlComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewType.ts",
                    "packages/tools/nodeEditor/src/components/preview/svgs/envPicker.svg",
                    "packages/tools/nodeEditor/src/components/preview/svgs/icon-ibl.svg",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeGeometryEditor/src/components/preview/previewManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "14172",
                "title": "P8 NGE linear and radial cloner blocks",
                "description": "https://forum.babylonjs.com/t/nge-linear-cloner/43369\r\n\r\nJust a simple linear cloner.\r\n\r\nOnly supports uv0 right now.\r\n\r\nProbably should add color support as well.",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateLinearBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateRadialBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14405",
                "title": "Log warning in Native when zOffset is not 0",
                "description": "Fix [#1053](https://github.com/BabylonJS/BabylonNative/issues/1053)",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14387",
                "title": "ArcRotateCamera: Modified zoomOn to use same logic as FramingBehavior",
                "description": "A user on the forum found that the `zoomOn` function was found to be incorrectly determining radius for zooming on provided meshes.  This PR contains a change that takes some of the logic used for the `ArcRotateCamera` framing behavior and uses that to determine how far to zoom.\r\n\r\nForum Link: https://forum.babylonjs.com/t/arcrotate-camera-zoomon-not-working-as-expected/38130/1",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.arcRotateCameraInputs.test.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14401",
                "title": "WebGPU: fix uniform analysis deactivation",
                "description": "Until we update `TintWASM` with the latest package, I have to re-add the js code that disables uniform analysis by injecting a special diagnostic line in the shader code.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts"
                ],
                "tags": [
                    "WebGPU",
                    "skip changelog"
                ]
            },
            {
                "pr": "14402",
                "title": "NME: Add support for reflectivity to the PrePassOutput block",
                "description": "See https://forum.babylonjs.com/t/if-ssr-suppport-nm-now/44744/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/prePassOutputBlock.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "14403",
                "title": "Fix incorrect spelling of `wgslLanguageFeatures` (should be `WGSLLanguageFeatures`)",
                "description": "Bug reproduction:\r\n\r\nInstall  `@babylonjs/core@6.23.0` and navigate to `node_modules/@babylonjs/core/Engines/engine.d.ts:1272`\r\n\r\nActual:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/75621402/0a836870-948e-4d60-9049-71332f192fc8)\r\n\r\nError message:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/75621402/608e3ca1-00f3-4225-ae98-6b2df9531bc4)\r\n\r\nExpected:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/75621402/44565548-2650-4e1d-aba8-3c40d084027b)\r\n\r\nThe erroneous code is defined in [`packages/dev/core/src/LibDeclarations/webgpu.d.ts:71`](https://github.com/BabylonJS/Babylon.js/blob/6.23.0/packages/dev/core/src/LibDeclarations/webgpu.d.ts#L71)\r\n\r\n\r\n",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "14397",
                "title": "WebGPU: Add labels to buffers + support non float vertex buffers",
                "description": "There are several updates in this PR:\r\n* add labels to buffers to help debugging\r\n* add support for non float buffers for the standard vertex buffer types (position, normal, uv, etc)\r\n* fix a bug in `Geometry.setVerticesBuffer` when computing the number of vertices when the type is UNSIGNED_BYTE\r\n* re-enable the \"GLTF Buggy with Meshopt Compression\" visualization test, now that non float vertex buffers are supported\r\n\r\nAfter the PR is merged, these PGs, which are using non float vertex buffers for position/normal/uv, will work:\r\n* Simple face: https://playground.babylonjs.com/?webgpu#U1CZV3#16\r\n* glTF Draco compression: https://playground.babylonjs.com/?webgpu#3RWEGG#7\r\n* WGSL custom shader: https://playground.babylonjs.com/?webgpu#6GFJNR#209\r\n\r\nRegarding TintWASM, I did not include the latest package in the PR because it went from 1.6Mb to 2.6Mb...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Buffers/storageBuffer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.uniformBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.uniformBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBufferManager.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuDrawContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuQuerySet.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessingContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/meshDebugPluginMaterial.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/shadowsFragmentFunctions.fx",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "14399",
                "title": "Prevent possible `Material.dispose()` uncaught exception",
                "description": "Hi babylon folks,\r\n\r\nThis small PR is about preventing an exception when `Material.dispos()` is called while beeing assigned to a `Mesh` that has no subMesh  (in the function `Material.releaseVertexArrayObject` called within `Material.dispose()`).\r\n\r\nContext ; If a mesh is never assigned some valid `VertexData`, the `subMeshes` array is never created and remains to its default value, which is `undefined` for some reasons.\r\n\r\nThe third parameter of `Material.dispos()`, namely `notBoundToMesh`, could be is used to prevent the exception BUT it would require to track whether a mesh has subMeshes and it would not work is the case of a Material shared by several Meshes.\r\n\r\n\r\nHere is a simple playground that shows the error : https://playground.babylonjs.com/#43L9NF\r\n\r\n",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": []
            },
            {
                "pr": "14400",
                "title": "Fix function assignment",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRSessionManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "14395",
                "title": "Add gltf with bad draco test",
                "description": "This is a follow up to #14311, #14325, and #14351 to make sure Draco is working properly.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfBadDraco.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14396",
                "title": "update havok to 1.2.1",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm"
                ],
                "tags": []
            },
            {
                "pr": "14394",
                "title": "move bind to Arrow functions",
                "description": "This is a suggestion to move every bind(this) call to use arrow functions, as they are much faster.\n\nI especially want to move the render function binding in the engine to use arrow function.\n\nThis is just a suggestion, and of course can be discussed.\n\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraVRDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphArcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphFreeCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphGamepadCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicArcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicFreeCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicGamepadCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrDeviceOrientationArcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrDeviceOrientationFreeCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrDeviceOrientationGamepadCamera.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Debug/rayHelper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Misc/videoRecorder.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts",
                    "packages/dev/core/src/XR/features/WebXRSpaceWarp.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "14392",
                "title": "Bump postcss from 8.4.27 to 8.4.31",
                "description": "Bumps [postcss](https://github.com/postcss/postcss) from 8.4.27 to 8.4.31.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/postcss/postcss/releases\">postcss's releases</a>.</em></p>\n<blockquote>\n<h2>8.4.31</h2>\n<ul>\n<li>Fixed <code>\\r</code> parsing to fix CVE-2023-44270.</li>\n</ul>\n<h2>8.4.30</h2>\n<ul>\n<li>Improved source map performance (by <a href=\"https://github.com/romainmenke\"><code>@​romainmenke</code></a>).</li>\n</ul>\n<h2>8.4.29</h2>\n<ul>\n<li>Fixed <code>Node#source.offset</code> (by <a href=\"https://github.com/idoros\"><code>@​idoros</code></a>).</li>\n<li>Fixed docs (by <a href=\"https://github.com/coliff\"><code>@​coliff</code></a>).</li>\n</ul>\n<h2>8.4.28</h2>\n<ul>\n<li>Fixed <code>Root.source.end</code> for better source map (by <a href=\"https://github.com/romainmenke\"><code>@​romainmenke</code></a>).</li>\n<li>Fixed <code>Result.root</code> types when <code>process()</code> has no parser.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/postcss/postcss/blob/main/CHANGELOG.md\">postcss's changelog</a>.</em></p>\n<blockquote>\n<h2>8.4.31</h2>\n<ul>\n<li>Fixed <code>\\r</code> parsing to fix CVE-2023-44270.</li>\n</ul>\n<h2>8.4.30</h2>\n<ul>\n<li>Improved source map performance (by Romain Menke).</li>\n</ul>\n<h2>8.4.29</h2>\n<ul>\n<li>Fixed <code>Node#source.offset</code> (by Ido Rosenthal).</li>\n<li>Fixed docs (by Christian Oliff).</li>\n</ul>\n<h2>8.4.28</h2>\n<ul>\n<li>Fixed <code>Root.source.end</code> for better source map (by Romain Menke).</li>\n<li>Fixed <code>Result.root</code> types when <code>process()</code> has no parser.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/90208de8805dd762596c0028b8637ffbed23e371\"><code>90208de</code></a> Release 8.4.31 version</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5\"><code>58cc860</code></a> Fix carrier return parsing</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4fff8e4cdc237619df1d73a444c0a8329701c1e2\"><code>4fff8e4</code></a> Improve pnpm test output</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/cd43ed123274a92ebc13a1e8cccf1d65b8198f84\"><code>cd43ed1</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/caa916bdcbf66c51321574e2dde112ab13e8b306\"><code>caa916b</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8972f76923e921a3c9655822382039b31b1c8e1a\"><code>8972f76</code></a> Typo</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/11a5286f781d2a637f2c545c5e9cd661055acaab\"><code>11a5286</code></a> Typo</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/45c55017776fc61f7815d1ea8e92d5291ca5d6c8\"><code>45c5501</code></a> Release 8.4.30 version</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/bc3c341f589f9c15f1b56838a33d908374e537e0\"><code>bc3c341</code></a> Update linter</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/b2be58a2eb788d12474ee1335f8ecdb9fa6225aa\"><code>b2be58a</code></a> Merge pull request <a href=\"https://redirect.github.com/postcss/postcss/issues/1881\">#1881</a> from romainmenke/improve-sourcemap-performance--phil...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/postcss/postcss/compare/8.4.27...8.4.31\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=postcss&package-manager=npm_and_yarn&previous-version=8.4.27&new-version=8.4.31)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "14390",
                "title": "Allow undefined bufferViews in glTF accessors",
                "description": "See https://github.com/KhronosGroup/glTF/issues/2169.\r\n\r\nAccording to the glTF spec, if accessors don't have a bufferView, they should be all zeroes.\r\n\r\nThis also removes the code to convert non-float joints to float as that is no longer necessary. It was originally for Babylon Native.\r\n\r\n- [x] Tested changes with Babylon Native master.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "14393",
                "title": "videoTexture serialization",
                "description": "this adds the needed functionality to serialize and parse a video texture.\n\nsrc, isVideo and settings were missing. Until now VideoTexture was parsed as a regular source-less texture.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "14388",
                "title": "Remove bodyInfos when a body is removed from the plugin",
                "description": "When removing a PhysicsBody from the havokPlugin, the body info wasn't being removed from the havokPlugin._bodies map, meaning it could grow forever. This removes the bodies from that map when they're removed from the world. Since a user can remove a body while they're iterating through events, and that body may have multiple events, we skip raising further events for bodies which had been destroyed (discussed with @carolhmj)",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": []
            }
        ],
        "6.23.0": [
            {
                "pr": "14352",
                "title": "ArcRotateCamera: Modify mapPanning to account for upVector",
                "description": "This PR contains a change to the logic for `mapPanning` so that the X/Z panning will happen with respect to whatever the current upVector is, rather than against the absolute X/Z axes.\r\n\r\nRelated forum link: https://forum.babylonjs.com/t/arcrotatecamera-mappanning-does-not-take-upvector-into-account/43820/3\r\n\r\nExample PR to test in future: https://playground.babylonjs.com/#YSVLLN#1",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "bug",
                    "inputs",
                    "breaking change"
                ]
            },
            {
                "pr": "14386",
                "title": "Reverse winding order flag for MeshBlock in NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14383",
                "title": "recreate opaqueRenderTarget if it's needed again for transmission",
                "description": "Fix #14382\r\nAdding @sebavan and @Popov72 to see if this solution makes sense 😛 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_transmission.ts"
                ],
                "tags": []
            },
            {
                "pr": "14385",
                "title": "Fix missing data when using booleans",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/booleanGeometryBlock.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14384",
                "title": "WebGPU: Sync with the spec",
                "description": "A render target format has been removed by mistake in #14378, making the highlight layer (and probably other things!) fail.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14378",
                "title": "WebGPU: Sync with the spec",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14379",
                "title": "Geometry buffer renderer: Add an option to generate normals in world space",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/screenSpaceCurvaturePostProcess.ts",
                    "packages/dev/core/src/PostProcesses/screenSpaceReflectionPostProcess.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx",
                    "packages/dev/core/src/Shaders/geometry.vertex.fx"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14378",
                "title": "WebGPU: Sync with the spec",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14377",
                "title": "Procedural texture: Allow to pass shader code when creating a procedural texture",
                "description": "See https://forum.babylonjs.com/t/create-proceduraltexture-from-shader-source-string/44610\r\n\r\nThis PG will work once the PR is merged:\r\n\r\nhttps://playground.babylonjs.com/#24C4KC#64",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "14376",
                "title": "Inspector tweaks for CSM and removing an implicit varying from shadowsFragmentFunctions.fx",
                "description": "* Allow for editing shadow max Z in CSM inspector when camera is using an infinite far plane (i.e. camera.maxZ = 0)\r\n* Add 4K shadow map option to CSM inspector\r\n* Replace implicit usages vPositionW with a function parameter (worldPos) which allows shadowsFragmentFunctions.fx to be included in shaders that don't have a vPositionW varying.\r\n* Other minor cleanup in shadowsFragmentFunctions.fx",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/lightFragment.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/shadowsFragmentFunctions.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonShadowLightPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14373",
                "title": "Fix stupid bug",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14372",
                "title": "AnimationGroup: Fix onAnimationGroupLoop observable not triggered when mask is not empty",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14371",
                "title": "Mesh: Add a helper method to draw a mesh given a render pass id",
                "description": "I've added `Mesh.renderWithRenderPassId` to make it easier to render an entire mesh without having to loop through sub-meshes by hand. If you provide a render pass ID, this is a useful method for rendering a mesh multiple times in a frame.\r\n\r\nIn the past, I used to reply to forum posts, when a specific rendering effect required a mesh to be rendered multiple times per frame, that the mesh needed to be cloned. In fact, using render pass IDs solves the problem neatly: simply create a new render pass ID and use it to assign the material you want to use to render your mesh a second time! The helper method simplifies this scheme by allowing you to perform the additional rendering in a single call.\r\n\r\nFor example\r\n* Mesh cloning: https://playground.babylonjs.com/#QDAZ80#207\r\n* Use of a render pass id + helper method: https://playground.babylonjs.com/#QDAZ80#506\r\n\r\nI'd have preferred to call it `render`, but this method already exists (and draws a sub-mesh)...\r\n\r\nThis PR also makes a small change to `Tools.FloatRound`. I've checked that `Math.fround` is supported by all the browsers we're targeting (it wasn't supported by IE11 only, for which we dropped support some time ago), so it's a small performance improvement to remove the `if` condition.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            }
        ],
        "6.22.1": [
            {
                "pr": "14365",
                "title": "Gizmos fixes and small improvements",
                "description": "fixes for :\r\n- https://forum.babylonjs.com/t/gizmos-ondragobservable-outdated-docs/44455\r\n- https://forum.babylonjs.com/t/boundingboxgizmo-attach-to-child-node-with-a-wrong-boundingbox/31082/19\r\n- https://forum.babylonjs.com/t/gizmo-rotation-validation-does-not-work/44543/3\r\n- https://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/52\r\n\r\nfixes #12718 ",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14368",
                "title": "New boolean block for NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/booleanGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mergeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/csg.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14367",
                "title": "OIT: Fix viewport not set correctly",
                "description": "See https://forum.babylonjs.com/t/bug-in-order-independent-transparency-rendering-with-multiple-cameras/44481/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14366",
                "title": "Update to havok 1.2.0",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm"
                ],
                "tags": []
            },
            {
                "pr": "14364",
                "title": "Initial flow graph unit tests",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphBranchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphCustomFunctionBlock.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphDataNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphEventNodes.test.ts",
                    "packages/dev/core/test/unit/FlowGraph/flowGraphExecutionNodes.test.ts"
                ],
                "tags": [
                    "skip changelog",
                    "flow graph"
                ]
            }
        ],
        "6.22.0": [
            {
                "pr": "14357",
                "title": "flow graphs vector and matrix math",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMatrixBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector2MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector3MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector4MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14333",
                "title": "Add coordinate transform and constant value blocks",
                "description": "# Changes:\r\n- New Node: Coordinate Transform (same as Node Space to Node Space from: https://docs.google.com/document/d/1MT7gL-IEn_PUw-4XGBazMxsyqsxqgAVGYcNeC4Cj_9Q/edit#heading=h.vz8ooowh7xqb)\r\n- Constant Value\r\n\r\n# Examples:\r\nTransform a point from box1's space to box2's space: #EMA2AF",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphCoordinateTransformBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14363",
                "title": "fix: correct the comment for resizeToFit",
                "description": "According to the actual effect of `resizeToFit()`, I think it would be better to change the comment to `to fit it's content` rather `to fit container`.\r\n\r\nThe `TextBlock` will always be resized to fit it's content whether the text is too long or too large. Any excess beyond the container, like a plane attached the texture with one `TextBlock`,  will not be displayed.\r\n\r\nIn the meanwhile, when I set the `fontSize`, `width` and `resizeToFit` simultaneously, it's `width` to fit `fontSize`, rather `fontSize` to fit `width`.\r\n\r\n```\r\nlet text = new BABYLON.GUI.TextBlock();\r\ntext.text = \"Hello world\";\r\ntext.fontSize = 50;\r\ntext.width = 0.5\r\ntext.resizeToFit = true\r\n```\r\n\r\n**It's all about the content.** There's nothing about the `container` or `to fit container`.\r\n\r\nAs far as I'm concerned, the original version is kind of ambiguous to understand. And I think it might be better to make this modification for better clarity.\r\n\r\nThanks.\r\n",
                "author": {
                    "name": "wy-luke",
                    "url": "https://github.com/wy-luke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14358",
                "title": "Fix mapping block",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/mappingBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14362",
                "title": "Fix crash bug when no mesh data is provided",
                "description": "Fix #14361 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryCollectionBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14356",
                "title": "flow graph audio blocks",
                "description": "# Changes\r\n- Added Play/Stop audio blocks, these are pretty simple\r\n\r\n# Examples\r\n- #GPPEUA#9",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphPlayAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/flowGraphStopAudioBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Audio/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14350",
                "title": "add FlowGraphEngine class",
                "description": "@sebavan I think you were waiting for this one 😉 \r\n\r\nSmall change, but it will be useful in situations where we create more than one graph. The engine currently holds a list of graphs and a common event coordinator for all those graphs.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/index.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14312",
                "title": "Move GetTextureDataAsync from inspector to core",
                "description": "This is a refactor that will eventually enable a serializer like GLTFExporter to use the now core-based `GetTextureDataAsync` in order to serialize textures that are not directly retrievable as RGBA e.g., GPU-compressed formats.\r\n\r\nFor more discussion on that point, see #12257. The part that is missing to ultimately solve this is some sort of function or BaseTexture-property that can tell whether the texture uses a GPU compressed format. Once that exists, then it should be easy to do something like this... from `glTFMaterialExporter.ts`:\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/20366429/21df00fc-a5b4-4ed5-a735-5f9d984bb54a)\r\n\r\n",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.path.ts",
                    "packages/dev/core/src/Misc/textureTools.ts",
                    "packages/dev/inspector/src/textureHelper.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts"
                ],
                "tags": []
            }
        ],
        "6.21.4": [
            {
                "pr": "14360",
                "title": "Texture cache fix",
                "description": "follow up on equi rect changes.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.21.3": [
            {
                "pr": "14355",
                "title": "Flow graph control flow blocks 2",
                "description": "# Changes\r\n\r\n- Add debounce and flip flop blocks\r\n- About debounce: I'm not 100% sure the implementation should work this way, feedback is appreciated 🙂 \r\n\r\n# Examples:\r\n- #RKQX23#11: Debounce, only every 2 clicks on the sphere are registered\r\n- #J1N2GP#7: Flip flop, click on the sphere to open and close the door",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/index.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14359",
                "title": "switch all dependencies to CDN Serve and Watch",
                "description": "This way tasks can be reused when running more than one server (sandbox + playground, or vis-tests)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/launch.json",
                    ".vscode/tasks.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14354",
                "title": "Fix a typo",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14351",
                "title": "Better fix for recent Draco changes",
                "description": "See forum: https://forum.babylonjs.com/t/setting-the-value-0-to-the-defaultnumworkers-from-dracocompression-throw-an-engine-error-since-6-21-1-version/44323\r\n\r\n- Undo changes to vertex buffer so that engine is no longer nullable.\r\n- Factor out GetFloatData function so that it can be used in DracoCompression.\r\n- Update DracoCompression code to use VertexBuffer only when it's necessary.\r\n",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14349",
                "title": "Fix to styling of NME and NGE",
                "description": "Trying to separate the class names more so one doesn't contaminate the other\r\nFix #14347\r\nFix #14348",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/nodeList/nodeList.scss",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/main.scss",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeList.scss",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/nodeGeometryEditor/src/graphEditor.tsx",
                    "packages/tools/nodeGeometryEditor/src/main.scss"
                ],
                "tags": [
                    "bug",
                    "nme",
                    "nge"
                ]
            },
            {
                "pr": "14327",
                "title": "Flow graph control flow nodes - 1",
                "description": "# Changes\r\n- Add the following Control Flow nodes (lifted from: https://docs.google.com/document/d/1MT7gL-IEn_PUw-4XGBazMxsyqsxqgAVGYcNeC4Cj_9Q/edit#heading=h.m04l33f79oe5)\r\n -  Counter\r\n - DoN\r\n - MultiGate\r\n - Switch\r\n - Throttle\r\n - WaitAll\r\n - WhileLoop\r\n\r\n- Move some nodes to the Control Flow directory:\r\n - ForLoop\r\n - Timer\r\n - Conditional\r\n\r\n- To set a value on a FlowGraphDataConnection point, now you need to specify a context. This is because, if we have the same graph running with multiple contexts, the value of a data connection can be different between them. I wasn't differentiating them before, which was an oversight.\r\n\r\n- When a block executes, it now knows which of its input signals activated the block. This is needed for blocks that have a \"reset\" input, such as some of the conditional blocks added.\r\n\r\n# Example PGs\r\n \r\n- #RKQX23#10: DoN - Click on the sphere to log a message max 5 times, click on the box to reset the DoN counter\r\n- #BWRXG9#2: Throttle - Log a message every 3 seconds using onTick event and Throttle, click on the sphere to reset the throttle\r\n- #RKQX23#7: Multigate - without looping, click on the sphere to log the number of execution\r\n- #RKQX23#8: Multigate - with looping, click on the sphere to log the number of execution\r\n- #RKQX23#9: Multigate - with looping and randomizing, click on the sphere to log the number of execution\r\n- #RKQX23#6: Switch - Change the switch's value on the code\r\n- #J1N2GP#5: Wait all - Click on the 3 spheres to open the door, click on the box to reset the wait all count\r\n- #9C7VK6#1: Counter - Log the value on the counter after a delay, explore the value in two different contexts \r\n- #5JFH79#7: While loop - Logs from 1 to 5",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphNumberMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConditionalDataBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphConditionalBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphMultiGateBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSwitchBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphThrottleBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWaitAllBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14346",
                "title": "Update component if the label has changed",
                "description": "The inspector doesn't update the labels under certain conditions.\r\nThis will refresh the component if the label has changed.\r\n\r\nInfluences the inspector.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/sliderLineComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "14334",
                "title": "Add bitwise blocks to Flow Graph",
                "description": "Source: https://docs.google.com/spreadsheets/d/17wdC8ML3VzdLLM5t-4HwFcEqnhRgc_8XTuVrF0ynAiI/edit#gid=0",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/flowGraphBitwiseBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14345",
                "title": "EquiRectangularCubeTexture: fix load",
                "description": "Missing from https://github.com/BabylonJS/Babylon.js/pull/14330\r\nExample: <https://playground.babylonjs.com/?snapshot=refs/pull/14345/merge#RY8LDL#32>",
                "author": {
                    "name": "kzhsw",
                    "url": "https://github.com/kzhsw"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "14344",
                "title": "Animations: Add some animation getter helpers",
                "description": "I need them for my PoC!",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14343",
                "title": "CascadedShadowGenerator: Fix shadowMaxZ upper bound checking when using an infinite far camera plane",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts"
                ],
                "tags": [
                    "bug",
                    "shadows"
                ]
            },
            {
                "pr": "14342",
                "title": "comments!!",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14339",
                "title": "Playwright test timeout configuration",
                "description": "Will be better to handle errors",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/playwright/visualizationPlaywright.utils.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14341",
                "title": "initiateRoomCapture added to plane detection feature",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRPlaneDetector.ts"
                ],
                "tags": [
                    "enhancement",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "14340",
                "title": "Use LoadFile only if needed",
                "description": "Forum discussion here - https://forum.babylonjs.com/t/filetools-why-loadimage-loads-the-image-as-blob/44324\n\nThe idea is that if there are no WebRequest modifiers there is no need to use filetools. ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/webRequest.ts"
                ],
                "tags": []
            }
        ],
        "6.21.2": [
            {
                "pr": "14316",
                "title": "Fixes and enhancements for gizmos",
                "description": "Many small fixes/enhancements\r\n- https://forum.babylonjs.com/t/boundingboxgizmo-ishovered-always-false/44095\r\n- https://forum.babylonjs.com/t/boundingboxgizmo-scalebox-snapping/44060\r\n- https://forum.babylonjs.com/t/gizmo-position-doesnt-update-when-coordinates-mode-world/44331\r\n- https://forum.babylonjs.com/t/gizmos-misbehave-when-operating-on-child-objects-with-configured-pivot/42313\r\n- https://forum.babylonjs.com/t/unable-to-drag-position-gizmo-after-changing-pivot/44217\r\n- https://forum.babylonjs.com/t/gizmo-location-with-setpivotpoint/41271\r\n- https://forum.babylonjs.com/t/the-gizmo-uses-the-latest-cameras-in-inspector/31221",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/cameraTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/lightTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/sceneTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemSelectableComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemSpecializedComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14338",
                "title": "fix code doc torotationmatrix",
                "description": "forum issue: https://forum.babylonjs.com/t/unexpected-quaternion-torotationmatrix-behavior/44361",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "14330",
                "title": "EquiRectangularCubeTexture: load from url only once",
                "description": "https://forum.babylonjs.com/t/equirectangularcubetexture-loads-the-texture-twice/44319/1\r\n\r\nPlayground example:\r\n<https://playground.babylonjs.com/?snapshot=refs/pull/14330/merge#RY8LDL#53>\r\n![Playground screenshot](https://github.com/BabylonJS/Babylon.js/assets/120431159/b4414b2a-bf32-4dc6-b663-d03473b3cfde)\r\n",
                "author": {
                    "name": "kzhsw",
                    "url": "https://github.com/kzhsw"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "14336",
                "title": "Fix PBR transmission in Webgl1",
                "description": "This fixes https://playground.babylonjs.com/#IMXJ1I not rendering transmission in WebGL1",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14335",
                "title": "Texture loading: Fix regression with compressed textures not working anymore",
                "description": "Fix a regression from #14314 .",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14332",
                "title": "Flow graph pause animation node",
                "description": "# Changes\r\n- Move Play/Stop Animation blocks to its own subfolder\r\n- Add Pause Animation node\r\n- Update Play Animation logic to account for possibly paused animations\r\n\r\n# Example\r\nCar semaphore example with pause (yellow button): #GPPEUA#7",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/Animation/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14331",
                "title": "Fix instance rendering issue in Babylon Native",
                "description": "Babylon Native is currently not using the instanceCount information when performing instance rendering. This PR sends that information so Babylon Native can properly handle it. \r\n\r\nBabylon Native PR: https://github.com/BabylonJS/BabylonNative/pull/1290\r\n\r\nSince this changes Protocol version, this PR must be merged first and Babylon Native must than be updated to the latest version of Babylon.js otherwise it will fail validation test. \r\n\r\nForum issue: https://forum.babylonjs.com/t/react-native-unexpected-behaviour-of-instance-mesh-on-its-parent-movement/37001/2",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14126",
                "title": "Auto compute texture size in wrapNativeTexture",
                "description": "Not sure this should be done. There is no way to do the same with `wrapWebGLTexture` since there isn't a way to get the texture size from a WebGL texture. Maybe we should add width/height to the `wrapWebGLTexture` call?",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14329",
                "title": "Add morph target names to gltf serializer",
                "description": "By convention, GLTF includes moph target names in the \"extras\" field of the mesh. This PR adds the corresponding data to the serialized GLTF.\r\n\r\nhttps://github.com/KhronosGroup/glTF/issues/1036 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "exporters",
                    "glTF"
                ]
            },
            {
                "pr": "14328",
                "title": "Fix lost value",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts"
                ],
                "tags": []
            },
            {
                "pr": "14326",
                "title": "STL loader: Fix out of memory when loading big stl files",
                "description": "See https://forum.babylonjs.com/t/higher-file-size-model-load-issue/44214/6\r\n\r\n[...]\r\n\r\nI forgot to mention that the use of `TextDecoder` is ok because it is supported by all browsers except IE11, which we no longer support.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/loaders/src/STL/stlFileLoader.ts"
                ],
                "tags": [
                    "enhancement",
                    "loaders"
                ]
            },
            {
                "pr": "14325",
                "title": "Add an ugly flag to glTF draco loader extension",
                "description": "There appears to be lots of files out there with invalid Draco data where the `normalized` flag in the data is marked `false` when it should be `true`. The glTF accessor info is correct. Draco data is supposed to be self-contained, so this is troubling. For now, adding this flag to read from the glTF accessor instead and log a warning when there is a mismatch.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_draco_mesh_compression.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.21.1": [
            {
                "pr": "14301",
                "title": "Support more native texture formats",
                "description": "Corresponding change in native: https://github.com/BabylonJS/BabylonNative/pull/1284.\r\n\r\nThese changes don't have to go together since the code happens to work like before as if the new texture formats didn't exist.\r\n\r\nDoing this will make DOF (depth of field) work because it requires the RED format that is included in these changes.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeHelpers.ts",
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14320",
                "title": "flow graph: arithmetic and logic nodes",
                "description": "Following this document: https://docs.google.com/spreadsheets/d/1cLyvWTG4oy-j4pRKLr6-Z-dBRs5ddubEznNCcIkWwpw/edit#gid=0\r\nI didn't implement every single operation there, just a few of the ones that I thought were good to start with. I also implemented some that aren't in the document.\r\n\r\nExample: \r\n#500LI9#1 -> ball going back and forth\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Logic/flowGraphLogicBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphNumberMathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector2MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector3MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphVector4MathBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphAddBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConstantOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphUnaryOperationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14324",
                "title": "Distinguish sounds with no soundTrackId from those in soundTrack 0.",
                "description": "Add a sound to sound track #0 and then put into a different track did not unregister it from sound track #0. This resulted in an infinite loop when the tracks were eventually disposed (since this.soundCollection.length never dropped to 0).\r\n\r\nThere are no existing SoundTrack unit tests. I can add `soundTrack.test.ts` and add a regression test just for this case if you feel like it's worthwhile.",
                "author": {
                    "name": "bmcbarron",
                    "url": "https://github.com/bmcbarron"
                },
                "files": [
                    "packages/dev/core/src/Audio/soundTrack.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14323",
                "title": "Add missing collision and trigger events to IPhysicsEnginePluginV2 in…",
                "description": "…terface\r\n\r\nI noticed these were in the HavokPlugin class but not on the general interface, so I added them.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            },
            {
                "pr": "14311",
                "title": "Improve Draco decoder processing code",
                "description": "See forum: https://forum.babylonjs.com/t/textures-not-loading-properly-with-gltf-draco-compression/44059\r\n\r\n- Revert changes from #11776.\r\n- Add new `decodeMeshToGeometryAsync` and deprecate `decodeMeshAsync`. The old function decodes to `VertexData` which requires floats. This is slow if the Draco data has non-float data.\r\n- Update `VertexBuffer` class to allow passing null to engine to support scenarios where the buffer is just being used for manipulating data. This is used in the old `decodeMeshAsync` to convert the non-float data to float data.\r\n- Update `KHR_draco_mesh_compression` loader to use new `decodeMeshToGeometryAsync`.\r\n- Update Draco dist to official 1.5.6 (this isn't required but might as well) and remove instructions to build a custom IE version as we don't support IE anymore.\r\n\r\nAlso note that the assets from #11685 are not proper. As [noted](https://github.com/BabylonJS/Babylon.js/issues/11685#issuecomment-1000350051) by @Popov72, the Draco decoder decodes the data with normalized being false when it is supposed to be true. It only works in three.js because it uses the information from glTF. We shouldn't rely on glTF information as Draco data is supposed to be self-contained. The mannequin asset from the forum correctly decodes with normalized being true.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/core/package.json",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Meshes/Compression/building-draco.md",
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_draco_mesh_compression.ts",
                    "packages/tools/babylonServer/public/draco_decoder_gltf.js",
                    "packages/tools/babylonServer/public/draco_decoder_gltf.wasm",
                    "packages/tools/babylonServer/public/draco_wasm_wrapper_gltf.js"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14322",
                "title": "Fix PBR double sided lighting harmonics",
                "description": "https://forum.babylonjs.com/t/material-twosidedlighting-not-working-for-environment-lights-environmenttexture-hdr/44176/6",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14321",
                "title": "more outputs",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureFetchBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14319",
                "title": "Better icons",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerNodePortDesign.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14309",
                "title": "Mesh: Fix subMesh bounding info when mesh has thin instances",
                "description": "See https://forum.babylonjs.com/t/creating-thininstance-after-merging-mesh-using-mergedmesh-causes-the-origin-to-exceed-frustum/44145/5\r\n\r\nAs we can't maintain a bounding info per submesh when thin instances are defined, just take the main mesh bounding info when a submesh bounding info is requested (because the bounding info of the main mesh does take into account all the thin instances).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/subMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14314",
                "title": "Texture: Set type and format at load time",
                "description": "See https://forum.babylonjs.com/t/update-just-one-channel-of-texture/44163/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14313",
                "title": "fix rayHelper.ts typo",
                "description": null,
                "author": {
                    "name": "djakinho",
                    "url": "https://github.com/djakinho"
                },
                "files": [
                    "packages/dev/core/src/Debug/rayHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "14310",
                "title": "Add more locking mode for random block",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/randomBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14308",
                "title": "Playwright visualization tests",
                "description": "This PR adds a new script to run playwright visualization tests.\r\n\r\nTo test playwright:\r\n\r\n1. run `npm install` \r\n2. run `npx playwright install` (this will install the missing browsers)\r\n3. run `npm start` (or start the babylon-server any other way)\r\n4. run `npm run test:playwright -w @tools/tests -- --project=webgl2 --ui` to start webgl2 tests in UI mode\r\n\r\nThis will start playwright in UI mode. You can run tests individually and see the results or run all of them:\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1381702/ad4f040b-7800-4a2e-b4f3-cfa8ebc8180f)\r\n\r\nother projects - webgl1 and webgpu\r\n\r\nFor automated tests run\r\n\r\n`npm run test:playwright -w @tools/tests -- --project=webgl2` . This will run headless with no UI. If something fails playwright will open its HTML reporter to show you exactly what happened.\r\n\r\nAlternative to 3 (to test against public CDN), set the CDN_BASE_URL environment variable to \"https://cdn.babylonjs.com\".",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".gitignore",
                    "package-lock.json",
                    "package.json",
                    "packages/tools/tests/package.json",
                    "packages/tools/tests/playwright.config.ts",
                    "packages/tools/tests/test/playwright/visualization.webgl1.test.ts",
                    "packages/tools/tests/test/playwright/visualization.webgl2.test.ts",
                    "packages/tools/tests/test/playwright/visualization.webgpu.test.ts",
                    "packages/tools/tests/test/playwright/visualizationPlaywright.utils.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Asset-Container-Instantiate-to-Scene-2.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Asset-Container-Instantiate-to-Scene.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Decal-Map.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Force-Resize-Width.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Gradient-Linear-with-transparency.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Gradient-Linear.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Gradient-Radial.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Horizontal-Stack-Panel-and-Text-Block-with-resizeToFit-and-forceResizeWidth.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Images-in-Grid.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Input-Text-Area-Inside-ScrollViewer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-Text-Block-with-resizeToFit-and-forceResizeWidth.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI-for-Mesh-cloning.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Instantiate-Hierarchy.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Load-babylon-files-with-same-geometry-uniqueId.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Loading-glTF-model-with-KTX2-textures.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/MultiRenderTarget-with-different-texture-types.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/MultiSample-render-targets.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/PBR-Debug-Modes.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Rounding-cell-widths-on-Grid.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Rounding-values-on-controls-inside-StackPanel.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Scene-Recorder-Apply-Delta.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Screen-Space-Reflections-2.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/SerializeMesh-with-hierarchy.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/SerializeScene-and-ImportMesh-with-MorphTargetManager.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/SerializeScene-and-ImportMesh-with-string-skeletonIds.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Sprites-Pixel-Perfect.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/chibi-rex.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/glTFSerializerNegativeWorldMatrix-Right.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence-gltf.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence-nme.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/local-cubemaps.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/negative-scaling-with-instances.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/nested-BBG.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/particle-helper.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pbr-codecoverage.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pbr-codecoverage1.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pbr-codecoverage2.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pbr-codecoverage3.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pbr-refraction.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/procedural-nme.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/ribbon-morphing.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/texture-cache.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/weighted-animations.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14247",
                "title": "fix viewer's animation error when animations has same name",
                "description": null,
                "author": {
                    "name": "cpunion",
                    "url": "https://github.com/cpunion"
                },
                "files": [
                    "packages/tools/viewer/src/model/viewerModel.ts"
                ],
                "tags": []
            },
            {
                "pr": "14306",
                "title": "Make core pass strict lib check",
                "description": "Specifically `exactOptionalPropertyTypes: true`. Context: https://forum.babylonjs.com/t/support-typescript-tsconfig-flag-exactoptionalpropertytypes-true/33824",
                "author": {
                    "name": "alecmev",
                    "url": "https://github.com/alecmev"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.nativeextensions.d.ts",
                    "packages/dev/core/src/Meshes/meshSimplification.ts"
                ],
                "tags": []
            },
            {
                "pr": "14307",
                "title": "Allow debug nodes to be terminal",
                "description": "cc @PirateJC @PatrickRyanMS ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/debugBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts"
                ],
                "tags": [
                    "skip changelog",
                    "nge"
                ]
            },
            {
                "pr": "14304",
                "title": "docs: fix typo (2x \"the\")",
                "description": "Nit-pick 🤓🔎: remove one `the` :innocent:.",
                "author": {
                    "name": "PhilippeMorier",
                    "url": "https://github.com/PhilippeMorier"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "14305",
                "title": "Bump mapping: Fix parallax mapping in right handed mode",
                "description": "See https://forum.babylonjs.com/t/using-an-right-coordinate-system-results-in-parallax-occlusion-mapping-rendering-errors/44101",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/bumpFragmentFunctions.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            }
        ],
        "6.21.0": [
            {
                "pr": "14297",
                "title": "Nge texture",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Textures/geometryTextureFetchBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/debugBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTransformBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTrigonometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mapRangeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mathBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/normalizeVectorBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/randomBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryConnectionPointTypes.ts",
                    "packages/dev/core/src/Meshes/Node/Interfaces/nodeGeometryTextureData.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/textureDisplayManager.modules.scss",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/textureNodePropertyComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerDebugSupport.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerNodePortDesign.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerToDisplayLedger.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerToPropertyLedger.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14303",
                "title": "Fix continuity with teleports",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportInBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14302",
                "title": "Fix adapt to not trigger with undefined",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14300",
                "title": "Improve perf of noise texture gen in lens and ssao",
                "description": "Use raw texture with a buffer of pixels instead of dynamic texture to render one pixel at a time using canvas.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/lensRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.ts"
                ],
                "tags": []
            },
            {
                "pr": "14298",
                "title": "Vertex color mesh used for instantiate source not visible if density set to 0",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14299",
                "title": "- Given a data set of positional Values, ability to get the min and max from that list",
                "description": "cc @PatrickRyanMS @PirateJC ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/boundingBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14294",
                "title": "Fix geom caching",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInfoBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.20.2": [
            {
                "pr": "14292",
                "title": "Mark native engine as supporting MSAA",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14293",
                "title": "Document adding and updating visual snapshots",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "buildSystem.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14291",
                "title": "Fix scale for noiseblock",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/noiseBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14290",
                "title": "Add a rebuild button",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14288",
                "title": "Evaluate Debug node for NGE like teleport node so it doesn't need to be connected to GeometryOutput",
                "description": "@PatrickRyanMS @PirateJC : I would qualify this as low level confidence. It is a bit of a hack. I think it is acceptable if it does not grow more hacky. So let's make sure to test it widely when merged",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportOutBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/debugBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/blockNodeData.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14289",
                "title": "Optimize block on context by default",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryOptimizeBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14287",
                "title": "ReflectionProbe: Add a setter for renderList",
                "description": "See https://forum.babylonjs.com/t/renderlist-with-all-meshes/43995/5",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Probes/reflectionProbe.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "14286",
                "title": "Idempotent disposing of physics bodies and shapes.",
                "description": "Forum: https://forum.babylonjs.com/t/exception-when-double-disposing-physicsaggregate/43959",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14285",
                "title": "Effect: Call pipelineContext.setUIntX instead of setIntX for the unsigned variants",
                "description": "See https://forum.babylonjs.com/t/cannot-use-uint-uniforms-in-shadermaterial/43998",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14284",
                "title": "MeshLine: Add support for thin instances",
                "description": "See https://forum.babylonjs.com/t/thin-instance-linesmesh-question-issue/43955",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/linesMesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14283",
                "title": "Fix issue with merge conflicts when data was not present",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14282",
                "title": "Fix few bugs",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/alignBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14280",
                "title": "Add an option to lock random values per loop",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/randomBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.20.1": [
            {
                "pr": "14279",
                "title": "Fix context lost or unwanted data update",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setColorsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setMaterialIDBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setPositionsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setTangentsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/boxBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/capsuleBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/cylinderBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/discBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/gridBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/icoSphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/planeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/sphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/torusBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryCollectionBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryOptimizeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTransformBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mergeGeometryBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14278",
                "title": "Animations: Refactor the code that creates additive animations",
                "description": "* added some options to drive more precisely the creation of additive animations\r\n* added a helper function to clip an animation group given a range of frames\r\n* fixed the `clone` / `serialize` / `parse` methods of the `AnimationGroup` class",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14276",
                "title": "Add textures ready helper",
                "description": "https://forum.babylonjs.com/t/node-material-post-processes-flashing-replace-colour-at-initialisation/43865/9",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14275",
                "title": "I'm with stupid...",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/matrixComposeBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14274",
                "title": "WebGPU: Fix having a single occlusion query per mesh per frame",
                "description": "See https://forum.babylonjs.com/t/webgpu-occlusion-query-with-2-cameras/43840",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuOcclusionQuery.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14273",
                "title": "Rework entire stack system for context",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setColorsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setPositionsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setTangentsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14272",
                "title": "WebGPU: Fix warnings when using occlusion queries",
                "description": "I also added some labels for some objects for debugging purpose in WebGPU.\r\n\r\n(my PG so that it does not get lost: http://localhost:1338/?webgpu#QDAZ80#457)",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTargetCube.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuOcclusionQuery.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuQuerySet.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14271",
                "title": "NME: Fix PBR debug mode",
                "description": "See https://forum.babylonjs.com/t/nme-pbr-material-debug-mode/43908/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDebug.fx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            }
        ],
        "6.20.0": [
            {
                "pr": "14261",
                "title": "Flow graph iteration 0.0.3",
                "description": "This PR introduces the ability to send and receive custom events. Events are identified by an event id of type string, and event data of type any. To centralize the listening and notifying of events, a new class was added, named FlowGraphEventCoordinator. Multiple Flow Graphs can share the same Event Coordinator and with that, communicate with each other through events. \r\n\r\nExamples:\r\n#J1N2GP#1 -> click on the sphere, the door opening animation will play\r\n#GPPEUA#5 -> click on the green button, the animation plays. Click on the red button, the animation stops.\r\n#MD0K3B -> click on the button, the two spheres will move up\r\n\r\nOn the three cases, the button and the acted upon object have distinct graphs, and communicate through a custom event.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphStopAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphCustomEvent.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphEventCoordinator.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphVariableDefinitions.ts",
                    "packages/dev/core/src/FlowGraph/index.ts"
                ],
                "tags": [
                    "new feature",
                    "flow graph"
                ]
            },
            {
                "pr": "14270",
                "title": "Fix texture not ready when parsing NME",
                "description": "https://forum.babylonjs.com/t/node-material-post-processes-flashing-replace-colour-at-initialisation/43865",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "14269",
                "title": "Add new InstanceID info",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setColorsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setMaterialIDBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setPositionsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setTangentsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryContextualSources.ts",
                    "packages/dev/core/src/Meshes/Node/Interfaces/nodeGeometryInstancingContext.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14268",
                "title": "Matrix Compose block needed for NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/matrixComposeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/nodeGeometry.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14267",
                "title": "fix action manager disposal when shared",
                "description": "Related forum issue: https://forum.babylonjs.com/t/how-do-you-dispose-the-actions-of-an-actionmanager/9985/7\r\n\r\nPG to test: #J19GYK#567",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14266",
                "title": "Compute shaders: Add support for external (video)  textures",
                "description": "See https://forum.babylonjs.com/t/compute-shader-videotexture-input/43864",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Compute/computeShader.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuComputeContext.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "14265",
                "title": "Screenshots: Fix OffscreenCanvas not supported in older browsers",
                "description": "See https://forum.babylonjs.com/t/create-screenshot-using-render-target-and-report-an-error-on-ios-cant-find-variable-offscreencanvas/43878",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/dumpTools.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14263",
                "title": "Fix mathblock to accept floats with vectors",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/mathBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14262",
                "title": "Add context action to create Node Geometry in PG to parallel Node Material flow",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14260",
                "title": "Map Range node in NGE appears to accept Vectors, but results in NaN",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/mapRangeBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14259",
                "title": "Conversion from float to int inconsistent in NGE nodes",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/intFloatConverterBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mapRangeBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14258",
                "title": "Debug node does not handle matrices in NGE",
                "description": "Fix #14243",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/debugBlock.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerDebugSupport.ts",
                    "packages/tools/nodeGeometryEditor/src/globalState.ts",
                    "packages/tools/nodeGeometryEditor/src/graphEditor.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerDebugSupport.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14140",
                "title": "Flow graph iteration 0.0.2",
                "description": "## Changes:\r\n- Added the idea of a \"context\" of a graph, that is created by `graph.createContext`, and is used for both user variables , block-scoped execution variables (such as the current index of a for loop block), graph-scoped execution variables (such as the scene the graph runs in), and also to keep a list of blocks with pending tasks. When blocks execute, they pass the context down to the next block.\r\n- GetVariable and SetVariable blocks\r\n- Conditional data and conditional execution block. The former returns a value depending on a condition and the latter executes a flow depending on a condition.\r\n- PlayAnimation Block \r\n- SetProperty Block\r\n- Timer Block, it can execute an action immediately and another action after a delay\r\n- Data connection points now receive a RichType instead of a default value. A RichType follows an interface containing the name of the type (which can be useful for displaying different colors depending of type on the visual tool), and a function to generate a default value of the type. \r\n- A connection point is now able to connect to multiple other points depending on its type, as follows:\r\n    - Data output blocks can connect to MULTIPLE points, since a piece of data can be used by many blocks.\r\n    - Data input blocks can only connect to ONE point, because a block has to have a well defined source of data.\r\n    - Signal output blocks can only connect to ONE point, because a block can only execute one well defined flow after it.\r\n    - Signal input blocks can connect to MULTIPLE points, since the same flow can be executed from multiple antecessors.\r\n\r\n\r\n## Example PGs:\r\n- #43USDV#4 -> once the scene starts, runs a for loop and log its index \r\n- #43USDV#3 -> click on the sphere or on the cube, it will run a for loop and log its index \r\n- #GQAXFL#7 -> click on the sphere or on the cube, it will immediately change color to red, and 1s later change color to yellow\r\n- #GQAXFL#5 -> click on the sphere or on the cube and each will run a different animation. you can press \"p\" to dispose of the graph",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphAddBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOpBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphConditionalDataBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphConditionalBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphPlayAnimationBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphTimerBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphAsyncExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphContext.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphRichTypes.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphVariableDefinitions.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphWithOnDoneExecutionBlock.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14257",
                "title": "Instantiate nodes using matrices need original positions",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14255",
                "title": "Constraints debug view - pivots",
                "description": "This PR introduces a new function to `PhysicsViewer`, `showConstraint(constraint)`, which will display on all of the pairs of bodies that use that constraint, axes representing the pivots and axes of it.\r\n\r\n![constraint-view-2](https://github.com/BabylonJS/Babylon.js/assets/6002144/8ad16927-eafd-41e1-a851-7101fc6ffd12)\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14254",
                "title": "Pre-pass renderer: Add an option to generate normals in world space",
                "description": "Also added a `bindTexture` helper to `UniformBuffer`.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14251",
                "title": "Fixes Bounty #Generate equirectangular 360 panorama from babylon.js scene",
                "description": "Hey, I'm a first-time contributor to Babylon.js, love the community, and would love it if someone could review this PR.\r\nThis PR is based on @Pryme8 's work on this playground [here](https://playground.babylonjs.com/#JTUAY3#5).",
                "author": {
                    "name": "lokiiarora",
                    "url": "https://github.com/lokiiarora"
                },
                "files": [
                    "packages/dev/core/src/Misc/equirectangularCapture.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Shaders/equirectangularPanorama.fragment.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14253",
                "title": "Occlusion queries: Use the first camera in the case of multiple cameras",
                "description": "See https://forum.babylonjs.com/t/webgpu-occlusion-query-with-2-cameras/43840",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14250",
                "title": "Performance viewer: Fix crash when object is empty",
                "description": "See https://forum.babylonjs.com/t/open-source-multiplayer-3d-rpg-using-colyseus/35733/206",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/PerformanceViewer/performanceViewerCollectionStrategies.ts"
                ],
                "tags": [
                    "bug",
                    "performance viewer"
                ]
            },
            {
                "pr": "14252",
                "title": "bug Update geometry.ts",
                "description": "fix the problem of losing UV2, UV3, UV4, UV5, UV6 after importing .babylon format.\r\n\r\nReference: https://github.com/BabylonJS/Babylon.js/commit/b955d1559a5c7c57aa662f8de7cdd14ef4e81acb#diff- f9bb01d7c335d9866b1042172a02aafacdb9c82a581ca7929359a0efdc49b8f5",
                "author": {
                    "name": "wayne2006",
                    "url": "https://github.com/wayne2006"
                },
                "files": [
                    "packages/dev/core/src/Meshes/geometry.ts"
                ],
                "tags": []
            },
            {
                "pr": "14249",
                "title": "RuntimeAnimation: Fix original value used in the bone matrix case",
                "description": "We want the original value to be the current (matrix) value at the time the `RuntimeAnimation` is started, which may be different than the rest matrix (which should not be used, anyway, as it's a matrix for user consumption only).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14248",
                "title": "KTX2Decoder: Fix UASTC_R8_UNORM wasm path",
                "description": "See https://forum.babylonjs.com/t/typeerror-ktx2decoder-litetranscoder-uastc-r8-unorm-is-undefined/43759",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/ktx2Decoder/src/Transcoders/index.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_R8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RG8_UNORM.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14238",
                "title": "FreeCameraTouchInput: Add check for Handedness",
                "description": "Recently, on the forum, a user found an issue where the UniversalCamera's touch controls weren't accounting for a right-handed system.  Upon investigating, it was found that this check was missing.  This PR adds that check to the touch controls.\r\n\r\nEdit: Moved logic to Camera function and modified calls to use said function.\r\n\r\nForum Link: https://forum.babylonjs.com/t/how-to-make-the-touch-rotation-on-the-y-axis-of-universalcamera-consistent-in-different-coordinate-system/43716",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            }
        ],
        "6.19.1": [
            {
                "pr": "14241",
                "title": "adding _evt to arc rotate's pointer input",
                "description": "This PR helps with extending the arc rotate pointer input, passing the evt object correctly",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraPointersInput.ts"
                ],
                "tags": []
            },
            {
                "pr": "14240",
                "title": "fix alignment issue in NME",
                "description": "Fix #14227",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/main.scss"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "14239",
                "title": "avoid rendering empty trees on a11y tree",
                "description": "Related forum issue: https://forum.babylonjs.com/t/accessibility-empty-accessibility-node-for-any-adt-added-even-if-empty/43415/7\r\n\r\nPreviously, if we reached a texture ADT, we would render at least the root node, even if it was empty (no children and no description). Now this scenario is checked, and if it occurs, we skip rendering that tree. This avoids empty divs on the twin tree.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "accessibility"
                ]
            },
            {
                "pr": "14237",
                "title": "SolidParticleSystem: Add uvKind option to the digest method",
                "description": "See https://forum.babylonjs.com/t/pcs-and-sps-digest-always-take-1st-uv-slot-irrespective-of-texture/43651/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": [
                    "enhancement",
                    "particles"
                ]
            }
        ],
        "6.19.0": [
            {
                "pr": "14223",
                "title": "When reusing the same PhysicsConstraint JS object for more than one p…",
                "description": "…air of bodies, store the information of all created Havok objects for proper get/set of properties and disposal.\r\n\r\nCurrently, if you create a PhysicsConstraint and use it on more than one `addConstraint` call, one Havok object will be created for each call, but only the most recent object is stored in JS side, which means it wasn't possible to set properties or dispose of the previously created ones. This can be observed in this PG: https://playground.babylonjs.com/#7DMWP8#574, where the same constraint is used for the two pairs of bodies and disposed of after 2s.\r\n\r\nThis PR changes the `_pluginData` object on the PhysicsConstraint to be an array, where each created joint reference is pushed, and updates the plugin methods accordingly. ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14234",
                "title": "Expose collisionEndedObservable to PhysicsBody",
                "description": "Related forum issue: https://forum.babylonjs.com/t/how-to-detect-when-two-physics-bodies-stop-colliding/42309/15?u=carolhmj\n\nThis PR just exposes a getCollisionEndedObservable on the same way as the getCollisionObservable.\n\nExample PG: #Z8HTUN#678",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": []
            },
            {
                "pr": "14233",
                "title": "Animation groups: Add ClipKeys helper + update inspector",
                "description": "I also modified the `enableBlending` method to make it a getter/setter instead + added `blendingSpeed` as a getter/setter.\r\n\r\nCreating a method instead of a getter/setter was a bad decision I made a few weeks ago. As this is a new feature for version 7.0 and not yet used by any PGs, I thought it right to make a breaking change to keep the code clear.\r\n\r\nI've added a \"Stop\" button to the inspector, as the \"Is Additive\" and \"Enable blending\" switches only work after an animation group has been stopped and restarted (simply pausing/playing again doesn't work).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationGroupPropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14226",
                "title": "Don't allow blocks in NME to automatically connect to other blocks in…",
                "description": "…side frames.\r\n\r\nFixes #14225\r\n\r\nThankfully the NGE blocks don't need the same change as they only create new input blocks, never connect to existing blocks 😌 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/fogBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/screenSpaceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/refractionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Particle/particleTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/bonesBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/instancesBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/viewDirectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "14207",
                "title": "NME: Fix the shadow output of the light blocks",
                "description": "See https://forum.babylonjs.com/t/nme-shadow-output-of-lights-node-doesnt-work-with-multiple-lights/43573\r\n\r\nI tagged it as a bug, as I think it does not behave as expected when there are multiple lights: depending on the position of the light that casts shadows in the light array, it will or will not generate the right value for the \"shadow\" output. Also, the current code does not work when multiple lights cast shadow.\r\n\r\nIn the case of a single light casting shadows, the code from the PR gives the same output than the current code, so it's not a breaking change in this regard.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/lightFragment.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockDirectLighting.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockFinalLitComponents.fx",
                    "packages/dev/core/src/Shaders/background.fragment.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/materials/src/cell/cell.fragment.fx",
                    "packages/dev/materials/src/fur/fur.fragment.fx",
                    "packages/dev/materials/src/gradient/gradient.fragment.fx",
                    "packages/dev/materials/src/lava/lava.fragment.fx",
                    "packages/dev/materials/src/mix/mix.fragment.fx",
                    "packages/dev/materials/src/normal/normal.fragment.fx",
                    "packages/dev/materials/src/shadowOnly/shadowOnly.fragment.fx",
                    "packages/dev/materials/src/simple/simple.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.fragment.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.fragment.fx",
                    "packages/dev/materials/src/water/water.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "14231",
                "title": "a new on XR Camera initialized observable",
                "description": "This observable will be called after the camera is correctly initialized, including the number of views and the initial position.\nThis will solve different issue, for example:\n\nhttps://forum.babylonjs.com/t/with-pipeline-enabled-console-shows-error-when-entering-xr/42493/5",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "14230",
                "title": "Fix aggregate extent calculation when scaling is negative",
                "description": "Related forum issue: https://forum.babylonjs.com/t/what-are-the-best-practices-for-physics-gltf-models/43660\r\n\r\nIf the scaling of the node used for the aggregate was negative, we were getting negative extents, which would create the wrong physics shape.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14229",
                "title": "Fix port sync",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14228",
                "title": "Add matrix for instatiateXXX",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/tools/nodeGeometryEditor/src/main.scss"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14209",
                "title": "ArcRotateCamera: Modify offset math to correctly zoom to point",
                "description": "There was a previous fix that updated the ArcRotateCamera to factor in a `targetScreenOffset` to zooming to a specific point.  Unfortunately, there was an issue with how it was modifying the ray origin used to determine zoom destination.  This PR changes the math up to properly convert the screen offset to world space so that the zoom origin is calculated correctly.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "14210",
                "title": "WebDeviceInputSystem: Added workaround for MacOS Chromium based Browsers",
                "description": "There was an issue found with Chromium based browsers on MacOS where if the cursor left the browser window after clicking on the canvas with a mouse button other than left click, pointer capture will be lost and the canvas will still think that there's a button down.  Because this is a Chromium issue, the only thing that we can do is to create a workaround until it's fixed.  This workaround will catch the `lostpointercapture` event generated and release the button, if necessary.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "14224",
                "title": "Add missing cubic projection",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/mappingBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14216",
                "title": "Add Export to .glb button",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/package.json",
                    "packages/tools/nodeGeometryEditor/src/components/preview/previewManager.ts",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/globalState.ts",
                    "packages/tools/nodeGeometryEditor/tsconfig.build.json",
                    "packages/tools/nodeGeometryEditor/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14222",
                "title": "fix stretch nine patch to respect sourceXXX parameters",
                "description": "Forum issue: https://forum.babylonjs.com/t/when-using-nine-patch-sourcexxx-such-as-sourcetop-does-not-work/43626",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14221",
                "title": "PointCloudSystem: Fix uv coordinates used when getting color from texture",
                "description": "See https://forum.babylonjs.com/t/pcs-and-sps-digest-always-take-1st-uv-slot-irrespective-of-texture/43651",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/pointsCloudSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14215",
                "title": "New NGE node: Mapping",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/mappingBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerNodePortDesign.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14220",
                "title": "Fix bad input routing",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14219",
                "title": "Generic and specific parameters on Cylinder are opposite of how Box works in NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/cylinderBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14217",
                "title": "better nge icons",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerNodePortDesign.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14212",
                "title": "Ability to not antialias GridMaterial",
                "description": "Pretty simple, adds ability for the GridMaterial to not be antialiased using `gridMaterial.antialias = false`\r\n\r\nThis playground can be used for testing: `#2KKVBH#127`\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/540620/2cf935ff-ef5e-4159-b7ac-9f31f974e83c)\r\n\r\nNote: maybe someone with better GLSL experience can figure out if it's possible to fix some of the diagnal lines:\r\n\r\n![Screenshot from 2023-08-27 23-46-30](https://github.com/BabylonJS/Babylon.js/assets/540620/41b69008-61e2-45d1-a6cd-101e09ba3836)\r\n",
                "author": {
                    "name": "Queatz",
                    "url": "https://github.com/Queatz"
                },
                "files": [
                    "packages/dev/materials/src/grid/grid.fragment.fx",
                    "packages/dev/materials/src/grid/gridMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14213",
                "title": "* Change the Custom Frame name formatting.",
                "description": "* Fix bug when deleting a custom frame from the list, its name would still appear on the space search menu.\r\n\r\nHere's how the custom frame name looks with the new formatting:\r\n<img width=\"251\" alt=\"image\" src=\"https://github.com/BabylonJS/Babylon.js/assets/6002144/1dcc010c-8de9-48e5-8a19-67bc475f1d21\">\r\n\r\n\r\nFixes #14208",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme",
                    "nge"
                ]
            },
            {
                "pr": "14211",
                "title": "Procedural texture: Fix the reset method",
                "description": "See https://forum.babylonjs.com/t/force-customproceduraltexture-to-recompile-from-new-shader-string/43575",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14205",
                "title": "Better Int icon",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerNodePortDesign.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14206",
                "title": "Shadows: Fix shadow light frustum calculation",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts",
                    "packages/dev/core/src/Lights/directionalLight.ts"
                ],
                "tags": [
                    "bug",
                    "shadows"
                ]
            },
            {
                "pr": "14204",
                "title": "Sound url is not serialised",
                "description": "https://github.com/BabylonJS/Babylon.js/issues/14203",
                "author": {
                    "name": "SubratGuptaCtruh",
                    "url": "https://github.com/SubratGuptaCtruh"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": []
            },
            {
                "pr": "14200",
                "title": "Better display of ports with values",
                "description": "![image](https://github.com/BabylonJS/Babylon.js/assets/1306056/95a3d4a6-0a86-4a74-aa40-7496d3bb40ec)\r\n",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlockConnectionPoint.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/common.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/sourceDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/registerNodePortDesign.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14014",
                "title": "Make node materials compatible with prepass",
                "description": "Also adds a new `PrePassTextureNode` in NME to use prepass textures in node materials\r\n\r\nCloses #13718",
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGLHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/prePassOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/prePassTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            }
        ],
        "6.18.0": [
            {
                "pr": "14196",
                "title": "new NGE block: Instantiate",
                "description": "The new instantiate node:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1306056/1ad88c6a-eb4c-4325-b572-7de22ebff6fe)\r\n\r\nI also introduced the notion of LoopID contextual value that let you control the transform per step\r\n\r\ncc @Pryme8 @PatrickRyanMS ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setColorsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setPositionsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setTangentsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryContextualSources.ts",
                    "packages/dev/core/src/Meshes/Node/Interfaces/nodeGeometryExecutionContext.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14198",
                "title": "Fix computenormals when no normals",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/computeNormalsBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14197",
                "title": "Fix updating issue with exposed inputs",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14190",
                "title": "Fixed from/to issues in sprite anim",
                "description": null,
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Sprites/sprite.ts"
                ],
                "tags": []
            }
        ],
        "6.17.1": [
            {
                "pr": "14195",
                "title": "Update to Havok 1.1.4",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14189",
                "title": "Highlight context source when picking a contextual input",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14188",
                "title": "Better mesh representation in NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/meshNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14187",
                "title": "Auto name teleport out",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportInBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14186",
                "title": "Particle Systems: Fix the pivot position for rotations",
                "description": "The fix applies the rotation before the pivot is added back, whereas the current code add the pivot back before applying the rotation.\r\n\r\nTest PG: https://playground.babylonjs.com/#0K3AQ2#2628",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/gpuRenderParticles.vertex.fx",
                    "packages/dev/core/src/Shaders/particles.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14185",
                "title": "Bones: Fix wrong world matrix for meshes attached to bone",
                "description": "Let's say mesh M1 is attached to bone B, and bone B is part of a skeleton used by mesh M2.\r\n\r\nIf M1 comes before M2 in `scene.meshes`, then M1 will use a world matrix from B that is lagging one frame behind compared to M2, because it's when M2 is processed that the world matrices of the bones are being recomputed (in `Skeleton.prepare`).\r\n\r\nRepro: https://playground.babylonjs.com/#317BIH#37\r\n\r\nIf you click on \"Slash 01\", the sword is moved and a screenshot of the next frame is taken and displayed in the bottom right corner. You will see that the particle system (attached to the sword) is displayed at the previous location of the sword.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug",
                    "bones"
                ]
            },
            {
                "pr": "14180",
                "title": "Add extra safety on audio",
                "description": "https://forum.babylonjs.com/t/error-typeerror-null-is-not-an-object-evaluating-this-audiocontext-resume/43109",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioEngine.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "14181",
                "title": "Remove unused \"inspector visibility\" for nge",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14182",
                "title": "Add a button to sync nge with the hosting scene and mesh",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/globalState.ts",
                    "packages/tools/nodeGeometryEditor/src/nodeGeometryEditor.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14178",
                "title": "Fix mute button getting stuck on iOS",
                "description": "On iOS, if `AudioEngine.unlock()` is called from any other event handler than a `click` event handler, then the promise returned by `audioContext.resume` never resolves and the audio engine `_tryToRun` flag never gets set back to `false`. This causes all subsequent calls to `AudioEngine._triggerRunningState()` to early out making it impossible to resume the audio context again.\r\n\r\nThis change fixes the issue by checking the `_tryToRun` flag. If it is `true` then the audio context is suspended and the `_tryToRun` flag is reset to `false` before attempting to resume the audio context.\r\n\r\nReported on forum: https://forum.babylonjs.com/t/unmute-icon-remove/257/25\r\n\r\nTested on iOS using playground https://playground.babylonjs.com/#35VF39#3",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioEngine.ts",
                    "packages/dev/core/test/unit/Audio/helpers/mockedAudioObjects.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14179",
                "title": "Greased line plugin: Fix crash when cloning the material",
                "description": "See https://forum.babylonjs.com/t/greased-line-doesnt-work-with-right-handed-system/42976/17",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/greasedLinePluginMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14177",
                "title": "Fix initial audio engine unlock state",
                "description": "Changes the audio engine's initial `unlock` value to `false` so it is correct if the browser prevents audio before a user interaction.\r\n\r\nReported on forum: https://forum.babylonjs.com/t/remove-unmute-button/27577/30\r\n\r\nTested on Windows Edge, Chrome, and Firefox, macOS Safari, and iOS Safari.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioEngine.ts",
                    "packages/dev/core/test/unit/Audio/audioEngine.test.ts",
                    "packages/dev/core/test/unit/Audio/helpers/audioTestHelper.ts",
                    "packages/dev/core/test/unit/Audio/helpers/audioTestSamples.ts",
                    "packages/dev/core/test/unit/Audio/helpers/mockedAudioObjects.ts",
                    "packages/dev/core/test/unit/Audio/sound.test.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14174",
                "title": "WebDeviceInputSystem: Add additional checks for pointermove started Touch events",
                "description": "A user in the forum found a particular edge case where `pointermove` events were inconsistently interacting with a scene where pointer capture was being programmatically set.  Because this worked with 4.2.x, this behavior was seen as a regression.  This PR adds some additional checks to the touch code to more properly handle this scenario.\r\n\r\nForum Link: https://forum.babylonjs.com/t/pointer-capture-failing-for-babylon-pointer-observable-during-a-scroll-event/43253/7",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "14175",
                "title": "Add new blocks: GeometryInfo and Collection",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryCollectionBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInfoBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryContextualSources.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.17.0": [
            {
                "pr": "14173",
                "title": "Dropping a debug node on a wire from a VectorConverter will automatically connect it to the first node instead of the node of the wire",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "14166",
                "title": "Added `getLinearVelocity` and `getAngularVelocity` to PhysicsBody",
                "description": "It's just small functions to get the velocities in one shot instead of creating a reference first then calling the function.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": []
            },
            {
                "pr": "14170",
                "title": "Scale and Offset For NGE Noise",
                "description": "Noticed we needed this.",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/noiseBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "14171",
                "title": "Add geometryID to NGE",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryContextualSources.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/sharedUiComponents/src/lines/vector3LineComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14119",
                "title": "AnimationGroup: Add masking support",
                "description": "I create the PR as a draft, for discussion (is it the right design? what about the class / function names? ...)\r\n\r\nThe aim is to be able to create a mask for an animation group and not play animations for targets that are not in the mask.\r\n\r\nThe mask (`AnimationGroupMask`) is simply a set of target names. It's a set of `strings` instead of `TransformNode` / `Bone` / ... so that a single mask can be used for several animation groups.\r\n\r\nBy way of illustration, in the Avatar PoC, I can remove the custom functions `RemoveIdentityTransformationsFromAnimationGroup` and `RemoveTargetsFromAnimationGroup` and replace them with something like :\r\n```typescript\r\nconst animationGroupMask = new BABYLON.AnimationGroupMask([<list of bone names used by the facial animation>]);\r\n\r\nthis._facialAnimationGroup.mask = animationGroupMask;\r\nthis._facialAnimationGroup.removeUnmaskedAnimations();\r\n```\r\nThere's no hurry to review the PR, so don't bother if you're on vacation!",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/animationGroupMask.ts",
                    "packages/dev/core/src/Animations/index.ts"
                ],
                "tags": [
                    "animations",
                    "new feature"
                ]
            },
            {
                "pr": "14165",
                "title": "Particle Systems: Fix display in wireframe mode",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/IGPUParticleSystemPlatform.ts",
                    "packages/dev/core/src/Particles/computeShaderParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Particles/webgl2ParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14163",
                "title": "Add new node: InstantiateOnVolume",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.16.2": [
            {
                "pr": "14167",
                "title": "GUI InputTextArea: Fix inserting character in long string (wrapped)",
                "description": "See https://forum.babylonjs.com/t/incorrect-word-wrap-behavior-in-inputtextarea-component/43346",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14168",
                "title": "Add more control over UV for text builder",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "14160",
                "title": "More descriptive names for the AxesViewer's materials",
                "description": "Currently they show up as \"no name\" in the Inspector, which can be confusing.\r\nhttps://forum.babylonjs.com/t/import-scene-without-materials-textures-dont-show-them-in-inspector/43326",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/axesViewer.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "14164",
                "title": "Fix equals issue + bad debug node rendering",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/conditionBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/debugBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/debugDisplayManager.modules.scss",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14161",
                "title": "Remove unneeded test",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/src/umdCompile.ts",
                    "packages/tools/tests/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.16.1": [
            {
                "pr": "14159",
                "title": "Improve optimize block",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryOptimizeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14145",
                "title": "fix children nodes with description not being rendered on a11y tree w…",
                "description": "…hen addAllControls = false\r\nForum post: https://forum.babylonjs.com/t/accessibility-addallcontrols-suppress-gui-controls-with-accessibilitytag/43114",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "accessibility"
                ]
            },
            {
                "pr": "14158",
                "title": "Add a new geometry node to extractUnique positions from a geometry",
                "description": "Also making sure we do not rebuild if not required",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryOptimizeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/tools/nodeGeometryEditor/src/blockTools.ts",
                    "packages/tools/nodeGeometryEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeGeometryEditor/src/graphSystem/blockNodeData.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14154",
                "title": "GRL - added simple greased line material",
                "description": null,
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Materials/greasedLineSimpleMaterial.ts",
                    "packages/dev/core/src/Meshes/Builders/greasedLineBuilder.ts",
                    "packages/dev/core/src/Meshes/greasedLineMesh.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts",
                    "packages/dev/core/src/Shaders/greasedLine.fragment.fx",
                    "packages/dev/core/src/Shaders/greasedLine.vertex.fx",
                    "packages/tools/tests/test/visualization/ReferenceImages/greased-line-simple-material.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14156",
                "title": "Add registerclass for decalmapconfiguration",
                "description": "See https://forum.babylonjs.com/t/saving-and-loading-a-serialized-scene-with-gltf-meshes/43173/17?u=raananw",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.decalMapConfiguration.ts"
                ],
                "tags": []
            },
            {
                "pr": "14141",
                "title": "Node geometry",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    ".vscode/launch.json",
                    ".vscode/tasks.json",
                    "package.json",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/core/src/Decorators/nodeDecorator.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/boxBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/capsuleBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/cylinderBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/discBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/gridBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/icoSphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/nullBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/planeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/sphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/torusBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportOutBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/conditionBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryOutputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTransformBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTrigonometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/intFloatConverterBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mathBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mergeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/noiseBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/normalizeVectorBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/randomBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/vectorConverterBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryConnectionPointTypes.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryContextualSources.ts",
                    "packages/dev/core/src/Meshes/Node/Interfaces/nodeGeometryExecutionContext.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlockConnectionPoint.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/hexColor.tsx",
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/public/@babylonjs/.gitignore",
                    "packages/public/@babylonjs/node-geometry-editor/config.json",
                    "packages/public/@babylonjs/node-geometry-editor/license.md",
                    "packages/public/@babylonjs/node-geometry-editor/package.json",
                    "packages/public/@babylonjs/node-geometry-editor/readme.md",
                    "packages/public/@babylonjs/node-geometry-editor/src/index.ts",
                    "packages/public/@babylonjs/node-geometry-editor/tsconfig.build.json",
                    "packages/public/@babylonjs/node-geometry-editor/tsconfig.json",
                    "packages/public/@babylonjs/node-geometry-editor/webpack.config.js",
                    "packages/public/umd/babylonjs-node-geometry-editor/.npmignore",
                    "packages/public/umd/babylonjs-node-geometry-editor/config.json",
                    "packages/public/umd/babylonjs-node-geometry-editor/license.md",
                    "packages/public/umd/babylonjs-node-geometry-editor/package.json",
                    "packages/public/umd/babylonjs-node-geometry-editor/readme.md",
                    "packages/public/umd/babylonjs-node-geometry-editor/src/index.ts",
                    "packages/public/umd/babylonjs-node-geometry-editor/tsconfig.build.json",
                    "packages/public/umd/babylonjs-node-geometry-editor/tsconfig.json",
                    "packages/public/umd/babylonjs-node-geometry-editor/webpack.config.js",
                    "packages/tools/babylonServer/declarationConfigDev.json",
                    "packages/tools/babylonServer/declarationConfigLTS.json",
                    "packages/tools/babylonServer/public/empty-preview.html",
                    "packages/tools/babylonServer/public/empty-stable.html",
                    "packages/tools/babylonServer/public/empty.html",
                    "packages/tools/babylonServer/public/index-ts.html",
                    "packages/tools/babylonServer/public/index.html",
                    "packages/tools/babylonServer/public/test.html",
                    "packages/tools/babylonServer/src/nodeGeometryEditor/index.ts",
                    "packages/tools/babylonServer/tsconfig.build.json",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/devHost/src/createScene.ts",
                    "packages/tools/nodeEditor/src/components/log/logComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/colorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/conditionalNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/curveNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14151",
                "title": "Bone IK controller: Make sure the absolute matrices are up to date",
                "description": "See https://forum.babylonjs.com/t/boneikcontroller-demo-broken/43211\r\n\r\nThis bug appeared after my changes to the bone class because `BoneIKController` relied on a bug in the old `Bone` class, where the absolute transformation matrix had a value, but a wrong one - it contained the absolute bind matrix instead of the absolute matrix! To make sure we get up-to-date absolute matrices, we need to call `skeleton.computeAbsoluteMatrices()`.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Bones/boneIKController.ts"
                ],
                "tags": [
                    "bug",
                    "bones"
                ]
            },
            {
                "pr": "14150",
                "title": "Call the validateDrag function on planeDragGizmo",
                "description": "Forum post: https://forum.babylonjs.com/t/xplanegizmo-yplanegizmo-zplanegizmo-unable-to-invoke-dragbehavior-validatedrag/43215\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts"
                ],
                "tags": [
                    "bug",
                    "gizmos"
                ]
            },
            {
                "pr": "14139",
                "title": "Fix exposing options of MeshDebugPluginMaterial",
                "description": "I had believed PR #14127 would allow for a user to update `options` after initialization, but I forgot that the `expandToProperty` decorator won't work as expected for custom objects like `options`.  \r\n\r\nHere's a fix. The plugin no longer stores the options object, and instead unwraps each property of option into its own direct plugin property.\r\n\r\nIt also means I can remove the serialize/parse methods, applying the serialization decorator to each property instead.\r\n\r\n(I did look into making a new decorator for custom objects, but I don't know enough about TS metaprogramming to make it in time!)",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Materials/meshDebugPluginMaterial.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            }
        ],
        "6.16.0": [
            {
                "pr": "14149",
                "title": "dependency update",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/tools/testTools/src/utils.ts",
                    "profile.json"
                ],
                "tags": []
            },
            {
                "pr": "14148",
                "title": "Shadow generators: Add support for red channel only for the shadow map texture",
                "description": "For CSM, this is now the default setting, as all engines that support CSM also support red textures only.\r\n\r\nFor the regular shadow generator, the default setting is to use an RGBA texture due to WebGL1 backward compatibility.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts"
                ],
                "tags": [
                    "enhancement",
                    "shadows"
                ]
            },
            {
                "pr": "14147",
                "title": "Scene dispose: Fix endless loop when stopping animations",
                "description": "See https://forum.babylonjs.com/t/looping-in-color-animations-is-not-possible/43125/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14146",
                "title": "PostProcess: Fix crash when detaching and reattaching a camera from/to a render pipeline",
                "description": "See https://forum.babylonjs.com/t/bugs-when-managing-postprocess-pipeline/43184",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderEffect.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            }
        ],
        "6.14.1": [
            {
                "pr": "14099",
                "title": "Document parameter ranges of HSVtoRGBToRef()",
                "description": "HSVtoRGBToRef() of Color3 was missing ranges of hue, saturation, and value parameters:\r\n\r\nForum: https://forum.babylonjs.com/t/hsv-colorspace-hue-in-degrees/42796",
                "author": {
                    "name": "Atsutakemura",
                    "url": "https://github.com/Atsutakemura"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": []
            },
            {
                "pr": "14094",
                "title": "Make wireframes of MeshDebugPluginMaterial unshaded",
                "description": "Before, shading was being applied to the wireframes of TRIANGLES, VERTICES, and TRIANGLES_VERTICES modes. This resulted in black wireframes turning grey-ish. These changes should fix the issue.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Materials/meshDebugPluginMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14096",
                "title": "Enable texture float rendering in native engine",
                "description": "Also, minor fix to support zero width / height textures",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14095",
                "title": "A more stable vis-test startup in our CI",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/tests/test/visualization/visualization.utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "14093",
                "title": "Fix inertia view of parented bodies",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14092",
                "title": "Effect renderer: Restore the right values for the depth and stencil states",
                "description": "See https://forum.babylonjs.com/t/stencil-buffer-set-wrong-in-effectrenderer/42756/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/effectRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            }
        ],
        "6.15.0": [
            {
                "pr": "14144",
                "title": "Regexp fix - match until first semicolon",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/tools/babylonServer/public/index.html",
                    "packages/tools/babylonServer/src/sceneJs.js"
                ],
                "tags": []
            },
            {
                "pr": "14142",
                "title": "Skeleton: make sure a cloned skeleton is ready to use",
                "description": "See https://forum.babylonjs.com/t/curious-about-this-totalvertices-addcount-in-the-evaluate-active-mesh-loop/43113/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts"
                ],
                "tags": [
                    "enhancement",
                    "bones"
                ]
            },
            {
                "pr": "14143",
                "title": "Scene is optional in these cases",
                "description": "See https://forum.babylonjs.com/t/incorrect-or-inconsistent-typescript-definitions/43150?u=raananw",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Lights/directionalLight.ts",
                    "packages/dev/core/src/Lights/hemisphericLight.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Lights/pointLight.ts",
                    "packages/dev/core/src/Lights/spotLight.ts",
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "14091",
                "title": "Flow graph initial iteration",
                "description": "This is the initial work for an engine that will support a paradigm of creating chains of actions that trigger in response to events (a \"flow graph\"). Please note it is still experimental and subject to many changes until its final iteration.\r\n\r\nExample PG: #P0U4WL#2 (Click on the mesh and it will run a for loop from 0 to 10 (exclusive) and print its index + 1)\r\n#P0U4WL#1 (Click on the mesh and it will print its name)\r\n\r\nEDIT: updated the example PG with the most recent syntax",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/FlowGraph/Blocks/Data/flowGraphBinaryOpBlocks.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Data/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Event/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphForLoopBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/flowGraphLogBlock.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/Execution/index.ts",
                    "packages/dev/core/src/FlowGraph/Blocks/index.ts",
                    "packages/dev/core/src/FlowGraph/flowGraph.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphDataConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphEventBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphSignalConnection.ts",
                    "packages/dev/core/src/FlowGraph/flowGraphWithOnDoneExecutionBlock.ts",
                    "packages/dev/core/src/FlowGraph/index.ts",
                    "packages/dev/core/src/index.ts",
                    "packages/tools/devHost/src/index.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14136",
                "title": "Node Geometry core",
                "description": "This is the engine part of the new system I created: Node Geometry.\r\n\r\nIt is inspired by Blender Geometry nodes where you can use a node system to procedurally build geometry.\r\n\r\nThink about it like a postprocessing system for geometry. Ultimately it produces a geometry but with a procedural approach\r\n\r\nWhy?\r\n- The cost of downloading assets on the web is a strong limiting factor and procedural data can help solve that by limiting the download to the core pieces that are assembled later on by the NodeGeometry system (Example PG: #PYY6XE#59)\r\n- The system is dynamic and can produce an infinity of variants. Far above what an offline source can produce (think about terrain generation or vegetation generation).\r\n- It allows a new way of modelling by assembling core shapes and playing around with a node system",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts",
                    "packages/dev/core/src/Decorators/nodeDecorator.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/imageProcessingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/reflectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/refractionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/sheenBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/clampBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/cloudBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/meshAttributeExistsBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/remapBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/worleyNoise3DBlock.ts",
                    "packages/dev/core/src/Materials/Node/index.ts",
                    "packages/dev/core/src/Meshes/Builders/boxBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/capsuleBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/cylinderBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/icoSphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/sphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/torusBuilder.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/IntFloatConverterBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/alignBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/rotationXBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/rotationYBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/rotationZBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/scalingBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Matrices/translationBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setColorsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setMaterialIDBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setPositionsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setTangentsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Set/setUVsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/boxBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/capsuleBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/cylinderBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/discBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/gridBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/icoSphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/planeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/sphereBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Sources/torusBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/Teleport/teleportOutBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/computeNormalsBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/conditionBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/debugBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryElbowBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryInputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryOutputBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTransformBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/geometryTrigonometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mapRangeBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mathBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/mergeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/noiseBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/normalizeVectorBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/randomBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Blocks/vectorConverterBlock.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryConnectionPointTypes.ts",
                    "packages/dev/core/src/Meshes/Node/Enums/nodeGeometryContextualSources.ts",
                    "packages/dev/core/src/Meshes/Node/Interfaces/nodeGeometryExecutionContext.ts",
                    "packages/dev/core/src/Meshes/Node/index.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometry.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlock.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBlockConnectionPoint.ts",
                    "packages/dev/core/src/Meshes/Node/nodeGeometryBuildState.ts",
                    "packages/dev/core/src/Meshes/index.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14137",
                "title": "Fluid Renderer: Remove wrong doc",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14138",
                "title": "Clean up mesh.actionManager attribute when it is disposed of.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/how-do-you-dispose-the-actions-of-an-actionmanager/9985/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Actions/actionManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14135",
                "title": "GPUParticleSystem: Fix context lost management",
                "description": "See https://forum.babylonjs.com/t/error-this-attributes-is-undefined/43106",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/IGPUParticleSystemPlatform.ts",
                    "packages/dev/core/src/Particles/computeShaderParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/webgl2ParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14134",
                "title": "Fix sourcemaps compilation in es6 modules",
                "description": "There was an issue with our shader compilation when compiling to es6 and up.\n\nThe issue was that some files have \\r\\n and some have \\n, and typescript doesn't deal with that very well (especially if a \\r is left without a \\n).\n\nThis should fix the issue (tested locally).\n\nSee https://forum.babylonjs.com/t/es6-sourcemaps-not-lining-up-since-5-27-1/43021",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/core/src/Compute/computeEffect.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Layers/layer.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/currentScreenBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/fogBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/imageSourceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/derivativeBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/discardBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragCoordBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/frontFacingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/imageProcessingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/screenSizeBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/screenSpaceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/shadowMapBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/twirlBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/iridescenceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/reflectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/refractionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/sheenBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/subSurfaceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Particle/particleTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportOutBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/bonesBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/instancesBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/lightInformationBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/vertexOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/addBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/arcTan2Block.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/clampBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/cloudBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/colorMergerBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/colorSplitterBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/conditionalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/crossBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/curveBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/customBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/desaturateBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/distanceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/divideBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/dotBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/elbowBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/fresnelBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/gradientBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/lengthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/lerpBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/matrixBuilderBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/matrixDeterminantBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/matrixTransposeBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/maxBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/meshAttributeExistsBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/minBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/modBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/multiplyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/nLerpBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/negateBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/normalBlendBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/normalizeBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/oneMinusBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/posterizeBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/powBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/randomNumberBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/reciprocalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/reflectBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/refractBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/remapBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/replaceColorBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/rotate2dBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/scaleBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/simplexPerlin3DBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/smoothStepBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/stepBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/subtractBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/transformBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/trigonometryBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/vectorMergerBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/vectorSplitterBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/viewDirectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/voronoiNoiseBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/waveBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/worleyNoise3DBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14124",
                "title": "Fix inconsistencies with `useSRGBBuffer` in native engine",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14125",
                "title": "Check that textures not in sRGB are put into sRGB for debug modes",
                "description": "Before these changes, these modes displayed correctly on web but not in Native. (If I recall correctly, it has something to do with `forceSRGBBuffers` being set to different values between web and Native?)",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDebug.fx"
                ],
                "tags": []
            },
            {
                "pr": "14132",
                "title": "HDR filtering: Fix state reset",
                "description": "See https://forum.babylonjs.com/t/babylon-sandbox-uploading-custom-hdri-makes-parts-of-the-model-disappear/43067",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Filtering/hdrFiltering.ts",
                    "packages/dev/core/src/Materials/effectRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14133",
                "title": "Clear transform node's physicsBody attribute when that is disposed",
                "description": "Related forum issue: https://forum.babylonjs.com/t/exception-in-inspector-when-physics-body-disposed/43044",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14109",
                "title": "Add observable for collision finished events/trigger events",
                "description": "Test PG: #Z8HTUN#613 (collision ended)\r\n#M0C2X5 (triggers)",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts",
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14127",
                "title": "Expose options of MeshDebugPluginMaterial",
                "description": "Exposing all options of MeshDebugPluginMaterial for users to modify after initialization.\r\n\r\nWould it be ok if I remove the class members `mode` and `multiply`, and instead rely on `options.mode` and `options.multiply`? It'd make things consistent.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Materials/meshDebugPluginMaterial.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14128",
                "title": "GRL - dealing with right handed coordinate system",
                "description": "Now works in right handed coordinate system as well.",
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/greasedLinePluginMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14123",
                "title": "If a child mesh from an AssetContainer is added to the scene without …",
                "description": "…its parent, call setParent on it.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "14129",
                "title": "Implement word boundary checks in regular expressions",
                "description": "See [WebGPU use glsl bug ： non-opaque uniforms outside a block - Bugs - Babylon.js](https://forum.babylonjs.com/t/webgpu-use-glsl-bug-non-opaque-uniforms-outside-a-block/42972/7)\r\n\r\nIn the current implementation of regular expressions intended to match the GLSL keywords \"in\", \"out\", and \"varying\", it has been found that the patterns may match parts of variable names or within comments that contain these keywords, leading to inaccurate results.\r\nExample\r\n````\r\nvec3 origin = vec3(0.0);\r\n````\r\n\r\nTo improve accuracy, word boundaries (\\b) have been applied around each keyword in the regular expressions. This ensures that the engine would only match complete words, not substrings within longer words or comments.\r\n\r\nThe regular expressions have been updated as follows: \r\n````\r\nconst outRegex = /(flat\\s)?\\s*\\bout\\b /;\r\nconst inRegex = /(flat\\s)?\\s*\\bin\\b /;\r\nconst varyingRegex = /(flat\\s)?\\s*\\bvarying\\b/ ;\r\n````\r\n\r\n",
                "author": {
                    "name": "jinjun1994",
                    "url": "https://github.com/jinjun1994"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14122",
                "title": "Don't deduce stride size in rollback function of PrepareMeshForTrianglesAndVerticesMode",
                "description": "This will fix an issue with the vertex color buffer not being reset properly.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Materials/meshDebugPluginMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14121",
                "title": "Fix PR comments",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportOutBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14101",
                "title": "Add populateRootNodes in asset container and loading",
                "description": "Related forum issue: https://forum.babylonjs.com/t/loading-babylon-scene-as-a-child-of-a-specific-scene-graph-node/42328/12?u=carolhmj",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "14116",
                "title": "PostProcessRenderEffect: Fix the enable method",
                "description": "See https://forum.babylonjs.com/t/postprocess-indices-reversed-after-disable-and-enable-rendereffect/42953",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderEffect.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "14118",
                "title": "Gizmos fixes",
                "description": "follow ups on:\r\n\r\nhttps://forum.babylonjs.com/t/how-can-i-match-the-icons-direction-of-spotlights-lightgizmo-in-righthandedsystem/42929\r\n\r\nhttps://forum.babylonjs.com/t/rotation-gizmo-sensitivity/42554",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "14120",
                "title": "Nme fix2",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/tools.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/teleportInDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/teleportOutDisplayManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14112",
                "title": "Textures: Fix clearing of textures with integer type",
                "description": "See https://forum.babylonjs.com/t/support-custom-outputs-for-shadermaterial/42835/3\r\n\r\nIt also fixes a couple of small bugs with WebGPU.\r\n\r\nPG for WebGL: https://playground.babylonjs.com/#XSNYAU#47\r\nPG for WebGPU: https://playground.babylonjs.com/#XSNYAU#50\r\n\r\nWebGPU has a stricter limitation for the total number of components for the target render textures (it's limited to 32 bytes), so I had to make a different PG.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "14117",
                "title": "Parsing of GLSL shaders in WebGPU: Fix detection of varyings",
                "description": "See https://forum.babylonjs.com/t/webgpu-use-glsl-bug-non-opaque-uniforms-outside-a-block/42972\r\n\r\nNote: #14129 is a better fix",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "14115",
                "title": "Add support for teleport nodes in NME",
                "description": "New feature!!\r\n\r\nyou can teleport data:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1306056/883c0380-dd90-4f6e-9e4c-efe482226511)\r\n\r\nAnd due to popular demand, I also added a glow on one side when you pick the other side of the warp tunnel :)",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportInBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Teleport/teleportOutBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/index.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/tools.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/display/teleportInDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/teleportOutDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/teleportOutNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerToDisplayLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToPropertyLedger.ts"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "14114",
                "title": "Decal map: don't renderer particle systems in the decal map texture",
                "description": "See https://forum.babylonjs.com/t/the-previous-decal-will-change-color-after-continuous-use/42914",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/meshUVSpaceRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "14108",
                "title": "Shaders: Don't inject fragment output declaration if already existing",
                "description": "With this PR, you no longer need to have `#extension GL_EXT_draw_buffers require` in your shader if you want to provide your own fragment output declaration.\r\n\r\nSimply declare your output (something like `layout(location = 0) out vec4 myOutput;`) and it will take precedence over the default `glFragColor` output.\r\n\r\nCreate the PR in draft mode, to make sure @sebavan sees it when he gets back from vacation.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGL2ShaderProcessors.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14110",
                "title": "Add setTargetTransform on body",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14102",
                "title": "Cancel any pending animation frames on stopRenderLoop",
                "description": "When calling stopRenderLoop, we weren't canceling any animation frames requested, this was causing a problem in the multiview scenario: https://forum.babylonjs.com/t/stop-render-loop-and-keep-last-frame-rendered-multiview/42847/3\r\n\r\nTest PG: #LYSEQ9#2 (starts and stops a render loop and prints on begin/end frame), in the current version there's a log even after the stopRenderLoop:\r\n<img width=\"208\" alt=\"image\" src=\"https://github.com/BabylonJS/Babylon.js/assets/6002144/112ebb72-20ac-48ba-8265-9796ec6a7771\">\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Misc/customAnimationFrameRequester.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14105",
                "title": "Accessibility: Fix crash with instanced meshes",
                "description": "See https://forum.babylonjs.com/t/accessibility-instanced-mesh-causes-exception/42879",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "accessibility"
                ]
            },
            {
                "pr": "14106",
                "title": "Material plugins: Add support for #include resolution",
                "description": "This PR adds the possibility of replacing any #include directives that appear in the material plugin code with their corresponding code.\r\n\r\nHowever, to avoid unnecessary code parsing when there are no inclusions, you must explicitly enable resolution of #include directives (7th parameter of the `MaterialPluginBase` constructor).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginEvent.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "14111",
                "title": "Pass pick result to triggers missing it.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/event-additionaldata-undefined-for-certain-triggers/42904",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "14103",
                "title": "Fixes to NME styling",
                "description": "Fix #14097\r\nFix #14098\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "14107",
                "title": "add accessibility package to local server",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/declarationConfigDev.json",
                    "packages/tools/babylonServer/declarationConfigLTS.json",
                    "packages/tools/babylonServer/public/empty.html",
                    "packages/tools/babylonServer/public/index-ts.html",
                    "packages/tools/babylonServer/public/index.html",
                    "packages/tools/babylonServer/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "14104",
                "title": "Disable half float linear filtering in native",
                "description": "Reverts one change from https://github.com/BabylonJS/Babylon.js/pull/14096.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.14.0": [
            {
                "pr": "14088",
                "title": "Add extra conditions for outParams declarations in PBR block shaders",
                "description": "When using PBR debug modes in Babylon Native, these structs will be marked \"not fully initialized\" and error. These extra checks should ensure that any declared debug parameter will also be initialized.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAmbientOcclusion.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAnisotropic.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockClearcoat.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockReflectivity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockSheen.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockSubSurface.fx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14087",
                "title": "overlay needs to be a part of the client object",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/babylonjs-viewer-assets/webpack.config.js",
                    "packages/tools/devHost/webpack.config.js",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js",
                    "packages/tools/playground/webpack.config.js",
                    "packages/tools/sandbox/webpack.config.js",
                    "packages/tools/viewer/webpack.config.js",
                    "packages/tools/vsm/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "14085",
                "title": "Delete what's new.md",
                "description": "What's new on the docs maintains a copy of that. Changes since 5.0.0 can be found at the CHANGELOG file.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "what's new.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14072",
                "title": "Making data Nullable for RawTexture3D and RawTexture2DArray",
                "description": "This change will make creating RawTexture3D and RawTexture2DArray storage textures less tedious when setting the data in a compute shader. This also brings it more in line with the RawTexture constructor.\r\nhttps://doc.babylonjs.com/typedoc/classes/BABYLON.RawTexture#constructor\r\n\r\nRelated to this change that allows RawTexture3D and RawTexture2DArray to be flagged as storage textures.\r\nhttps://github.com/BabylonJS/Babylon.js/pull/14070",
                "author": {
                    "name": "christianphalv",
                    "url": "https://github.com/christianphalv"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/rawTexture2DArray.ts",
                    "packages/dev/core/src/Materials/Textures/rawTexture3D.ts"
                ],
                "tags": []
            },
            {
                "pr": "14073",
                "title": "preparation for NOTICE changes in public packages",
                "description": "Adding NOTICE.md for when OS code will be added directly into the core code.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/core/NOTICE.md",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/umd/babylonjs/NOTICE.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14075",
                "title": "Improved quaternion application",
                "description": "I am the author of Quaternion.js ( https://github.com/infusion/Quaternion.js ) and thought it might be useful for a wider audience to benefit from an improvement to rotate vectors using quaternions I've derived here https://raw.org/proof/vector-rotation-using-quaternions/\r\n\r\nI discussed this already with the fine folks from Three.js where I also proposed to add this improvement https://github.com/mrdoob/three.js/pull/26456",
                "author": {
                    "name": "infusion",
                    "url": "https://github.com/infusion"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "optimizations",
                    "math"
                ]
            },
            {
                "pr": "14081",
                "title": "DomManagement avoid unneeded object imports",
                "description": "discovered here - https://forum.babylonjs.com/t/iswindowobjectexist-is-not-a-function-es6-support-with-tree-shaking-bug/42583\n\nStill working on understanding why parcel totally tree-shake the entire object, but the module export itself exists.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Misc/precisionDate.ts",
                    "packages/dev/gui/src/3D/controls/MRTK3/touchHolographicButton.ts",
                    "packages/dev/gui/src/3D/controls/holographicButton.ts",
                    "packages/dev/gui/src/3D/controls/touchHolographicButton.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14080",
                "title": "SpotLight: Fix projection texture matrix not computed in world space",
                "description": "See https://forum.babylonjs.com/t/setdirectiontotarget/42648/13",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/spotLight.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14079",
                "title": "NME: Generate code for \"mode\" property",
                "description": "See https://forum.babylonjs.com/t/procedural-texture-generated-by-export/42639",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "14077",
                "title": "introduce DISABLE_DEV_OVERLAY flag",
                "description": "Add this flag to your .env file to disable dev server overlay during development",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/babylonjs-viewer-assets/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/devHost/webpack.config.js",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js",
                    "packages/tools/playground/webpack.config.js",
                    "packages/tools/sandbox/webpack.config.js",
                    "packages/tools/viewer/webpack.config.js",
                    "packages/tools/vsm/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "14078",
                "title": "fix imports",
                "description": "As reported here - https://forum.babylonjs.com/t/double-slash-in-cannonjsplugin-js-may-lead-to-404-not-found/42637?u=raananw",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Physics/v1/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/oimoJSPlugin.ts"
                ],
                "tags": []
            },
            {
                "pr": "14071",
                "title": "Change throw to log for native update RTT samples",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14070",
                "title": "Raw textures: Add creationFlags parameter for 3D and 2DArray texture creation",
                "description": "See https://forum.babylonjs.com/t/does-babylon-support-3d-storage-textures-webgpu/42592",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/rawTexture2DArray.ts",
                    "packages/dev/core/src/Materials/Textures/rawTexture3D.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "14068",
                "title": "AnimationGroup: add enableBlending method",
                "description": "Currently, it's not possible to easily enable blending for all animations in an animation group.\r\n\r\nThere's `Animatable.enableBlending`, but it actually only changes the blending speed and not the blending on/off state (because this state is stored in the `RuntimeAnimation` constructor and can't be changed afterwards).\r\n\r\nI've also updated some internal variable names + comments in `RuntimeAnimation`, in an effort to make the code more readable (at least for me!).\r\n\r\nHere's a PG that uses the new method to enable blending for the walk/run transitions:\r\n\r\nhttps://playground.babylonjs.com/#6I67BL#440",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14061",
                "title": "Physics spring constraint",
                "description": "Adds `stiffness` and `damping` parameters to the Physics6DoFConstraint, and a SpringConstraint class that extends the former.\r\n\r\nAn example playground showcasing the parameters can be seen in: #V558CC#1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts",
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm",
                    "packages/tools/babylonServer/public/havok/HavokPhysics_umd.js"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "14067",
                "title": "PBR: Fix doc for the metallicReflectanceColor property",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.13.0": [
            {
                "pr": "14065",
                "title": "FreeCameraMouseInput: Reset Active pointerId when detaching controls",
                "description": "A user in the forum found an issue where the camera controls stopped working after an animation started.  It was determined the issue was caused by the controls being detached before the `pointerup` event was handled.  A line was added to make sure the tracked active pointerid was being reset when the controls were no longer active so that input could begin to be received again.\r\n\r\nA test has also been added to check for this scenario\r\n\r\nForum Link: https://forum.babylonjs.com/t/mesh-actionmanager-camera-control-bug/42292",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "14062",
                "title": "AnimationGroup: Add MergeAnimationGroups method",
                "description": "Closes #12895",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "animations",
                    "new feature"
                ]
            }
        ],
        "6.12.5": [
            {
                "pr": "14055",
                "title": "Basic native support of MSAA for render targets",
                "description": "This change covers the basic case of passing in a sample count for render targets. It does not handle changing the sample count after initialization or multitargets.\r\n\r\nThis is just the JS changes. Additional native changes are needed for MSAA to work with render targets, but it does not require a protocol version update.\r\n\r\nSee https://forum.babylonjs.com/t/nativeengine-render-target-texture-not-working-with-msaa/42329.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "14052",
                "title": "Animations: Add support for animatable and animation group ordering",
                "description": "This PR adds a `playOrder` property to `Animatable` / `AnimationGroup` (that of `AnimationGroup` is simply passed to `Animatable`).\r\n\r\nThis allows the user to define a specific processing order for animatables, which is necessary when you want certain animations in one animatable / animation group to take precedence over other animations.\r\n\r\nI've added a global switch to sort the list of active animables, as people may not want to suffer the performance penalty if they don't need this feature.\r\n\r\nLet's discuss whether this is something we want/if we want it with this implementation (~~which makes it a draft for now~~).\r\n\r\nCloses #BabylonJS/ThePirateCove#538",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "animations",
                    "new feature"
                ]
            },
            {
                "pr": "14060",
                "title": "Bump word-wrap from 1.2.3 to 1.2.4",
                "description": "Bumps [word-wrap](https://github.com/jonschlinkert/word-wrap) from 1.2.3 to 1.2.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/jonschlinkert/word-wrap/releases\">word-wrap's releases</a>.</em></p>\n<blockquote>\n<h2>1.2.4</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Remove default indent by <a href=\"https://github.com/mohd-akram\"><code>@​mohd-akram</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/24\">jonschlinkert/word-wrap#24</a></li>\n<li>🔒fix: CVE 2023 26115 (2) by <a href=\"https://github.com/OlafConijn\"><code>@​OlafConijn</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/41\">jonschlinkert/word-wrap#41</a></li>\n<li>:lock: fix: CVE-2023-26115 by <a href=\"https://github.com/aashutoshrathi\"><code>@​aashutoshrathi</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/33\">jonschlinkert/word-wrap#33</a></li>\n<li>chore: publish workflow by <a href=\"https://github.com/OlafConijn\"><code>@​OlafConijn</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/42\">jonschlinkert/word-wrap#42</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/mohd-akram\"><code>@​mohd-akram</code></a> made their first contribution in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/24\">jonschlinkert/word-wrap#24</a></li>\n<li><a href=\"https://github.com/OlafConijn\"><code>@​OlafConijn</code></a> made their first contribution in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/41\">jonschlinkert/word-wrap#41</a></li>\n<li><a href=\"https://github.com/aashutoshrathi\"><code>@​aashutoshrathi</code></a> made their first contribution in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/33\">jonschlinkert/word-wrap#33</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4\">https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/f64b188c7261d26b99e1e2075d6b12f21798e83a\"><code>f64b188</code></a> run verb to generate README</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/03ea08256ba0c8e8b02b1b304f0f5bd2b1863207\"><code>03ea082</code></a> Merge pull request <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/issues/42\">#42</a> from jonschlinkert/chore/publish-workflow</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e\"><code>420dce9</code></a> Merge pull request <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/issues/41\">#41</a> from jonschlinkert/fix/CVE-2023-26115-2</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/bfa694edf55bb84ff84512f13da6d68bf7593f06\"><code>bfa694e</code></a> Update .github/workflows/publish.yml</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/ace0b3c78f81aaf43040bab3bc91d3c5546d3fd2\"><code>ace0b3c</code></a> chore: bump version to 1.2.4</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/6fd727594676f3e1b196b08a320908bec2f4ca02\"><code>6fd7275</code></a> chore: add publish workflow</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/30d6daf60fce429f5f559252fa86ee78200652c4\"><code>30d6daf</code></a> chore: fix test</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/655929cabea6299dddf3b4a21fc3713fca701b48\"><code>655929c</code></a> chore: remove package-lock</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/49e08bbc32a84da5d79e6b7e0fa74ff6217f6d81\"><code>49e08bb</code></a> chore: added an additional testcase</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/9f626935f3fac6ec0f3c4b26baea4eb9740d9645\"><code>9f62693</code></a> fix: cve 2023-26115</li>\n<li>Additional commits viewable in <a href=\"https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=word-wrap&package-manager=npm_and_yarn&previous-version=1.2.3&new-version=1.2.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "6.12.4": [
            {
                "pr": "14020",
                "title": "Add new Material Plugin for various mesh debug visualizations",
                "description": "This material plugin could help users visualize different properties of a mesh: its UV sets, edges, vertices, vertex colors, and the mesh's material index (only practical if this plugin is applied to multiple materials).",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Materials/index.ts",
                    "packages/dev/core/src/Materials/meshDebugPluginMaterial.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/MeshDebugPluginMaterial.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "14057",
                "title": "Animations: Add a weight property to AnimationGroup",
                "description": "Animation groups can already be blended by calling `AnimationGroup.setWeightForAllAnimatables(weight)` but this is a bit cumbersome, because animatables are not created until `AnimationGroup.start` is called. So, every time you stop and restart an animation group, you have to call `AnimationGroup.setWeightForAllAnimatables(weight)` if you want to set a blend weight.\r\n\r\nThis PR adds a new `weight` property that you can set at any time, as well as the ability to pass the weight as a parameter at construction time.\r\n\r\nCloses #https://github.com/BabylonJS/ThePirateCove/issues/540\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "14058",
                "title": "Fix invalidateRect of a Rectangle Control with thickness",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-btn-add-pointerupanimation-event/42500\r\n\r\nAnother example PG: https://playground.babylonjs.com/#JUG11I#7\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "14059",
                "title": "Screenshot tools: Fallback on regular canvas if offscreen canvas not supported",
                "description": "See https://forum.babylonjs.com/t/safari-create-screenshot-using-render-target-broken/42512/8\r\n\r\n~~Please wait for comments from the author of the thread to make sure the fix works before merging it!~~ Can be merged!",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/dumpTools.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14054",
                "title": "Fix loading skeletons using ImportMesh when the skeleton id is not a number.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/serializing-a-scene-and-importing-back-using-importmesh-data-jsonscene-losing-skeletons-and-animationgroups/42437\r\n\r\nExample scene: https://playground.babylonjs.com/#D4ZZ8#428\r\n\r\nI also added a vis test for serializing the mesh with a MorphTargetManager, but it wasn't necessary changing the check because when that is serialized, it uses the uniqueId which is always a number.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/SerializeScene and ImportMesh with MorphTargetManager.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/SerializeScene and ImportMesh with string skeletonIds.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "14051",
                "title": "fix `Bone.returnToRest()`, `Bone.updateMatrix()` does not work properly",
                "description": "Hello first let me explain the bug I found.\r\n\r\n- The `Bone.returnToRest()` method performs `this._matrix = this._restMatrix;` when there is no `_linkedTransformNode`.\r\nhttps://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Bones/bone.ts#L322\r\n\r\n- And the 'rest matrix' is compared to the 'local matrix', and if the two are the same, the matrix update is canceled.\r\nhttps://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Bones/bone.ts#L70-L80\r\n\r\nHowever, if the local matrix needs to be composed (which means the local matrix is out of date), comparing the local matrix with the pose matrix is problematic.\r\n\r\nHere's the specific code that causes the bug.\r\n```typescript\r\n// First, call returnToRest to make the localMatrix and restMetrix the same.\r\nbone.returnToRest();\r\n\r\n// then executes code that can replace the values of _localPosition, _localRotation, or _localScaling.\r\n// The local matrix is now out of date and requires a compose.\r\nbone.setPosition(new Vector3(1, 2, 3), Space.LOCAL);\r\n\r\n// Then the _localPosition_ has changed, but the localMatrix and restMatrix are still the same,\r\n// so this code does not work properly.\r\nbone.returnToRest();\r\n```\r\n\r\nTo solve this problem, you can check the equality comparison with _needToCompose. (May not be the best way)\r\nSo this is what the modified code looks like this:\r\n```typescript\r\nset _matrix(value: Matrix) {\r\n    // skip if the matrices are the same\r\n    if (value.updateFlag === this._localMatrix.updateFlag && !this._needToCompose) {\r\n        this._needToCompose = false; // in case there was a pending compose\r\n        return;\r\n    }\r\n\r\n    this._needToCompose = false; // in case there was a pending compose\r\n\r\n    this._localMatrix.copyFrom(value);\r\n    this._markAsDirtyAndDecompose();\r\n}\r\n```\r\n\r\nThe method `Bone.updateMatrix` also has the same problem because it uses the `_matrix` property.\r\n\r\nI would like to mention someone who I think would be knowledgeable about this issue. If I mention someone incorrectly, I apologize in advance.\r\n@Popov72 ",
                "author": {
                    "name": "noname0310",
                    "url": "https://github.com/noname0310"
                },
                "files": [
                    "packages/dev/core/src/Bones/bone.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "14053",
                "title": "ParticleSystem: Fix update function when particle array is not internal array",
                "description": "See https://forum.babylonjs.com/t/cannot-read-properties-of-undefined-reading-copyto-of-particle-system/42502",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/particleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            }
        ],
        "6.12.3": [
            {
                "pr": "14050",
                "title": "Fix regression from 14037",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14048",
                "title": "Fix setting spatial sound option to false",
                "description": "When sounds have the `spatialSound` option set to `true`, setting it to `false` does not disable spatial sound. This change fixes the issue. This change also gets setting the `spatialSound` option working when using the `Sound.updateOptions` function.\r\n\r\nReported on forum: https://forum.babylonjs.com/t/what-is-the-expected-behavior-when-i-detach-sound-from-a-mesh/42315\r\n\r\nTested on Chrome browser with playground https://playground.babylonjs.com/#2AH4YH#81.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/test/unit/Audio/sound.test.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "6.12.2": [
            {
                "pr": "14049",
                "title": "Shaders: Fix shader parsing",
                "description": "See https://forum.babylonjs.com/t/app-that-worked-for-months-using-nme-materials-suddenly-hangs-with-shader-errors/42441/8\r\n\r\nThe problem is a bug in `PerturbNormal` (that does not remove a \";\" in some injected shader code), but which was hidden by the way we parsed the shader code before #13935.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            }
        ],
        "6.12.1": [
            {
                "pr": "14047",
                "title": "Fix sound pileup issue",
                "description": "Sounds created with the `loop` or `autoplay` options set while the audio engine is locked are started automatically when the audio engine is unlocked. If the newly created sound is stopped before the audio engine is unlocked, then the sound still plays when the audio engine is unlocked. This is unexpected. Stopped sounds should not play when the audio engine is unlocked.\r\n\r\nThis change fixes the issue by clearing the 500 ms timeout used for double-checking the audio context state and removing the observer added to `AudioEngine.onAudioUnlockedObservable` when the sound stops, pauses, gets played again without being stopped, or when it gets disposed.\r\n\r\nReported on forum https://forum.babylonjs.com/t/sound-pileup-in-chrome/42266.\r\nTested on Edge browser with playground https://playground.babylonjs.com/#0CNZFE#21.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/test/unit/Audio/sound.test.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "6.12.0": [
            {
                "pr": "14041",
                "title": "Fix SerializeMesh method to account for non-mesh ob…",
                "description": "…jects in the hierarchy.\r\n\r\nForum issue: https://forum.babylonjs.com/t/serializemesh-is-not-keeping-parent-child-hierarchy/42302\r\n\r\nAlso added a unit and vis test.\r\n\r\nEDIT: Also fix TrailMesh serialization and parsing. Currently, the mesh's type is not kept in the process: https://playground.babylonjs.com/#40E17W#3",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/trailMesh.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Meshes/babylon.positionAndRotation.test.ts",
                    "packages/dev/core/test/unit/Scene/babylon.sceneSerializer.test.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/SerializeMesh with hierarchy.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "exporters"
                ]
            },
            {
                "pr": "14037",
                "title": "Input transformation should be applied during the XR loop",
                "description": "When using the standard input system (i.e. changing cameraDirection and cameraRotation) the transformation changes instantly, but in XR, due to the way we change the camera transformation (during the XR loop) this has to be applied deferred.\n\nThe initial solution was to change the XR camera only, but this required repeating a lot of code because of the inheritence architecture.\n\nThis way we maintain back-compat while allowing \"deferred\" updating the camera's transformation based on inputs.\n\nFixes #14016\nPG to test - #m1kgcr",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerMovement.ts",
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "13935",
                "title": "ShaderCodeCursor. Optimization of lines parsing",
                "description": "I notices that `set lines` takes 19.29ms for 68 calls while my scene initializaion, so I add some checks to avoid process heavy operations like `trim` and `split` on the string. As a result, in my case this function take 9.45ms for same 68 calls. And it still works as before, of course, but faster :)\r\n\r\nP.S. Results of my measurements:\r\n```\r\ndefault:\r\n\r\n{count: 68, avg: 0.342647, max: 1.500000, allTime: 23.299999}\r\n{count: 68, avg: 0.267647, max: 1.300000, allTime: 18.199999}\r\n{count: 68, avg: 0.282352, max: 1.299999, allTime: 19.200000}\r\n{count: 68, avg: 0.294117, max: 1.200000, allTime: 19.999999}\r\n{count: 68, avg: 0.330882, max: 1.700000, allTime: 22.500000}\r\n{count: 68, avg: 0.326470, max: 4.500000, allTime: 22.199999}\r\n{count: 68, avg: 0.276470, max: 1.100000, allTime: 18.799998}\r\n{count: 68, avg: 0.255882, max: 0.799999, allTime: 17.400000}\r\n{count: 68, avg: 0.263235, max: 1.200000, allTime: 17.900000}\r\n{count: 68, avg: 0.260294, max: 0.899999, allTime: 17.699999}\r\n{count: 68, avg: 0.269117, max: 1.000000, allTime: 18.299999}\r\n{count: 68, avg: 0.280882, max: 1.099999, allTime: 19.099999}\r\n{count: 68, avg: 0.260294, max: 0.900000, allTime: 17.700000}\r\n{count: 68, avg: 0.263235, max: 0.900000, allTime: 17.899999}\r\n\r\navg allTime: 19.29ms\r\n\r\n-------------------------------------------------------------\r\n\r\nafter optimization:\r\n\r\n{count: 68, avg: 0.195588, max: 3.000000, allTime: 13.299999}\r\n{count: 68, avg: 0.138235, max: 1.000000, allTime:  9.399999}\r\n{count: 68, avg: 0.180882, max: 2.000000, allTime: 12.300000}\r\n{count: 68, avg: 0.155882, max: 1.400000, allTime: 10.600000}\r\n{count: 68, avg: 0.151470, max: 0.900000, allTime: 10.299999}\r\n{count: 68, avg: 0.145588, max: 1.599999, allTime:  9.899999}\r\n{count: 68, avg: 0.120588, max: 0.699999, allTime:  8.199999}\r\n{count: 68, avg: 0.122058, max: 0.700000, allTime:  8.299999}\r\n{count: 68, avg: 0.117647, max: 0.700000, allTime:  8.000000}\r\n{count: 68, avg: 0.123529, max: 0.799999, allTime:  8.400000}\r\n{count: 68, avg: 0.135294, max: 0.800000, allTime:  9.200000}\r\n{count: 68, avg: 0.141176, max: 0.700000, allTime:  9.600000}\r\n{count: 68, avg: 0.138235, max: 1.000000, allTime:  9.400000}\r\n{count: 68, avg: 0.133823, max: 0.799999, allTime:  9.099999}\r\n{count: 68, avg: 0.117647, max: 0.600000, allTime:  8.000000}\r\n{count: 68, avg: 0.150000, max: 1.899999, allTime: 10.200000}\r\n{count: 68, avg: 0.114705, max: 0.900000, allTime:  7.799999}\r\n{count: 68, avg: 0.135294, max: 0.700000, allTime:  9.199999}\r\n{count: 68, avg: 0.123529, max: 0.700000, allTime:  8.399999}\r\n{count: 68, avg: 0.138235, max: 0.699999, allTime:  9.400000}\r\n\r\navg allTime: 9.45ms\r\n```",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts"
                ],
                "tags": []
            },
            {
                "pr": "14046",
                "title": "Effect layer stencil",
                "description": "This change allows `GlowLayer` to be used with stenciling.\r\n\r\nhttps://forum.babylonjs.com/t/42331",
                "author": {
                    "name": "kv-bh",
                    "url": "https://github.com/kv-bh"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Layers/glowLayer.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "14039",
                "title": "Skeleton viewer bug",
                "description": "Bug: https://codesandbox.io/s/jovial-jasper-5d36rr \r\nFrom the example, it can be seen that the calculation of the bones is incorrect.\r\nUse getLocalMatrix instead\r\n```\r\nbone.children.forEach((bc) => {\r\n    const childAbsoluteBindPoseTransform: Matrix = new Matrix();\r\n    bc.getLocalMatrix().multiplyToRef(boneAbsoluteBindPoseTransform, childAbsoluteBindPoseTransform);\r\n   ...\r\n})\r\n```",
                "author": {
                    "name": "newbeea",
                    "url": "https://github.com/newbeea"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "14043",
                "title": "DeviceEventFactory: Modified event factory to provide correct value for buttons property (part deux)",
                "description": "This PR is a fix to https://github.com/BabylonJS/Babylon.js/pull/13927.  It addresses some of the logic changes but also re-adds support for buttons in Native pointer events.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14045",
                "title": "Bump semver from 5.7.1 to 5.7.2",
                "description": "Bumps [semver](https://github.com/npm/node-semver) from 5.7.1 to 5.7.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/node-semver/releases\">semver's releases</a>.</em></p>\n<blockquote>\n<h2>v5.7.2</h2>\n<h2><a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">5.7.2</a> (2023-07-10)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> <a href=\"https://redirect.github.com/npm/node-semver/pull/585\">#585</a> better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>) (<a href=\"https://github.com/joaomoreno\"><code>@​joaomoreno</code></a>, <a href=\"https://github.com/lukekarrys\"><code>@​lukekarrys</code></a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/node-semver/blob/v5.7.2/CHANGELOG.md\">semver's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">5.7.2</a> (2023-07-10)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> <a href=\"https://redirect.github.com/npm/node-semver/pull/585\">#585</a> better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>) (<a href=\"https://github.com/joaomoreno\"><code>@​joaomoreno</code></a>, <a href=\"https://github.com/lukekarrys\"><code>@​lukekarrys</code></a>)</li>\n</ul>\n<h2>5.7</h2>\n<ul>\n<li>Add <code>minVersion</code> method</li>\n</ul>\n<h2>5.6</h2>\n<ul>\n<li>Move boolean <code>loose</code> param to an options object, with\nbackwards-compatibility protection.</li>\n<li>Add ability to opt out of special prerelease version handling with\nthe <code>includePrerelease</code> option flag.</li>\n</ul>\n<h2>5.5</h2>\n<ul>\n<li>Add version coercion capabilities</li>\n</ul>\n<h2>5.4</h2>\n<ul>\n<li>Add intersection checking</li>\n</ul>\n<h2>5.3</h2>\n<ul>\n<li>Add <code>minSatisfying</code> method</li>\n</ul>\n<h2>5.2</h2>\n<ul>\n<li>Add <code>prerelease(v)</code> that returns prerelease components</li>\n</ul>\n<h2>5.1</h2>\n<ul>\n<li>Add Backus-Naur for ranges</li>\n<li>Remove excessively cute inspection methods</li>\n</ul>\n<h2>5.0</h2>\n<ul>\n<li>Remove AMD/Browserified build artifacts</li>\n<li>Fix ltr and gtr when using the <code>*</code> range</li>\n<li>Fix for range <code>*</code> with a prerelease identifier</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/f8cc313550691a50d9662d8c94f0c033717efd7d\"><code>f8cc313</code></a> chore: release 5.7.2</li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> fix: better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>)</li>\n<li><a href=\"https://github.com/npm/node-semver/commit/deb5ad51bf58868fa243c1683775305fe9e0e365\"><code>deb5ad5</code></a> chore: <code>@​npmcli/template-oss</code><a href=\"https://github.com/4\"><code>@​4</code></a>.16.0</li>\n<li>See full diff in <a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~lukekarrys\">lukekarrys</a>, a new releaser for semver since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=semver&package-manager=npm_and_yarn&previous-version=5.7.1&new-version=5.7.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "14031",
                "title": "GRL - resolution added",
                "description": "resolution was removed and aspect was introduced to save one divide operation in the shader, however when GREASED_LINE_SIZE_ATTENUATION is true, the vec2 resolution is needed. float aspect, vec2 resolution and float width are now packed into one vec4 attribute.",
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/greasedLinePluginMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "14030",
                "title": "Fixes for includeChildMeshes:true when constructing physics shapes",
                "description": "Allows MESH and CONVEX_HULL shapes to be constructed from TransformNode or InstancedMesh instances and  correctly account for transform of children when includeChildMeshes is set to true.\r\n\r\nDiscussed this with @carolhmj - there were a couple of failure cases or unexpected behaviour when building physics shapes.\r\n\r\nHere's an example of one of the failure cases (check the console logs): https://playground.babylonjs.com/#5BJIYA#3 - this loads a glTF file which contains a mesh with multiple materials. The loader will create a single TransformNode with two Mesh children - one for each material.  If a user tries to build a physics shape from the \"Cube\" object (which is a glTF mesh, but a Babylon TransformNode) they'll hit the failure cases in the console.log()s. Similarly, if the mesh was instanced multiple times, the old code previously tried to use an `InstancedMesh` instance as if it were a `Mesh`, which would raise an exception accessing an undefined property (`Mesh.getVerticesData`)\r\n\r\nThis change allows a user to create a single physics shape from this scene construct. I've also tested this with some additional playground scenes, which @carolhmj linked me to:\r\n\r\nhttps://playground.babylonjs.com/#5BJIYA#4\r\nhttps://playground.babylonjs.com/#K7TJIG#363\r\nhttps://playground.babylonjs.com/#9T64J6\r\nhttps://playground.babylonjs.com/#R9DTZ0#16\r\n\r\nAnd made a new variant of one, which tests this includeChildMeshes functionality in the complicated \"Buggy\" asset:\r\nhttps://playground.babylonjs.com/#K7TJIG#371\r\n\r\nSince I can imagine that this case of constructing a single physics shape from a whole branch of the scene hierarchy is useful, it would probably also be nice to expose the includeChildMeshes property to the PhysicsShapeMesh and PhysicsShapeConvexHull constructors, without having to require users use the PhysicsShape base class.",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": []
            },
            {
                "pr": "14012",
                "title": "Add the missing loaders tests",
                "description": "And cleaning up the old ones",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "jest.config.ts",
                    "packages/dev/core/test/unit/Loading/babylon.sceneLoader.tests.temp",
                    "packages/dev/loaders/test/integration/babylon.sceneLoader.test.ts",
                    "packages/dev/loaders/test/integration/testData.ts"
                ],
                "tags": []
            },
            {
                "pr": "14040",
                "title": "Fix for invalidated TypedArray objects preventing mesh construction",
                "description": "Fix failure to create mesh shapes when plugin memory needed to be reallocated.\r\n\r\nUnderlying issue is described in https://github.com/emscripten-core/emscripten/issues/7294 but what we were doing was:\r\n\r\n1. malloc() memory in plugin for vertex data\r\n2. Construct a Float32Array to view that data\r\n3. malloc() memory in plugin for index data\r\n4. Construct an Int32Array to view that data\r\n\r\nIssue is that at step 3, if the malloc() requires the plugin to expand the underlying storage, the Float32Array that we constructed in step 2 will be silently (!) invalidated and we'll pass a nullptr into the plugin for vertex data, which will result in no mesh shape being created.",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14038",
                "title": "Performance tests preparations to run on the server",
                "description": "I ran a few tests on the new server instance. performance tests seem to be running quite stable. \nThis changes the perf-tests to support the dev version and the latest stable version. Current threshold is 5% but it will be configurable in the future. \n\nThese tests should only run on the new GPU instance, otherwise they are not stable (even locally). \n\nOnce merged I will run a few tests with the CI and will turn these tests on as optional until we decide they are stable enough.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/performance/playgrounds.test.ts",
                    "packages/tools/tests/test/performance/scene.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "14036",
                "title": "GPU particle systems: Fix current active count",
                "description": "See https://forum.babylonjs.com/t/gpuparticlesystem-is-still-updating-with-activeparticlecount-and-emitrate-are-0/42284",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "14035",
                "title": "adding es check to umd packages",
                "description": "UMD packages have long been es5-oriented, yet have incorporated es6 features like arrow functions. This checks the UMD packages against es6 and not es5, as it will fail because of the arrow functions.\n\nThis test is important for babylon native, which uses those packages, and does support es6 (but not more than that ATM)\n\nThis test will be added to the build process after merging it.\n\nSmall note - also fixing the missing es5 target in serializers.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/public/umd/babylonjs-gui/package.json",
                    "packages/public/umd/babylonjs-loaders/package.json",
                    "packages/public/umd/babylonjs-materials/package.json",
                    "packages/public/umd/babylonjs-post-process/package.json",
                    "packages/public/umd/babylonjs-procedural-textures/package.json",
                    "packages/public/umd/babylonjs-serializers/package.json",
                    "packages/public/umd/babylonjs-serializers/tsconfig.build.json",
                    "packages/public/umd/babylonjs/package.json"
                ],
                "tags": []
            },
            {
                "pr": "14032",
                "title": "bring back the webgpu tests",
                "description": "Those tests fail on linux but are fine on windows.\n\nI will remove them as part of the CI configuration instead of removing them here",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            }
        ],
        "6.11.2": [
            {
                "pr": "14025",
                "title": "Material: Adds a property to define the relative order in which decals and detailed maps are rendered",
                "description": "See https://forum.babylonjs.com/t/how-to-render-decal-map-on-top-of-detail-map-or-control-the-render-order-on-a-material-and-its-various-map-properties/42165\r\n\r\nFixes #14024 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            }
        ],
        "6.11.1": [
            {
                "pr": "14029",
                "title": "UMD - compile from source, force es5",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/umd/babylonjs-loaders/package.json",
                    "packages/public/umd/babylonjs-loaders/tsconfig.build.json",
                    "packages/public/umd/babylonjs-loaders/webpack.config.js",
                    "packages/public/umd/babylonjs-materials/package.json",
                    "packages/public/umd/babylonjs-materials/tsconfig.build.json",
                    "packages/public/umd/babylonjs-materials/webpack.config.js",
                    "packages/public/umd/babylonjs-post-process/package.json",
                    "packages/public/umd/babylonjs-post-process/tsconfig.build.json",
                    "packages/public/umd/babylonjs-post-process/webpack.config.js",
                    "packages/public/umd/babylonjs-procedural-textures/package.json",
                    "packages/public/umd/babylonjs-procedural-textures/tsconfig.build.json",
                    "packages/public/umd/babylonjs-procedural-textures/webpack.config.js",
                    "packages/public/umd/babylonjs-serializers/package.json",
                    "packages/public/umd/babylonjs-serializers/tsconfig.build.json",
                    "packages/public/umd/babylonjs-serializers/webpack.config.js",
                    "packages/public/umd/babylonjs/package.json",
                    "packages/public/umd/babylonjs/tsconfig.build.json",
                    "packages/public/umd/babylonjs/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13997",
                "title": "getter/setter aproach",
                "description": "getter/setter aproach, added meshestolines predicate, added default color, added jdocs, {...arrays) to for loops because of stack size exceeded error (@Popov72  you were right that it might happen - as I started to convert big meshes to lines it has happened 👍🏻 )",
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Meshes/Builders/greasedLineBuilder.ts",
                    "packages/dev/core/src/Meshes/greasedLineMesh.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "14028",
                "title": "When changing relevant properties on the Camera, Light an…",
                "description": "…d Mesh tree items, call onPropertyChangedObservable\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/debuglayer-onpropertychangedobservable-not-firing-when-enabling-disabling-lights/42184",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/entities/cameraTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/lightTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/meshTreeItemComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "14027",
                "title": "Picking: Fix ray picking when using reverse depth buffer",
                "description": "See https://forum.babylonjs.com/t/use-reverse-depth-buffer-picking-to-always-return-to-the-distant-mesh/41495",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": [
                    "bug",
                    "picking"
                ]
            },
            {
                "pr": "14026",
                "title": "GPU Particle systems: Fix BILLBOARDMODE_STRETCHED",
                "description": "See https://forum.babylonjs.com/t/gpu-particles-disappeared-with-billboardmode-stretched/42199",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            }
        ],
        "6.11.0": [
            {
                "pr": "14018",
                "title": "Transform LTS to support ESM transformations",
                "description": "This PR moves deprecated functions back to dev (as LTS was not really used).\nIt provides a starting point for LTS to be the place where es modules are put back together as classes for the es6 and umd packages (which consume LTS as their source).\n\nA side effect of that is that the build time SHOULD be a little faster, as we skip one step (transforming the LTS packages).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/core/src/Meshes/Builders/boxBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/capsuleBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/cylinderBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/decalBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/discBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/goldbergBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/hemisphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/icoSphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/latheBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/planeBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/polygonBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/polyhedronBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/ribbonBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/shapeBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/sphereBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/torusBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/torusKnotBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/tubeBuilder.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/lts/core/package.json",
                    "packages/lts/core/src/Meshes/mesh.ts",
                    "packages/lts/core/src/Misc/fileTools.ts",
                    "packages/lts/core/src/scene.ts",
                    "packages/lts/core/tsconfig.build.json",
                    "packages/lts/gui/package.json",
                    "packages/lts/gui/tsconfig.build.json",
                    "packages/lts/loaders/package.json",
                    "packages/lts/loaders/tsconfig.build.json",
                    "packages/lts/materials/package.json",
                    "packages/lts/materials/tsconfig.build.json",
                    "packages/lts/postProcesses/package.json",
                    "packages/lts/postProcesses/tsconfig.build.json",
                    "packages/lts/proceduralTextures/package.json",
                    "packages/lts/proceduralTextures/tsconfig.build.json",
                    "packages/lts/serializers/package.json",
                    "packages/lts/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/core/tsconfig.lts.json",
                    "packages/public/@babylonjs/core/watcher.cjs",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/tsconfig.lts.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/tsconfig.lts.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/tsconfig.lts.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.lts.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.lts.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/tsconfig.lts.json",
                    "packages/public/@babylonjs/shared-ui-components/tsconfig.build.json",
                    "packages/public/umd/babylonjs-gui/config.json",
                    "packages/public/umd/babylonjs-gui/src/index.ts",
                    "packages/public/umd/babylonjs-gui/tsconfig.build.json",
                    "packages/public/umd/babylonjs-gui/tsconfig.json",
                    "packages/public/umd/babylonjs-gui/webpack.config.js",
                    "packages/public/umd/babylonjs-loaders/config.json",
                    "packages/public/umd/babylonjs-loaders/src/glTF1FileLoader.ts",
                    "packages/public/umd/babylonjs-loaders/src/glTF2FileLoader.ts",
                    "packages/public/umd/babylonjs-loaders/src/glTFFileLoader.ts",
                    "packages/public/umd/babylonjs-loaders/src/index.ts",
                    "packages/public/umd/babylonjs-loaders/src/objFileLoader.ts",
                    "packages/public/umd/babylonjs-loaders/src/stlFileLoader.ts",
                    "packages/public/umd/babylonjs-loaders/tsconfig.build.json",
                    "packages/public/umd/babylonjs-loaders/tsconfig.json",
                    "packages/public/umd/babylonjs-loaders/webpack.config.js",
                    "packages/public/umd/babylonjs-materials/config.json",
                    "packages/public/umd/babylonjs-materials/src/cell.ts",
                    "packages/public/umd/babylonjs-materials/src/custom.ts",
                    "packages/public/umd/babylonjs-materials/src/fire.ts",
                    "packages/public/umd/babylonjs-materials/src/fur.ts",
                    "packages/public/umd/babylonjs-materials/src/gradient.ts",
                    "packages/public/umd/babylonjs-materials/src/grid.ts",
                    "packages/public/umd/babylonjs-materials/src/index.ts",
                    "packages/public/umd/babylonjs-materials/src/lava.ts",
                    "packages/public/umd/babylonjs-materials/src/mix.ts",
                    "packages/public/umd/babylonjs-materials/src/normal.ts",
                    "packages/public/umd/babylonjs-materials/src/shadowOnly.ts",
                    "packages/public/umd/babylonjs-materials/src/simple.ts",
                    "packages/public/umd/babylonjs-materials/src/sky.ts",
                    "packages/public/umd/babylonjs-materials/src/terrain.ts",
                    "packages/public/umd/babylonjs-materials/src/triPlanar.ts",
                    "packages/public/umd/babylonjs-materials/src/water.ts",
                    "packages/public/umd/babylonjs-materials/tsconfig.build.json",
                    "packages/public/umd/babylonjs-materials/tsconfig.json",
                    "packages/public/umd/babylonjs-materials/webpack.config.js",
                    "packages/public/umd/babylonjs-post-process/config.json"
                ],
                "tags": []
            },
            {
                "pr": "14023",
                "title": "Water material: Add removeFromRenderList method",
                "description": "See https://forum.babylonjs.com/t/remove-mesh-from-watermaterial-and-mirrortexture/42146\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "14022",
                "title": "Reset body and body index on PhysicsRaycastResult",
                "description": "Related forum issue: https://forum.babylonjs.com/t/physicsraycastresult-reset-does-not-reset-body-property/42135/",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14021",
                "title": "Engine: Fix crash when disposing effect or engine while shader compiled in parallel",
                "description": "See https://forum.babylonjs.com/t/spritepackedmanager-cleanup-issue/42121",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14019",
                "title": "Avoid cloning physics body twice and set body properties when cloning",
                "description": "Related forum issue: https://forum.babylonjs.com/t/launching-ball-with-havok-physics/42124/",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "14017",
                "title": "MorphTargetManager: Fix creation of texture when partial support for morph types",
                "description": "See https://forum.babylonjs.com/t/morphtargetmanager-has-uniform-binding-problem/41995/11",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Morph/morphTargetManager.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "14015",
                "title": "Preparations For GPU Testing",
                "description": "This PR is a (hopefully) final preparation for webgpu testing.\n\nThis adds further configuration flags that can be adjusted using the CI. On top of that, prepass tests (and 2 other unrelated tests) were excluded from webgpu testing.\n\nSome tests fail on WebGPU/Ubuntu. The reason is unclear (As they don't fail on windows) and will be investigated in the future.\n\nUntil then it should be possible to run the webgpu tests on a remote chrome using this config file.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/config.json",
                    "packages/tools/tests/test/visualization/visualization.utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "14011",
                "title": "Add bump map debug mode and remove extraneous return",
                "description": "Removing the return at the end of pbrDebug.fx so that CUSTOM_FRAGMENT_MAIN_END can be reached in pbr.fragment.fx.\r\n\r\nAlso: could I add in a debug mode to see bump maps? It would make my project look a little cleaner, and it seems we have debug modes for other maps anyway :)",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDebug.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "14013",
                "title": "Add scissor validation tests",
                "description": "I added new scissor validation tests in BabylonNative. See https://github.com/BabylonJS/BabylonNative/pull/1243.\r\n\r\nThis change adds the same scissor validation tests to Babylon.js.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/tools/tests/test/visualization/ReferenceImages/multiCameraRenderingWithScissors.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/scissorTestNegativeXandY.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/scissorTestOobWidthAndHeight.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.10.0": [
            {
                "pr": "14007",
                "title": "Refactoring of the Bone class",
                "description": "It's mainly a reworking of the names, to make things a little clearer for the developer/end-user.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/boneIKController.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Debug/skeletonViewer.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "enhancement",
                    "bones"
                ]
            },
            {
                "pr": "13998",
                "title": "Add raycast filtering to physics engine interface",
                "description": "So you can do: \r\n```javascript\r\nphysicsEngine.raycastToRef(from, to, result, query);\r\n```\r\n\r\nInstead of having to access the Havok Plugin.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/IPhysicsEngine.ts",
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            },
            {
                "pr": "14002",
                "title": "Improve convertToUnIndexedMesh and convertToFlatShadedMesh vertex data handling with support for morph targets",
                "description": "Both convertToUnIndexedMesh() and convertToFlatShadedMesh() appear to be doing similar things, so I created a private function, _convertToUnIndexedMesh(), to be used by both.\r\n\r\n_convertToUnIndexedMesh() has a flag to decide if normals should be flattened, as should be the case for flat shading. \r\nI also added logic to accomodate morph targets, if they're available in the mesh.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/convertToFlatShadedMesh.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "new feature"
                ]
            },
            {
                "pr": "14006",
                "title": "needMoveForGravity public access",
                "description": "followup https://forum.babylonjs.com/t/gravity-not-working/41931/3",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Cameras/flyCamera.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            },
            {
                "pr": "13999",
                "title": "Optimized mesh.subdivide function by delaying the BB refresh to once …",
                "description": "Optimized mesh.subdivide function by delaying the BB refresh to once the subdivision is finished. \r\nPreviously, copying entire mesh data inside the loop made the algorithm time scale with the number of subdivisions. \r\nThis is no longer the case. 100+ times faster on a multi-million vertex mesh. ",
                "author": {
                    "name": "JonathanIcon",
                    "url": "https://github.com/JonathanIcon"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "14005",
                "title": "Allow customizing vis-tests further",
                "description": "Visualization tests for WebGPU on Linux require a few new configuration flags, otherwise they sometimes fail.\n\nThis PR adds the following:\n\n* Set custom flags as an environment variable\n* set the browser context as env variable\n* ask to reset the entire browser PER TEST. This is important to make sure the entire context changes per test (avoiding any leaks or state errors)\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "jest-puppeteer.config.js",
                    "packages/tools/tests/test/visualization/visualization.utils.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "14001",
                "title": "Gizmo+inspector world/local coordinates switch",
                "description": "related to https://github.com/BabylonJS/Babylon.js/pull/13939\r\nAdd the ability to change coordinate system world/local for gizmos.\r\nAlso add that switch to the inspector \r\n@PatrickRyanMS Let me know if you have a more suitable icon that this one:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1312968/548364db-5c5a-4126-ba76-53d1d72f50ee)\r\n\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/sceneTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorer.scss"
                ],
                "tags": []
            },
            {
                "pr": "13996",
                "title": "CubeTexture: Fix parsing when name has been overwritten",
                "description": "See https://forum.babylonjs.com/t/pbrmaterial-clone-has-stopped-working-in-my-scene-just-now-or-a-few-hours-ago/41805/9\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13988",
                "title": "Input manager :  PointerEvent pick with boundingBox",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Inputs/pointerPickingConfiguration.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13995",
                "title": "docs: improve EnvironmentHelper docstring",
                "description": "minor improvement of the `EnvironmentHelper` docstring",
                "author": {
                    "name": "yedpodtrzitko",
                    "url": "https://github.com/yedpodtrzitko"
                },
                "files": [
                    "packages/dev/core/src/Helpers/environmentHelper.ts"
                ],
                "tags": []
            }
        ],
        "6.9.0": [
            {
                "pr": "13994",
                "title": "Interaction Test: Update first test to remove inertia",
                "description": "For this PR, it just makes a minor change to the interaction test to remove inertia (`camera.inertia = 0`) from the camera movement.  This will remove any chance that the camera will move (due to left over momentum) when it's not supposed to.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/tests/test/interactions/safari.test.ts"
                ],
                "tags": [
                    "inputs",
                    "skip changelog"
                ]
            },
            {
                "pr": "13993",
                "title": "Call the onInitial observable in AR mode as well",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "13992",
                "title": "SSR: Fix crash when using a PBR material in glossiness/specular mode",
                "description": "See https://forum.babylonjs.com/t/error-on-new-ssrrenderingpipeline/41812",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13991",
                "title": "fix for the monaco editor",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13990",
                "title": "Move away from declare type",
                "description": "use import type instead",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Actions/condition.ts",
                    "packages/dev/core/src/Actions/directActions.ts",
                    "packages/dev/core/src/Animations/animatable.interface.ts",
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/flyCamera.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Collisions/meshCollisionData.ts",
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/src/Compute/computeEffect.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/src/Culling/boundingBox.ts",
                    "packages/dev/core/src/Culling/boundingInfo.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.textureSampler.ts",
                    "packages/dev/core/src/Engines/Processors/iShaderProcessor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLShaderProcessors.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.storageBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.textureSampler.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuHardwareTexture.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/engineStore.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Events/pointerEvents.ts",
                    "packages/dev/core/src/Helpers/textureDome.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/currentScreenBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Particle/particleTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/vertexOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialDecorator.ts",
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrClearCoatConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSheenConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/htmlElementTexture.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/rawTexture.ts",
                    "packages/dev/core/src/Materials/Textures/rawTexture2DArray.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Materials/drawWrapper.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/effectFallbacks.ts",
                    "packages/dev/core/src/Materials/iEffectFallbacks.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Materials/material.detailMapConfiguration.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginEvent.ts",
                    "packages/dev/core/src/Materials/materialPluginFactoryExport.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/materialStencilState.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Misc/copyTools.ts",
                    "packages/dev/core/src/Misc/decorators.ts",
                    "packages/dev/core/src/Misc/rgbdTextureTools.ts",
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/Morph/morphTarget.ts",
                    "packages/dev/core/src/Particles/EmitterTypes/IParticleEmitterType.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particle.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Particles/subEmitter.ts",
                    "packages/dev/core/src/Particles/webgl2ParticleSystem.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/standardRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts",
                    "packages/dev/core/src/PostProcesses/blackAndWhitePostProcess.ts",
                    "packages/dev/core/src/PostProcesses/blurPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/chromaticAberrationPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/colorCorrectionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/convolutionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/displayPassPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/filterPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/fxaaPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/grainPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/motionBlurPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/passPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/PostProcesses/postProcessManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13989",
                "title": "GreasedLineTools.GetPointsFromText",
                "description": "Gets 3D positions of points from a text and font",
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts"
                ],
                "tags": []
            }
        ],
        "6.8.1": [
            {
                "pr": "13987",
                "title": "Allow Add, Divide, Subtract and Multiply Node to use float as second …",
                "description": "…operand",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/addBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/divideBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/multiplyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/subtractBlock.ts"
                ],
                "tags": [
                    "nme"
                ]
            },
            {
                "pr": "13986",
                "title": "use exec instead of matchAll while keeping structure",
                "description": "Babylon native's js engine doesn't support matchAll (an ES2020 feature).\r\n\r\nInstead, I am recreating the same structure using `.exec`.\r\n\r\nPerformance-wise it is on-par and even faster (at least on my benchmarks. See here - https://jsbench.me/wblj4eghw5/1)\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/1381702/66a7ed4b-4127-4ab6-9b22-137a03400cf1)\r\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts"
                ],
                "tags": []
            },
            {
                "pr": "13840",
                "title": "GreasedLine",
                "description": "@RaananW Finally it's here!",
                "author": {
                    "name": "RolandCsibrei",
                    "url": "https://github.com/RolandCsibrei"
                },
                "files": [
                    "packages/dev/core/src/Materials/greasedLinePluginMaterial.ts",
                    "packages/dev/core/src/Materials/index.ts",
                    "packages/dev/core/src/Meshes/Builders/greasedLineBuilder.ts",
                    "packages/dev/core/src/Meshes/Builders/index.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/greasedLineMesh.ts",
                    "packages/dev/core/src/Meshes/index.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/deepCopier.ts",
                    "packages/dev/core/src/Misc/greasedLineTools.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/greased-line-basic.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/greased-line-basic.png",
                    "packages/tools/tests/test/visualization/config.json",
                    "packages/tools/tests/test/visualization/webgpu.json"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13983",
                "title": "changeable epsilon for (typeof Quaternion).FromUnitVectorsToRef",
                "description": "for my use case epsilon is to big, so right now I have to copy entire method and use 1e-7 epsilon which works fine for me\r\nI hope optional parameter for epsilon is fine",
                "author": {
                    "name": "nekochanoide",
                    "url": "https://github.com/nekochanoide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13975",
                "title": "Typescript 5.1 For core",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/package.json",
                    "packages/dev/buildTools/src/addJSToCompiledFiles.ts",
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/buildTools/src/copyAssets.ts",
                    "packages/dev/buildTools/src/declarationsEs6.ts",
                    "packages/dev/buildTools/src/devWatcher.ts",
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/index.ts",
                    "packages/dev/buildTools/src/ltsTransformer.ts",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/prepareEs6Build.ts",
                    "packages/dev/buildTools/src/prepareSnapshot.ts",
                    "packages/dev/buildTools/src/updateEngineVersion.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/src/Behaviors/Meshes/fadeInOutBehavior.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/gui/package.json",
                    "packages/dev/gui/src/2D/controls/colorpicker.ts",
                    "packages/dev/inspector/package.json",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/loaders/package.json",
                    "packages/dev/loaders/src/glTF/1.0/glTFLoaderUtils.ts",
                    "packages/dev/materials/package.json",
                    "packages/dev/postProcesses/package.json",
                    "packages/dev/proceduralTextures/package.json",
                    "packages/dev/serializers/package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/lts/core/package.json",
                    "packages/lts/gui/package.json",
                    "packages/lts/loaders/package.json",
                    "packages/lts/materials/package.json",
                    "packages/lts/postProcesses/package.json",
                    "packages/lts/proceduralTextures/package.json",
                    "packages/lts/serializers/package.json",
                    "packages/public/@babylonjs/accessibility/package.json",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui-editor/package.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/inspector/package.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/node-editor/package.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/shared-ui-components/package.json",
                    "packages/public/@babylonjs/shared-ui-components/tsconfig.build.json",
                    "packages/public/@babylonjs/test-tools/package.json",
                    "packages/public/@babylonjs/viewer/package.json",
                    "packages/public/@babylonjs/viewer/tsconfig.build.json",
                    "packages/public/babylonjs-viewer-assets/package.json",
                    "packages/public/glTF2Interface/package.json",
                    "packages/public/umd/babylonjs-accessibility/package.json",
                    "packages/public/umd/babylonjs-gui-editor/package.json",
                    "packages/public/umd/babylonjs-gui/package.json",
                    "packages/public/umd/babylonjs-inspector/package.json",
                    "packages/public/umd/babylonjs-ktx2decoder/package.json",
                    "packages/public/umd/babylonjs-loaders/package.json",
                    "packages/public/umd/babylonjs-materials/package.json",
                    "packages/public/umd/babylonjs-node-editor/package.json",
                    "packages/public/umd/babylonjs-post-process/package.json",
                    "packages/public/umd/babylonjs-procedural-textures/package.json",
                    "packages/public/umd/babylonjs-serializers/package.json",
                    "packages/public/umd/babylonjs-viewer/package.json",
                    "packages/public/umd/babylonjs/package.json",
                    "packages/tools/accessibility/package.json",
                    "packages/tools/babylonServer/package.json",
                    "packages/tools/devHost/package.json",
                    "packages/tools/eslintBabylonPlugin/src/index.ts",
                    "packages/tools/guiEditor/package.json",
                    "packages/tools/ktx2Decoder/package.json",
                    "packages/tools/nodeEditor/package.json",
                    "packages/tools/playground/package.json",
                    "packages/tools/sandbox/package.json",
                    "packages/tools/testTools/package.json",
                    "packages/tools/tests/package.json",
                    "packages/tools/viewer/package.json",
                    "packages/tools/vsm/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13985",
                "title": "VideoTexture: Revert changes",
                "description": "See https://forum.babylonjs.com/t/videotextures-does-not-show-video-on-ios-after-cleaning-cache/41756/2\r\n\r\nThis PR reverts changes from #13843.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13982",
                "title": "InputManager: Move-based Picking not working with SpriteManager and specific flag",
                "description": "A user in the forum found an issue where having an active SpriteManager was interfering with picking being done when `scene.constantlyUpdateMeshUnderPointer` is set to true.  This PR makes two small changes.  First, because of how the SpriteManager works, lazy picking cannot be applied so if there's an active SpriteManager, lazy picking isn't used.  Second, if the `scene.constantlyUpdateMeshUnderPointer` is set to true, lazy picking will also be disabled as the mesh under the pointer will not be updated normally until the property is accessed.\r\n\r\nA test has also been added to verify that picking is done before the picking info is referenced under these specific circumstances.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13980",
                "title": "Add recast to downloadable playgrounds",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/zipContent/index.html"
                ],
                "tags": []
            },
            {
                "pr": "13971",
                "title": "Update animationGroup.ts",
                "description": "Adds a <code>AnimationGroup.removeTargetedAnimation();</code> method.\r\n\r\nUnsure if there should be a optional Target parameter..? ",
                "author": {
                    "name": "aWeirdo",
                    "url": "https://github.com/aWeirdo"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "13973",
                "title": "Add Vector2/3/4 tests",
                "description": "Also adds tmp and temp to .gitignore\r\n\r\nNote that this is to make debugging #13699 easier.",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    ".gitignore",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13974",
                "title": "NME: Add support for sampler types to CustomBlock",
                "description": "See https://forum.babylonjs.com/t/passing-texture-sampler-into-custom-block-nme/41647\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/customBlock.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13976",
                "title": "Decal: Fix crash when the mesh is an instanced mesh",
                "description": "See https://forum.babylonjs.com/t/meshbuilder-createdecal-stopped-working-after-upgrading-to-v6-8-0-instanced-mesh/41665.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/decalBuilder.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13978",
                "title": "Materials: Add support for plugins when cloning materials",
                "description": "See https://forum.babylonjs.com/t/material-clone-doesnt-clone-all-material-plugins/41695",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13972",
                "title": "Add parameter to control jpg/webp quality of screenshots",
                "description": "The \"quality\" controls the lossyness of webp/jpeg screenshots. It doesn't affect pngs (since png is always lossless). The quality parameter was exposed through some of the screenshot-related APIs already, but not all, so I'm adding it on all of them to be consistent.\r\n\r\nI took the opportunity to cleanup redundant types used for default value parameters (e.g. `foo: boolean = false` --> `foo = false`). I hope that's ok!\r\n\r\nAlso fixed a typo in the docs from my previous PR.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Misc/dumpTools.ts",
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": []
            },
            {
                "pr": "13969",
                "title": "\"Does not exist\" view in PBR debug mode",
                "description": "Working on a red line, \"does not exist\" shader that displays if the selected debug mode is not available.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDebug.fx",
                    "packages/tools/tests/test/visualization/ReferenceImages/PBR Debug Modes.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "13970",
                "title": "Material: Add serialization and parsing of material plugins",
                "description": "Closes #13887.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "13965",
                "title": "Fix typo computeBonesUsingShaders default value",
                "description": "the default value of `AbstractMesh.computeBonesUsingShaders` is true\r\n\r\nhttps://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Meshes/abstractMesh.ts#L96",
                "author": {
                    "name": "noname0310",
                    "url": "https://github.com/noname0310"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "13968",
                "title": "Water material: Fix support for mesh instances",
                "description": "See https://forum.babylonjs.com/t/water-material-fix/41609/5\r\n\r\nIt also fixes use of `bumpSuperimpose`, `fresnelSeparate` and `bumpAffectsReflection`, which were not reset when switching their state from `true` to `false`.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/water/water.fragment.fx",
                    "packages/dev/materials/src/water/water.vertex.fx",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13966",
                "title": "Raycast filtering",
                "description": "Will close https://github.com/BabylonJS/Babylon.js/issues/13795\r\n\r\nSee example PG: #PY59V9#4 - You can change the collideWith value to collide with either the front or back box.\r\n\r\nAn important note about the `triangleIndex` is that is only available for mesh shapes.\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "13953",
                "title": "Add debug mode to show albedo texture's alpha channel",
                "description": "This mode will take the raw alpha value from the albedo texture, if available, and display it. \r\n\r\nHowever, I'm not sure if this is the kind of behavior that we'd want/expect from the debug mode... \r\nIf this new mode is used on a material with alpha masking, like the three rightmost panes below, the masked fragments will not display. They are discarded earlier in the shader-- I believe right [here](https://github.com/BabylonJS/Babylon.js/blob/b81ef81982febe1420e3624415f479faaa348bd4/packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx#L78) \r\n ![image](https://github.com/BabylonJS/Babylon.js/assets/91097647/6740032b-3022-4a4d-bf8e-90e8af6d657d)\r\nIf we remove the alpha masking, though, we can see the albedo texture's raw alpha value.\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/91097647/96ae8693-de4f-44d3-ae83-793c00dd77d7)\r\n\r\n\r\nLeaving this as a draft for now :)",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineArithmeticOperator.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDebug.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/Base Color Debug Mode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Emissive Color Debug Mode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Glossiness Debug Mode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/PBR Debug Modes.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Specular Color Debug Mode.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "6.8.0": [
            {
                "pr": "13963",
                "title": "Add some clarification about picking triangles from b…",
                "description": "…oth sides.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/ray-intersection-from-the-invisible-culled-side/41545/7?u=carolhmj",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13962",
                "title": "When opening NME from PG, use the PG's scene clear color",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/nodeMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/materialTreeItemComponent.tsx",
                    "packages/tools/nodeEditor/src/nodeEditor.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13964",
                "title": "Allow removing an observer without knowing its observable",
                "description": "Suggestion to add a remove function to the observer.\n\nThis implementation maintains back-compat, allows using either one of the functions to remove the observer. calling both functions would be a no-op for the 2nd call.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/observable.ts"
                ],
                "tags": [
                    "enhancement",
                    "new feature"
                ]
            },
            {
                "pr": "13960",
                "title": "Add NativeEngine enableScissor and disableScissor",
                "description": "Adds `enableScissor` and `disableScissor` functions to the `NativeEngine` class so they can be implemented in BabylonNative. See PR https://github.com/BabylonJS/BabylonNative/pull/1243.\r\n\r\nThis change was tested against the current BabylonNative master branch to make sure it doesn't break when scissors are not being used. It was also tested against the BabylonNative PR implementing scissors https://github.com/BabylonJS/BabylonNative/pull/1243 to make sure all tests pass.\r\n\r\nBabylonNative was crashing before this change when scissors are being used, and with this change it still crashes but for a different reason. Because BabylonNative master was crashing before this PR and after it, no protocol version change is needed in `nativeEngine.ts`. Scissor behavior for the end user is the same as before.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13961",
                "title": "Fix an issue with NME canvas resizing",
                "description": "There is an issue with NME canvas resizing because the canvas belongs to a different document.\n\nThe following fix makes a few assumptions (that were fully tested in different scenarios):\n\n1) When a canvas is not attached to a document its width and height are 0,0\n2) when a canvas is not attached the user must define width and height OR use the default values\n3) An element doesn't have to belong to the document in which the js context is running. (NME case)\n\nThis playground can be used for testing, along with all NME playgrounds:\n#NZZAUD#7",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13956",
                "title": "Allows colour changes from bboxrenderer observers",
                "description": "Uses the this.frontColor and this.backColor properties directly when drawing the bounding boxes to allow colour changes from onBeforeBoxRenderingObservable observers.\r\n\r\n",
                "author": {
                    "name": "aaloksg",
                    "url": "https://github.com/aaloksg"
                },
                "files": [
                    "packages/dev/core/src/Rendering/boundingBoxRenderer.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13955",
                "title": "First version of Space Warp support",
                "description": "This PR contains the XR feature that enables space warp, a feature available in the oculus browser (behind a flag). The feature was suggested as an official WebXR feature - https://pr-preview.s3.amazonaws.com/cabanier/layers/pull/303.html#feature-descriptor-space-warp as part of the XR Layers spec.\n\n*Note* Code based on the initial version made by @dannysu\n\nCloses #13945",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiview.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Shaders/velocity.fragment.fx",
                    "packages/dev/core/src/Shaders/velocity.vertex.fx",
                    "packages/dev/core/src/XR/features/WebXRLayers.ts",
                    "packages/dev/core/src/XR/features/WebXRSpaceWarp.ts",
                    "packages/dev/core/src/XR/features/index.ts",
                    "packages/dev/core/src/XR/webXRFeaturesManager.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13946",
                "title": "Added ArrayBufferView to possible input types to load scene content.",
                "description": "Added ArrayBufferView to be one of the accepted types in the SceneLoader import methods (ImportMesh, ImportMeshAsync, Load, LoadAsync, Append, AppendAsync and LoadAssetContainer). Now in addition to string and File those will also be able to receive ArrayBufferView. \r\n\r\nThis was required by Babylon Native for when model data is passed from C++ into JS by mapping native memory into ArrayBuffers. \r\n\r\nThis PR also adds a visualization test for loading a mesh directly from binary data. ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFValidation.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/glbArrayBufferViewLoad.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "loaders",
                    "breaking change"
                ]
            },
            {
                "pr": "13958",
                "title": "Fix fixedRatioMasterIsWidth not being preserved on the GUI Editor",
                "description": "Example PG: [#KEZ57F#1](https://playground.babylonjs.com/#KEZ57F#1)\r\nWhen opened:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/7bce726c-03d5-47d9-84da-3de4dad0de8b)\r\nIf you open the GUI Editor, it switches from fixed width ratio to fixed height:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/576d9595-78dd-4abe-aafe-21c4efb9456b)\r\n\r\nThis also exposes the property fixedRatioMasterIsWidth so the user can set it to their preference.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts"
                ],
                "tags": [
                    "bug",
                    "gui",
                    "gui editor"
                ]
            },
            {
                "pr": "13952",
                "title": "Add isVisible property on the common control properties …",
                "description": "…menu\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/gui-editor-text-not-displaying/41395/7\r\n\r\nAdds a isVisible property on the common control property menu, which has the same function as the one on the tree view:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/ebd15da5-b439-4a49-b97b-72224b0534ea)\r\n\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/sceneExplorer/entities/gui/controlTreeItemComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "13957",
                "title": "Use addFunction to add MultiMaterial to a scene",
                "description": "The function `addMultiMaterial` is affected by the observer or the _blockEntityCollection variable. This needs to be taken into account.\r\n\r\nYou can see a similar case with the Material class.\r\nhttps://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Materials/material.ts#L922\r\n\r\n\r\nAnd this is the problematic code. Even if _blockEntityCollection is set, MultiMaterial will still be added to the scene.\r\nhttps://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/loaders/src/glTF/1.0/glTFLoader.ts#L786",
                "author": {
                    "name": "noname0310",
                    "url": "https://github.com/noname0310"
                },
                "files": [
                    "packages/dev/core/src/Materials/multiMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13954",
                "title": "Add same parameters from AbstractMesh.intersects to Ray.intersectsMesh",
                "description": "This makes it easier for a user to chose which function suits them best\r\nRelated forum issue: https://forum.babylonjs.com/t/ray-intersection-from-the-invisible-culled-side/41545/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "13951",
                "title": "Fix warning on copying a mesh with physics body",
                "description": "We need to pass the transform node of the body when cloning it.\r\nRelated forum issue: https://forum.babylonjs.com/t/havoc-problems-with-parented-meshes/40584/18?u=carolhmj\r\nTest PG: https://playground.babylonjs.com/#Z8HTUN#396\r\nIn master, it displays these warnings:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/0e0688d0-d4da-40ed-9cf5-cee819c919eb)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/deepCopier.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13936",
                "title": "Shader define expression optimization",
                "description": "In my scene with 50+ shaders the ShaderDefineExpression.infixToPostfix was called 15 000–35 000 times while scene is loading. In average for one loading it takes 54.28ms for all calls and 34.39ms for first 15 000 calls.\r\nAfter optimized from this PR I achieve next result: 9.68ms for all calls and 7.09ms for first 15 000 calls.\r\n\r\nI made two simple changes:\r\n1. If `infix` does not contain operators, then it will not be modified, so we can return it as is.\r\n2. As I mention above this function called thousands times while scene loading. But the input string are not unique every time, in fact, in my case, it was only 168 unique infixes. So there is a reason to use memoization, because the result of this function deterministic and has no side effects as I can see.\r\nFor safety work with memory I add a limit for memoize cache as 50000 entries. In my case the 100 entries takes 6504 chars of memory, so with the basic interpolation it might be around 640 KB for 50 000 entries. As all we know, 640K ought to be enough for anybody :)\r\n\r\nSo, just with this two changes  performance of the function was boosted 5.6x times and for my middle (as I think now) scene it saves 45ms (or almost 3 frames) for loading.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/Expressions/shaderDefineExpression.ts"
                ],
                "tags": []
            },
            {
                "pr": "13949",
                "title": "Tri-planar material: Fix uniform scaling",
                "description": "Follow-up to #13943, there was also a bug in the uniform scaling case, when the scaling is not 1.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13948",
                "title": "Fix FluidRenderer required side effects.",
                "description": "https://forum.babylonjs.com/t/error-scene-enablefluidrenderer-is-not-a-function/41492/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13932",
                "title": "Add function to ShaderMaterial for setting defines at run time",
                "description": "Also cleaned up some linter warnings.\r\n\r\nPG demonstrating effect: https://playground.babylonjs.com/?snapshot=refs/pull/13932/merge#11GAIH#286 -- after 3 seconds the cube turns red due to defines changing.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13950",
                "title": "Fix mtl loader being ignored",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": []
            },
            {
                "pr": "13944",
                "title": "update image diff framework and update to node 20",
                "description": "This moves us away from jest-screenshot (that is using native-image-diff) to a different framework (using pixelmatch)\r\n\r\nThere are difference with the way the old framework deals with transparency and the way the new one does. Some other images had to be updated as well.\r\n\r\nThis PR also includes changes to the project's dependencies  to allow running the repo in a node 20 environment.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "jest.config.ts",
                    "jest.visualization.setup.afterEnv.ts",
                    "package-lock.json",
                    "package.json",
                    "packages/tools/babylonServer/public/empty.html",
                    "packages/tools/tests/package.json",
                    "packages/tools/tests/test/visualization/ReferenceImages/anisotropic.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/defaultPipeline.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMaterialMetallicRoughness0.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMaterialSpecularGlossiness0.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfMeshPrimitiveAttribute.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-default-pipeline.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-dof.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-glow-layer.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-instanced-bones.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-lod.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-on-off-pp.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-point-light.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-shadow-only.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-thin-instances.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-visibility.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/shadowOnlyMaterial.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webp.png",
                    "packages/tools/tests/test/visualization/visualization.utils.ts",
                    "scripts/jest-imagediff-reporter.js"
                ],
                "tags": []
            },
            {
                "pr": "13934",
                "title": "Shader processor include optimization",
                "description": "I have a pretty big scene (100+ meshed, 50+ shaders) in glb format, when it loaded the loop in the `ShaderProcessor._ProcessIncludes()` was called 4927 times, and takes 200.57 ms and each loop take 0.0407ms. This values bases on 30 runs.\r\nAfter performance optimzations I got next result — the loop calls 3955 times, takes 70.82ms for all calls and 0.0179ms per one loop.\r\n\r\n1. I make regex as a static fields to avoid builing it in runtime.\r\n2. Change string replaces from regex to regular string where it possible.\r\n3. Replace while loop to for-of to avoid uneccessary `.exec()` at end of while-loop.\r\n4. Replace very heavy string replace opertation to `parts.join(\"\")` (more then 2x boost here)\r\n5. Fix warning from `new String()`.\r\n\r\nEvery change puts in a single commit.\r\n\r\nFor future discussing - we also can change this part:\r\n```ts\r\nfor (let index = 0; index < splits.length; index += 2) {\r\n    const source = new RegExp(splits[index], \"g\");\r\n    const dest = splits[index + 1];\r\n    includeContent = includeContent.replace(source, dest);\r\n}\r\n```\r\n\r\nwith `.replaceAll` and save 5-7ms for all loading time (it would be 65ms for all calls in my case). But now I can't use it because `TS2550: Property 'replaceAll' does not exist on type 'string'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2021' or later.`",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts"
                ],
                "tags": []
            },
            {
                "pr": "13947",
                "title": "Add glossiness, base color, specular color, and emissive color to material debug modes",
                "description": "WIP\r\nAdding debug modes to represent a material's glossiness, base color, specular color, and emissive color.",
                "author": {
                    "name": "alexchuber",
                    "url": "https://github.com/alexchuber"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDebug.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/Base Color Debug Mode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Emissive Color Debug Mode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Glossiness Debug Mode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Specular Color Debug Mode.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "6.7.0": [
            {
                "pr": "13909",
                "title": "Stop baking LH to RH in glTF serializer",
                "description": "Fixes #13891\r\n\r\nSee https://forum.babylonjs.com/t/glb-export-fails/40911\r\n\r\nWe used to try to bake the LH to RH conversion into the data. This change makes it such that it just puts a negative scale at the root instead. Doing the data conversion is too complex and probably isn't super beneficial to users.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporterExtension.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFSerializer.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFUtilities.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/gltfSerializerMorphTargetAnimation.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "glTF",
                    "breaking change"
                ]
            },
            {
                "pr": "13943",
                "title": "Tri-planar material: Add support for non uniform scaling",
                "description": "See https://forum.babylonjs.com/t/scaling-box-without-scaling-texture/41410/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/triPlanar/triPlanarMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13941",
                "title": "Avoid crashes with bad name/id assignments",
                "description": "Example PG: https://playground.babylonjs.com/#XMIQ95#2\r\nIf you try to open the Inspector in it, it crashes. This happens because an Object is assigned as a mesh's name/id, which wouldn't be valid in TS, but it can happen in JS. This PR adds some measures on the Inspector to avoid this crash.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13942",
                "title": "Fix Control item being draggable while renaming",
                "description": "Also fix some slight font differences when renaming a Control.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/entities/gui/controlTreeItemComponent.tsx",
                    "packages/tools/guiEditor/src/components/sceneExplorer/sceneExplorer.scss",
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            }
        ],
        "6.6.1": [
            {
                "pr": "13938",
                "title": "Revert changes from PR 13927",
                "description": "PR https://github.com/BabylonJS/Babylon.js/pull/13927 breaks interaction with utility layer and makes gizmo unusable.\r\nrevert changes until a fix is found.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13937",
                "title": "WebGPU: Add support for post processes written in WGSL",
                "description": "See https://forum.babylonjs.com/t/webgpu-post-processing/41380",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/ShadersWGSL/postprocess.vertex.fx"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "13933",
                "title": "Add anchor options for gizmos",
                "description": "By default the gizmos are anchored at the origin of the attached node. This PR allows that the target position can also be set to the pivot point of the attached node (If it is an instance of `TransformNode`). This mainly increases the usability of the `RotationGizmo` since it will stay in place during the rotation if a custom pivot point was defined.\r\n\r\n**Tests:**\r\nI tested it for all Gizmos (position, rotation, scale, boundingBox) with different settings (`updateScale`, `updateGizmoPositionToMatchAttachedMesh`, custom mesh pivot). The only thing I noticed is that `BoundingBoxGizmo` does not work probably with a custom pivot point. However this is not related to this PR and I`ll create another bug report / PR for that.\r\n\r\n**Related Discussion:**\r\nhttps://forum.babylonjs.com/t/gizmo-location-with-setpivotpoint/41271/3",
                "author": {
                    "name": "MBecherKurz",
                    "url": "https://github.com/MBecherKurz"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13927",
                "title": "DeviceEventFactory: Modified event factory to provide correct value for buttons property",
                "description": "There was an [issue](https://github.com/BabylonJS/Babylon.js/issues/13920) brought up where drag controls where not \"letting go\" when the mouse button was released.  This PR will now properly propagate this value based off of the MouseEvent standard.\r\n\r\nEdit: This also contains a little change to out pointer capture is being handled.  Basically, if the POINTERDOWN is skipped, the pointer capture bool is still set to true and if the POINTERUP is skipped and there are no buttons pressed, it should be released.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13914",
                "title": "Better handling of parented bodies",
                "description": "This PR aims to improve the handling of physical bodies that have parents. For that, we have to decompose the transformation we get from Havok into the parent transformation and the child transformation. ~~A point to check is the stability of this decomposition, especially in very long parenting chains~~ edit: stability is good now!.\r\n\r\nThis PR will close #13862",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            },
            {
                "pr": "13931",
                "title": "fix anisotropic texture debug mode",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAnisotropic.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13930",
                "title": "Fix conversion from % to px throwing error",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-editor-gives-error-when-trying-to-switch-from-to-px-in-position-of-textblock/41304",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/coordinateHelper.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13929",
                "title": "Fix to instantiateModelsToScene",
                "description": "Related: https://github.com/BabylonJS/Babylon.js/pull/13640#issuecomment-1532570652",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "13928",
                "title": "OBJ loader: add support for lines",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": []
            },
            {
                "pr": "13926",
                "title": "Correct description of Behavior.init",
                "description": "There's discrepancy in the docs as to when `Behavior.init` is called in relation to `Behavior.attach`.\r\n\r\nhttps://doc.babylonjs.com/features/featuresDeepDive/behaviors says:\r\n\r\n>init(): This function will be called when a behavior needs to be initialized. This is **before** the attachment to a target.\r\n\r\nThe current typedoc says\r\n\r\n>Function called when the behavior needs to be initialized (**after** attaching it to a target)\r\n\r\nThe [source](https://github.com/BabylonJS/Babylon.js/blob/48abfa6cef5555c8316428c4915f448ecfe365ab/packages/dev/core/src/node.ts#L390) says init is called before attach:\r\n\r\n```\r\npublic addBehavior(behavior: Behavior<Node>, attachImmediately = false): Node {\r\n        const index = this._behaviors.indexOf(behavior);\r\n\r\n        if (index !== -1) {\r\n            return this;\r\n        }\r\n\r\n        behavior.init();\r\n        if (this._scene.isLoading && !attachImmediately) {\r\n            // We defer the attach when the scene will be loaded\r\n            this._scene.onDataLoadedObservable.addOnce(() => {\r\n                behavior.attach(this);\r\n            });\r\n        } else {\r\n            behavior.attach(this);\r\n        }\r\n        this._behaviors.push(behavior);\r\n\r\n        return this;\r\n    }\r\n```\r\n",
                "author": {
                    "name": "wmurphyrd",
                    "url": "https://github.com/wmurphyrd"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/behavior.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.6.0": [
            {
                "pr": "13925",
                "title": "Create snapshot of a scene not using the main canvas fails",
                "description": "Fixes #13924\nIf canvas is not part of the document use the canvas' width and height directly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13923",
                "title": "NME fix input style.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.5.1": [
            {
                "pr": "13919",
                "title": "Fix type checking for mesh parameter in aggregate",
                "description": "Related forum issue: https://forum.babylonjs.com/t/physics-v2-replacement-for-ammojs-mesh-impostor/41232\r\nRelated playground: https://playground.babylonjs.com/#C0ILX9#3 (doesn't work in current version, will work with the fix)\r\nAlso changed the handling of this case: https://playground.babylonjs.com/#G7GU7W#2, which currently doesn't throw an error, but also doesn't display anything because the root node IS a mesh but doesn't have vertices. ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13921",
                "title": "Check why # character is rendered incorrectly with TextBuilder",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13918",
                "title": "Havok Physics Plugin: Fix applied impulse in Collision Event",
                "description": "https://forum.babylonjs.com/t/havok-collision-callback-how-to-interpret-provided-collision-info/41220/2\r\n\r\nRequires someone to take a look and make sure I read the information from the right address. ",
                "author": {
                    "name": "RaggarDK",
                    "url": "https://github.com/RaggarDK"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13917",
                "title": "SSR: add the useFresnel property to generate more physically accurate results",
                "description": "Extract from the `useFresnel` property doc:\r\n\r\n> Gets or sets a boolean indicating whether the blending between the current color pixel and the reflection color should be done with a Fresnel coefficient (default: false).\r\n> It is more physically accurate to use the Fresnel coefficient (otherwise it uses the reflectivity of the material for blending), but it is also more expensive when you use blur (when blurDispersionStrength \\> 0).\r\n\r\nI also disable the reflectivity test when the threshold is 0, to save some branching in the shader code.\r\n\r\nI'll update the documentation once the PR has been merged.\r\n\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/screenSpaceRayTrace.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2BlurCombiner.fragment.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13913",
                "title": "Physics fix getEventMask",
                "description": "Forum issue: https://forum.babylonjs.com/t/crash-when-calling-body-geteventmask/41187",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13915",
                "title": "Inspector fix parenting",
                "description": "Fix a bad change from #13893",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13912",
                "title": "Shader processor optimization",
                "description": "Hi, I made two little optimization:\r\n1. Make regex as a static field, insted of building this regex in the while loop.\r\n2. Avoid regex test, when it need with simple condition with `indexOf(\"#\")`.\r\n\r\nWhy I made it. I has a pretty big scene, where by my performance tracker to the `_MoveCursor` was detected 51475 call times.\r\nI had 16 measurements and it takes from 31 to 58 ms for my scene for all calls, and 44.73ms for all measurements in average.\r\n\r\nThen I tried to move regex into static field, then I had 13 runs of my measurement tool and now `_MoveCursor` takes 40.74ms in average for same 51475 calls.\r\n\r\nThen I add condition with `indexOf(\"#\")` and for 18 runs the `_MoveCursor` takes 28.67ms in average.\r\n\r\nOne improtant moment: I don't now how to test this changes. I see that ShaderProcessor does not have own test file. Maybe it possible to test with screenshot tests, but how it runs now?\r\n\r\nP. S. Here is statistic of all measurements, if you want too see it:\r\n```\r\ndefault:\r\n\r\n{count: 51475, avg: 0.0010043710270455997, max: 0.20000004768371582, allTime: 51.69999861717224}\r\n{count: 51475, avg: 0.0009927149221930706, max: 0.20000004768371582, allTime: 51.10000061988831}\r\n{count: 51475, avg: 0.0005322972196233452, max: 0.20000004768371582, allTime: 27.39999938011169}\r\n{count: 51475, avg: 0.0010607092423367233, max: 0.20000004768371582, allTime: 54.60000824928284}\r\n{count: 51475, avg: 0.0006877125438525296, max: 0.2999999523162842, allTime: 35.40000319480896}\r\n{count: 51475, avg: 0.0009480331220807469, max: 0.20000004768371582, allTime: 48.800004959106445}\r\n{count: 51475, avg: 0.0009791161841475424, max: 0.20000004768371582, allTime: 50.400005578994744}\r\n{count: 51475, avg: 0.0006158329804815558, max: 1.2999999523162842, allTime: 31.700002670288086}\r\n{count: 51475, avg: 0.0006566294447318508, max: 1.4000000953674316, allTime: 33.80000066757202}\r\n{count: 51475, avg: 0.0010101990702083934, max: 0.2999999523162842, allTime: 51.99999713897705}\r\n{count: 51475, avg: 0.000617775604411084, max: 0.20000004768371582, allTime: 31.799999237060547}\r\n{count: 51475, avg: 0.0010140845033368652, max: 0.20000004768371582, allTime: 52.19999980926514}\r\n{count: 51475, avg: 0.0009402622743507448, max: 0.20000004768371582, allTime: 48.40000057220459}\r\n{count: 51475, avg: 0.0011403593801653112, max: 1.2000000476837158, allTime: 58.69999909400939}\r\n{count: 51475, avg: 0.0006041767320452297, max: 0.20000004768371582, allTime: 31.0999972820282}\r\n{count: 51475, avg: 0.0010995628788611333, max: 0.2999999523162842, allTime: 56.59999918937684}\r\n\r\navg allTime is 44.73ms (from 16 runs)\r\n\r\n-------------------------------------------------------------------------------\r\nregex to static field:\r\n\r\n{count: 51475, avg: 0.000592520631824436, max: 0.20000004768371582, allTime: 30.499999523162842}\r\n{count: 51475, avg: 0.0010373968566257206, max: 0.3000001907348633, allTime: 53.40000319480897}\r\n{count: 51475, avg: 0.0006158328322660234, max: 0.19999980926513672, allTime: 31.699995040893555}\r\n{count: 51475, avg: 0.0010801359448055436, max: 0.20000004768371582, allTime: 55.599997758865356}\r\n{count: 51475, avg: 0.0006119475983021733, max: 0.20000004768371582, allTime: 31.50000262260437}\r\n{count: 51475, avg: 0.0005672656685012588, max: 0.20000004768371582, allTime: 29.200000286102295}\r\n{count: 51475, avg: 0.0010859640481808974, max: 0.20000004768371582, allTime: 55.899999380111694}\r\n{count: 51475, avg: 0.0009402622604555386, max: 0.20000004768371582, allTime: 48.39999985694885}\r\n{count: 51475, avg: 0.0010451675746671316, max: 0.20000004768371582, allTime: 53.8000009059906}\r\n{count: 51475, avg: 0.0009616319388657765, max: 0.40000009536743164, allTime: 49.500004053115845}\r\n{count: 51475, avg: 0.0005322972196233452, max: 0.20000004768371582, allTime: 27.39999938011169}\r\n{count: 51475, avg: 0.0005828072991169674, max: 0.20000004768371582, allTime: 30.000005722045895}\r\n{count: 51475, avg: 0.0006352598126389669, max: 0.20000004768371582, allTime: 32.69999885559082}\r\n\r\navg allTime is 40.74ms (from 13 runs)\r\n\r\n-------------------------------------------------------------------------------\r\nadd indexOf statement:\r\n\r\n{count: 51475, avg: 0.0005186983796796387, max: 0.2999999523162842, allTime: 26.699999094009403}\r\n{count: 51475, avg: 0.000491500681265284, max: 0.20000004768371582, allTime: 25.299997568130493}\r\n{count: 51475, avg: 0.000693540475853674, max: 0.20000004768371582, allTime: 35.69999599456787}\r\n{count: 51475, avg: 0.000575036423596553, max: 0.2999999523162842, allTime: 29.59999990463257}\r\n{count: 51475, avg: 0.0006566294030462323, max: 0.9000000953674316, allTime: 33.79999852180481}\r\n{count: 51475, avg: 0.0005536669119287892, max: 0.20000004768371582, allTime: 28.500004291534424}\r\n{count: 51475, avg: 0.000573093716295788, max: 0.20000004768371582, allTime: 29.499999046325687}\r\n{count: 51475, avg: 0.0005614375836528465, max: 0.7999999523162842, allTime: 28.89999961853027}\r\n{count: 51475, avg: 0.0005050995443676674, max: 0.20000004768371582, allTime: 25.99999904632568}\r\n{count: 51475, avg: 0.0005322972196233452, max: 0.9000000953674316, allTime: 27.39999938011169}\r\n{count: 51475, avg: 0.0006488586850048212, max: 1.3999998569488525, allTime: 33.40000081062317}\r\n{count: 51475, avg: 0.0006002914286053488, max: 0.10000014305114746, allTime: 30.900001287460327}\r\n{count: 51475, avg: 0.000433220031945783, max: 0.20000004768371582, allTime: 22.30000114440918}\r\n{count: 51475, avg: 0.00048567270757852104, max: 0.20000004768371582, allTime: 25.00000262260437}\r\n{count: 51475, avg: 0.0005070422053510787, max: 0.3000001907348633, allTime: 26.099997520446774}\r\n{count: 51475, avg: 0.0006119475658800256, max: 0.2999999523162842, allTime: 31.50000095367432}\r\n{count: 51475, avg: 0.0005128702716725495, max: 0.2999999523162842, allTime: 26.399997234344486}\r\n{count: 51475, avg: 0.0005672656823964649, max: 0.20000004768371582, allTime: 29.200001001358032}\r\n\r\navg allTime is 28.67ms (from 18 runs)\r\n```",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts"
                ],
                "tags": []
            },
            {
                "pr": "13911",
                "title": "Bone look controller: Add useAbsoluteValueForYaw property",
                "description": "See https://forum.babylonjs.com/t/bonelookcontroller-attitude-limitation-problem/41151",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Bones/boneLookController.ts"
                ],
                "tags": [
                    "new feature",
                    "bones"
                ]
            },
            {
                "pr": "13910",
                "title": "Fix sound distance not respecting Scene `audioListenerProvider` when set",
                "description": "When the `Scene.audioListenerProvider` function is set, the Sound class's distance calculation continues to use the active camera instead of using the position returned by `scene.audioListenerProvider`. This change fixes the issue by calculating the sound's distance from the point returned by the scene's `audioListenerProvider` if it has been set; otherwise it uses the active camera, as before.\r\n\r\nTested on playground https://playground.babylonjs.com/#G4PMF3#1.\r\n\r\nReported on forum:\r\nhttps://forum.babylonjs.com/t/sounds-custom-attenuation-function-is-not-provided-with-distance-from-scene-audiolistenerpositionprovider-position/41164",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13908",
                "title": "WebGPU: Support the flat qualifier on varyings",
                "description": "See https://forum.babylonjs.com/t/webgpu-flat-in-out-shader-variable/41171\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/iShaderProcessor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Engines/WebGL/webGL2ShaderProcessors.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "WebGPU"
                ]
            },
            {
                "pr": "13906",
                "title": "Effect layer: Intensity also affects emissive color",
                "description": "See https://forum.babylonjs.com/t/neon-effect-using-an-imported-material-looks-good-from-up-close-but-not-far-away/40081/18",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/glowMapGeneration.fragment.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13905",
                "title": "Pre-pass renderer: Fix bloom and depth renderer",
                "description": "See https://forum.babylonjs.com/t/prepassrenderer-fails-with-rendertargettexture-whose-active-camera-is-not-scene-activecamera/41143 and https://forum.babylonjs.com/t/enable-ssao2-scene-render-notify-error/40962/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13904",
                "title": "Add Backspace key to delete keyframe so it works on Mac",
                "description": "Forum issue: https://forum.babylonjs.com/t/how-does-one-remove-a-keyframe-in-the-ace-ux/38938/3",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/animationCurveEditorComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "ace"
                ]
            },
            {
                "pr": "13902",
                "title": "Add earcut entry point",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "13903",
                "title": "Fix typo in files input class",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Misc/filesInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13901",
                "title": "Yoyo loop mode for animations",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": []
            },
            {
                "pr": "13900",
                "title": "Asset manager needs addAnimationTask to load animation only files",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/assetsManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13899",
                "title": "Add up/down arrow control to NME search results",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/searchBox.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/searchBox.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13896",
                "title": "Scene: Make sure the layers are ready in scene.isReady",
                "description": "See https://forum.babylonjs.com/t/problems-rendering-a-single-frame-when-using-multiple-cameras-and-layermasks/41112\r\n\r\nNote that I made a change in `isReady` so as not to return prematurely if some things are not ready: it is better to let all the code go through to make sure everything is checked, because some resources can be created during these checks, and we don't want to delay these creations.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Layers/layer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13893",
                "title": "Prevent crashing when a mesh's name is of the wrong type.",
                "description": "A user can mistakenly set a mesh's name with the wrong type (not string), like this example: https://playground.babylonjs.com/#XT7L5S, where trying to open the Inspector makes it crash. This PR just adds some extra type checking to avoid it crashing, and also adds a quick check to warn the user when adding to a scene.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/meshTreeItemComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13895",
                "title": "MultiRenderTarget: Fix texture size calculation",
                "description": "See https://forum.babylonjs.com/t/multirendertarget-with-size-set-to-ratio/41117",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13894",
                "title": "Add GLTF Anisotropy extension.",
                "description": "Implements https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_anisotropy\r\n\r\nCan be tested with:\r\n* https://github.com/DrX3D/glTF-Sample-Assets/tree/main/Models/AnisotropyStrengthTest\r\n* https://github.com/DrX3D/glTF-Sample-Assets/tree/main/Models/AnisotropyRotationTest\r\n* https://github.com/DrX3D/glTF-Sample-Assets/tree/main/Models/AnisotropyBarnLamp\r\n\r\nThis also fix a broken implementation of the aniso texture and implements the GLTF remapping of intensity by default.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAnisotropic.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrHelperFunctions.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/tools/gltfComponent.tsx",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.data.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_anisotropy.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_anisotropy.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "glTF",
                    "new feature",
                    "breaking change"
                ]
            }
        ],
        "6.5.0": [
            {
                "pr": "13892",
                "title": "Shadows: Fix CSM in infinite far plane mode",
                "description": "See https://forum.babylonjs.com/t/csm-and-infinite-far-plane/41064",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "shadows"
                ]
            },
            {
                "pr": "13890",
                "title": "Fix the underline/strike-through line to use the color of the text when there is no outline.",
                "description": "Please not that, due to a bug in Firefox (https://bugzilla.mozilla.org/show_bug.cgi?id=1834594), it's not possible to have both the text and the outline color on that browser. So I added an option to use or not the behavior in case consistent behavior is needed:\r\nExample PG: #CMMCCJ#6\r\n\r\nIn Edge/Chrome:\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/262194fd-e931-47e6-b6ae-81db3d6b7d23)\r\n\r\nIn FF:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/fec96b5e-d9f3-44cf-a3a8-b5e4a7bc892b)\r\n\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13886",
                "title": "STL export multiple meshes",
                "description": "Add the option to not combine the meshes on export as STL\r\nBased on this discussion\r\nhttps://forum.babylonjs.com/t/stlexport-could-use-mesh-name-s-instead-than-the-generic-stlmesh-as-solid-label-s/40120",
                "author": {
                    "name": "Bulisor",
                    "url": "https://github.com/Bulisor"
                },
                "files": [
                    "packages/dev/serializers/src/stl/stlSerializer.ts"
                ],
                "tags": []
            },
            {
                "pr": "13888",
                "title": "Pre-Pass renderer: Fix scene.isReady when using the prepass renderer",
                "description": "See https://forum.babylonjs.com/t/how-to-detect-the-completion-of-initialization/40952/7 and https://forum.babylonjs.com/t/model-load-much-slower-with-cascadedshadow-and-prepassrenderer/40893/6.\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/materialDefines.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13889",
                "title": "RenderTargetTexture: Fix render pass ids when resizing the texture",
                "description": "See https://forum.babylonjs.com/t/setmaterialforrendering-not-work-after-resizing-rendertargettexture/41052",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13885",
                "title": "Mesh: Fix billboards in right-handed systems",
                "description": "See https://forum.babylonjs.com/t/scene-userighthandedsystem-true-and-billboard-mode/1601/7",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13835",
                "title": "Babylon Gui Editor, Free corner radius",
                "description": "New variable for corner radius with different values on each corner.\r\nCss and React components for Editor.\r\n@carolhmj ",
                "author": {
                    "name": "J3F31",
                    "url": "https://github.com/J3F31"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/rectanglePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTab.scss"
                ],
                "tags": []
            },
            {
                "pr": "13881",
                "title": "WebGPU: Allow to pass to a compute shader the gpu buffer used in a bundle to render instances",
                "description": "See https://forum.babylonjs.com/t/dynamic-size-of-instance-count/40839/9\r\n\r\nThis change allows you to pass the buffer used by the \"draw indirect\" call made in a render bundle to a compute shader.\r\n\r\nIt is useful to update the number of instances visible directly from a compute shader, when doing your own culling on the GPU, for example.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuDrawContext.ts",
                    "packages/dev/core/src/Meshes/WebGPU/webgpuDataBuffer.ts"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "13878",
                "title": "Curve interpolation node",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/curveBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/index.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/display/curveDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/curveDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/curveNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerToDisplayLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToPropertyLedger.ts"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            }
        ],
        "6.4.1": [
            {
                "pr": "13876",
                "title": "Adds a new MeshBuilder function to create 3D Text",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.path.ts",
                    "packages/dev/core/src/Meshes/Builders/index.ts",
                    "packages/dev/core/src/Meshes/Builders/textBuilder.ts",
                    "packages/dev/core/src/Meshes/meshBuilder.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/createText.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature",
                    "geometry"
                ]
            },
            {
                "pr": "13877",
                "title": "Option for twin renderer to not render all GUI controls by default",
                "description": "Closes #13865\r\n\r\nAdds a new option for HTMLTwinRenderer.Render, addAllControls, which is true by default and when false, only processes controls that have an explicit accessibilityTag set\r\nExample PG: #XCPP9Y#18673\r\n\r\n@gabrieljbaker please take a look and see what you think! ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinRenderer.ts"
                ],
                "tags": [
                    "new feature",
                    "accessibility"
                ]
            },
            {
                "pr": "13874",
                "title": "WebGPU: Fix errors when using float32 textures in materials",
                "description": "See https://forum.babylonjs.com/t/webgpu-error-non-filtering-sampler-binding/40819",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheBindGroups.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuClearQuad.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuMaterialContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            }
        ],
        "6.4.0": [
            {
                "pr": "13872",
                "title": "Mesh: Improve doc for ignoreCameraMaxZ",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13871",
                "title": "WebGPU: add support for new texture formats",
                "description": "See https://forum.babylonjs.com/t/webgpu-rg11b10ufloat-and-rgb9e5ufloat-not-implemented/40890",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "13870",
                "title": "Fix Scene performance counters",
                "description": "https://forum.babylonjs.com/t/confuse-about-sceneinstrument-caling-fetchnewframe/40840/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Instrumentation/sceneInstrumentation.ts",
                    "packages/dev/core/src/Misc/perfCounter.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "performance viewer"
                ]
            },
            {
                "pr": "13853",
                "title": "Physics: Add debug inertia view",
                "description": "Closes #13775\r\n\r\nAn example in one of our PGs:\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/6002144/b2010d49-4296-4f1b-84ac-170e7565f309)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "13864",
                "title": "Allow `scene.audioListenerPositionProvider` to be set to null",
                "description": "See https://forum.babylonjs.com/t/setting-scene-audiolistenerpositionprovider-to-null-throws-an-error/40820",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioSceneComponent.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13869",
                "title": "core not supported in declare module",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13868",
                "title": "WebGPU: Fix morphTargetTextureIndices overwritting morphTargetTextureInfo",
                "description": "See https://forum.babylonjs.com/t/webgpu-inactive-morph-target-shrinks-mesh-to-vertex-0/40864",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Morph/morphTargetManager.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13866",
                "title": "Material plugin: Fix cleaning when engine is disposed",
                "description": "See https://forum.babylonjs.com/t/material-oneventobservable-clear-cause-material-plugins-not-work/40838/3\r\n\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/tools/playground/src/components/rendererComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13863",
                "title": "add `enabledFeatures` to the session manager",
                "description": "Fixes #13837",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/webXRSessionManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13860",
                "title": "Sprite: Fix picking when angle is not zero",
                "description": "See https://forum.babylonjs.com/t/should-sprite-picking-work-with-rotation-angle/40768",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Sprites/spriteManager.ts"
                ],
                "tags": [
                    "bug",
                    "sprite"
                ]
            },
            {
                "pr": "13842",
                "title": "Node Material Editor: Allow loading GLTF format files in preview window, add drag and drop, revert to cube when loading fails",
                "description": "Close #12752\r\n\r\nTo load a GLTF, you have to select all of its files in the file input/drag and drop all the files.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts",
                    "packages/tools/nodeEditor/src/components/preview/previewMeshControlComponent.tsx",
                    "packages/tools/nodeEditor/src/globalState.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13859",
                "title": "Fix bug where constraint perp axes were ignored",
                "description": "Looks like we lost this in a refactor or something; the `perpAxisA` and `perpAxisB` fields in PhysicsConstraintParameters were unused, so constraints always used an arbitrary perp axis, instead of the user-provided one, which was making Physics6DoFConstraint hard to use.",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13857",
                "title": "Decal: Add support for thin instances",
                "description": "See https://forum.babylonjs.com/t/thin-instance-decals/40759\r\n\r\nThis PR also suppresses the \"Setting vertex data kind 'XXX' with an empty array\" warning when the created mesh is empty.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/decalBuilder.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13856",
                "title": "ArcRotateCamera: Account for offset when using zoom to mouse location",
                "description": "A user brought up an issue in the forum where the camera will zoom to a location but not account for any defined `targetScreenOffset` values.  This PR will now apply the offset to the zoom ray so that it's origin will come from the correct location.\r\n\r\nForum Link: https://forum.babylonjs.com/t/arcrotatecamera-zoomtomouselocation-does-not-take-targetscreenoffset-into-account/40743",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13855",
                "title": "DecalMap: Fix the isReady function",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/meshUVSpaceRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            }
        ],
        "6.3.1": [
            {
                "pr": "13850",
                "title": "Fix Dump tools clamping",
                "description": "https://forum.babylonjs.com/t/maybe-bug-about-dumptools-ts/40685/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/dumpTools.ts"
                ],
                "tags": [
                    "bug",
                    "tools"
                ]
            },
            {
                "pr": "13849",
                "title": "Add clarification to expected coordinate spaces when using Ray.inters…",
                "description": "…ectsMesh and AbstractMesh.intersects.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/moved-extruded-polygons-dont-intersect-with-rays/40694",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13848",
                "title": "SSR: Make the jitter centered",
                "description": "See https://forum.babylonjs.com/t/setting-blurdispersionstrength-to-0-and-setting-roughnessfactor-will-cause-the-reflection-to-skew-in-ssr/40646/2\r\n\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13847",
                "title": "Make sure not to add rootUrl to data URLs when parsing textures",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "13846",
                "title": "Add texture LOD input to NME TextureBlock",
                "description": "This change adds a \"lod\" input to NME TextureBlock so that texture mip LOD level can be adjusted.\r\n\r\nA playground example here: https://playground.babylonjs.com/#66MYF9 (Works with the change in place)",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13844",
                "title": "Fix Required dependency in HTMLElementTexture",
                "description": "Ensures the ES6 version of the HTMLElementTexture contains all its mandatory dependencies.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/htmlElementTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13845",
                "title": "Fix polynomials not being ready in PBR and env",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13843",
                "title": "Fix video texture bootstrap data.",
                "description": "https://forum.babylonjs.com/t/gl-invalid-operation-texture-format-does-not-support-mipmap-generation/39954/5\r\n\r\nLet s keep an eye open for regression after this one.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            }
        ],
        "6.3.0": [
            {
                "pr": "13836",
                "title": "NME Triplanar block: Fix redefinition of variable names",
                "description": "See https://forum.babylonjs.com/t/orientation-of-textures-with-triplanar-node-material/40528/6\r\n\r\nFollow up to #13833 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts"
                ],
                "tags": [
                    "bug",
                    "skip changelog"
                ]
            },
            {
                "pr": "13839",
                "title": "WebGPU: Update TWGSL",
                "description": "The new version fixes the problem reported in [\"Issue 1886: Tint still emits @stride statement\"](https://bugs.chromium.org/p/tint/issues/detail?id=1886).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm",
                    "packages/tools/tests/test/visualization/config.json",
                    "packages/tools/tests/test/visualization/webgpu.json"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13841",
                "title": "Video: Fix video not played when using multiple videos in a shader",
                "description": "See https://forum.babylonjs.com/t/video-texture-lost-with-plugins-on-multi-materials/40479/5\r\n\r\nThis PG will be fixed by the PR: https://playground.babylonjs.com/#4R4FMK#19",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13838",
                "title": "raycast reset and GC",
                "description": "reset raycast result by default and avoid new vector3 creation/destruction",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13827",
                "title": "Gizmo, Physics fixes",
                "description": "Fixes for : \r\n- https://forum.babylonjs.com/t/havok-plugin-raycast-doesnt-update-the-result-if-theres-no-hit/40500/5\r\n- https://forum.babylonjs.com/t/using-scalingdeterminant-and-gizmos-leads-to-unexpected-behavior/40509\r\n- https://forum.babylonjs.com/t/havoc-problems-with-parented-meshes/40584/5\r\n\r\nPG for the later : https://playground.babylonjs.com/#4517EG#8\r\n\r\n@carolhmj The change to add parent support needs an extra pair of eyes. I've tested with PGs from the doc and didn't see any issue.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "bug",
                    "physics",
                    "gizmos"
                ]
            },
            {
                "pr": "13834",
                "title": "Refraction: Fix refraction coordinates in right handed system",
                "description": "See https://forum.babylonjs.com/t/nodematerial-refraction-of-rendertargettexture/40617/3.\r\n\r\nFollow up to #13818, the correction must be done only for cube textures.\r\n\r\nThis PG, which is using a 2D texture for refraction, fails without the fix: https://playground.babylonjs.com/#FIWZP6#5\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/refractionBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts"
                ],
                "tags": [
                    "bug",
                    "materials",
                    "skip changelog"
                ]
            },
            {
                "pr": "13830",
                "title": "Use getBoundingClientRect instead of width",
                "description": "Following up on https://forum.babylonjs.com/t/engine-resize-issue-with-adapttodeviceratio-when-canvas-clientwidth-clientheight-are-0/40363\n\nIn certain cases clientWidth and height are undefined (or 0) - for example when the canvas is inlined. In this case, the defined width and height will be taken as the new width and height. The problem is that these values are already taking the hardware scaling into account, so it is then applied twice.\n\nThis approach uses the boundingClientRect, which will return the correct width and height, irrelevant of the width and height defined on the canvas itself.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13825",
                "title": "Update dependencies, move to sass away from node-sass",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Misc/error.ts",
                    "packages/dev/inspector/package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/dev/sharedUiComponents/rollup.config.js",
                    "packages/public/babylonjs-viewer-assets/package.json",
                    "packages/public/umd/babylonjs-accessibility/package.json",
                    "packages/public/umd/babylonjs-gui-editor/package.json",
                    "packages/public/umd/babylonjs-gui/package.json",
                    "packages/public/umd/babylonjs-inspector/package.json",
                    "packages/public/umd/babylonjs-ktx2decoder/package.json",
                    "packages/public/umd/babylonjs-loaders/package.json",
                    "packages/public/umd/babylonjs-materials/package.json",
                    "packages/public/umd/babylonjs-node-editor/package.json",
                    "packages/public/umd/babylonjs-post-process/package.json",
                    "packages/public/umd/babylonjs-procedural-textures/package.json",
                    "packages/public/umd/babylonjs-serializers/package.json",
                    "packages/public/umd/babylonjs-viewer/package.json",
                    "packages/public/umd/babylonjs/package.json",
                    "packages/tools/accessibility/package.json",
                    "packages/tools/babylonServer/package.json",
                    "packages/tools/devHost/package.json",
                    "packages/tools/eslintBabylonPlugin/src/index.ts",
                    "packages/tools/guiEditor/package.json",
                    "packages/tools/ktx2Decoder/package.json",
                    "packages/tools/nodeEditor/package.json",
                    "packages/tools/playground/package.json",
                    "packages/tools/reflector/package.json",
                    "packages/tools/sandbox/package.json",
                    "packages/tools/tests/package.json",
                    "packages/tools/viewer/package.json",
                    "packages/tools/vsm/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13833",
                "title": "NME Triplanar block: Add a switch to better project the textures in the case of a cube",
                "description": "See https://forum.babylonjs.com/t/orientation-of-textures-with-triplanar-node-material/40528\r\n\r\nThe switch also helps for more rounded shapes:\r\n\r\n![image](https://github.com/BabylonJS/Babylon.js/assets/4152247/d0a891ba-738e-4158-b592-16469eeeadb3)\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13832",
                "title": "make sure PG load correctly on safari",
                "description": "Safari changes the second hash to %23. Since we are not URI-decoding the hash string we need to be sure that no matter what, %23 is being replaced with # before processing the request.\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/loadManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13805",
                "title": "Fix Asset Container typings",
                "description": "Related: https://github.com/BabylonJS/Babylon.js/pull/13640#issuecomment-1532570652\r\n\r\nThere can be Node types in the cloned hierarchy, so we have to relax the typing, and check for the existence of properties like position, rotation, etc, before assigning them.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/dev/core/src/node.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "13829",
                "title": "Update havokPlugin.ts",
                "description": "fixes #13826",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": []
            },
            {
                "pr": "13807",
                "title": "Add option to material cloning to not clone the same texture multiple times",
                "description": "This is useful for GUI textures, for example",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Misc/decorators.ts",
                    "packages/dev/core/test/unit/Materials/babylon.material.test.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture",
                    "breaking change"
                ]
            },
            {
                "pr": "13809",
                "title": "Add max value clamping and preserve colors options to CubeMapToSphericalPolynomialTools",
                "description": "Is there any reason to have the 4096 limit for `ConvertCubeMapToSphericalPolynomial`? Can it be removed, adjusted higher or an additional option added to ignore it?\r\n\r\nWith the current 4096 max value limit in place it is impossible to use any proper \"out door\" unclipped HDRI images without having incorrect lighting.\r\n\r\nFor example an extremely bright outdoor HDRI here (https://polyhaven.com/a/rustig_koppie) has peak brightness of over 300.000 for pixels directly in the center of the sun.\r\n\r\nA Playground example shows how the current limit incorrectly produces extremely dim lighting: https://www.babylonjs-playground.com/#6CJSXS#2\r\n\r\nWith 4096 limit in place:\r\n![bright-hdr-sh-with-limit](https://user-images.githubusercontent.com/1881360/235967809-4f45bc7f-74d5-47c3-82ce-77c38bda668e.jpg)\r\n\r\nThis PR proposes removing the limit, in which case the calculated spherical harmonics produces correctly bright lighting even for bright outdoor HDRIs:\r\n![bright-hdr-sh-no-limit](https://user-images.githubusercontent.com/1881360/235968047-f42d609a-8712-4e99-b12a-8379b792f6a7.jpg)\r\n",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Misc/HighDynamicRange/cubemapToSphericalPolynomial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13818",
                "title": "PBR: Fix refraction texture in right handed system",
                "description": "See https://forum.babylonjs.com/t/pbr-refractions-are-incorrect-when-userighthandedsystem-true/40496/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/refractionBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13812",
                "title": "adds save and load single control",
                "description": "This change resolves #13132 by adding the option to save and load single control in gui editor ",
                "author": {
                    "name": "YifeiShi99",
                    "url": "https://github.com/YifeiShi99"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandDropdownComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "13817",
                "title": "Fix BABYLON.Tools.DumpData ignoring the `fileName` parameter.",
                "description": "Fixes an issue where `BABYLON.Tools.DumpData`'s `fileName` parameter is ignored when a `successCallback` is provided.\r\n\r\nhttps://forum.babylonjs.com/t/39955\r\nhttps://playground.babylonjs.com/#T13Z0M",
                "author": {
                    "name": "kv-bh",
                    "url": "https://github.com/kv-bh"
                },
                "files": [
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": []
            },
            {
                "pr": "13823",
                "title": "WebGPU: Fix MSAA texture release",
                "description": "See https://forum.babylonjs.com/t/an-error-occurs-when-webgpuengine-uses-ssao2/40586/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuHardwareTexture.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13816",
                "title": "WebGPU: Fix viewport reset too often",
                "description": "See https://forum.babylonjs.com/t/webgpu-rendertargettexture-take-the-last-cameras-active/40473",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13811",
                "title": "Add set/getGravityFactor to PhysicsBody",
                "description": "Related forum discussion: https://forum.babylonjs.com/t/havok-physics-behaves-unnatural-when-moving-a-box-with-a-constraint/40248/12\r\n\r\nPG examples with the functions:\r\n#P5XN43#18\r\n#PI5WQ1\r\n\r\nNice gif to be fancy:\r\n![havok-gravity-factor](https://user-images.githubusercontent.com/6002144/236016561-2cda43b4-7939-45aa-8527-8a51fc1c8f00.gif)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics",
                    "new feature"
                ]
            },
            {
                "pr": "13815",
                "title": "Reset raycast result when no hit",
                "description": "follow up https://forum.babylonjs.com/t/havok-plugin-raycast-doesnt-update-the-result-if-theres-no-hit/40500/2\r\nreset raycast result when no hit",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13814",
                "title": "remove unused interface parameters for aggregate",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.2.0": [
            {
                "pr": "13810",
                "title": "HDRCubeTexture: Fix texture being ready too soon",
                "description": "See https://forum.babylonjs.com/t/hdrcubetexture-reports-isready-before-it-has-loaded/40458",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13808",
                "title": "cylinder/capsule size computation fix",
                "description": "follow up https://forum.babylonjs.com/t/capsule-uncentered-physical-body/40321\r\nfixes #13799 \r\nfixes #13801\r\nbbox minimum was scaled by a factor of 2.\r\nfix the motortype conversion between wasm and ts",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts"
                ],
                "tags": [
                    "physics"
                ]
            },
            {
                "pr": "13798",
                "title": "GamepadManager: Fixed issue where providing scene object to constructor would prevent status updates",
                "description": "A user on the forum found an issue where the GamepadManager wouldn't update its gamepad statuses when `this._scene` was defined.  The fix was to remove these checks.  Thanks to user CiderPunk for finding this issue.\r\n\r\nForum Link: https://forum.babylonjs.com/t/gamepad-events-not-triggering/40362",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Gamepads/gamepadManager.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13802",
                "title": "OIT: Fix wrong prepass state when mesh visibility changes",
                "description": "See https://forum.babylonjs.com/t/shader-crash-with-oit/40332/29\r\n\r\nFollow up to #13781",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13803",
                "title": "Dump Tools: Use an offscreen canvas",
                "description": "See https://forum.babylonjs.com/t/createscreenshot-in-worker/40198/1.\r\n\r\nThis change will allow to use the screenshot tools in a worker thread.\r\n\r\nNote that `OffScreenCanvas` is supported by Safari only since 16.4 (https://caniuse.com/?search=offscreencanvas)...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/offscreenCanvas.d.ts",
                    "packages/dev/core/src/Misc/dumpTools.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13806",
                "title": "Fix GUI cloning",
                "description": "Related forum issue: https://forum.babylonjs.com/t/cloning-meshes-with-gui/40430",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI for Mesh cloning.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13804",
                "title": "allow ts playground in full and frame",
                "description": "The editor is resposible of parsing ts and converting it to js. I am adding a hidden instance of the editor that will load the code and send it to the PG.\n\nthere is a very small load time reduction (20-30ms), but typescript playground will now load correctly.\n\nAs part of playground improvements we will need to deal with this issue as well.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/playground/src/playground.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13783",
                "title": "Update havokPlugin.ts",
                "description": "Attempt to fix https://forum.babylonjs.com/t/havoc-thininstances-collisioncallback/40315\r\n+ Add new thinInstances to `havokPlugin._bodies` map when `body.updateBodyInstances()` is called, not only when initiated.\r\n+ Add removal of deleted thinInstances from `havokPlugin._bodies` map\r\n\r\nTest (&stress) case for latest commit. console logs the _bodies map at the end.\r\nhttps://playground.babylonjs.com/#LJX5R3\r\nhttps://playground.babylonjs.com/?snapshot=refs/pull/13783/merge#LJX5R3\r\nThe PG spawns 2500 thinInstances of a sphere to test performance and memory, previous commit caused memory issues.\r\ninitially 100 spheres then + 25 per frame up to 2500 total.\r\n",
                "author": {
                    "name": "aWeirdo",
                    "url": "https://github.com/aWeirdo"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13780",
                "title": "PickingInfo: Handle unindexed meshes in getNormal",
                "description": "See https://forum.babylonjs.com/t/the-points-where-the-annotation-is-picked-are-snapped-parallel-to-the-surface-of-the-object/40119/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/test/unit/Collisions/babylon.pickingInfo.test.ts"
                ],
                "tags": [
                    "new feature",
                    "collisions"
                ]
            },
            {
                "pr": "13781",
                "title": "OIT: Fix wrong prepass state when material transparency changes",
                "description": "See https://forum.babylonjs.com/t/shader-crash-with-oit/40332/15",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13671",
                "title": "Inspector: METADATA pop-up window feature",
                "description": "I have re-approached the code as per this discussion:\r\nhttps://forum.babylonjs.com/t/read-write-metadata-using-the-inspector/34208\r\n\r\nThus a first-attempt at the metadata editor. It's not perfect but in a good state.\r\n\r\nNotes:\r\n- the metadata property can be set to `null` and `undefined` just by typing the literal string\r\n- the metadata property can also be set as a string or JSON object\r\n- there is some basic validation but aim was focused on UX\r\n- there is a known glitch where quoted values `\"a string\"` gets considered as a JSON in validation (not really an issue)\r\n- simple prettifying but not full beautifier with colour - considered re-using `monaco-editor` however it looked over bloaty/unnecessary\r\n- there is a bit of duplicate css however wanted to avoid conflicts and not affect backwards compatibility\r\n- minimal impact on performance by using an observer\r\n- could probably improve the picking trigger/observer but OK for first-release\r\n\r\nNew METADATA tab:\r\n![meta-inspector](https://user-images.githubusercontent.com/34647206/227415803-a6da9fe4-f3ef-4ae3-8b44-56c070a846d0.png)\r\n\r\nNew METADATA pop-up window:\r\n![meta-window](https://user-images.githubusercontent.com/34647206/227416142-0d68c695-16c7-4446-987f-a25ba48755a9.png)\r\n\r\n![meta-window-error](https://user-images.githubusercontent.com/34647206/227416148-d6c34b2d-479a-4b90-985c-a2a52c37b425.png)\r\n\r\n![meta-window-undefined](https://user-images.githubusercontent.com/34647206/227416375-db4b3ad0-42d3-4d29-b7e0-2288d2d59491.png)\r\n\r\nsupersedes https://github.com/BabylonJS/Babylon.js/pull/13643\r\n\r\nCloses #13027 ",
                "author": {
                    "name": "j-te",
                    "url": "https://github.com/j-te"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGridTabComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationGroupPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/targetedAnimationPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/arcRotateCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/followCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/freeCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/emptyPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/layers/layerPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/directionalLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/hemisphericLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/pointLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/spotLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/materialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/multiMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/nodeMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMetallicRoughnessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrSpecularGlossinessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/bonePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/skeletonPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/transformNodePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/metadata/metadataPropertyGrid.scss",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/metadata/metadataPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/lensRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/postProcessPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/renderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssao2RenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssaoRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssrRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sounds/soundPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spritePropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/checkboxPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/controlPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/ellipsePropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/gridPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/imageBasedSliderPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/imagePropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/linePropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/radioButtonPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/rectanglePropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/scrollViewerPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/sliderPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/stackPanelPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/textBlockPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13773",
                "title": "Node Material Editor: Fix automatic creation of inputs for \"sourceY\" …",
                "description": "…and \"sourceZ\"\r\n\r\nFix #13761",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterialConnectionPointCustomObject.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13777",
                "title": "Fix for RTT rendering in an XR session",
                "description": "When rendered in an XR session, the camera's viewport was applied on the full size of the RTT). This made the RTT render on a quarter of the screen (instead of half of the screen, as expected in XR with two eyes).\nThis changes RTT rendering in Rigged cameras (which ATM is mainly WebXR). It is expected that tha parent's camera will be the full viewport to render both eyes (which is 100% viewport in case of XR).\n\nIt is a small breaking change, but is actually more a bug fix.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13778",
                "title": "Physics: Fix aggregate size calculation and allow passing box rotatio…",
                "description": "…n as an aggregate option. Also add a basic explanation of motion types on PhysicsBody constructor.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/physical-body-dont-rotate-with-its-mesh/40207",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            }
        ],
        "6.1.0": [
            {
                "pr": "13772",
                "title": "Fix typing to fit ts 4 and ts 5",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": []
            },
            {
                "pr": "13774",
                "title": "Animation: Fix animation.runtimeAnimations array not cleaned up on stop",
                "description": "Fixes #13762 \r\n\r\nThe code I added back was removed in https://github.com/BabylonJS/Babylon.js/commit/93d7ccc2f98435a455ece615f6e0a3561bcded9a but calling `runtimeAnimations[index].dispose();` is cleaning the `Animation._runtimeAnimations` array, which is different from the `Animatable._runtimeAnimations` array.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "13769",
                "title": "Fix for peer dependencies (Due to CI architecture)",
                "description": "Whoever wants to know what exactly happened, let me know :-)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/accessibility/package.json",
                    "packages/public/@babylonjs/gui-editor/package.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/inspector/package.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/node-editor/package.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/serializers/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13766",
                "title": "Add possibility to apply supersampling when generating HDRCubeTexture()",
                "description": "I decided a take a quick attempt at adding number of samples option to `HDRCubeTexture()` in order to allow generating more accurate lower resolution HDRCubeTextures.\r\n\r\nOriginal discussion about the issue here: https://forum.babylonjs.com/t/is-ibl-texture-tool-hdr-to-env-conversion-code-part-of-babylon-js/40031\r\n\r\nHere is a Playground example using the proposed samples argument with 4 samples to match 512 -> 128 downsample: https://www.babylonjs-playground.com/#NWNUIH#2\r\n\r\nThe result is EXACTLY same as the comparison .env file that is generated with https://www.babylonjs.com/tools/ibl/, but this time possible to create within Babylon.js without added custom code.\r\n\r\nLet me know if option like this makes sense? Performance should be exactly same than before unless additional samples are used.",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/hdrCubeTexture.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/hdr.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/panoramaToCubemap.ts"
                ],
                "tags": []
            },
            {
                "pr": "13768",
                "title": "Effect Layer: Set intensity of effect per mesh",
                "description": "See https://forum.babylonjs.com/t/neon-effect-using-an-imported-material-looks-good-from-up-close-but-not-far-away/40081/7",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Shaders/glowMapGeneration.fragment.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13727",
                "title": "Add NME MeshAttributeExistsBlock",
                "description": "This pull request combines feature requests of two forum threads from last year:\r\n\r\n- https://forum.babylonjs.com/t/node-pbr-material-renders-black-if-mesh-doesnt-have-normals/29011\r\n- https://forum.babylonjs.com/t/default-nodematerial-vertex-color-input-to-white-if-attribute-doesnt-exist-on-mesh/29461\r\n\r\nI recently refactored a project where I used custom blocks to work around those issues above, and ended up with a single `MeshAttributeFallbackBlock` that I think might be flexible enough to be added to Babylon.js itself.\r\n\r\nThe nodeblock itself is pretty simple. It allows connecting to an attribute input (or morph target block) and has another falback input to provide value if mesh doesn't have the said attribute.\r\n\r\nHere is a test NME url (only works with these PR changes in place): `/#W3ZANW` and a Playground test url: `/#5LCPMS`\r\n\r\nThe above example demonstrates three use cases where such node is useful / necessary:\r\n\r\n### Vertex color fallback\r\n\r\nThis allows using same NodeMaterial with meshes or mesh primitives that contain and don't contain vertex colors. Currently if vertex color is used, it defaults to black color when attribute is present and there is no way to distinguish between actually intented black color and missing attribute.\r\n\r\n![Vertex Color Fallback](https://static.miikah.fi/other/images/nme_vertex_color_fallback.png)\r\n\r\n### Normal fallback\r\n\r\nIt is possible to generate flat normal in fragment shader if attribute isn't present. This matches gltf spec where a flat normal is used for meshes that don't contain normals.\r\n\r\n![Normal Fallback](https://static.miikah.fi/other/images/nme_normal_fallback.png)\r\n\r\n### UV fallback\r\n\r\nAnd kind of as additional possibility that my original normal and vertex color specific nodes didn't allow, is generating UV fallback with a generated UV if attribute isn't present.\r\n\r\n![UV Fallback](https://static.miikah.fi/other/images/nme_generated_uv_fallback.png)",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/meshAttributeExistsBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/display/meshAttributeExistsDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToDisplayLedger.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13767",
                "title": "SSR: Fix ghosting when using large step values",
                "description": "See https://playground.babylonjs.com/#PIZ1GK#1126\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/screenSpaceRayTrace.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13753",
                "title": "PrePass renderer: Save memory by using a Red format for the depth texture",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts"
                ],
                "tags": [
                    "rendering engine",
                    "optimizations",
                    "new feature"
                ]
            },
            {
                "pr": "13764",
                "title": "add havok to download mode",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/zipContent/index.html"
                ],
                "tags": []
            },
            {
                "pr": "13760",
                "title": "readme version",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/public/@babylonjs/core/readme.md",
                    "readme-es6.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "6.0.0": [
            {
                "pr": "13759",
                "title": "small fix for aggregate",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13758",
                "title": "Small fix for webxr declaration (consistency)",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "13757",
                "title": "Export for UMD",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/index.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13755",
                "title": "Physics iteration15",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/Plugins/havokPlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/index.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13756",
                "title": "More Playground Changes",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/components/rendererComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13754",
                "title": "Prepare playground for 6.0.0",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/public/havok/HavokPhysics.wasm",
                    "packages/tools/babylonServer/public/havok/HavokPhysics_umd.js",
                    "packages/tools/babylonServer/public/havok/LICENSE",
                    "packages/tools/playground/public/debug.html",
                    "packages/tools/playground/public/frame.html",
                    "packages/tools/playground/public/full.html",
                    "packages/tools/playground/public/index.html",
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/sandbox/public/index.html"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13752",
                "title": "Physics iteration14",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13751",
                "title": "WebGPU: MultiRenderTarget extended support",
                "description": "It's the WebGPU update corresponding to #13435 for WebGL2.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            }
        ],
        "5.57.1": [
            {
                "pr": "13749",
                "title": "Physics Iteration 13",
                "description": "A big portion of this change has already been reviewed.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts",
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/Physics/physicsRaycastResult.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13750",
                "title": "ShadowGenerator: improve performance",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts"
                ],
                "tags": [
                    "enhancement",
                    "skip changelog"
                ]
            },
            {
                "pr": "13748",
                "title": "no premature result mutation for Vec2.rotateToRef",
                "description": "for next case:\r\n```\r\nconst vec = new Vector2(offsetX, offsetY);\r\nvec.rotateToRef(angle, vec);\r\n```",
                "author": {
                    "name": "nekochanoide",
                    "url": "https://github.com/nekochanoide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13747",
                "title": "Update typo in solidParticleSystem.ts",
                "description": null,
                "author": {
                    "name": "steambap",
                    "url": "https://github.com/steambap"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13743",
                "title": "Round values coming from grid width calculation to avoid gaps between…",
                "description": "… consecutive cells\r\n\r\nRelated forum issue: ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/grid.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Rounding cell widths on Grid.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13746",
                "title": "Fix GLTF export of ambient texture with texture transforms",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gltf2export-glbasync-missing-uv-scale-on-ambienttexture/39900",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "bug",
                    "glTF",
                    "texture"
                ]
            }
        ],
        "5.57.0": [
            {
                "pr": "13745",
                "title": "Compute shader: Fix wrong ubo bound to the shader in some cases",
                "description": "See https://forum.babylonjs.com/t/passing-a-primitive-variable-to-a-compute-shader-that-runs-multiple-times-per-frame/39904/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Compute/computeShader.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13742",
                "title": "Clip planes defines perf",
                "description": "Revert v5 factorization changes as they seem to be harmful to the V8 optimizer.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/clipPlaneMaterialHelper.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/outlineRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13744",
                "title": "Adding no-op setters to instancedMesh",
                "description": "See https://forum.babylonjs.com/t/typeerror-cannot-set-property-visibility-of-object-object-which-has-only-a-getter/39723/7?u=raananw",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13741",
                "title": "BoundingInfo: Fix encapsulateBoundingInfo method",
                "description": "See https://forum.babylonjs.com/t/bounding-info-encapsulation/39894/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Culling/boundingInfo.ts"
                ],
                "tags": [
                    "bug",
                    "math"
                ]
            }
        ],
        "5.56.0": [
            {
                "pr": "13740",
                "title": "Engine: Rollback changes because of perf problems",
                "description": "Revert changes from #12952 because of performance problems.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": [
                    "rendering engine"
                ]
            },
            {
                "pr": "13738",
                "title": "Fix Imports",
                "description": "Fix https://github.com/BabylonJS/Babylon.js/pull/13624#issuecomment-1506874467",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13737",
                "title": "HDRFiltering: Fix final cube texture not having the right type",
                "description": "[This PG](https://playground.babylonjs.com/#064AUB#71) generates some warnings:\r\n\r\n![image](https://user-images.githubusercontent.com/4152247/231767335-648c3450-d7b4-4dfa-8493-b8e67a49278a.png)\r\n\r\nand the spherical polynomials are not computed correctly because of the bug.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Filtering/hdrFiltering.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13739",
                "title": "CascadedShadowMaps: Allows setting min and max number of cascades",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts"
                ],
                "tags": [
                    "enhancement",
                    "shadows"
                ]
            },
            {
                "pr": "13734",
                "title": "Highlight layer: Fix wrong stencil state",
                "description": "See https://forum.babylonjs.com/t/stencil-buffer-set-wrong-in-highlightlayer-excluded-meshes-after-render/39839",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Layers/highlightLayer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13736",
                "title": "Post Process: Add a property to clear the buffer even when alpha blending is enabled",
                "description": "See https://forum.babylonjs.com/t/adding-a-background-image-that-is-not-affected-by-the-default-rendering-pipeline-post-processes/34494/5",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/postProcess.ts"
                ],
                "tags": [
                    "new feature",
                    "post-process"
                ]
            },
            {
                "pr": "13735",
                "title": "fix import path",
                "description": "https://forum.babylonjs.com/t/gltf-serializer-broken/39837",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFSerializer.ts"
                ],
                "tags": [
                    "bug",
                    "exporters"
                ]
            },
            {
                "pr": "13733",
                "title": "Sprite manager: Force the sampling mode in pixel perfect mode",
                "description": "See https://forum.babylonjs.com/t/sprite-pixel-art-artifact-issue/39123/13",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Sprites/spriteManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "sprite"
                ]
            }
        ],
        "5.55.0": [
            {
                "pr": "13732",
                "title": "Prevent previous element props to be selected",
                "description": "https://forum.babylonjs.com/t/inspector-broken-if-add-sprite-and-remove-it/39824/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13726",
                "title": "remove beta flag from GUI Editor",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13731",
                "title": "MeshUVSpaceRenderer: Remove static",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/meshUVSpaceRenderer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13715",
                "title": "Pass clipContent/clipChildren down to Grid's internal containers",
                "description": "Related forum issue: https://forum.babylonjs.com/t/clipped-text-while-creating-tree-view-using-grid/38890/8",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/grid.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13728",
                "title": "GPU particle system: Fix particles not rendered in water PG",
                "description": "See https://forum.babylonjs.com/t/gpuparticle-cannot-be-displayed-in-scene-with-watermaterial/39773/3\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "13729",
                "title": "glTF exporter: Fix warning message",
                "description": "Fixes #13723 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "bug",
                    "exporters"
                ]
            },
            {
                "pr": "13724",
                "title": "Round up ideal width/height calculations so no control is cut off",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-adapt-tochildren-using-rounded-values-adaptive-scaling/29333",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".vscode/launch.json",
                    "packages/dev/gui/src/2D/valueAndUnit.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Rounding values on controls inside StackPanel.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13725",
                "title": "Add option to keep context menu entries open, but close them by default.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/inspector-close-the-context-menu-after-click-by-item/39668",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/extensionsComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "13721",
                "title": "Inspector. Add custom items to context menus or override them",
                "description": "Example of new options, here we can add new menu items:\r\n```\r\nscene.debugLayer.show({\r\n    contextMenu: {\r\n        pipeline: [\r\n            {\r\n                label: \"Add new Custom pipeline\",\r\n                action: (e: any) => console.log(\">>> Custom action\", e),\r\n            },\r\n        ],\r\n        node: [\r\n            {\r\n                label: \"Add new Custom node\",\r\n                action: (e: any) => console.log(\">>> Custom action\", e),\r\n            },\r\n        ],\r\n        materials: [\r\n            {\r\n                label: \"Add new Custom material\",\r\n                action: (e: any) => console.log(\">>> Custom action\", e),\r\n            },\r\n        ],\r\n        particleSystems: [\r\n            {\r\n                label: \"Add new Custom particle system\",\r\n                action: (e: any) => console.log(\">>> Custom action\", e),\r\n            },\r\n        ],\r\n        spriteManagers: [\r\n            {\r\n                label: \"Add new Custom sprite manager\",\r\n                action: (e: any) => console.log(\">>> Custom action\", e),\r\n            },\r\n        ],\r\n    },\r\n});\r\n```\r\n\r\nOr even override default items by this way:\r\n```\r\nscene.debugLayer.show({\r\n    contextMenuOverride: [\"pipeline\", \"node\", \"materials\", \"particleSystems\", \"spriteManagers\"],\r\n    contextMenu: {\r\n```\r\n\r\nHere we pass the list of menus that should be overwriten by custom items.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemComponent.tsx",
                    "packages/dev/inspector/src/inspector.ts"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "13722",
                "title": "Update NOTICE.md",
                "description": null,
                "author": {
                    "name": "querielo",
                    "url": "https://github.com/querielo"
                },
                "files": [
                    "NOTICE.md"
                ],
                "tags": []
            },
            {
                "pr": "13720",
                "title": "Fix asset Container crash with predicate",
                "description": "https://forum.babylonjs.com/t/assetcontainer-crash-in-instantiatemodelstoscene-when-using-predicate/39699",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "13719",
                "title": "Inspector. Custom context menu for additional nodes",
                "description": "https://forum.babylonjs.com/t/inpsector-add-a-custom-context-menu-to-additional-nodes/39672/4?u=dok11",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemSpecializedComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13717",
                "title": "Morph targets: Workaround for Mali-G72 and morph target texture",
                "description": "See https://forum.babylonjs.com/t/morph-targets-on-samsung-s9-exynos-9810-is-broken/32701/52",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Morph/morphTargetManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13714",
                "title": "update inspector readme",
                "description": "Remove outdated instructions and add links to the documentation page.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/README.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13708",
                "title": "Add overrideRenderingFillMode property to Mesh",
                "description": "Supersedes https://github.com/BabylonJS/Babylon.js/pull/13688\r\n\r\nAs discussed in forum thread here: https://forum.babylonjs.com/t/add-mesh-overridematerialfillmode/39475/\r\n\r\ncc @MiikaH to review\r\n\r\nThe main difference is use the override only within the rendering scope as the flag is only used as a visual tool. It also fixes some of the scene override levels inconsistencies.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13716",
                "title": "Fluid renderer: Fix alpha not preserved",
                "description": "See https://forum.babylonjs.com/t/fluidrenderer-background-color-with-alpha/38831/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/fluidRenderingRender.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13713",
                "title": "docs: Fix a few typos",
                "description": "There are small typos in:\n- packages/dev/proceduralTextures/readme.md\n- what's new.md\n\nFixes:\n- Should read `namespace` rather than `namepsace`.\n- Should read `json file` rather than `sjonfile`.\n- Should read `cascaded` rather than `cascacaded`.\n\n\n\nSemi-automated pull request generated by\nhttps://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",
                "author": {
                    "name": "timgates42",
                    "url": "https://github.com/timgates42"
                },
                "files": [
                    "packages/dev/proceduralTextures/readme.md",
                    "what's new.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.54.0": [
            {
                "pr": "13707",
                "title": "Fix scene recorder",
                "description": "https://forum.babylonjs.com/t/inspector-delta-files-uncaught-typeerror-cannot-read-properties-of-undefined-reading-push/39640/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/sceneRecorder.ts"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13706",
                "title": "Make trailmesh diameter public",
                "description": "https://forum.babylonjs.com/t/how-do-i-access-and-change-the-thickness-of-trailmesh/39623/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/trailMesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            }
        ],
        "5.53.1": [
            {
                "pr": "13705",
                "title": "PBR: Fix crash when enabling/disabling anisotropy",
                "description": "See https://forum.babylonjs.com/t/inpsector-switching-anisotropic-does-not-have-an-effect-its-only-enables/39637",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13678",
                "title": "feat: support formats option for multirendertarget",
                "description": "Add support for setting formats option of multirendertarget",
                "author": {
                    "name": "newbeea",
                    "url": "https://github.com/newbeea"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts"
                ],
                "tags": []
            },
            {
                "pr": "13704",
                "title": "Reflection Probe: Fix Z inversion in right handed system",
                "description": "See https://forum.babylonjs.com/t/reflection-probe-for-refractions-behaving-like-reflections-when-scene-userighthandedsystem/39633/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Probes/reflectionProbe.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13702",
                "title": "Screenshot: Add finalWidth and finalHeight to the size object",
                "description": "See https://forum.babylonjs.com/t/create-screenshot-using-render-target-ignores-hardware-scaling-level/39626/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/interfaces/screenshotSize.ts",
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/Misc/textureTools.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13703",
                "title": "Animation: Fix infinite loop when mutating scene._activeAnimatables",
                "description": "See https://forum.babylonjs.com/t/endanimationobs-death-loop/39584\r\n\r\n`Scene._animate` is doing:\r\n```typesccript\r\nconst animatables = this._activeAnimatables;\r\n\r\nfor (let index = 0; index < animatables.length; index++) {\r\n    const animatable = animatables[index];\r\n\r\n    if (!animatable._animate(animationTime) && animatable.disposeOnEnd) {\r\n        index--; // Array was updated\r\n    }\r\n}\r\n```\r\nand `AnimationGroup.stop` was doing:\r\n```typescript\r\nthis._scene._activeAnimatables = this._scene._activeAnimatables.filter((anim) => anim._runtimeAnimations.length > 0);\r\n```\r\nIt was therefore possible for `Scene._activeAnimatables` to be modified (replaced by another array) while `Scene._animate` was looping over it (when `AnimationGroup.stop` is called in a `onAnimationEndObservable` event, for example).\r\n\r\nA possible fix would have been to do `for (let index = 0; index < this._activeAnimatables.length; index++) {`, but I think it's safer not to mutate the array, because mutating it was done 2 or 3 weeks ago, and maybe we could get other bugs because of that...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Animations/animationGroup.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "13701",
                "title": "Playground download: Make sure that the canvas area occupies 100% of the surface.",
                "description": "See https://forum.babylonjs.com/t/html-page-demo-is-broken/39280/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/playground/public/zipContent/index.html"
                ],
                "tags": [
                    "Playground"
                ]
            },
            {
                "pr": "13698",
                "title": "Properly dispose of default rendering pipeline in the postProcessRend…",
                "description": "…erPipelineManager.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/how-to-dispose-rendering-pipeline-added-via-inspector/39611",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipelineManager.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13697",
                "title": "NativeEngine: Override updateRenderTargetTextureSampleCount to prevent crashes",
                "description": "A bug was found where Babylon Native would crash when opening files with certain extensions like Transmission.  The issue was that functions were being called within the ThinEngine that required the presence of a WebGL2RenderingContext (which the NativeEngine has no context for).  The code in this PR serves as a workaround so that this object be will avoided.  This allows Babylon Native to open previously unopenable files.  It should be noted that these file will render accurately when IBL is active.  When IBL is not active, the transmission extension will not render properly.  This issue will be addressed in a later PR.\r\n\r\nBug: https://github.com/BabylonJS/BabylonNative/issues/1166",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "native"
                ]
            },
            {
                "pr": "13694",
                "title": "Add inspector option for DepthOfFieldBlurLevel",
                "description": "Also removes the seemingly unused interface `DepthOfFieldMergePostProcessOptions`",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/depthOfFieldMergePostProcess.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "13696",
                "title": "Fix bug with glTF accessor min/max code",
                "description": "See https://forum.babylonjs.com/t/incorrect-bounding-box-after-loading-a-model-quantized-by-gltf-transform/39561",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "13695",
                "title": "Inspector. Particle System. Fix broken links to the documentation",
                "description": null,
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "documentation"
                ]
            },
            {
                "pr": "13691",
                "title": "WebGPU: synchronize with Spec / multiple improvements and fixes",
                "description": "In this PR:\r\n* Synchronization with the latest specifications\r\n* Added labels to textures for debugging purposes. This helps a lot when debugging with WebGPU as all error messages in Canary refer to the faulty object(s) via their label, if any. \r\n* Changed vertex/fragment input/output handling to fix #13564. The user must now prefix all inputs/outputs with the correct object (`vertexInputs`/`vertexOutputs`/`fragmentInputs`/`fragmentOutputs`). This is a breaking change but it's the only way to make it work with WebGPU, and WebGPU isn't out yet so it doesn't matter much.\r\n* Updated caps based on actual limits retrieved from the device.\r\n* Uniformity analysis (UA) fixed. I did not disable uniformity analysis as a whole (`WebGPUTintWASM.DisableUniformityAnalysis = false`), let's see if we get any feedback from users because of the failure of uniformity analysis (all visual tests are successful).\r\n* there are still two visualization tests that fail (\"Shadows CSM and LODs\" and \"Multi shadow generators per light\") because of https://bugs.chromium.org/p/tint/issues/detail?id=1886\r\n* several fixes (wrong depth/stencil texture format in MultiRenderTarget in some cases, memory leaks, etc.)\r\n\r\nFixes #13633, #13564",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureCreationOptions.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingDepthTextureCopy.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingTextures.ts",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/depthOfFieldMerge.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingRender.fragment.fx",
                    "packages/dev/core/src/Shaders/motionBlur.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2Blur.fragment.fx",
                    "packages/dev/core/src/Shaders/ssao2.fragment.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/bakedVertexAnimation.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/bonesVertex.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/clipPlaneFragment.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/clipPlaneVertex.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/instancesVertex.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/morphTargetsVertex.fx",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm",
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx",
                    "packages/tools/testTools/src/visualizationUtils.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/node-material1.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-mirror-with-pp.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-mirror-without-pp.png",
                    "packages/tools/tests/test/visualization/config.json",
                    "packages/tools/tests/test/visualization/webgpu.json"
                ],
                "tags": [
                    "bug",
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "13435",
                "title": "MultiRenderTarget extended support",
                "description": "Minimally added support for MultiRenderTarget binding 2D, 2D Array, Cube Map, and (soon) 3D textures to different draw buffers.\r\n\r\nFrom the following [forum post](https://forum.babylonjs.com/t/multirendertarget-with-2d-array-textures/37185).\r\n\r\nAdditional considerations from the forum:\r\n* MRT w/ 3D textures\r\n* MRT w/ Cube map array textures (WebGPU)\r\n* Hardware maximum draw buffers (`gl.MAX_DRAW_BUFFERS`)",
                "author": {
                    "name": "Orikson",
                    "url": "https://github.com/Orikson"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/MultiRenderTarget with different texture types.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "13687",
                "title": "Make GLTFLoader index and vertex buffer load methods public",
                "description": "As discussed here: https://forum.babylonjs.com/t/could-gltfloader-loadindicesaccessorasync-be-exposed-as-public-method/39469\r\n\r\nChange to public but keep underscore and add @internal tag.",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13649",
                "title": "Fixes to Grid behaviors in GUI Editor",
                "description": "This fixes https://github.com/BabylonJS/ThePirateCove/issues/397, https://github.com/BabylonJS/ThePirateCove/issues/386, https://github.com/BabylonJS/ThePirateCove/issues/385, https://github.com/BabylonJS/ThePirateCove/issues/384, https://github.com/BabylonJS/ThePirateCove/issues/383\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/sharedUiComponents/src/imgs/gridColumnIconDark.svg",
                    "packages/dev/sharedUiComponents/src/imgs/gridColumnIconLight.svg",
                    "packages/dev/sharedUiComponents/src/imgs/gridRowIconDark.svg",
                    "packages/dev/sharedUiComponents/src/imgs/gridRowIconLight.svg",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandButtonComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/gridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/guiEditor/src/diagram/coordinateHelper.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            }
        ],
        "5.53.0": [
            {
                "pr": "13683",
                "title": "Fix stopAllAnimatables stop loop order.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/using-scene-stopallanimations-does-not-remove-all-animatables-from-animationgroup-and-stops-the-onanimationgroupendobservable-callback-from-being-called/39409\r\n\r\n`Animatable.stop` calls splice on the _activeAnimatables array, so we should call it in reverse order to ensure proper iteration.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "13686",
                "title": "Allow FilesInput to append to scene (instead of creating a new one)",
                "description": "At the moment filesinput use LoadAsync, which creates a new scene and disposes the old one.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/filesInput.ts"
                ],
                "tags": []
            },
            {
                "pr": "13685",
                "title": "Clear internal instance containers in Mesh when disposed",
                "description": "See https://forum.babylonjs.com/t/about-the-memory-leakage-problem-of-babylonjs/39436",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "13684",
                "title": "Scene optimizer: Don't merge meshes without positions",
                "description": "See https://forum.babylonjs.com/t/positions-are-required-error-from-merge-mesh-optimization-sceneoptimizer/39423",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/sceneOptimizer.ts"
                ],
                "tags": [
                    "bug",
                    "optimizations"
                ]
            },
            {
                "pr": "13682",
                "title": "Fix GUI Editor not saving Control observables",
                "description": "Fixes https://github.com/BabylonJS/ThePirateCove/issues/389",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13681",
                "title": "Material plugins: Add support for uniform array",
                "description": "See https://forum.babylonjs.com/t/how-to-define-a-float-array-uniform-in-materialplugin/39387",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13679",
                "title": "Frustum: Add IsPointInFrustum helper",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.frustum.ts"
                ],
                "tags": [
                    "math",
                    "new feature"
                ]
            },
            {
                "pr": "13680",
                "title": "Respect options.powerPreference without doNotHandleContextLost flag",
                "description": "Based on the discussion: https://forum.babylonjs.com/t/engine-creation-options-probably-small-bug/33522\r\n\r\nThe engine should respect user's value for `powerPreference` even without `doNotHandleContextLost` flag.",
                "author": {
                    "name": "afrokick",
                    "url": "https://github.com/afrokick"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13677",
                "title": "glTF exporter: Fix export with instances",
                "description": "See https://forum.babylonjs.com/t/glb-export-of-an-instanced-mesh-fails/39331/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "13676",
                "title": "Transmission helper: Fix opaque meshes being rendered two times",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_transmission.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "glTF"
                ]
            },
            {
                "pr": "13669",
                "title": "Fix word wrap ellipsis algorithm.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-text-wrapping/39299\r\n\r\nThe points where the last lines were rejoined to run the ellipsis calculation was missing the wordDivider.\r\n\r\nWith the fix:\r\n![image](https://user-images.githubusercontent.com/6002144/227340753-7a68832d-e995-4c35-822e-a3166d3dfa7d.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13650",
                "title": "Engine: Modified isPointerLock to update when called instead of during pointerlockchange event",
                "description": "A user in the forum found an issue where they were starting and stopping a pointerlock during a drag motion.  At the end of their movement, it was found that there was a strange rotation made in an unintended angle.  It was determined that `isPointerLock` wasn't being updated during the first move to occur after the lock was released.  The `pointerlockchange` event was being fired after the move was being handled so the camera input thought that a pointerlock was actinve and moved accordingly.  This PR will change the behavior of isPointerLock to check and update isPointerLock during a `pointermove` event when a pointerlock is active.\r\n\r\nForum Link: https://forum.babylonjs.com/t/camera-does-a-strange-rotation-on-cursor-lock/37904",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13673",
                "title": "PickingInfo getTextureCoordinates: Allow to choose the uv set",
                "description": "See https://forum.babylonjs.com/t/how-to-use-pickinginfo-method-to-get-the-texture-coordinates2-of-where-the-pick-occurred/39322",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Collisions/pickingInfo.ts"
                ],
                "tags": [
                    "new feature",
                    "collisions"
                ]
            },
            {
                "pr": "13670",
                "title": "Playground: Make more PGs work after download",
                "description": "See https://forum.babylonjs.com/t/html-page-demo-is-broken/39280/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/playground/public/zipContent/index.html"
                ],
                "tags": [
                    "enhancement",
                    "Playground"
                ]
            },
            {
                "pr": "13672",
                "title": "Physics Iteration 12",
                "description": "body/mesh clone and setter/getter",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13668",
                "title": "Display teleport ray in red color when intersecting with pickBlockerMeshes",
                "description": "Fixes #12280",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": []
            },
            {
                "pr": "13661",
                "title": "WebDeviceInputSystem: Add pointerId to WheelEvents when dispatching to InputManager",
                "description": "A user in the forum found an issue where pointerout was being executed twice for an ActionManager event.  Upon closer inspection, it was determined that the WheelEvent was being given an erroneous pointerId, causing two different meshes under pointers to be stored.  This PR will fix the logic and remove the offending check from the InputManager to make it more platform-agnostic.\r\n\r\nFor Safari, all mouse pointerIds will be set to 1, if undefined.  This is because 1 is the current pointerId recognized when a pointercapture is active.  The pointercapture test for Safari has been updated to properly check this.\r\n\r\nForum Link: https://forum.babylonjs.com/t/triggering-pointer-out-actions-when-camera-change-causes-pointer-to-exit-mesh/39061",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/tools/tests/test/interactions/safari.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13667",
                "title": "Add the TextWrapping.WordWrapEllipsis option to the TextBlock inspector",
                "description": null,
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/textBlockPropertyGridComponent.tsx"
                ],
                "tags": [
                    "inspector",
                    "gui"
                ]
            },
            {
                "pr": "13666",
                "title": "Use Matrix.IdentityReadonly instead of Matrix.Identity() for a couple of GUI math operations",
                "description": "The readonly Identity should be safe to use here, and it should be more efficient since it doesn't require allocating new Matrices.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/line.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13665",
                "title": "Playground: Fix engine displayed when using ?webgpu",
                "description": "Fixes #13660\n\nIssue was that the state is not updated on redraw. The state changes outside of the context of the component, but the component is not updated.\nSetting the call to load the data from the local storage on each render won't hurt performance (as it happend only once and when changing the engine, but not on every frame)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/components/commandDropdownComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13662",
                "title": "fix filtering texture output setup",
                "description": "https://forum.babylonjs.com/t/convert-jpgeg-or-hdr-to-env/39096/23",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Filtering/hdrFiltering.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13664",
                "title": "Inspector: Fix crash when changing edges color",
                "description": "See https://forum.babylonjs.com/t/inspector-edge-renderer-color-doesnt-work/39286",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            }
        ],
        "5.52.0": [
            {
                "pr": "13621",
                "title": "Improved SSAO2 when samples <16. Added more control over SSAO2 denoising filter.",
                "description": "Related to this thread in the forums:\r\nhttps://forum.babylonjs.com/t/ssao2-blur-shader-issues/38924/25\r\n\r\n## SSAO calculation fix\r\nFixes an error in SSAO2 calculations that caused massive amounts of incorrect occlusions on flat surfaces when samples were <16. This change is automatically applied with the new `epsilon` parameter defaulting to 0.02, demonstrated below with samples = 8 (fixed on the right). Setting the new parameter to 0.0 will revert back to the old behavior.\r\n\r\nSee #13652 for discussions and more screenshots.\r\n\r\n#### Terrain (#N96NXC#127)\r\n<img src=\"https://user-images.githubusercontent.com/984279/226774799-e9c31bac-3701-42e3-b7ac-787d005ca85b.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226774815-c77ae725-930e-4bb3-ac6e-3b1ea2669862.png\" width=50% height=50%>\r\n\r\n#### Cat (#T3K2SA#1)\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775071-8d1056be-688b-4026-b31c-807259ae2464.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775079-5fd547b9-0daf-43b6-a522-d04ebef5e986.png\" width=50% height=50%>\r\n\r\n#### Room (#LCUPCU#14)\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775164-10d8d6fa-8717-470f-9196-cf6c6312735d.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775175-3cc2ca52-6de8-4ec2-b085-e93f8c9b4ab0.png\" width=50% height=50%>\r\n\r\n## Denoising / Blur filter is more configurable\r\n\r\nThe \"expensiveBlur\" filter has been improved with new features and their associated parameters. \r\n\r\nThis change was done with care so that the new code keeps all the quirks and bugs in the current code, while adding options to mitigate them on a per scene/project basis. This was none of the existing deployments are affected since they might have already tried to compensate for them in other ways.\r\n\r\n### Summary of changes\r\n- Adds option to disable the blur filters for easier tuning of the SSAO2 parameters.\r\n- Made the \"expensive filter\" configurable (number of samples, shape of kernel, tolerance when rejecting samples) while keeping the defaults to be exactly like before the PR.\r\n- Exposed the new settings in the Inspector.\r\n- Cleaned up the code, reducing rather big code duplication.\r\n- Added and updated comments and documentation.\r\n- Added some optimizations based on feedback from @Popov72.\r\n\r\n\r\n\r\nThis is the first time I contribute to Babylon.js, so please let me know if I need to do or change something.",
                "author": {
                    "name": "fooware",
                    "url": "https://github.com/fooware"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/dev/core/src/Shaders/ssao2.fragment.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssao2RenderingPipelinePropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13659",
                "title": "Add shouldExportAnimation option on GLTF exporter to filter out animations",
                "description": "This add the possibility of the user choosing which animations will be in the exported GLTF.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/how-to-exclude-all-disabled-nodes-from-export/38780/9",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFSerializer.ts"
                ],
                "tags": [
                    "enhancement",
                    "exporters",
                    "glTF"
                ]
            },
            {
                "pr": "13652",
                "title": "Improved SSAO2 for sample count <16",
                "description": "### Summary\r\nThis fix massively improves SSAO2 when using low sample counts, like the default 8.\r\n\r\n### Background\r\nIt was discovered as part of PR #13621 but is submitted as a new PR since 13621 is now all about adding control over the SSAO2 denoiser without changing anything by default.\r\n\r\nThis small change however is so massively positive in all the tests I have done that it shouldn't be left out by default but be considered a bugfix.\r\n\r\n### How it works\r\nThe fix is rather simple. When calculating if sample X is occluded by sample Y in the SSAO2 calculations we considered everything with a depth difference of 0 (zero) to mean Y occludes X. However, this does not take any calculation or precision errors into account, which causes samples along a \"flat\" surface to occlude each other. Basically, the flat surface was occluding itself...\r\n\r\nThis fix adds an epsilon of sorts to the calculation. The value 0.02 was selected from testing and gave the best improvements on all tests I did and at the same time practically left the 16-sample case untouched.\r\n\r\nThat said, on hardware that doesn't have the same precision in the shaders. might benefit from a higher threshold, as would some scenes like the kitchen example. But going over 0.02 starts to affect samples >=16 which isn't great from a backward compatibility standpoint.\r\n\r\nI did not make this into a tunable setting, since I don't expect that a user of Babylon.js would understand how it affects the shader calculations. This should just work.\r\n\r\n### Test results\r\nIn the screenshots below, the \"8x\" part denotes how many SSAO2 samples were used, old version is on the left and the new one is on the right.\r\n\r\nNotice how the fixed version is pretty similar to the 16x reference when the sample count goes down. But the old version goes bananas with incorrect occlusions everywhere. Also note that the two versions at sample count 16 are basically identical.\r\n\r\nThe images were saved without the blur-stage of the SSAO2 filter active, to better show the SSAO2 calculations.\r\n\r\n#### Terrain (#N96NXC#127)\r\n#### 16x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226774831-d85b9050-f1a5-403f-b6e1-61c529454576.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226774837-3371b66a-8158-41f7-9493-54516b75bfe0.png\" width=50% height=50%>\r\n#### 12x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226774821-04e478ad-0486-4ce0-88f3-146cc7ac9f03.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226774826-deb8ec49-c573-4166-b68c-de79fd5faa61.png\" width=50% height=50%>\r\n#### 8x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226774799-e9c31bac-3701-42e3-b7ac-787d005ca85b.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226774815-c77ae725-930e-4bb3-ac6e-3b1ea2669862.png\" width=50% height=50%>\r\n##### 4x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226774770-2c835b0b-c975-49d6-a2f4-c72c59e6e2bf.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226774781-d8046245-0d5a-43e8-959a-b79192d560de.png\" width=50% height=50%>\r\n#### Cat (#T3K2SA#1)\r\n#### 16x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775114-4eab9d30-243c-445c-a9db-69cafb4517a0.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775121-f5b54df1-141d-4831-8009-1f3e2aee28bb.png\" width=50% height=50%>\r\n#### 12x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775087-7ef5ae1e-e915-4390-812f-aa0a41782c78.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775098-6b8ffcfb-b956-467b-b155-aa106f895384.png\" width=50% height=50%>\r\n#### 8x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775071-8d1056be-688b-4026-b31c-807259ae2464.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775079-5fd547b9-0daf-43b6-a522-d04ebef5e986.png\" width=50% height=50%>\r\n#### 4x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775032-6614547a-cad3-4077-90f2-17bcbfc34af0.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775055-e2c308b5-40e6-4979-928d-92f59f63b055.png\" width=50% height=50%>\r\n\r\n### Room (#LCUPCU#14)\r\n#### 16x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775203-f00eba22-9625-43e4-8a00-cd200fb2290d.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775212-ecc1247d-c586-49a6-a7f7-d1ddf87eebe5.png\" width=50% height=50%>\r\n#### 12x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775185-70b1209f-f7d3-48f6-af15-4c0c31c0a733.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775193-69fd1987-2ed4-41e2-9c62-6947fc1c2868.png\" width=50% height=50%>\r\n#### 8x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775164-10d8d6fa-8717-470f-9196-cf6c6312735d.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775175-3cc2ca52-6de8-4ec2-b085-e93f8c9b4ab0.png\" width=50% height=50%>\r\n#### 4x\r\n<img src=\"https://user-images.githubusercontent.com/984279/226775145-d4bee5a3-56e4-458d-b4f0-e8a5940f22ac.png\" width=50% height=50%><img src=\"https://user-images.githubusercontent.com/984279/226775153-79bf0883-3a7b-4c54-bc70-9863eae0eaff.png\" width=50% height=50%>\r\n",
                "author": {
                    "name": "fooware",
                    "url": "https://github.com/fooware"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ssao2.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "13654",
                "title": "collision observable",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13655",
                "title": "Observable: Fix wrong value returned by hasObservers",
                "description": "See https://forum.babylonjs.com/t/observable-hasobservers-can-incorrectly-report-false-even-though-there-are-observers/39232/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/observable.ts"
                ],
                "tags": [
                    "bug",
                    "design"
                ]
            },
            {
                "pr": "13657",
                "title": "Add iridescence configuration to PBR material cloning",
                "description": "Add serialize decorators to boundingBox properties on CubeTexture\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/problem-cloning-pbrmaterial-with-iridescence-subconfiguration/39240",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13640",
                "title": "Check if the node exists before adding to the list of nodes to sort.",
                "description": "This is to cover a case that @auberryberry found\r\n\r\nYou can check this version to see if it doesn't break your GLB 😄 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "13641",
                "title": "Improve how we delete massive group of animatables from animationgroup",
                "description": "https://forum.babylonjs.com/t/animationgroup-stop-very-slow-if-there-are-a-lot-of-animatables/39099",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "13645",
                "title": "Physics Update 11",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v2/physicsMaterial.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13648",
                "title": "Allow local dev using IPs",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/public/index.js",
                    "packages/tools/nodeEditor/public/index.js",
                    "packages/tools/playground/public/index.js",
                    "packages/tools/sandbox/public/index.js"
                ],
                "tags": []
            },
            {
                "pr": "13646",
                "title": "GPU particle system: Fix problem when using color gradients",
                "description": "See https://forum.babylonjs.com/t/gpu-particles-freezing-meshes-texture-problem/39187/1",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "13638",
                "title": "NME SceneDepthBlock: Add support for storeCameraSpaceZ property",
                "description": "See https://forum.babylonjs.com/t/force-field-node-material-using-unity-tutorial-help-needed-to-translate-it-to-babylon/39160\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialDecorator.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Rendering/depthRendererSceneComponent.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13642",
                "title": "Fix env texture creation from gamma space",
                "description": "https://forum.babylonjs.com/t/convert-jpgeg-or-hdr-to-env/39096",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/environmentTextureTools.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13636",
                "title": "Sprites: Add pixel perfect mode",
                "description": "See https://forum.babylonjs.com/t/sprite-pixel-art-artifact-issue/39123/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/sprites.fragment.fx",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/core/src/Sprites/spriteRenderer.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Sprites Pixel Perfect.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature",
                    "sprite"
                ]
            },
            {
                "pr": "13639",
                "title": "Clear an extra 1-pixel border around the virtual puck",
                "description": "This avoids a clear issue with the puck when it is moving. See: https://forum.babylonjs.com/t/virtual-joystick-resize-issue/39196",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/virtualJoystick.ts"
                ],
                "tags": []
            },
            {
                "pr": "13637",
                "title": "Button3D: Allow setting the dimensions at creation time",
                "description": "See https://forum.babylonjs.com/t/holographicbutton-button3d-sizes/39134/3\r\n\r\nThe dimensions can be set at creation time only because it has an impact on the creation of the mesh. I would have to recreate the mesh if we allowed the dimensions to be changed at any time, but `_createNode` (which creates the mesh) is called by `Control3D`, and the result of that call is stored in a private variable. If the user wants to change the dimensions afterwards, he will have to recreate the button.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/button3D.ts",
                    "packages/dev/gui/src/3D/controls/contentDisplay3D.ts"
                ],
                "tags": [
                    "gui",
                    "new feature"
                ]
            },
            {
                "pr": "13634",
                "title": "Fix a condition in _moveToProjectedPosition causing bugs with linked TextBlocks",
                "description": "Related forum issue: https://forum.babylonjs.com/t/glitches-with-textblocks-not-wrapped-in-container/39092",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            }
        ],
        "5.51.0": [
            {
                "pr": "13631",
                "title": "SSR2: more improvements",
                "description": "Add new features and fix some bugs.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/screenSpaceRayTrace.fx",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2Blur.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2BlurCombiner.fragment.fx",
                    "packages/dev/inspector/src/components/actionTabs/lines/textureLinkLineComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGridTabComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssrRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/Screen Space Reflections 2.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/ssr.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13632",
                "title": "Bump webpack from 5.75.0 to 5.76.0",
                "description": "Bumps [webpack](https://github.com/webpack/webpack) from 5.75.0 to 5.76.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/webpack/releases\">webpack's releases</a>.</em></p>\n<blockquote>\n<h2>v5.76.0</h2>\n<h2>Bugfixes</h2>\n<ul>\n<li>Avoid cross-realm object access by <a href=\"https://github.com/Jack-Works\"><code>@​Jack-Works</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16500\">webpack/webpack#16500</a></li>\n<li>Improve hash performance via conditional initialization by <a href=\"https://github.com/lvivski\"><code>@​lvivski</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16491\">webpack/webpack#16491</a></li>\n<li>Serialize <code>generatedCode</code> info to fix bug in asset module cache restoration by <a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16703\">webpack/webpack#16703</a></li>\n<li>Improve performance of <code>hashRegExp</code> lookup by <a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16759\">webpack/webpack#16759</a></li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>add <code>target</code> to <code>LoaderContext</code> type by <a href=\"https://github.com/askoufis\"><code>@​askoufis</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16781\">webpack/webpack#16781</a></li>\n</ul>\n<h2>Security</h2>\n<ul>\n<li><a href=\"https://github.com/advisories/GHSA-3rfm-jhwj-7488\">CVE-2022-37603</a> fixed by <a href=\"https://github.com/akhilgkrishnan\"><code>@​akhilgkrishnan</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16446\">webpack/webpack#16446</a></li>\n</ul>\n<h2>Repo Changes</h2>\n<ul>\n<li>Fix HTML5 logo in README by <a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16614\">webpack/webpack#16614</a></li>\n<li>Replace TypeScript logo in README by <a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16613\">webpack/webpack#16613</a></li>\n<li>Update actions/cache dependencies by <a href=\"https://github.com/piwysocki\"><code>@​piwysocki</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16493\">webpack/webpack#16493</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Jack-Works\"><code>@​Jack-Works</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16500\">webpack/webpack#16500</a></li>\n<li><a href=\"https://github.com/lvivski\"><code>@​lvivski</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16491\">webpack/webpack#16491</a></li>\n<li><a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16614\">webpack/webpack#16614</a></li>\n<li><a href=\"https://github.com/akhilgkrishnan\"><code>@​akhilgkrishnan</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16446\">webpack/webpack#16446</a></li>\n<li><a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16703\">webpack/webpack#16703</a></li>\n<li><a href=\"https://github.com/piwysocki\"><code>@​piwysocki</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16493\">webpack/webpack#16493</a></li>\n<li><a href=\"https://github.com/askoufis\"><code>@​askoufis</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16781\">webpack/webpack#16781</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\">https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/webpack/commit/97b1718720c33f1b17302a74c5284b01e02ec001\"><code>97b1718</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16781\">#16781</a> from askoufis/loader-context-target-type</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/b84efe6224b276bf72e4c5e2f4e76acddfaeef07\"><code>b84efe6</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16759\">#16759</a> from ryanwilsonperkin/real-content-hash-regex-perf</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/c98e9e001441b165c7ed4845700839730b505833\"><code>c98e9e0</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16493\">#16493</a> from piwysocki/patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/5f34acfbc074da6cc09f48944d7f2b4273ffb3f8\"><code>5f34acf</code></a> feat: Add <code>target</code> to <code>LoaderContext</code> type</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/b7fc4d876deb958d7ee81ecc00a312e39a354a44\"><code>b7fc4d8</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16703\">#16703</a> from ryanwilsonperkin/ryanwilsonperkin/fix-16160</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/63ea82da4d4e4242b6a6285fc937f0684f264fe8\"><code>63ea82d</code></a> Merge branch 'webpack:main' into patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/4ba225225b1348c8776ca5b5fe53468519413bc0\"><code>4ba2252</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16446\">#16446</a> from akhilgkrishnan/patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/1acd6350be3d74d4ac70b64cbbc60f27724b618b\"><code>1acd635</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16613\">#16613</a> from jakebailey/ts-logo</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/302eb37fe19ed7ca60eaf895aca4f9da9dfd7931\"><code>302eb37</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16614\">#16614</a> from jakebailey/html5-logo</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/cfdb1dfe59b33bf7441b8a8e4fc58d75e4f54cee\"><code>cfdb1df</code></a> Improve performance of hashRegExp lookup</li>\n<li>Additional commits viewable in <a href=\"https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~evilebottnawi\">evilebottnawi</a>, a new releaser for webpack since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=webpack&package-manager=npm_and_yarn&previous-version=5.75.0&new-version=5.76.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "13627",
                "title": "adt.useInvalidateRectOptimization using scale incorrectly when toggling visibility and redrawing invalidated parts of canvas",
                "description": "Fixes #13622\nCurrent measure already has the right measure. when applying the transform again it applies scale twice.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": []
            },
            {
                "pr": "13625",
                "title": "Fix pointer out event on 3D GUI in XR (mobile ar)",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/3D/gui3DManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13626",
                "title": "On SceneRecorder, use the same parsing method as the decorators to en…",
                "description": "…sure that it accounts for properties serialized with different names.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/scenerecorder-not-applying-every-change/19120/9",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/decorators.ts",
                    "packages/dev/core/src/Misc/sceneRecorder.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Scene Recorder Apply Delta.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "13628",
                "title": "Adds: keysRotateUp/keysRotateDown (Free Camera)",
                "description": "Possibility to rotate Free Camera up and down using the keyboard. \r\n\r\nhttps://forum.babylonjs.com/t/free-camera-rotation-keys-cameras-feature-reques/38891",
                "author": {
                    "name": "Nawarius",
                    "url": "https://github.com/Nawarius"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts"
                ],
                "tags": [
                    "enhancement",
                    "inputs"
                ]
            },
            {
                "pr": "13629",
                "title": "Disable Flaky ExclusiveDoubleClickMode test",
                "description": "The \"Doesn't fire onPointerOberservable for POINTERTAP when ExclusiveDoubleClickMode is enabled\" is acting flaky.  Since the test coverage for this is unrelated to most scenarios, this test will temporarily be disabled until it can be fixed so that other PRs aren't blocked.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13630",
                "title": "Dragging a port and dropping on the same port throws a console error …",
                "description": "…on the NME",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13624",
                "title": "Import fix for UMD modules typing",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": []
            },
            {
                "pr": "13623",
                "title": "Stl Loader Less Restrictive",
                "description": "https://forum.babylonjs.com/t/error-with-loading-only-certain-stl-meshes/38984",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/STL/stlFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "13620",
                "title": "KTX container: Improve error handling when texture format not supported",
                "description": "Fix https://github.com/BabylonJS/Babylon.js/issues/13619",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/khronosTextureContainer.ts"
                ],
                "tags": [
                    "new feature",
                    "texture"
                ]
            },
            {
                "pr": "13617",
                "title": "SSAO2: Fix expensive blur that could not be disabled",
                "description": "See https://forum.babylonjs.com/t/ssao2-blur-shader-issues/38924/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13618",
                "title": "Fixing an issue with follow camera and physics",
                "description": "In certain cases the absolute position is re-set, but the world matrix is cached, so it doesn't update when calling computeWorldMatrix.\nThis force-updates the absolutePosition vector\n\nThis solves this PG - https://playground.babylonjs.com/#0V7KM3#10 . Pressing \"w\" will present the issue",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/targetCamera.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "13582",
                "title": "InputManager: Modified Logic for ExclusiveDoubleClickMode For Click/DoubleClick Mutual Exclusivity",
                "description": "In a previous PR, there was a fix done to the logic for handling the ExclusiveDoubleClickMode flag to omit single clicks when this flag was active.  This fix was done in error based off of a misinterpretation of the original comment for the flag.  This PR fixes the logic and further clarifies the full behavior when this flag is active.  Test has also been updated to properly test this.\r\n\r\nPrevious PR: https://github.com/BabylonJS/Babylon.js/pull/13577",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13616",
                "title": "Leak Fix",
                "description": "https://forum.babylonjs.com/t/assetcontainer-memory-leak/38843/5",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/mesh.vertexData.ts",
                    "packages/dev/core/src/Morph/morphTargetManager.ts",
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "memory leak"
                ]
            }
        ],
        "5.50.1": [
            {
                "pr": "13615",
                "title": "Fix nullengine",
                "description": "Refer to https://github.com/BabylonJS/Babylon.js/pull/12693#issuecomment-1462684174",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13613",
                "title": "Only set last notified value if the feature is on",
                "description": "prevents petoential memory leaks",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/observable.ts"
                ],
                "tags": []
            },
            {
                "pr": "13614",
                "title": "fix declaration",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/native/nativeXRFrame.ts"
                ],
                "tags": []
            },
            {
                "pr": "13612",
                "title": "Set back the checkReadyOnlyOnce when reverting performance mode",
                "description": "The idea behind this PR is to reset the material state when going back to backward compatibility mode.\nAt the moment, setting the performance mode to advanced and gong back to backwards will keep the material frozen. The observable was added to make sure only materials that were set due to the performance change mode will revert back to their older state.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13610",
                "title": "Fix horizontal StackPanel width calculation when a child has forceRes…",
                "description": "…izeWidth true and fix text block line width calculation rounding.\r\n\r\nThis deals with two cases:\r\n1. Removes the warning appearing in https://playground.babylonjs.com/#XCPP9Y#17811 when a text block with resizeToFit and forceResizeWidth is inside an horizontal Stack Panel\r\n2. Fixes the layout cycle error and ellipsis wrapping in the example where a text block is sized down and sized up inside an horizontal Stack Panel: https://playground.babylonjs.com/#XCPP9Y#17810",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/stackPanel.ts",
                    "packages/dev/gui/src/2D/controls/textBlock.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Horizontal Stack Panel and Text Block with resizeToFit and forceResizeWidth.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Text Block with resizeToFit and forceResizeWidth.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13611",
                "title": "PBR material in Inspector: Fix debug split and factor",
                "description": "See https://forum.babylonjs.com/t/babylon-js-sandbox-debug-split-position/38864",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            }
        ],
        "5.50.0": [
            {
                "pr": "13600",
                "title": "NME: Add missing extra indice and weight matrices blocks",
                "description": "See https://forum.babylonjs.com/t/morph-target-and-bones-with-animation-issue-using-nme/38765\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/main.scss"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13609",
                "title": "update recast.js with lower memory usage",
                "description": "Follow up https://forum.babylonjs.com/t/memory-leak-of-crowd-navigation/38452/15\r\nUpdate recast.js to the latest (from NPM 1.6.2) and fix huge memory consumption.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/tools/babylonServer/public/recast.js"
                ],
                "tags": [
                    "bug",
                    "memory leak",
                    "navigation"
                ]
            },
            {
                "pr": "13608",
                "title": "Mesh: Fix crash with instanced rendering",
                "description": "See https://forum.babylonjs.com/t/changing-visibility-for-individual-instances/38820\r\n\r\nThis PG is crashing: https://playground.babylonjs.com/#WGZLGJ#7983\r\n\r\nIt is creating an instance of the boombox with a color instance buffer.\r\n\r\nIt is crashing because:\r\n* the instance is considered as a regular mesh (`_internalAbstractMeshDataInfo._actAsRegularMesh = true`) because the sign of its determinant is different from the sign of the determinant of its source mesh\r\n* we are calling `this._geometry._bind(effect, indexToBind, this._userInstancedBuffersStorage.vertexBuffers, this._userInstancedBuffersStorage.vertexArrayObjects)` in `Mesh._bind`, but `this._userInstancedBuffersStorage.vertexBuffers` only contains the `color` buffer and not the `world0/.../world3` buffers because the mesh is managed as an instance in this case\r\n\r\nThe PG would work if we don't create the color instance buffer, because in that case we take the `this._geometry._bind(effect, indexToBind)` branch.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13598",
                "title": "NME Texture block: Add support for 2DArrayTexture",
                "description": "See https://forum.babylonjs.com/t/how-can-i-load-rawtexture2darray-in-nme/38809\r\n\r\nThis PR adds a layer **input** to the `Texture` block:\r\n\r\n![image](https://user-images.githubusercontent.com/4152247/223408971-e80368b9-9aeb-424f-a3a7-37890bc1b3bb.png)\r\n\r\nThe input is not used if the texture is not a **2DArrayTexture**. If it is, the layer value is read from the **layer** input if provided, else a default value of 0 is used.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            }
        ],
        "5.49.2": [
            {
                "pr": "13606",
                "title": "Fix weird linting issues that slipped past CI",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.decalMapConfiguration.ts",
                    "packages/dev/core/src/Meshes/meshUVSpaceRenderer.ts",
                    "packages/dev/core/src/XR/features/WebXRDepthSensing.ts"
                ],
                "tags": []
            },
            {
                "pr": "13587",
                "title": "Asynchronous shader compilation in Babylon Native",
                "description": "This code supports interfacing with a feature I wrote for Babylon Native allowing asynchronous shader compilation. It's intended to be reverse-compatible with Babylon Native as of commit [08cec4cacf4d187eb839b6318a7414860f8fde77](https://github.com/BabylonJS/BabylonNative/commit/08cec4cacf4d187eb839b6318a7414860f8fde77) on master, but that version of Babylon Native doesn't have the asynchronous shader compilation yet; I will make another PR into Babylon Native with the necessary C++ code to support asynchronous shader compilation, and the shader compilation will be asynchronous only when both updates are used together.\r\n\r\nHere's the issue on the Babylon Native side for this feature:\r\nhttps://github.com/BabylonJS/BabylonNative/issues/402\r\n\r\nThe PR for the Babylon Native side has now been opened:\r\nhttps://github.com/BabylonJS/BabylonNative/pull/1209",
                "author": {
                    "name": "glangstonb",
                    "url": "https://github.com/glangstonb"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/Native/nativePipelineContext.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            }
        ],
        "5.49.1": [
            {
                "pr": "13604",
                "title": "Don't export bones of nodes that are not exported.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/how-to-exclude-all-disabled-nodes-from-export/38780/8\r\n \r\nIt can be tested with the playground: https://playground.babylonjs.com/#8IMNBM#724, get the generated GLB and open it in the Sandbox. Currently, it will show validation errors. With the PR, these errors are removed.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "13601",
                "title": "add debug view on inspector and add method to sync physics body with …",
                "description": "…bone",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/debugTabComponent.tsx"
                ],
                "tags": [
                    "physics",
                    "skip changelog"
                ]
            },
            {
                "pr": "13603",
                "title": "spriteManagers array is optional",
                "description": "The `scene.spriteManagers` array is only initialized if a psrite manager is being constructor (using the dedicated scene component). This causes an exception when changing the `maintainStateBetweenFrames` flag in the rendering manager to true and then false.\n\nIn many places in the framework there is already a check to see if it is initialized or not - this PR forces the typings to be correct and adds checks to see if the sprite manager array exists.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingManager.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/core/src/Sprites/spriteSceneComponent.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13602",
                "title": "Center/Extent fix for aggregates",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics",
                    "skip changelog"
                ]
            },
            {
                "pr": "13596",
                "title": "correct rotation application in RHS",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "13599",
                "title": "Inspector: Add missing support for inspectableCustomProperties",
                "description": "See https://forum.babylonjs.com/t/light-scan-postprocess/38816/5\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonPostProcessPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonRenderingPipelinePropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13588",
                "title": "RTT: Use same logic for particle systems than in the main path",
                "description": "See https://forum.babylonjs.com/t/rendertargettexture-problems-rendering-a-scene-to-a-texture/25908/10\r\n\r\nIn the past, we have had several problems with the rendering of particle systems in RTT (see https://forum.babylonjs.com/t/rain-effect-causes-screenshots-to-fail/18003/4 for eg).\r\n\r\nThe code in the scene to dispatch a particle system is:\r\n```typescript\r\nif (!particleSystem.isStarted() || !particleSystem.emitter) {\r\n    continue;\r\n}\r\n\r\nconst emitter = <any>particleSystem.emitter;\r\nif (!emitter.position || emitter.isEnabled()) {\r\n    this._activeParticleSystems.push(particleSystem);\r\n    particleSystem.animate();\r\n    this._renderingManager.dispatchParticles(particleSystem);\r\n}\r\n```\r\nwhereas in `RenderTargetTexture` it is:\r\n```typescript\r\nconst emitter: any = particleSystem.emitter;\r\nif (!particleSystem.isStarted() || !emitter || !emitter.position || !emitter.isEnabled()) {\r\n    continue;\r\n}\r\n\r\nif (currentRenderList.indexOf(emitter) >= 0) {\r\n    this._renderingManager.dispatchParticles(particleSystem);\r\n}\r\n```\r\nI don't understand why the checks/conditions are not the same, so this PR is to align the code in RTT with the code in the scene:\r\n```typescript\r\nif (!particleSystem.isStarted() || !emitter || emitter.position && !emitter.isEnabled()) {\r\n    continue;\r\n}\r\n\r\nthis._renderingManager.dispatchParticles(particleSystem);\r\n```\r\nIt's a breaking change, in a w ay, but I think it's more of a bug fix than anything else.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13589",
                "title": "Particle systems: Fix crash when setting updateInAnimate to true",
                "description": "https://forum.babylonjs.com/t/rendertargettexture-problems-rendering-a-scene-to-a-texture/25908/10",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/ShadersWGSL/gpuUpdateParticles.compute.fx"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "13592",
                "title": "SSR2: Fix local cubemap support",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13593",
                "title": "Geometry Buffer Renderer: Fix specular color not in linear space",
                "description": "That was forgotten as part of #13336.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/geometry.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13594",
                "title": "WebGPU: Fix crashes after latest spec changes",
                "description": "See https://forum.babylonjs.com/t/webgpu-playground-examples-broken/38766",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13586",
                "title": "Add Left/RightHandedBackwardReadOnly vectors",
                "description": "Adds Left and Right handed backwards readonly vectors. These are simply the reverse of what `Left/RightHandedForwardReadOnly` are, but they allow for expressing the intent of something being forward/backwards vs something being right/left handed. ",
                "author": {
                    "name": "kv-ep",
                    "url": "https://github.com/kv-ep"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13584",
                "title": "Clean up and improve logic for instantiating nodes in AssetContainer.…",
                "description": "…instantiateModelsToScene\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/instantiatemodelstoscene-doesnt-instantiate-whatever-argument-is-passed/38681",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "13585",
                "title": "Decal maps: Don't throw an error if the decal map plugin can't be instantiated",
                "description": "See https://forum.babylonjs.com/t/sandbox-inspector-not-opening-for-textures/38711/5\r\n\r\nFix #13562 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.decalMap.ts",
                    "packages/dev/core/src/Materials/standardMaterial.decalMap.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13159",
                "title": "Implementation of WebXR Depth Sensing Feature",
                "description": "Add a WebXR Feature of [Depth Sensing Module](https://www.w3.org/TR/webxr-depth-sensing-1/).\r\n\r\nRelated issue is #11876 \r\n\r\nRelated forum page is [here](https://forum.babylonjs.com/t/webar-demo-of-creating-depth-image-of-real-world-using-depth-sensing/34745).",
                "author": {
                    "name": "drumath2237",
                    "url": "https://github.com/drumath2237"
                },
                "files": [
                    ".build/changelog.json",
                    ".build/config.json",
                    ".editorconfig",
                    ".eslintignore",
                    ".eslintrc",
                    ".gitattributes",
                    ".github/ISSUE_TEMPLATE.md",
                    ".github/ISSUE_TEMPLATE/bug_report.md",
                    ".github/ISSUE_TEMPLATE/feature_request.md",
                    ".gitignore",
                    ".hintrc",
                    ".prettierignore",
                    ".prettierrc",
                    ".vscode/extensions.json",
                    ".vscode/launch.json",
                    ".vscode/settings.json",
                    ".vscode/tasks.json",
                    "Animations/babylon.animatable.js",
                    "Animations/babylon.animation.js",
                    "CHANGELOG.md",
                    "CNAME",
                    "CNAME.txt",
                    "CODE_OF_CONDUCT.md",
                    "Cameras/babylon.arcRotateCamera.js",
                    "Cameras/babylon.camera.js",
                    "Cameras/babylon.freeCamera.js",
                    "Cameras/babylon.touchCamera.js",
                    "Collisions/babylon.collider.js",
                    "Collisions/babylon.collisionPlane.js",
                    "Culling/babylon.boundingBox.js",
                    "Culling/babylon.boundingInfo.js",
                    "Culling/babylon.boundingSphere.js",
                    "Layer/babylon.layer.js",
                    "Lights/babylon.directionalLight.js",
                    "Lights/babylon.light.js",
                    "Lights/babylon.pointLight.js",
                    "Materials/babylon.effect.js",
                    "Materials/babylon.material.js",
                    "Materials/babylon.multiMaterial.js",
                    "Materials/babylon.standardMaterial.js",
                    "Materials/textures/babylon.baseTexture.js",
                    "Materials/textures/babylon.cubeTexture.js",
                    "Materials/textures/babylon.dynamicTexture.js",
                    "Materials/textures/babylon.mirrorTexture.js",
                    "Materials/textures/babylon.renderTargetTexture.js",
                    "Materials/textures/babylon.texture.js",
                    "Mesh/babylon.mesh.js",
                    "Mesh/babylon.subMesh.js",
                    "NOTICE.md",
                    "Particles/babylon.particle.js",
                    "Particles/babylon.particleSystem.js",
                    "Shaders/default.fragment.fx",
                    "Shaders/default.vertex.fx",
                    "Shaders/iedefault.fragment.fx",
                    "Shaders/iedefault.vertex.fx",
                    "Shaders/layer.fragment.fx",
                    "Shaders/layer.vertex.fx",
                    "Shaders/particles.fragment.fx",
                    "Shaders/particles.vertex.fx",
                    "Shaders/sprites.fragment.fx",
                    "Shaders/sprites.vertex.fx",
                    "Sprites/babylon.sprite.js",
                    "Sprites/babylon.spriteManager.js",
                    "Tools/babylon.math.js",
                    "Tools/babylon.sceneLoader.js",
                    "Tools/babylon.tools.dds.js",
                    "Tools/babylon.tools.js",
                    "babylon.engine.js",
                    "babylon.scene.js",
                    "buildSystem.md",
                    "contributing.md",
                    "debug.log",
                    "jest-puppeteer.config.js",
                    "jest.config.ts",
                    "jest.visualization.setup.afterEnv.ts",
                    "lerna.json",
                    "license.md",
                    "nx.json",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/package.json",
                    "packages/dev/buildTools/src/addJSToCompiledFiles.ts",
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/buildTools/src/copyAssets.ts",
                    "packages/dev/buildTools/src/declarationsEs6.ts",
                    "packages/dev/buildTools/src/devWatcher.ts",
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/index.ts",
                    "packages/dev/buildTools/src/ltsTransformer.ts",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/prepareEs6Build.ts",
                    "packages/dev/buildTools/src/prepareSnapshot.ts",
                    "packages/dev/buildTools/src/updateEngineVersion.ts",
                    "packages/dev/buildTools/src/utils.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/buildTools/tsconfig.build.json",
                    "packages/dev/buildTools/tsconfig.json",
                    "packages/dev/core/package.json",
                    "packages/dev/core/readme.md"
                ],
                "tags": []
            },
            {
                "pr": "13563",
                "title": "Implementation of WebXR Depth Sensing Feature",
                "description": "Re-open PR of #13159 \r\nSorry for not having reopend this for over two months.\r\nI want some reviews and disscussions for my API specification.\r\n\r\n=============\r\n\r\nAdd a WebXR Feature of [Depth Sensing Module](https://www.w3.org/TR/webxr-depth-sensing-1/).\r\n\r\nRelated issue is https://github.com/BabylonJS/Babylon.js/issues/11876\r\n\r\nRelated forum page is [here](https://forum.babylonjs.com/t/webar-demo-of-creating-depth-image-of-real-world-using-depth-sensing/34745).",
                "author": {
                    "name": "drumath2237",
                    "url": "https://github.com/drumath2237"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRDepthSensing.ts",
                    "packages/dev/core/src/XR/features/index.ts",
                    "packages/dev/core/src/XR/native/nativeXRFrame.ts",
                    "packages/dev/core/src/XR/webXRFeaturesManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13580",
                "title": "Fix connected controls being unset when opening the editor",
                "description": "Example PG: http://playground.babylon.com/#XCPP9Y#20\r\nIf the editor is opened in this PG, the line is disconnected from the rectangle. This PR adds this connection back.\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13562",
                "title": "Decals: Add Decal Map support",
                "description": "There are two sides to the implementation:\r\n* Mesh side:\r\n  * `MeshUVSpaceRenderer`. A class that let's you generate decals in a texture with `MeshUVSpaceRenderer.renderTexture(texture, position, normal, size, angle)`. The texture creation and the rendering of the decal is handled by the class.\r\n  * Assign a `MeshUVSpaceRenderer` instance to `mesh.decalMap` to enable the feature for the mesh\r\n* Material side:\r\n  * `DecalMapConfiguration`. A material plugin, implemented much like `DetailMapConfiguration` for the detail map feature.\r\n  * Enable the decal map rendering with `material.decalMap.isEnabled = true`.\r\n  * This class will automatically bind the texture from `mesh.decalMap`, which means a single material with decal map enabled can be used for multiple meshes, one does not have to create a material instance per mesh that needs to support decal map.\r\n\r\nTest PG: http://localhost:1338/#9BVW2S#48\r\n\r\nI will also update the docs.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.decalMap.ts",
                    "packages/dev/core/src/Materials/index.ts",
                    "packages/dev/core/src/Materials/material.decalMap.ts",
                    "packages/dev/core/src/Materials/material.decalMapConfiguration.ts",
                    "packages/dev/core/src/Materials/materialFlags.ts",
                    "packages/dev/core/src/Materials/standardMaterial.decalMap.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.decalMap.ts",
                    "packages/dev/core/src/Meshes/index.ts",
                    "packages/dev/core/src/Meshes/meshUVSpaceRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/decalFragment.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/decalFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/decalVertexDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/defaultFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/defaultVertexDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentSamplersDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrVertexDeclaration.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/default.vertex.fx",
                    "packages/dev/core/src/Shaders/meshUVSpaceRenderer.fragment.fx",
                    "packages/dev/core/src/Shaders/meshUVSpaceRenderer.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/debugTabComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx",
                    "packages/tools/tests/test/visualization/ReferenceImages/Decal Map.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13579",
                "title": "Fluid renderer: Fix stencil usage",
                "description": "See https://forum.babylonjs.com/t/unexpected-hightlightlayer-effect-when-using-fluid-rendering/38648",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            }
        ],
        "5.49.0": [
            {
                "pr": "13577",
                "title": "InputManager: Fix scenario where click can occur when ExclusiveDoubleClickMode = true",
                "description": "A user in the forum found an issue where clicks could occur ExclusiveDoubleClickMode was set to true.  This PR adds a change to the logic to prevent this from happening.  A test was also added to prevent this in the future.\r\n\r\nForum Link: https://forum.babylonjs.com/t/bug-with-babylon-scene-exclusivedoubleclickmode/38541/",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13578",
                "title": "PointerDragBehavior: Added check to force releaseDrag to fire when no active button is present",
                "description": "A user on the forum found an issue where if a user programmatically started a drag event, they could not release it with a click.  Using their provided solution, this PR contains the following fix.  A check was added to the POINTERUP section to just force the release if there is no active button (thanks to mattdmorgan for the fix recommendation).\r\n\r\nForum Link: https://forum.babylonjs.com/t/programmatically-started-drags-can-no-longer-be-completed-by-clicking/38228",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            }
        ],
        "5.48.1": [
            {
                "pr": "13574",
                "title": "Update wrapNativeTexture and wrapWebGLTexture with explicit hasMipMaps and samplingMode",
                "description": "This is necessary so that the sampling mode will default to something as opposed to some arbitrary default behavior of the underlying rendering API.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "13570",
                "title": "Add URL filter to the securitypolicyviolation event handler",
                "description": "Discussion originally in https://forum.babylonjs.com/t/38591.\r\nShould fix issue shown in this playground script: https://playground.babylonjs.com/#YMWYF6",
                "author": {
                    "name": "kv-bh",
                    "url": "https://github.com/kv-bh"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "13575",
                "title": "Fix adaptToDeviceRatio for native engine",
                "description": "Setting `adaptToDeviceRatio` is broken in Babylon Native. This change fixes the problem.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "native"
                ]
            },
            {
                "pr": "13565",
                "title": "Notify added observer if observable was triggered.",
                "description": "This is done to avoid the pattern of adding an observer after checking if the state requires that.\nAs an example let's take the scene's onReadyObservable which has a simple state - it will only notify once when the scene is ready. If a new observer will be added after the observable was triggered (and has notified existing observers) it will not be possible to trigger new observers that were added to is.\nIf `notifyIfTriggered` is set to true and the observable has already triggered it will automatically trigger newly added observers whenever they are added.\n\nIt's also recommended to add that to onDispose observables, which are the same.\nA different solution would be to define an onObserverAdded function, but that would require setting this function to every observable that requires it. Instead - this is a more generic solution.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/engineStore.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/pushMaterial.ts",
                    "packages/dev/core/src/Misc/observable.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13576",
                "title": "Add function \"updateBodyInstances\" to synchronize mesh instances with…",
                "description": "… physics body instances.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics",
                    "skip changelog"
                ]
            },
            {
                "pr": "13572",
                "title": "Adding 1 method for fast collisioncallback",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13569",
                "title": "ThinTexture: Allow to pass a RenderTargetWrapper to the constructor",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/thinTexture.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13568",
                "title": "Always pass default KTX2 decoder options",
                "description": "There is more discussion about this in the topic on the forum: https://forum.babylonjs.com/t/banding-when-viewing-uastc-ktx2-in-babylon-js-sandbox/38540\r\n\r\nThe long story short is that on second invocation of the worker, the default options are no longer being set, as the `isDirty` on the main thread that is being relied on for setting those options, is no longer `true`, due to the first time those options are sent over in: https://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Misc/khronosTextureContainer2.ts#L408\r\n\r\nThe worker, however, no longer contains these options on second invocation, since, if I'm reading this correctly, it gets created anew for each job: https://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Misc/khronosTextureContainer2.ts#L309\r\n\r\nThis results in a wrongly transcoded texture the second time, for example this is how it should look:\r\n![image](https://user-images.githubusercontent.com/238667/221824322-a493eb4b-b2f0-48c1-8195-0fd48721fdd2.png)\r\nBut this is how it looks (notice the extreme banding, flipped Y too?):\r\n![image](https://user-images.githubusercontent.com/238667/221824399-6afb9862-21c8-499a-b953-4df4bd029fec.png)\r\n\r\nIf there are no workers, i.e. `numWorkers = 0`, the same issue appears, since in the second `if` branch, we never set the default options of the decoder: https://github.com/BabylonJS/Babylon.js/blob/master/packages/dev/core/src/Misc/khronosTextureContainer2.ts#L421\r\n\r\nThis PR fixes both of those situations.\r\n\r\nThe issue was reproduced only on macOS running either Chrome, Firefox or Edge, but not on Safari or other platforms, namely Windows. The reason for this is that by default, the capabilities of e.g. Safari include ASTC, so the ASTC transcoder is selected even without the default options, e.g.:\r\n```js\r\n> console.log(gl.getExtension('WEBGL_compressed_texture_astc'))\r\n[Log] WebGLCompressedTextureASTC {getSupportedProfiles: function, COMPRESSED_RGBA_ASTC_4x4_KHR: 37808, COMPRESSED_RGBA_ASTC_5x4_KHR: 37809, COMPRESSED_RGBA_ASTC_5x5_KHR: 37810, COMPRESSED_RGBA_ASTC_6x5_KHR: 37811, …}\r\n```\r\nBut in Chrome, for example, this extension does not exist (that's weird, no?), so the caps of the engine do not have `astc` set:\r\n```js\r\nconsole.log(gl.getExtension('WEBGL_compressed_texture_astc'));\r\nnull\r\n```\r\n\r\nThis resolves my issue, but I'm not familiar with the inner workings of this subsystem and the potential other implications of these changes, so I would like to ask for comments & feedback. Thank you!",
                "author": {
                    "name": "jure",
                    "url": "https://github.com/jure"
                },
                "files": [
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13566",
                "title": "Prevent NME Crash with old light block",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightInformationPropertyTabComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13561",
                "title": "Fix Skeleton Bounding Box Timing issue",
                "description": "https://forum.babylonjs.com/t/bounding-box-does-not-compute-correctly/38448/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "13559",
                "title": "Physics iteration 10",
                "description": "* Visualize instanced bodies\r\n* Update PhysicsShape creation to allow for using an already existing reference",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": [
                    "physics",
                    "skip changelog"
                ]
            },
            {
                "pr": "13560",
                "title": "Fix Inspector Additional Nodes",
                "description": "https://forum.babylonjs.com/t/additional-nodes-in-inspector-only-works-in-embedded-mode/38464\r\n\r\nFix #13558 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/inspector.ts"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13557",
                "title": "auto-parallel tasks",
                "description": "Should accelerate build. In my tests, build (of the entire umd/es6 process) is 15% faster when fully parallel.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package.json"
                ],
                "tags": []
            },
            {
                "pr": "13556",
                "title": "Add CPU side exact srgb conversions",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Helpers/environmentHelper.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Maths/math.color.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_transmission.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/MSFT_sRGBFactors.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13555",
                "title": "fix tag assignment when copying",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/decorators.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.48.0": [
            {
                "pr": "13336",
                "title": "SSR improvements",
                "description": "Re-creation of PR #12728 which was closed because of the re-creation of the Babylon.js repo.\r\n\r\n~~Do not review it, it is not ready yet!~~\r\n\r\n[EDIT]\r\n\r\nOk, it is ready now!\r\n\r\nOne of the PG I used to test: http://localhost:1338/#PIZ1GK#973\r\n\r\nStill todo:\r\n* update the inspector\r\n* documentation\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/index.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/screenSpaceReflectionPostProcess.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRendererSceneComponent.ts",
                    "packages/dev/core/src/Rendering/screenSpaceReflections2Configuration.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/screenSpaceRayTrace.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/depth.fragment.fx",
                    "packages/dev/core/src/Shaders/depth.vertex.fx",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2Blur.fragment.fx",
                    "packages/dev/core/src/Shaders/screenSpaceReflection2BlurCombiner.fragment.fx",
                    "packages/tools/tests/test/visualization/ReferenceImages/Screen Space Reflections 2.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13552",
                "title": "Camera: Add code to update View and Projection Matrices in update function",
                "description": "A user on the forums had recently found an issue when performing input while using an on-demand rendering loop.  The issue was that the `onViewMatrixChangedObservable` wasn't firing as a part of pointer input.  This behavior was present in previous versions.  It was determined that the Lazy Picking changes may have caused this change because the aforementioned observable only fires during `getViewMatrix()` calls.  Before the Lazy Picking implementation, this function was called as a part of the creation and assignment of the picking ray for a PickingInfo object.  Since this ray is only created when picking happens, a pointer event that doesn't require picking info won't ever get to the point where `getViewMatrix` is called.  Technically, these get functions should be called as a part of the camera's update function so the fix is to do just that.\r\n\r\nTests have been added to verify that `onViewMatrixObservable` and `onProjectionMatrixObservable` are firing properly.\r\n\r\nForum Link: https://forum.babylonjs.com/t/on-demand-rendering-solution-broken-since-5-29/36379/1\r\nIssue Link: https://github.com/BabylonJS/Babylon.js/issues/13551",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13553",
                "title": "make sure setTarget works as expected in WebXR.",
                "description": "This will calculate the new rotation in the Y axis and apply it to the already-existing rotation to avoid losing the up-direction when using setTarget.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "13554",
                "title": "Scene clearColor is not used in WebXR with multiview enabled",
                "description": "Fixes #13546",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13550",
                "title": "Fix an issue building the sandbox",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/sandbox/src/components/renderingZone.tsx",
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.47.1": [
            {
                "pr": "13549",
                "title": "Touch init was reversed",
                "description": "Fix this issue - https://forum.babylonjs.com/t/broken-cameras-in-touch-devices/38336",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": []
            },
            {
                "pr": "13548",
                "title": "PBR: Don't apply radiance occlusion to clearcoat",
                "description": "See https://forum.babylonjs.com/t/radiance-occlusion-with-clearcoat/38346",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockClearcoat.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13547",
                "title": "Materials: Fix depth state not set correctly with transparent meshes",
                "description": "See https://forum.babylonjs.com/t/flag-depth-writemask-not-reset-after-draw-mesh/38377\r\n\r\nThe depth write mask was not reset correctly when a transparent material was forcing depth writting.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.alpha.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.alpha.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13545",
                "title": "Physics Iteration 9",
                "description": "Small bug fixes",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts"
                ],
                "tags": []
            },
            {
                "pr": "13541",
                "title": "WebGPU: Fix engine initialization",
                "description": "Close #13488.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            }
        ],
        "5.47.0": [
            {
                "pr": "13532",
                "title": "Add VectorN.Random functions",
                "description": "Adds functions for Vector2, Vector3, and Vector4 to get a vector with random values",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13538",
                "title": "Added ability to pass callback as key trigger parameter.",
                "description": "This PR makes it possible to add key up/down triggers with more control than using just lowercase letters, by allowing the use of a callback function as 'parameter' value.",
                "author": {
                    "name": "reimund",
                    "url": "https://github.com/reimund"
                },
                "files": [
                    "packages/dev/core/src/Actions/actionManager.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13540",
                "title": "PBR: Fix realtime filtering for refraction",
                "description": "See https://forum.babylonjs.com/t/es6-import-of-babylonjs-core-ignoring-side-effects-required-for-khr-materials-transmission/38198\r\n\r\nRealtime filtering can only work if the refraction texture is a cube (the `radiance` function is expecting a `CubeSampler`). So, we should disable realtime filtering when the refraction texture is a 2D texture.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockSubSurface.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13539",
                "title": "Physics Iteration 8",
                "description": "This 1 is about constraints and documentation",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts"
                ],
                "tags": []
            },
            {
                "pr": "13537",
                "title": "Add Clip plane support in Geometry Buffer",
                "description": "https://forum.babylonjs.com/t/screenspacecurvature-post-process-doesnt-seem-to-respect-clip-planes/38231",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx",
                    "packages/dev/core/src/Shaders/geometry.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13535",
                "title": "DefaultRenderingPipeline: Fix image processing not being reset in some cases",
                "description": "See https://forum.babylonjs.com/t/how-to-correctly-dispose-a-defaultrenderingpipeline/38196",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13533",
                "title": "Fix ANIMATESHEET for custom particle effect",
                "description": "https://forum.babylonjs.com/t/cpu-particlesystem-with-custom-fragmentshader/38090/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Particles/particleSystemComponent.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "13531",
                "title": "Fluid renderer: Fix rendering in right handed system",
                "description": "See https://forum.babylonjs.com/t/fluid-cannot-be-rendered-when-using-right-hand-system/38095",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingObject.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingTargetRenderer.ts",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleDepth.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingRender.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13529",
                "title": "Fix option properties in InputNodePropertyComponent",
                "description": "Fix #13522",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13530",
                "title": "Physics Iteration 7",
                "description": "Some fixes to disposal on PhysicsViewer and PhysicsBody",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics"
                ]
            },
            {
                "pr": "13528",
                "title": "PBRMaterial: Fix INVERTCUBICMAP not being reset",
                "description": "See https://forum.babylonjs.com/t/changing-reflectiontexture-to-probe-then-revert-causes-inverted-reflectiontexture/38160",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13525",
                "title": "Bump cacheable-request from 10.2.3 to 10.2.7",
                "description": "Bumps [cacheable-request](https://github.com/jaredwray/cacheable-request) from 10.2.3 to 10.2.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/jaredwray/cacheable-request/releases\">cacheable-request's releases</a>.</em></p>\n<blockquote>\n<h2>v10.2.6</h2>\n<h1>Fix for memory leak on Listeners</h1>\n<p>The listener was not being removed on <code>response</code> and just error but new handlers were being added causing a memory leak.</p>\n<p><a href=\"https://github.com/jaredwray/cacheable-request/blob/c4815689be40854a3d748a3927959354c09b0ebb/src/index.ts#L220-L225\">line 220 in src/index.ts was modified to remove the listener on response also </a></p>\n<pre><code>\t\t\tif (this.cache instanceof Keyv) {\n\t\t\t\tconst cachek = this.cache;\n\t\t\t\tcachek.once('error', errorHandler);\n\t\t\t\tee.on('error', () =&gt; cachek.removeListener('error', errorHandler));\n\t\t\t\tee.on('response', () =&gt; cachek.removeListener('error', errorHandler));\n\t\t\t}\n</code></pre>\n<h2>What's Changed</h2>\n<ul>\n<li>upgrading jest and components to latest by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/220\">jaredwray/cacheable-request#220</a></li>\n<li>upgrading <code>@​types/jest</code> to 29.2.6 by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/221\">jaredwray/cacheable-request#221</a></li>\n<li>fixing listener memory leak - issue <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/issues/222\">#222</a> by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/223\">jaredwray/cacheable-request#223</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jaredwray/cacheable-request/compare/v10.2.5...v10.2.6\">https://github.com/jaredwray/cacheable-request/compare/v10.2.5...v10.2.6</a></p>\n<h2>v10.2.5</h2>\n<p>Types definition issue with http-cache-sematics as that type definition needs to be in dependencies. Thanks <a href=\"https://github.com/Maxim-Mazurok\"><code>@​Maxim-Mazurok</code></a></p>\n<h2>What's Changed</h2>\n<ul>\n<li>Move <code>@​types/http-cache-semantics</code> from dev to deps by <a href=\"https://github.com/Maxim-Mazurok\"><code>@​Maxim-Mazurok</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/219\">jaredwray/cacheable-request#219</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jaredwray/cacheable-request/compare/v10.2.4...v10.2.5\">https://github.com/jaredwray/cacheable-request/compare/v10.2.4...v10.2.5</a></p>\n<h1>v10.2.4</h1>\n<p>Minor updates with one exception is that we removed <code>@types/http-cache-semantics</code> from the main dependencies as it does not look to be needed.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>upgrading typescript to 4.9.4 by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/214\">jaredwray/cacheable-request#214</a></li>\n<li>upgrading jest types and eslint for jest to latest by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/215\">jaredwray/cacheable-request#215</a></li>\n<li>upgrading sqlite3 to 5.1.4 by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/216\">jaredwray/cacheable-request#216</a></li>\n<li>removing <code>@​types/http-cache-semantics</code> from the dependencies and moving… by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/217\">jaredwray/cacheable-request#217</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jaredwray/cacheable-request/compare/v10.2.3...v10.2.4\">https://github.com/jaredwray/cacheable-request/compare/v10.2.3...v10.2.4</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/jaredwray/cacheable-request/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cacheable-request&package-manager=npm_and_yarn&previous-version=10.2.3&new-version=10.2.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "13526",
                "title": "Add more unit tests for the Sound class",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/test/unit/Audio/sound.test.ts"
                ],
                "tags": [
                    "audio",
                    "skip changelog"
                ]
            },
            {
                "pr": "13524",
                "title": "Fix to instantiate hierarchy",
                "description": "This is a fix for the case where the child mesh is NOT an instance of the parent mesh: https://forum.babylonjs.com/t/instantiatehierarchy-throws-errors-for-empty-meshes/38069/7",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Instantiate Hierarchy.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13523",
                "title": "Missing raycast export",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "13516",
                "title": "DeviceInputSystem: Use correct pointerId for touch inputs on blur and pointercancel event",
                "description": "A forum user recently found an issue where the pointerId was incorrect for `blur` and `pointercancel` events fired from a touch input.  This PR adds a small change to the DeviceEventFactory to use the pointerId, if available.\r\n\r\nForum Link: https://forum.babylonjs.com/t/distinguish-between-onbuttonup-events-in-basecamerapointersinput/37985/1",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13521",
                "title": "Change InputManager._pickMove arg type to reduce number of casts needed",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": [
                    "inputs",
                    "skip changelog"
                ]
            },
            {
                "pr": "13520",
                "title": "Delay resize event listener to after video internal texture is created.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/issue-with-video-texture-loading-onloadobservable-not-called/38052\r\n\r\nThe issue happens for videos with autoplay. Example PG: https://playground.babylonjs.com/#ZMCFYA#83",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13518",
                "title": "Set event.sourceEvent in ExecuteCodeAction callback for pointer triggers",
                "description": "When an ExecuteCodeAction is created with a pointer trigger, the callback's ActionEvent.sourceEvent member is set to undefined.\r\n\r\nThis change sets the callback's ActionEvent.sourceEvent member to the original event causing the action to be triggered.\r\n\r\nRequested on forum: https://forum.babylonjs.com/t/action-enhancements/38043.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Events/pointerEvents.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": [
                    "new feature",
                    "inputs"
                ]
            },
            {
                "pr": "13519",
                "title": "CustomMaterial: Don't prevent support for uniform arrays",
                "description": "See https://forum.babylonjs.com/t/how-to-sampler-texturearray-with-a-index-from-attribute/38049",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/materials/src/custom/customMaterial.ts",
                    "packages/dev/materials/src/custom/pbrCustomMaterial.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13517",
                "title": "Bump @sideway/formula from 3.0.0 to 3.0.1",
                "description": "Bumps [@sideway/formula](https://github.com/sideway/formula) from 3.0.0 to 3.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/hapijs/formula/commit/5b44c1bffc38135616fb91d5ad46eaf64f03d23b\"><code>5b44c1b</code></a> 3.0.1</li>\n<li><a href=\"https://github.com/hapijs/formula/commit/9fbc20a02d75ae809c37a610a57802cd1b41b3fe\"><code>9fbc20a</code></a> chore: better number regex</li>\n<li><a href=\"https://github.com/hapijs/formula/commit/41ae98e0421913b100886adb0107a25d552d9e1a\"><code>41ae98e</code></a> Cleanup</li>\n<li><a href=\"https://github.com/hapijs/formula/commit/c59f35ec401e18cead10e0cedfb44291517610b1\"><code>c59f35e</code></a> Move to Sideway</li>\n<li>See full diff in <a href=\"https://github.com/sideway/formula/compare/v3.0.0...v3.0.1\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~marsup\">marsup</a>, a new releaser for <code>@​sideway/formula</code> since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=@sideway/formula&package-manager=npm_and_yarn&previous-version=3.0.0&new-version=3.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.46.0": [
            {
                "pr": "13515",
                "title": "fix type issue",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13512",
                "title": "Move to TypeScript 4.9.5",
                "description": "There are small improvements (mainly to type safety).\nThis PR is öpen for discussions\", as this is not 100% needed. We will move to TS 5.X when it's out. This is just another small step towards that goal.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/src/ltsTransformer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/tools/tests/src/umdCompile.ts",
                    "packages/tools/tests/webpack.config.js",
                    "packages/tools/viewer/src/managers/sceneManager.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "5.45.2": [
            {
                "pr": "13514",
                "title": "VideoTexture - Fix texture refresh bug",
                "description": "My last PR: #13513 introduced logic to refresh the VideoTexture's internal texture when the underlying video changed sizes.\r\n\r\nI missed an edge case where the resize event can occur on the same frame that the texture was already updated from. When that happens the new texture was not getting hooked up to the video feed because of a no-op condition that avoids updating the texture twice in one frame. This change ensures that when swapping out the internal texture it also gets re-registered with the video feed.",
                "author": {
                    "name": "CoPrez",
                    "url": "https://github.com/CoPrez"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13513",
                "title": "VideoTexture - Resize the internal texture when the video size changes",
                "description": "This PR updates VideoTexture to listen for the [VideoElement resize event](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoHeight#examples) and resize the texture to match. For a URL video the scenario would not be common, but when creating a video from a camera stream you can use the media constraints to change the resolution/aspect ratio on the fly. Another camera example is when on mobile and you rotate the phone the video stream also resizes from portrait to landscape orientation.\r\n\r\nI created this Playground example to demonstrate the current issue (and to test my PR changes):\r\n[https://playground.babylonjs.com/#4W5WYX](https://playground.babylonjs.com/#4W5WYX)\r\n\r\nIn the playground app the camera's aspect ratio is updated ever 3 seconds to go between 16:9 and 1:1 aspect ratios. Without these changes the video just gets squashed when the aspect ratio changes, additionally if the end user tried to readPixels from the texture they would not get the full image due to a missmatch between the internal texture and the actual video frames.\r\n\r\nWith these changes the plane that the VideoTexture is placed on is able to respond to the change in aspect ratio so the video does not become distorted. Additionally readPixels is able to pull the full frame of the camera and match the native video resolution.\r\n\r\nThis issue is mentioned in the BabylonNative repo here:\r\n[https://github.com/BabylonJS/BabylonNative/issues/1107](https://github.com/BabylonJS/BabylonNative/issues/1107)\r\n",
                "author": {
                    "name": "CoPrez",
                    "url": "https://github.com/CoPrez"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13511",
                "title": "better UI for title + bug fix for auto link",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13493",
                "title": "Add support for node 18 by updating node-sass",
                "description": "And drop support for node 12.\r\n\r\nIt's probably time, it's the next LTS :)\r\n\r\nI have not fully tested it (too reliant on CI maybe), but it works in dev. It's possible it'll also work with node 19, but I did not try.",
                "author": {
                    "name": "852Kerfunkle",
                    "url": "https://github.com/852Kerfunkle"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/inspector/package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/tools/accessibility/package.json",
                    "packages/tools/tests/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13507",
                "title": "InputManager: Refine logic for handling non-captured pointerup events",
                "description": "A user has found an issue where clicking events were erroneously passing through the utility layer to the main scene when they weren't supposed to.  Some of the logic that handles when a pointer is captured was incorrectly set up so this PR fixes that issue.  A test was added to verify this fix in the future.\r\n\r\nForum Link: https://forum.babylonjs.com/t/utility-layer-events-propagated-into-the-scene/32574",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.arcRotateCameraInputs.test.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.freeCameraInputs.test.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13498",
                "title": "Physics Iteration 5",
                "description": "There is an issue with impulse/force that will be fixed in next iteration.\r\nAggregate is starting working just like impostors\r\nPhysicsHelper moved from V1 to parent path",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/index.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/Physics/v1/index.ts",
                    "packages/dev/core/src/Physics/v1/physicsHelper.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/index.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "13510",
                "title": "Shader Fix",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/bumpFragmentMainFunctions.fx",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13509",
                "title": "improve readability and running of vis tests",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/config.json",
                    "packages/tools/tests/test/visualization/visualization.utils.ts",
                    "packages/tools/tests/test/visualization/visualization.webgl1.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgl2.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgpu.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13508",
                "title": "WebGL2 Visualization tests: Log to the console by default, not to a file",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/tests/test/visualization/visualization.webgl2.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.45.1": [
            {
                "pr": "13501",
                "title": "Add Object Space mapping to NME PerturbNormal block",
                "description": "Fix #13420 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/bumpFragment.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/bumpFragmentMainFunctions.fx",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13503",
                "title": "Fix gui declaration",
                "description": "Fixes #13502",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13505",
                "title": "Physics iteration 6",
                "description": "Proper disposing of Physics Bodies",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts"
                ],
                "tags": [
                    "physics",
                    "skip changelog"
                ]
            },
            {
                "pr": "13506",
                "title": "KhronosTextureContainer2: minor code formating",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13504",
                "title": "Fix for sprite rendering for ios 14 and lower",
                "description": "Fixes https://forum.babylonjs.com/t/sprites-are-not-being-rendered-for-ios14-and-lower/37973",
                "author": {
                    "name": "Vlad160",
                    "url": "https://github.com/Vlad160"
                },
                "files": [
                    "packages/dev/core/src/Shaders/sprites.fragment.fx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13500",
                "title": "KTXDecoder: Fix crash with \"buffer already detached\"",
                "description": "See https://forum.babylonjs.com/t/full-html-does-not-work-on-some-playgrounds/9908/9\r\n\r\nCopy/paste + auto formatting is bad...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Loading glTF model with KTX2 textures.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "13499",
                "title": "Texture: Fix doc for sampling modes",
                "description": "See https://forum.babylonjs.com/t/bilinear-sample-mode-and-mip/37907",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13495",
                "title": "Nme updates part 2",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/searchBox.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": [
                    "enhancement",
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13497",
                "title": "Fix ClipPlane being unset",
                "description": "https://forum.babylonjs.com/t/clipping-plane-potential-bug/37851",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/clipPlaneMaterialHelper.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13496",
                "title": "Fix conditions for clone vs instance in AssetContainer.instantiateHie…",
                "description": "…rarchy\r\n\r\nForum issue: https://forum.babylonjs.com/t/instances-should-only-created-for-meshes-with-geometry/37873",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "assets",
                    "skip changelog"
                ]
            },
            {
                "pr": "13491",
                "title": "Nme updates",
                "description": "Associated with  #12148",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/searchBox.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/searchBox.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13485",
                "title": "Physics Iteration 4",
                "description": "A small one with WIP Aggregate and more documentation.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": []
            },
            {
                "pr": "13494",
                "title": "Bump http-cache-semantics from 4.1.0 to 4.1.1",
                "description": "Bumps [http-cache-semantics](https://github.com/kornelski/http-cache-semantics) from 4.1.0 to 4.1.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/kornelski/http-cache-semantics/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=http-cache-semantics&package-manager=npm_and_yarn&previous-version=4.1.0&new-version=4.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.45.0": [
            {
                "pr": "13490",
                "title": "Check for invalid hierarchies in the asset container and warn the user",
                "description": "Fix #13477\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "enhancement",
                    "assets"
                ]
            },
            {
                "pr": "13487",
                "title": "Handle pointerlock rejections, if promise based",
                "description": "This should get rid of the unhandled top-level exception if requesting pointer lock fails.\r\n\r\nI think the intended way to use pointer lock in Babylon is to sub to `onCanvasBlurObservable` and `onCanvasFocusObservable`, so `element.focus()` probably belongs into the resolved handler.\r\n\r\nThe alternative would be to focus regardless, but this is probably not desired:\r\n```js\r\nif (promise instanceof Promise) promise.catch(() => {});\r\nelement.focus();\r\n```\r\n\r\nA good way to try this behaviour is to enter and exit pointerlock in quick succession on a chromium based browser.",
                "author": {
                    "name": "852Kerfunkle",
                    "url": "https://github.com/852Kerfunkle"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": []
            },
            {
                "pr": "13489",
                "title": "Fix ImportMesh of babylon files that share a geometry uniqueId",
                "description": "Related forum issue: https://forum.babylonjs.com/t/imported-meshes-appear-broken-if-they-have-the-same-geometry-uniqueid/33567/8",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Load babylon files with same geometry uniqueId.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "13467",
                "title": "Fix asset container instantiation with parented instanced nodes",
                "description": "Fix #13454\r\n\r\nI don't think there's any way around using some kind of dependency graph to instantiate nodes in the correct order but if anyone has a simpler idea I'd love to hear it :D ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/Asset Container Instantiate to Scene 2.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/Asset Container Instantiate to Scene.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13486",
                "title": "Texture: Allow ImageBitmap for the buffer parameter of updateURL",
                "description": "See https://forum.babylonjs.com/t/texture-updateurl-should-accept-imagebitmap/37762",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "new feature",
                    "texture"
                ]
            },
            {
                "pr": "13484",
                "title": "WebGPU: Fix stencil buffer creation with RTT",
                "description": "See https://forum.babylonjs.com/t/webgpu-higlightlayer-and-fxaa-issue/37730",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13482",
                "title": "Get Sound play test working",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/test/unit/Audio/sound.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13483",
                "title": "Fix a typo in contributing.md",
                "description": "It's my intent to fix this oversight. I don't think it was intended :yum:\r\n\r\nEdit: I don't have permissions to assign a \"skip changelog\" label.",
                "author": {
                    "name": "pdresselm",
                    "url": "https://github.com/pdresselm"
                },
                "files": [
                    "contributing.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13480",
                "title": "MorphTargetMgr: Fallback to vertex attribute mode if too many targets",
                "description": "As we store the morph targets in the depth dimension of a 2DArrayTexture, we should revert to the \"non texture\" mode (i.e. use vertex attributes) if there are too many targets.\r\n\r\nAlso, limit the max number of vertex attributes to 8 by default.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Morph/morphTargetManager.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13481",
                "title": "Fix GLTF Variants Clone",
                "description": "https://forum.babylonjs.com/t/khr-materials-variants-got-lost-during-clone-of-mesh/37611/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug",
                    "glTF"
                ]
            },
            {
                "pr": "13479",
                "title": "Fix hit detection in a multi-cam scenario with billboarded meshes.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/mutliple-cameras-affect-billboard-meshes/37496\r\nRelated PG: https://www.babylonjs-playground.com/#1WROZH%23266\r\n\r\nSuperseed https://github.com/BabylonJS/Babylon.js/pull/13471",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug",
                    "picking"
                ]
            },
            {
                "pr": "13478",
                "title": "Fix sound current time after it ends on its own",
                "description": "The sound pause function assumes the start time and current time are reset to zero when the sound stops, but they are currently only being reset when the stop function is called. If the sound stops on its own when reaching the end of the sound source, the start time and current time are not reset. This causes the `currentTime` property to report the wrong time when the sound is restarted after stopping on its own, and then being paused.\r\n\r\nThis change fixes the issue by resetting the start time and current time when the sound source ends on its own.\r\n\r\nReported on forum here: https://forum.babylonjs.com/t/sound-currenttime-exceeds-total-duration-in-some-cases/37668",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13476",
                "title": "clearOnGuiReadyObservable",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13472",
                "title": "Fix sound source `onended` handling",
                "description": "When pause is called the `onEndedObservable` is being fired, but it should only be fired when stop is called.\r\n\r\nThis change fixes the issue.\r\n\r\nReported on forum here: https://forum.babylonjs.com/t/pausing-and-playing-an-audio-with-offset-restarts-it-from-the-beginning-instead-of-the-current-position/36668/23",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13474",
                "title": "Performance optimization for vector methods",
                "description": "In vector functions like Vector3.FromArrayToRef and Quaternion.FromArrayToRef, values are assigned to properties like x, y, z, w, which are internally setter functions which sets things like _x and _isDirty, so in FromArrayToRef where all these setters called, the _isDirty is set multiple times, which is possibly optimizable.\r\n\r\nIt should be possible to directly set internal properties like _x, _y, _z, and _w in FromArrayToRef and set _isDirty to true to be compatible with existing code depending on _isDirty, which should result in better performance.\r\n\r\nForum link:\r\nhttps://forum.babylonjs.com/t/optimizing-performance-of-fromarraytoref/37513",
                "author": {
                    "name": "myfreeer",
                    "url": "https://github.com/myfreeer"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13475",
                "title": "Add GUI is ready function and add it on visualization tests",
                "description": "This should avoid the tests with GUI failing because it hasn't loaded yet.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".vscode/launch.json",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/image.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "gui",
                    "new feature"
                ]
            },
            {
                "pr": "13469",
                "title": "KTX2 decoding: Add default KTX2 decoder configuration",
                "description": "See https://forum.babylonjs.com/t/supporting-bc5-and-bc7-device-specific-compression-formats/35045/31\r\n\r\nWith this PR, the new object `KhronosTextureContainer2.DefaultKTX2DecoderOptions` can be used to set global options for the KTX2 decoder process. The options defined in this way have priority over those passed when creating a KTX2 texture with `new Texture(...)`. This way you can easily force certain behaviors for the decoder without altering the way KTX2 textures are created.\r\n\r\nTo resolve the issue raised in the forum thread linked above, proceed as follows:\r\n```javascript\r\nBABYLON.KhronosTextureContainer2.DefaultKTX2DecoderOptions.useRGBAIfOnlyBC1BC3AvailableWhenUASTC = true;\r\n```\r\nwhich will force the use of uncompressed RGBA if only BC1 and BC3 are available as compressed formats.\r\n\r\n[EDIT] Note that `useRGBAIfOnlyBC1BC3AvailableWhenUASTC = true` is the default, for performance reason (see comments in code) [/EDIT]\r\n\r\nNote that `ktx2decoderTypes.ts` is defined in the core and not in the **ktx2Decoder** package to avoid an external dependency for the core and I'm not sure that `Materials/Textures/` is the best location for this file...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/src/Materials/Textures/index.ts",
                    "packages/dev/core/src/Materials/Textures/ktx2decoderTypes.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/public/umd/babylonjs-ktx2decoder/webpack.config.js",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_ASTC.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_BC7.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_R8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RG8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_SRGB.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/mscTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/ktx2Decoder.ts",
                    "packages/tools/ktx2Decoder/src/ktx2FileReader.ts",
                    "packages/tools/ktx2Decoder/src/transcodeDecisionTree.ts",
                    "packages/tools/ktx2Decoder/src/transcoder.ts",
                    "packages/tools/ktx2Decoder/src/transcoderManager.ts",
                    "packages/tools/ktx2Decoder/webpack.config.js"
                ],
                "tags": [
                    "new feature",
                    "texture"
                ]
            },
            {
                "pr": "13470",
                "title": "Babylon serializer: Serialize actions for instances",
                "description": "See https://forum.babylonjs.com/t/babylon-file-format-missing-actions-on-instances/37645",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "loaders",
                    "new feature"
                ]
            }
        ],
        "5.44.0": [
            {
                "pr": "13466",
                "title": "InputManager: Fix for POINTERTAP firing during multi-touch gesture",
                "description": "A user found an issue on the forum where a POINTERTAP event was being fired after a pinch.  This issue appears to have been caused by code to check for swiping that didn't account for multi-touch.  This PR will fix that logic by checking if at any point from an initial touch to the last touch to be released in an interaction, there were multiple touches active.  If so, no TAPs will occur.  Furthermore, a test has been added to check for changes to this in the future.\r\n\r\nForum Post: https://forum.babylonjs.com/t/unexpected-pointertap-firing-in-touchscreen-when-zooming-by-two-finger-movement/36922",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13468",
                "title": "BaseCameraPointerInputs: Fixed logic to ignore extra touches",
                "description": "Recently, a forum user found that if a third touch occurred while there were two active ones, it could affect the pinching gesture.  This PR fixes this issue for all inputs that inherit from BaseCameraPointerInputs.  Addtionally, a test was added to verify this change for the ArcRotateCamera.\r\n\r\nForum Post: https://forum.babylonjs.com/t/basecamerapointersinput-doesnt-handle-3-touch-points-well/37604",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.arcRotateCameraInputs.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            }
        ],
        "5.43.2": [
            {
                "pr": "13465",
                "title": "Observable: Fix single fire events not working sometimes",
                "description": "See https://forum.babylonjs.com/t/scene-ready-observable-not-firing-with-v5-35-0/36166/23\r\n\r\nFix bug introduced by #13283 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/observable.ts"
                ],
                "tags": [
                    "bug",
                    "design"
                ]
            },
            {
                "pr": "13464",
                "title": "Effect: Fix crash when using an external shader file",
                "description": "Fix bug introduced by #13452",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13460",
                "title": "Add forceResizeWidth on GUI Text Block to allow for width resize even…",
                "description": "… if textWrap is not clip.\r\n\r\nRelated forum question: https://forum.babylonjs.com/t/gui-alignment-for-chat-bubbles/37573\r\n\r\nRelated PG link: https://playground.babylonjs.com/#XCPP9Y#17254",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Force Resize Width.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "gui"
                ]
            },
            {
                "pr": "13463",
                "title": "Fix webXRFeaturesManager test name",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/test/unit/XR/webXRFeaturesManager.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13462",
                "title": "Fixes to GUI Editor Zoom Behavior",
                "description": "Fix https://github.com/BabylonJS/ThePirateCove/issues/321\r\n@PatrickRyanMS here are the fixes for the editor!",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13361",
                "title": "Gradients on GUI",
                "description": "This PR adds additional parameters on 2D GUI elements to use a gradient instead of a color. Whenever a gradient background is set, it takes precedence over the plain color background. The possible gradients are Linear, Radial and Conic: https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient\r\n\r\nExample PGs: \r\nplayground.babylonjs.com/#XCPP9Y#16899\r\nplayground.babylonjs.com/#4Z7EK3\r\nplayground.babylonjs.com/#FWPJH0\r\n\r\nExample pictures:\r\n![image](https://user-images.githubusercontent.com/6002144/208747926-a634e2a1-ac82-4a1f-a30e-e770089581ba.png)\r\n![image](https://user-images.githubusercontent.com/6002144/208747962-9b28163e-ff26-4a3d-9b09-992bc5022657.png)\r\n![image](https://user-images.githubusercontent.com/6002144/208747994-4d85dd74-b6ef-4aad-a7e6-93706248c32b.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts",
                    "packages/dev/gui/src/2D/controls/button.ts",
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/ellipse.ts",
                    "packages/dev/gui/src/2D/controls/gradient/BaseGradient.ts",
                    "packages/dev/gui/src/2D/controls/gradient/LinearGradient.ts",
                    "packages/dev/gui/src/2D/controls/gradient/RadialGradient.ts",
                    "packages/dev/gui/src/2D/controls/index.ts",
                    "packages/dev/gui/src/2D/controls/line.ts",
                    "packages/dev/gui/src/2D/controls/rectangle.ts",
                    "packages/dev/gui/src/2D/controls/sliders/scrollBar.ts",
                    "packages/dev/gui/src/2D/controls/sliders/slider.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Gradient Linear with transparency.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Gradient Linear.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Gradient Radial.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "gui"
                ]
            },
            {
                "pr": "13459",
                "title": "Fluid Renderer: Fixes WebGPU support",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Shaders/fluidRenderingBilateralBlur.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingRender.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingStandardBlur.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "WebGPU"
                ]
            },
            {
                "pr": "13451",
                "title": "Update assetContainer.ts",
                "description": "Add \"dispose\" on InstantiatedEntries\r\nhttps://forum.babylonjs.com/t/dispose-function-on-instantiatedentries/37500\r\n\r\nDoc update; https://github.com/BabylonJS/Documentation/pull/756",
                "author": {
                    "name": "aWeirdo",
                    "url": "https://github.com/aWeirdo"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": []
            }
        ],
        "5.43.1": [
            {
                "pr": "13450",
                "title": "Physics V2 Iteration 3",
                "description": "Iteration 3 featuring:\r\n- More code documentation\r\n- Transform <-> Body synchronization\r\n- Typos \r\n- Engine Component using TransformNode instead of Mesh",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v2/physicsMaterial.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": []
            },
            {
                "pr": "13457",
                "title": "Fix Lines Mesh with Push Material",
                "description": "https://forum.babylonjs.com/t/using-pbrmaterial-in-linesystem-console-warning-webgl-00002a080233e900/37341/7\r\n\r\nThe warning was thrown because on the first rendered frame bindForSubMesh has not been called so the effect would be undefined resulting in not bind the index buffer.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/linesMesh.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13456",
                "title": "Optimizing performance of _BinaryWriter._resizeBuffer",
                "description": "In class _BinaryWriter of the gltf exporter, a loop is used to copy contents in old buffer to new buffer, which is benchmarked to be slow. TypedArray.prototype.set() can be used for faster memory copying while having the same Browser compatibility of TypedArray.\r\n\r\nForum link:\r\nhttps://forum.babylonjs.com/t/optimizing-performance-of-binarywriter-resizebuffer/37516\r\n\r\nBenchmark before:\r\n[playground.babylonjs.com](https://playground.babylonjs.com/#VEC2SK%231)\r\n![image](https://user-images.githubusercontent.com/17702502/213600777-fc89c180-96ea-4581-94f4-330ba39508de.png)\r\n\r\nBenchmark after:\r\n[playground.babylonjs.com](https://playground.babylonjs.com/#2JZECM)\r\n![image](https://user-images.githubusercontent.com/17702502/213600783-4ff6186d-9116-4d36-8fe9-18f294ee9e8e.png)\r\n\r\n\r\n",
                "author": {
                    "name": "myfreeer",
                    "url": "https://github.com/myfreeer"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "optimizations",
                    "loaders"
                ]
            },
            {
                "pr": "13455",
                "title": "Fix Sound current time when pause is called, and refactor pause system",
                "description": "When pause is called, the current time is being reset to zero.\r\n\r\nThis change fixes the issue and refactors the pause system to improve readability and make this fix work without breaking existing pause functionality.\r\n\r\nReported on forum here: https://forum.babylonjs.com/t/pausing-and-playing-an-audio-with-offset-restarts-it-from-the-beginning-instead-of-the-current-position/36668/16",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13453",
                "title": "Fix back-compat issue in physics (es6)",
                "description": "There is a back-compat issue in es6. Instead of loading the main physics engine component the devs need to load the v1 physics engine component as well.\n\nThis PR changes the architecture a little. The basic physics engine component  has moved to a new file that is not expected to be loaded individually. It is loaded by both the base physics engine component and the v2 physics engine component,m making sure that a dev importing the v2 physics engine component will still have access to the scene extensions.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Physics/joinedPhysicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngineComponent.ts"
                ],
                "tags": []
            },
            {
                "pr": "13440",
                "title": "Fix GUI Image caching to consider images that have been created but n…",
                "description": "…ot fully loaded.\r\n\r\nRelated forum issue:  https://forum.babylonjs.com/t/gui-editor-bug-parse-from-snippet-with-external-image-from-dropbox-svg/37411/",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/image.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Images in Grid.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            }
        ],
        "5.43.0": [
            {
                "pr": "13452",
                "title": "Fix memory leaks",
                "description": "Fix some memory leaks with texture buffers and material instances.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "memory leak"
                ]
            },
            {
                "pr": "13387",
                "title": "Pan torwards cursor when zooming on GUI Editor",
                "description": "Current behavior:\r\n![zoom-gui-current](https://user-images.githubusercontent.com/6002144/210845216-8f4f4719-fb77-4bc1-b562-8e44c1d4fc03.gif)\r\n\r\nNew behavior:\r\n![zoom-gui-new](https://user-images.githubusercontent.com/6002144/210845234-93f32031-83cb-42d2-bac7-a91c6eedef0d.gif)\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "13437",
                "title": "Material: Make the frozen mode more user friendly",
                "description": "See https://forum.babylonjs.com/t/how-to-rotate-texture-of-frozen-material/37430\r\n\r\nThe PR allows you to simply call `material.markDirty(true)` to update a material even when in frozen mode, and even if the mesh(es) using the material are out of view at the time of the call.\r\n\r\nCurrently, it is difficult to update a frozen material, even using the **call unfreeze / make changes / call freeze** paradigm, because the latter has be postponed after we are sure that the material is actually changed, i.e., until after the new effect (if a new effect is created) is ready, which can be difficult to determine: it may take several frames for the effect to be ready once compiling starts, and compiling won't start if all the meshes that use that material are out of sight.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/pushMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13449",
                "title": "Better error handling in XR Hand constraint behavior",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/handConstraintBehavior.ts"
                ],
                "tags": []
            },
            {
                "pr": "13448",
                "title": "Remove a 180 degree flip (an old relic)",
                "description": "Fixes #13447\n\nWhen initially implemented, right-handed scenes needed a 180 degrees flip because of the way teleportation was working. This code was revamped, but the 180 flip was never removed. I have tested it in different scenarios (and will continue testing it), but it does seem like this is an old relic and technically a bug that needs to be fixed.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": []
            },
            {
                "pr": "13444",
                "title": "Fix Sound current time when stop is called while paused",
                "description": "When stop is called while paused, the current time includes the start offset set by the pause function. This is not the case when stop is called while **not** paused. This is confusing. When stop is called, the current time should be the same, whether the sound is paused or not paused.\r\n\r\nThis change fixes the issue by always resetting the start offset when the sound is stopped, even if the sound is paused.\r\n\r\nReported on forum here: https://forum.babylonjs.com/t/pausing-and-playing-an-audio-with-offset-restarts-it-from-the-beginning-instead-of-the-current-position/36668/16",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13443",
                "title": "Fix playing animations in Sandbox when they have the same name",
                "description": "Fix #13441",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/sandbox/src/components/animationBar.tsx"
                ],
                "tags": [
                    "bug",
                    "sandbox"
                ]
            },
            {
                "pr": "13442",
                "title": "`instanceof` will return false if element is created from a different window object than the global one",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/htmlElementTexture.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13439",
                "title": "Add support for instanced meshes in STLEXPORT",
                "description": "Related Forum Topic: https://forum.babylonjs.com/t/propose-to-remove-baking-transforms-during-stl-export-support-instanced-meshes/37210\r\n\r\nCreateSTL has a new param \"supportInstancedMeshes\" which when set to true exports Instances without baking transforms on source mesh. Exporting instances with supportInstancedMeshes=false and doNotBakeTransforms=false may cause them to change orientation/positions in the scene.",
                "author": {
                    "name": "d-0-s-t",
                    "url": "https://github.com/d-0-s-t"
                },
                "files": [
                    "packages/dev/serializers/src/stl/stlSerializer.ts"
                ],
                "tags": []
            },
            {
                "pr": "13433",
                "title": "Add support for unsigned int uniform",
                "description": "Current version can not pass unsigned int uniform to shader when using ShaderMaterial\r\n[Example](https://playground.babylonjs.com/#1OH09K#1727)\r\nThis PR add support for passing unsigned int uniform",
                "author": {
                    "name": "newbeea",
                    "url": "https://github.com/newbeea"
                },
                "files": [
                    "packages/dev/core/src/Engines/IPipelineContext.ts",
                    "packages/dev/core/src/Engines/Native/nativePipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts"
                ],
                "tags": []
            },
            {
                "pr": "13436",
                "title": "Fix Action Deserialization",
                "description": "https://forum.babylonjs.com/t/how-to-parse-actions-with-onkeydowntrigger-and-parameter/37350",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Actions/actionManager.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            }
        ],
        "5.42.2": [
            {
                "pr": "13367",
                "title": "Fixed issue when setting ViewPort multiple times per frame in Native",
                "description": "## Overview\r\n\r\nThis PR fixes complements [this Babylon Native PR](https://github.com/BabylonJS/BabylonNative/pull/1183), it moves viewport update from been done immediately to be done using the command queue. The way this is currently been done on master, if multiple viewport updates are done in a single frame (like when you can more than one camera been rendered using different viewports) the viewport updates actually end up overriding each other and get lost by the time the command queue starts been processed. \r\n\r\n## Extra Information\r\n\r\nThis functionality started as a request in the forum:\r\n[Forum issue](https://forum.babylonjs.com/t/viewport-ignored-for-mutiple-cameras-in-react-native/36709/4)\r\n[Target web behaviour](https://playground.babylonjs.com/#H8VW0B)",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "native"
                ]
            }
        ],
        "5.42.1": [
            {
                "pr": "13428",
                "title": "Add touch release detection to draggable parts of BoundingBoxGizmo",
                "description": "As a followup from [this thread on the BabylonJS forums](https://forum.babylonjs.com/t/boundingboxgizmo-displays-unexpected-highlighting-behavior-on-touch-devices/37197), this PR adds touch release detection to the draggable components (scale boxes, rotation spheres) of the `BoundingBoxGizmo` such that those parts will now unhighlight correctly when releasing touch while dragging said parts.",
                "author": {
                    "name": "Hsifnus",
                    "url": "https://github.com/Hsifnus"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13431",
                "title": "Fix broken sound offset backward compatibility",
                "description": "Prior to my changes in PR https://github.com/BabylonJS/Babylon.js/pull/13373, when a sound's offset was set while paused, playback resumed from the given offset, not the time it was paused at.\r\n\r\nThis change fixes that break in backward compatibility while preserving the fix in PR https://github.com/BabylonJS/Babylon.js/pull/13373.\r\n\r\nThis change also reverts adding the offset in the currentTime property to preserve backward compatibility.\r\n\r\nReported on forum here: https://forum.babylonjs.com/t/sound-currenttime/37290",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13432",
                "title": "GPUParticleSystem: Fix crash when update effect not ready",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts"
                ],
                "tags": [
                    "bug",
                    "particles"
                ]
            },
            {
                "pr": "13430",
                "title": "Fixes and performance improvement for linked GUI",
                "description": "* Removing linked controls without moving the camera was causing glitching effects, this has been fixed.\r\n\r\n![linked-meshes-master](https://user-images.githubusercontent.com/6002144/211897255-6360b31f-ec50-4013-8364-2db3556ad90e.gif)\r\n\r\n* Instead of running the _checkControls function every time a mesh is added or removed, do it before rendering, so adding multiple linked controls on the same frame performs better.\r\n\r\n* When moving a control, only update and mark as dirty if the calculated new values have changed relative to the old ones.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            }
        ],
        "5.42.0": [
            {
                "pr": "13429",
                "title": "Fix broken use of TmpVectors in BoundingBoxGizmo",
                "description": "Follow up https://forum.babylonjs.com/t/bounding-box-rotation-in-gizmo-is-not-working/37245\r\n\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": [
                    "bug",
                    "gizmos"
                ]
            },
            {
                "pr": "13388",
                "title": "Cache loaded dom images on Image class so the playground-editor doesn't have to reload them often",
                "description": "Without the change:\r\n![ge-no-cache](https://user-images.githubusercontent.com/6002144/209851133-13453ef9-8178-423f-9721-4dd7bbd53ca0.gif)\r\nWith the change:\r\n![ge-cache](https://user-images.githubusercontent.com/6002144/209851145-ac34937f-d94b-4ca1-af94-dc758257f1a8.gif)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "13427",
                "title": "Add location to glFragColor in WebGL preprocessor",
                "description": "To simplify some specific uses of MultiRenderTarget it would be handy to have `layout(location = 0) prepended to the glFragColor output. Without this you cannot declare another output buffer as in OpenGL ES 3 all output locations must be specified.\r\n\r\nThis change shouldn't have any impact on typical use but makes it easier for custom MRT/Deferred shading situations.",
                "author": {
                    "name": "OrigamiDev-Pete",
                    "url": "https://github.com/OrigamiDev-Pete"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGL2ShaderProcessors.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13426",
                "title": "Add dithering option to SkyMaterial",
                "description": "Rel: https://forum.babylonjs.com/t/skymaterial-and-dithering/37221",
                "author": {
                    "name": "852Kerfunkle",
                    "url": "https://github.com/852Kerfunkle"
                },
                "files": [
                    "packages/dev/materials/src/sky/sky.fragment.fx",
                    "packages/dev/materials/src/sky/skyMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13425",
                "title": "Fix sound play function not accepting zero as a valid offset",
                "description": "The `Sound.play` function is not accepting zero as a valid offset. This makes resetting the offset to zero not work after previously setting it to a non-zero value.\r\n\r\nReported on forum here: https://forum.babylonjs.com/t/pausing-and-playing-an-audio-with-offset-restarts-it-from-the-beginning-instead-of-the-current-position/36668/12\r\n\r\nThis change fixes the issue by comparing the given `offset` argument to `undefined` instead of using JavaScript truthy/falsey.\r\n\r\nThis bug was caused by the change I made in https://github.com/BabylonJS/Babylon.js/pull/13373.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13423",
                "title": "ActionManager: Add support for Material in serialization and parsing",
                "description": "See https://forum.babylonjs.com/t/how-to-parse-actions/37208",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Actions/directActions.ts",
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13421",
                "title": "PBR material: Fix typo with OBJECTSPACE_NORMALMAP define",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13419",
                "title": "Export gltf scene level metadata",
                "description": "Fix #13417 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "bug",
                    "exporters",
                    "glTF"
                ]
            },
            {
                "pr": "13418",
                "title": "NME: Add a RealTime input",
                "description": "See https://forum.babylonjs.com/t/node-material-animation-runs-slower-than-unity-shader-graph/37067/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/animatedInputBlockTypes.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13415",
                "title": "Fix LoadScriptAsync to reject with proper error",
                "description": "See https://forum.babylonjs.com/t/importasyncmesh-on-server-side-without-scene/34151/39",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13414",
                "title": "some API changes for fade in and out behavior",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/fadeInOutBehavior.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13401",
                "title": "Prevent Uncaught Exception from `ThinEngine.runRenderLoop` when `window.SetTimeout` in not defined",
                "description": "I am having an uncaught exception when using BaylonJs in a NodeJs environment because of a call to `window.setTimeout`.\r\n\r\nIt is not very clear in the code what is the standard, as sometime we call the global `setTimeout` and sometime we call `window.setTimeout`. \r\n\r\nMy take on this is that it should be ok to always call the globals `setTimeout`/ `clearTimeout` as they are bound to be defined and are the very same functions as `window.setTimeout`/ `window.clearTimeout` in most cases.\r\n\r\nThough this PR do not change them all. I just make some 2 files more consistent where we used to use a mix of both, and I updated the `ThinEngine.QueueNewFrame` to NOT call `window.setTimeout`, but to fall back on the global `setTimeout`.\r\n\r\n\r\nTo really be \"environment  independant\", we should never call a function that is \"environment  dependant\" directly, and put them all behind a configurable callback registry. This registry would be initialized with default values, and could be customizes by the user depending on its needs. But I'm not sure how it is doable, and anyway that's another story :)\r\n",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureEditorComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13413",
                "title": "Added test for Dynamic Texture canvas context clip operation",
                "description": "## Overview\r\n\r\nAdded small test for Dynamic Texture canvas context clip operation. Babylon Native will add a similar test, I'm adding it to Babylon.js to keep tests consistent between both projects. ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/tools/tests/test/visualization/ReferenceImages/dynamicTextureClip.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "13407",
                "title": "Update meshopt_decoder.js to 0.18",
                "description": "This brings us up to the latest decoder module for meshopt contents which includes Wasm binary updates and the removal of experimental console.log message that is no longer relevant.\r\n\r\nThe update makes decoding a little faster (~5%), and the module itself a little bigger (~5%) due to the use of new LLVM toolchain.\r\n\r\nThe extra download size, however, is just 287 bytes (gzip delta).\r\n\r\nRaw numbers (Ryzen 5900X, node.js 18.12, Linux):\r\n\r\nbefore:\r\n- decodeVertex 3.54 GB/s\r\n- decodeIndex 2.05 GB/s\r\n- raw size 21781 bytes\r\n- gzip size 5868 bytes\r\n\r\nafter:\r\n- decodeVertex 3.77 GB/s\r\n- decodeIndex 2.16 GB/s\r\n- raw size 23379 bytes\r\n- gzip size 6155 bytes\r\n\r\nThe file is copied verbatim from https://github.com/zeux/meshoptimizer/blob/v0.18/js/meshopt_decoder.js",
                "author": {
                    "name": "zeux",
                    "url": "https://github.com/zeux"
                },
                "files": [
                    "packages/tools/babylonServer/public/meshopt_decoder.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13411",
                "title": "Fix 2 slider3D issues",
                "description": "The mesh used by the slider had meshes set to pickable that should not be pickable.\nThere was also an issue disposing the material as the textures were not created during construction.\n\nSee https://forum.babylonjs.com/t/xr-motion-controller-unwanted-picking-of-3d-buttons-meshes/36056/14",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/slider3D.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderThumbMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "13389",
                "title": "Add a fade out delay to FadeInOutBehavior",
                "description": "Add a fade out delay and changes to make behavior work correctly when fadeIn is triggered while the mesh is already visible/invisible or in transition.",
                "author": {
                    "name": "ericwood73",
                    "url": "https://github.com/ericwood73"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/fadeInOutBehavior.ts"
                ],
                "tags": []
            },
            {
                "pr": "13406",
                "title": "Prevent Uncaught Exception in NullEngine.dispose",
                "description": "I am having an uncaught exception when using BaylonJs in a NodeJs environment because of a call to `window.removeEventListener` from NullEngine.dispose().\r\n\r\n\r\nThis PR adds extra checks to make that `addEventListener`/`removeEventListener` do exist and are functions before calling them.\r\n\r\nThis PR comes along with https://github.com/BabylonJS/Babylon.js/pull/13401 in order to improve BabylonJs usability in non-browser environment\r\n",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13408",
                "title": "Improve pointerDragBehavior customization",
                "description": "As the details in [Babylonjs forum](https://forum.babylonjs.com/t/change-accessibility-of-dragplane-in-pointerdragbehavior-class-to-protected-to-make-it-more-extendable/37082), I have a need to customize the `pointerDragBehavior` in such a way that will allow more customization in its inherited class and remove a pitfall on how  the dragging state was handled. In order to achieve that, there're a few changes I need to make:\r\n\r\n1. Change the visibility of `_dragPlane` field from private to protected to allow more customization in the inherited class.\r\n2. Force calling `releaseDrag` if the start dragging failed to prevent the freezing (not be able to drag) due to how the dragging state is handled\r\n3. Pass the information of the active pointer in the drag observables in addition to the `pointerId`, this is to let the user have  access to more information about the pointer and it especially useful when detecting the type of the event (e.g. click, touch)",
                "author": {
                    "name": "thongth",
                    "url": "https://github.com/thongth"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13410",
                "title": "Properly notify textHighlightObservable",
                "description": "Related issue: https://forum.babylonjs.com/t/gui-ontexthighlightobservable-callback-how-to/37128/2",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputText.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13409",
                "title": "NME : Use flag IgnoreTexturesAtLoadTime in ReflectionTextureBaseBlock",
                "description": "When creating ReflectionTextureBaseBlock from a JSON NME material, if the flag NodeMaterial.IgnoreTexturesAtLoadTime is activated, this pull request prevents texture loading.\r\n\r\nThis new behavior is similar to the ones already existing in TextureBlock, ImageSourceBlock or TriPlanarBlock.",
                "author": {
                    "name": "GMM-Monumento",
                    "url": "https://github.com/GMM-Monumento"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts"
                ],
                "tags": []
            }
        ],
        "5.41.0": [
            {
                "pr": "13404",
                "title": "Fix calculation of text height in InputTextArea",
                "description": "The variables used to calculate where the text's y position would be in the InputTextArea were not using the most up-to-date measure of the control, so the position would be incorrect inside a scroll view:\r\n![image](https://user-images.githubusercontent.com/6002144/210601455-b4103773-7269-4be9-aaa0-7ad1dc01fc2b.png)\r\nWith the fix:\r\n![image](https://user-images.githubusercontent.com/6002144/210601500-6c873cf5-9035-439b-abf6-d3ebc7382dfd.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/GUI Input Text Area Inside ScrollViewer.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13394",
                "title": "GUI Editor Line Gizmo Improvements",
                "description": "This PR introduces functionality to move, drag endpoints and rotate the Lines Gizmo on the GUI Editor.\r\n\r\nWithout the change:\r\n![current-line-gizmo-behavior](https://user-images.githubusercontent.com/6002144/210366143-6ca3a67d-551c-4d27-9be4-e2aba12ce248.gif)\r\n\r\nWith the change:\r\n![new-line-gizmo-behavior](https://user-images.githubusercontent.com/6002144/210366179-e61d460b-e181-4f92-9b15-5ffc36118cc4.gif)\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/line.ts",
                    "packages/tools/guiEditor/src/diagram/gizmoLine.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoScalePoint.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "13403",
                "title": "reference files correctly",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.html"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13402",
                "title": "Gizmos use TmpVectors and exposed materials",
                "description": "fixes #13396 \r\n\r\n- Use TmpVector\r\n- expose materials so user can tweak them\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13352",
                "title": "Physics V2 plugin iteration",
                "description": "Minor updates to the plugin interface, physics debug viewer and small fixes.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": []
            },
            {
                "pr": "13397",
                "title": "Hide teleportation mesh on creation",
                "description": "This makes sure it is invisible even if the next XR frame throws an exception for any reason.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": []
            },
            {
                "pr": "13399",
                "title": "Force the control's old rect position to be invalidated before moving",
                "description": "This fixes an issue exposed by: https://github.com/BabylonJS/Babylon.js/pull/13372, where the control's previous rect was not invalidated and some remains of the rendering would be in the initial position:\r\n(Refer to https://playground.babylonjs.com/#FX4EEA#4) for an example\r\n![image](https://user-images.githubusercontent.com/6002144/210425124-332a9026-7105-49c6-a12a-a3a1debe87fd.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13365",
                "title": "Add a _internalMetadata to avoid side effects with metadata",
                "description": "See https://forum.babylonjs.com/t/circular-dependency-issue-when-exporting-to-babylon-with-khr-materials-variants/35856\r\n\r\nThe glTF loader used to use `Node.metadata` / `BaseTexture.metadata` / `Material.metadata` for internal use, preventing serialization of corresponding objects in some cases.\r\n\r\nThere is now a new `_internalMetadata` property for `Node` / `BaseTexture` / `Material` for internal use only (this property is not serialized).",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_variants.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "13398",
                "title": "Bump json5 from 1.0.1 to 1.0.2",
                "description": "Bumps [json5](https://github.com/json5/json5) from 1.0.1 to 1.0.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/json5/json5/releases\">json5's releases</a>.</em></p>\n<blockquote>\n<h2>v1.0.2</h2>\n<ul>\n<li>Fix: Properties with the name <code>__proto__</code> are added to objects and arrays. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/199\">#199</a>) This also fixes a prototype pollution vulnerability reported by Jonathan Gregson! (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/295\">#295</a>). This has been backported to v1. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/298\">#298</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/json5/json5/blob/main/CHANGELOG.md\">json5's changelog</a>.</em></p>\n<blockquote>\n<h3>Unreleased [<a href=\"https://github.com/json5/json5/tree/main\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.2.3...HEAD\">diff</a>]</h3>\n<h3>v2.2.3 [<a href=\"https://github.com/json5/json5/tree/v2.2.3\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.2.2...v2.2.3\">diff</a>]</h3>\n<ul>\n<li>Fix: json5@2.2.3 is now the 'latest' release according to npm instead of\nv1.0.2. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/299\">#299</a>)</li>\n</ul>\n<h3>v2.2.2 [<a href=\"https://github.com/json5/json5/tree/v2.2.2\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.2.1...v2.2.2\">diff</a>]</h3>\n<ul>\n<li>Fix: Properties with the name <code>__proto__</code> are added to objects and arrays.\n(<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/199\">#199</a>) This also fixes a prototype pollution vulnerability reported by\nJonathan Gregson! (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/295\">#295</a>).</li>\n</ul>\n<h3>v2.2.1 [<a href=\"https://github.com/json5/json5/tree/v2.2.1\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.2.0...v2.2.1\">diff</a>]</h3>\n<ul>\n<li>Fix: Removed dependence on minimist to patch CVE-2021-44906. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/266\">#266</a>)</li>\n</ul>\n<h3>v2.2.0 [<a href=\"https://github.com/json5/json5/tree/v2.2.0\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.1.3...v2.2.0\">diff</a>]</h3>\n<ul>\n<li>New: Accurate and documented TypeScript declarations are now included. There\nis no need to install <code>@types/json5</code>. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/236\">#236</a>, <a href=\"https://github-redirect.dependabot.com/json5/json5/issues/244\">#244</a>)</li>\n</ul>\n<h3>v2.1.3 [<a href=\"https://github.com/json5/json5/tree/v2.1.3\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.1.2...v2.1.3\">diff</a>]</h3>\n<ul>\n<li>Fix: An out of memory bug when parsing numbers has been fixed. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/228\">#228</a>,\n<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/229\">#229</a>)</li>\n</ul>\n<h3>v2.1.2 [<a href=\"https://github.com/json5/json5/tree/v2.1.2\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.1.1...v2.1.2\">diff</a>]</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/json5/json5/commit/a62db1e51e1031d92ac260f5bb38bbed1fdbc754\"><code>a62db1e</code></a> 1.0.2</li>\n<li><a href=\"https://github.com/json5/json5/commit/e0c23fe458a77c0b2cdb271376be5d8d0908133c\"><code>e0c23fe</code></a> docs: update CHANGELOG for v1.0.2</li>\n<li><a href=\"https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\"><code>62a6540</code></a> fix: add <strong>proto</strong> to objects and arrays</li>\n<li>See full diff in <a href=\"https://github.com/json5/json5/compare/v1.0.1...v1.0.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=json5&package-manager=npm_and_yarn&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.40.1": [
            {
                "pr": "13395",
                "title": "Allow loading unicode-based playgrounds in older versions",
                "description": "There is sadly no way around it, as the function we are using was only introduced in 5.X, so 4.X playgrounds won't load correctly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/loadManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13393",
                "title": "Release 5.39.0 Has IPhysicsEnginePLugin Errors",
                "description": "Fixes #13378\nThe UMD declaration combines all declarations in the core repo to a single file. The issue with that is that interfaces that have the same name collide.\nThis is a UMD-only issue.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Physics/IPhysicsEngine.ts",
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v2/physicsMaterial.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts"
                ],
                "tags": []
            },
            {
                "pr": "13392",
                "title": "Fix font style options on gui editor.",
                "description": "Font style should follow the CSS spec: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style, so it should be \"normal\" instead of regular.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13385",
                "title": "ShadowDepthWrapper: Remove unneeded code",
                "description": "Closes #13381 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/shadowDepthWrapper.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13390",
                "title": "TaskManager.addTextureTask: Fix doc",
                "description": "See https://forum.babylonjs.com/t/texture-applies-incorrectly-but-refresh-button-helps/36984/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/assetsManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.40.0": [
            {
                "pr": "13386",
                "title": "Hold shift when resizing to lock aspect ratio in GUI Editor",
                "description": "![ezgif com-gif-maker](https://user-images.githubusercontent.com/6002144/209701953-70090782-8add-43bb-93cf-762c354d64dd.gif)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/math2D.ts",
                    "packages/tools/guiEditor/src/diagram/gizmoGeneric.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "13384",
                "title": "Add a parameter to CreateScreenshotUsingRenderTarget(Async) to allow …",
                "description": "…layer mask checking\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/screenshot-and-layermask-problems-after-13040/36894\r\nExample Playground: #VET9Q9#1\r\n\r\nWith this, the screenshot RTT will take into account the camera's layer mask (matching the previous screenshot behavior that didn't set the render list), but it will also be possible to turn this behavior off.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13383",
                "title": "Add some comments on docs reinforcing that it's only possible to upda…",
                "description": "…te gizmo rotation on mesh when scaling is uniform.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/unable-to-use-a-rotation-gizmo-matching-mesh-rotation-with-non-uniform-scaling/36910",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13382",
                "title": "More defensive handling of name property in Inspector",
                "description": "Related forum issue: https://forum.babylonjs.com/t/debugger-layout-inspector-crash-after-opening-material-tab/36895",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/tools.ts"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13380",
                "title": "Change GUI Editor default image URL",
                "description": "The previous URL couldn't be accessed if the GE was opened through the Playground, leading to an invalid image.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/guiNodeTools.ts"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13379",
                "title": "Don't serialize internal shader materials",
                "description": "See https://forum.babylonjs.com/t/colorshader-and-colorshaderoccquery-kept-after-serialize/36870\r\n\r\nWe should not serialize those materials as they will be recreated automatically when needed.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/linesMesh.ts",
                    "packages/dev/core/src/Rendering/boundingBoxRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13377",
                "title": "Fix crash when calling getGlowLayerByName when no effects have been created yet",
                "description": "See https://forum.babylonjs.com/t/scene-getglowlayerbyname-throws-undefined-reading-length-exception/36849",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Layers/glowLayer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13376",
                "title": "Fix doc comment for audio listener rotation provider",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioSceneComponent.ts"
                ],
                "tags": []
            },
            {
                "pr": "13373",
                "title": "Fix audio offset issues",
                "description": "Related forum issues:\r\n- https://forum.babylonjs.com/t/pausing-and-playing-an-audio-with-offset-restarts-it-from-the-beginning-instead-of-the-current-position/36668\r\n- https://forum.babylonjs.com/t/audio-seek-functionality-missing/36532",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "bug",
                    "audio"
                ]
            },
            {
                "pr": "13375",
                "title": "Add audioListenerRotationProvider",
                "description": "https://forum.babylonjs.com/t/spatial-sound-listener-orientation-audiolistenerpositionprovider/36771",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioSceneComponent.ts"
                ],
                "tags": [
                    "enhancement",
                    "audio"
                ]
            },
            {
                "pr": "13371",
                "title": "Material plugins: Allow custom flags when injecting code with regexp",
                "description": "See https://forum.babylonjs.com/t/how-to-write-a-materialplugin-regex-that-will-find-and-replace-multiple-lines/36794/2\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginManager.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13374",
                "title": "Workaround Tabs css name conflict",
                "description": "https://forum.babylonjs.com/t/about-color-of-input-field-in-inspector/26686/9",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/actionTabs.scss",
                    "packages/dev/inspector/src/components/actionTabs/tabsComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13372",
                "title": "If a new control is added on root, call the camera update function to…",
                "description": "… update the positions of controls linked to meshes.\r\n\r\nThis is to fix a issue when the camera is moved while new controls are being added, and some of them are linked to a mesh, their positions have to be properly updated again.\r\n\r\nExample PG: https://playground.babylonjs.com/#XCPP9Y#16922",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13369",
                "title": "Allow accessing private fields and methods of SPS",
                "description": "Related forum post: https://forum.babylonjs.com/t/accessing-private-fields-when-extending-sps/36729",
                "author": {
                    "name": "s207152",
                    "url": "https://github.com/s207152"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": []
            }
        ],
        "5.39.0": [
            {
                "pr": "13368",
                "title": "Add Transpose and Determinant matrix blocks",
                "description": "Closes #13354",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/matrixDeterminantBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/matrixTransposeBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13366",
                "title": "Mesh indices are not passed into trianglePredicate",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13363",
                "title": "LineMesh: Fix the signature of dispose",
                "description": "See https://forum.babylonjs.com/t/best-way-to-keep-dash-size-constant/36631/19\r\n\r\nI added the `disposeMaterialAndTextures` parameter to be in line with the base class signature but don't use it to keep backward compatibility.\r\n\r\nFollow-up to #13358 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/linesMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13362",
                "title": "Fix PBR Emissive with lightmap",
                "description": "https://forum.babylonjs.com/t/emissive-vs-lightmaps-channels/36445/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockFinalColorComposition.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13358",
                "title": "LineMesh: Add an option to not dispose the material",
                "description": "See https://forum.babylonjs.com/t/best-way-to-keep-dash-size-constant/36631/16",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/linesMesh.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13360",
                "title": "docs: ES6 packages installation note in README.md",
                "description": "IMO, this added note in the installation documentation can clear possible confusion between using 'babylonjs' and using its '@babylonjs/core' counterpart.\r\n\r\nAn example for this possible confusion can be seen in [this](https://forum.babylonjs.com/t/difference-between-babylonjs-and-babylonjs-npm-packages/28380/4) forum question.\r\n\r\nI think the reason this can be confusing is that some NPM packages use a none-scoped package such as 'package-name' that uses a scoped package ('@scope/package-name') behind the scenes. With `Babylon.js`, this is not the case, you can use one or the other, the original package or its ES6 counterpart, not both.\r\n\r\nThis note clears this up. \r\n\r\nPerhaps even add a complete section to emphasis the ES6 version installation process? Will the ES6 version be the recommended go-to version in the near future?",
                "author": {
                    "name": "dht",
                    "url": "https://github.com/dht"
                },
                "files": [
                    "readme.md"
                ],
                "tags": []
            },
            {
                "pr": "13359",
                "title": "RenderTargetTexture: Add forceLayerMaskCheck property",
                "description": "See https://forum.babylonjs.com/t/rendertargettexture-camera-potential-issues/36689",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13356",
                "title": "Fix bug in glTF animation export",
                "description": "See https://forum.babylonjs.com/t/able-to-corrupt-gltf-file-by-adding-an-animation-that-rotates/36620.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts"
                ],
                "tags": [
                    "bug",
                    "exporters",
                    "glTF"
                ]
            },
            {
                "pr": "13340",
                "title": "Fix rtt option default",
                "description": "The generateDepthBuffer option should default to true when using an options object to be consistent with the full parameters constructor.\r\n\r\nThe options constructor was introduced recently in #13275, so I assume this was just a small oversight.",
                "author": {
                    "name": "thscott",
                    "url": "https://github.com/thscott"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13355",
                "title": "VolumetricLightScattering: Add support for included only meshes",
                "description": "See https://forum.babylonjs.com/t/meshinclude-for-volumetric-light-scattering-postprocess/36664",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13353",
                "title": "Rework Scene and GUI Editor connection",
                "description": "Currently, when a GUI Editor instance is opened through the Inspector, all existing controls on the Scene are removed and then re-added to both the \"live\" scene and the editor scene. This has been causing variety of problems, such as:\r\n\r\n- When a control in the editor is scaled, it doesn't update visually on the live scene\r\n- If a control in the live scene is linked to a mesh, it loses that connection after the editor is opened\r\n- Scroll viewers on the live scene lose scroll functionality once the editor is opened\r\n- Controls on the live scene changed size because the editor scene could have a different size \r\n\r\nThis PR introduces a new approach, such as when the editor is opened, the \"live\" scene's Controls are cloned and the clones added to the editor scene. Then, it periodically executes the opposite operation, cloning the editor controllers and adding them to the live scene.  ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/tools/guiEditor/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoGeneric.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13351",
                "title": "Some examples for matrices",
                "description": "Examples for some methods for Matrix Class. Changes to comments only.",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13349",
                "title": "DepthRenderer: Allow passing the sampling mode to the scene depth renderer",
                "description": "See https://forum.babylonjs.com/t/flickering-issue-when-sampling-depth-in-chromium-browsers-but-not-other-browsers/36299/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthRendererSceneComponent.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13350",
                "title": "Move since-tag changes to the version update process",
                "description": "The changes from yesterday were correct, but cannot run in a different CI step because otherwise there will be two commits for the version update. To avoid that, the since-tag is now updated as part of the version-update process - engine version, changlog and now since-tag. \nThere is no reason to run this outside of this step.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/updateSinceTag.js",
                    "scripts/updateVersion.js"
                ],
                "tags": []
            },
            {
                "pr": "13348",
                "title": "Allow adding a dynamic @since tag that adjusts automatically",
                "description": "Fixes #13209\r\n\r\nThis script will be running during the publish CI process and update all tags marked with @since with nothing after (newline only) something like this:\r\n\r\n```javascript\r\n/**\r\n * This function does nothing, please use it as much as you want\r\n * @since\r\n */\r\nbuyNFT();\r\n```\r\n\r\nIf there is anything after the @since tag it will not be processed.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/updateSinceTag.js"
                ],
                "tags": []
            }
        ],
        "5.38.0": [
            {
                "pr": "13346",
                "title": "Update dependencies",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/tools/testsMemoryLeaks/src/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "13347",
                "title": "NME: Allow 3 textures for the TriPlanar block",
                "description": "See https://forum.babylonjs.com/t/triplanar-shader-strange-behavior-when-meshs-are-translated-possible-bug/17985/4\r\n\r\nIn order to be able to replace the `TriPlanar` material, I added the possibility to give additional textures for the Y and Z axis.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/biPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialConnectionPointCustomObject.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13344",
                "title": "Output linting errors and warning to pipelines",
                "description": "Adds the lint:check-ci NPM script which when run from a continuous integration environment will output linting errors and warnings to the pipeline.\r\n\r\n**Important Note** The pipeline will need to have its linting command updated as well.",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "package.json"
                ],
                "tags": []
            },
            {
                "pr": "13343",
                "title": "EffectLayer: Allows to set the type of the main texture",
                "description": "See https://forum.babylonjs.com/t/setting-the-type-of-effectlayer-main-texture/36512",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Layers/glowLayer.ts",
                    "packages/dev/core/src/Layers/highlightLayer.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13342",
                "title": "NME: Add a CSS class to all graph nodes",
                "description": "Use this new feature to widen the `LightInformationBlock`.\r\n\r\nCloses #13329 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/main.scss"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13339",
                "title": "NME: Fix of input types allowed for some blocks",
                "description": "See https://forum.babylonjs.com/t/procedural-mode-not-working-in-nme/36447\r\n\r\nThat's a fix of #13328.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/fogBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/screenSpaceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/shadowMapBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/reflectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13341",
                "title": "Update 4.2.1 to host from CDN",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.37.0": [
            {
                "pr": "13325",
                "title": "Add Fullscreen ADT to HTMLTwinRenderer",
                "description": "Currently the HTMLTwinRenderer won't render a fullscreen ADT. This PR adds this capability.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "13335",
                "title": "NME: Fix reusing the same temporary variable name in TextureBlock",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13334",
                "title": "fix missing plugin when enabling physics",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts"
                ],
                "tags": []
            },
            {
                "pr": "13317",
                "title": "The STL loader flips the faces",
                "description": "The current code loads STL files with faces flipped for the following combinations (RH for `useRightHandedSystem`, NO_ALTER for `DO_NOT_ALTER_FILE_COORDINATES`):\r\n|&nbsp;|NO_ALTER-true | NO_ALTER-false |\r\n|---|---|---|\r\n| RH-true | good | bad |\r\n| RH-false | bad | good |\r\n\r\nThe correct combination for whether flip the face indices is like the following table, which means, we should only detect `DO_NOT_ALTER_FILE_COORDINATES` but not `useRightHandedSystem`:\r\n|&nbsp;|NO_ALTER-true | NO_ALTER-false |\r\n|---|---|---|\r\n| RH-true | flip | no-flip |\r\n| RH-false | flip | no-flip |\r\n",
                "author": {
                    "name": "YusakuNo1",
                    "url": "https://github.com/YusakuNo1"
                },
                "files": [
                    "packages/dev/loaders/src/STL/stlFileLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13333",
                "title": "Make sure BONETEXTURE is always set with a value when supported",
                "description": "See https://forum.babylonjs.com/t/chrome-visual-glitch-when-baking-and-nulling-mesh-skeleton/36372",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13328",
                "title": "NME: Add a rgb output to the ImageProcessing block",
                "description": "The PR also changes the `color` input type to **AutoDetect** to make it clear that it accepts multiple types.\r\n\r\nWhile I was at it, I also updated some inputs in some blocks to **AutoDetect** for the same reason as above.\r\n\r\nCloses BabylonJS/ThePirateCove#296\r\n\r\nNote:\r\n\r\nThe test fix is due to the fact that this test is quite old and the node material generated code used the old way of connecting blocks together: we didn't use the name of the source output or the name of the input to be connected, the system selected them automagically. But this could fail in a number of ways, and we switched to a more robust system where we explicitely name the output of the source block and the input of the connecting block. The changes took place in October 2019.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/currentScreenBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/fogBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragmentOutputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/imageProcessingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/screenSpaceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/shadowMapBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/reflectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Particle/particleTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/gradientBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/normalBlendBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/randomNumberBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/reflectBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/refractBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/Enums/nodeMaterialBlockConnectionPointTypes.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13331",
                "title": "allow independent video sources in VideoTexture",
                "description": "Fixed #13324",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13332",
                "title": "VirtualJoystick - Stop iterating when canvas is released",
                "description": "See https://forum.babylonjs.com/t/freecameravirtualjoystickinput-joystick-images-stuck-on-screen/36337",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/virtualJoystick.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13330",
                "title": "ArcRotateCamera: Fix lower and upper beta limit type",
                "description": "See https://forum.babylonjs.com/t/arcrotatecamera-alpha-rotation-inverted-in-certain-beta-range/36357",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            }
        ],
        "5.36.0": [
            {
                "pr": "13327",
                "title": "Fix: ACE always opening with the first targeted animation selected",
                "description": "Fix #13316",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/targetedAnimationPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13326",
                "title": "NME: fixed slowdowns when working in the editor",
                "description": "Slowdowns could occur when using too many or too large textures, because texture data was always serialized when going back and forth with the preview window. Now texture data is serialized only when necessary.\r\n\r\nIn addition, throttling has been added when updating the title/comment of a node to avoid updating the preview window too often (previously, with each keystroke) and slowing down the process.\r\n\r\nCloses BabylonJS/ThePirateCove#280",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/textureBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildStateSharedData.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13320",
                "title": "When rendering in a multi-canvas setup, always render the input view …",
                "description": "…last, so that the canvas size is set correctly for picking later.\r\nRelated forum issue: https://forum.babylonjs.com/t/in-the-combination-of-multi-canvas-and-3d-gui-problems-occur-in-3d-gui-pointer-position-detection-due-to-the-execution-order-of-registerview/36262/6\r\n\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13322",
                "title": "Mirror: Fix rendering when cullBackFaces is false",
                "description": "See https://forum.babylonjs.com/t/mirrortexture-render-cullbackface-as-cullfrontface/36336",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/mirrorTexture.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13323",
                "title": "clear metadata when a new pg is created",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13279",
                "title": "PhysicsPlugin refactor",
                "description": "Goal of this PR: move physics to v1, add v2 folder. keep existing working (back compat). \r\n\r\nAll current physics moved to `physics/v1`. New stuff in `physics/v2`. Shared things are in `physics/`\r\n- v1 and v2 have different names (body/shape/material/constraint in V2 and impostor/joint in V1) and different concepts\r\n- Have an helper `PhysicsAggregate` that will contain a body, a material and a shape that can be created by 1 call (just like existing v1)\r\n\r\nOn the Babylon side, Material, shape, body are opaque proxies. Real work is done in the plugin. Plugin stores its references thanks to `public _pluginData: any = undefined;`\r\n\r\nPhysicsViewer, mesh,....still using v1.\r\n\r\nTested with PG from documentation and PhysicsDebug Viewer.\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Physics/IPhysicsEngine.ts",
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/index.ts",
                    "packages/dev/core/src/Physics/physicsEngine.ts",
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/physicsHelper.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts",
                    "packages/dev/core/src/Physics/physicsJoint.ts",
                    "packages/dev/core/src/Physics/v1/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/index.ts",
                    "packages/dev/core/src/Physics/v1/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/v1/index.ts",
                    "packages/dev/core/src/Physics/v1/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v1/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v1/physicsHelper.ts",
                    "packages/dev/core/src/Physics/v1/physicsImpostor.ts",
                    "packages/dev/core/src/Physics/v1/physicsJoint.ts",
                    "packages/dev/core/src/Physics/v2/IPhysicsEnginePlugin.ts",
                    "packages/dev/core/src/Physics/v2/Plugins/index.ts",
                    "packages/dev/core/src/Physics/v2/index.ts",
                    "packages/dev/core/src/Physics/v2/physicsAggregate.ts",
                    "packages/dev/core/src/Physics/v2/physicsBody.ts",
                    "packages/dev/core/src/Physics/v2/physicsConstraint.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngine.ts",
                    "packages/dev/core/src/Physics/v2/physicsEngineComponent.ts",
                    "packages/dev/core/src/Physics/v2/physicsMaterial.ts",
                    "packages/dev/core/src/Physics/v2/physicsShape.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPhysics.ts",
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/debugTabComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            },
            {
                "pr": "13321",
                "title": "InputManager: Update logic for detecting when to pick",
                "description": "In the forum, there was an issue found where particle picking wasn't working properly.  It was determined that there was an issue with the function used to define when picking would happen.  This PR fixes that issue.  Additionally, tests have been added to check for this in future PRs.\r\n\r\nForum Link: https://forum.babylonjs.com/t/picking-particles-in-sps-bug/36259/6",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13318",
                "title": "Particle System: Add a parameter to also clone textures when cloning a particle system",
                "description": "See https://forum.babylonjs.com/t/texture-is-not-set-when-cloning-a-particle-system/36280",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts"
                ],
                "tags": [
                    "enhancement",
                    "particles"
                ]
            },
            {
                "pr": "13319",
                "title": "Fix bad uniform scale check for rotation gizmo",
                "description": "fixes #13315 \r\n\r\nuniform scaling check was not taking negative component properly. Added a comment for future me.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts"
                ],
                "tags": [
                    "bug",
                    "gizmos"
                ]
            },
            {
                "pr": "13303",
                "title": "Support KHR_materials_emissive_stength in glTF export",
                "description": "This PR adds support for the glTF extension KHR_materials_emissive_strength to be exported.\r\n\r\nModel used for testing: [link](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/EmissiveStrengthTest)",
                "author": {
                    "name": "tboggs300",
                    "url": "https://github.com/tboggs300"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_emissive_strength.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts"
                ],
                "tags": [
                    "enhancement",
                    "exporters",
                    "glTF"
                ]
            },
            {
                "pr": "13291",
                "title": "Add a Fluid Renderer component",
                "description": "Sorry, big PR (but I didn't really have a choice)!\r\n\r\nI still need to update the documentation repo and port the demos to the playground.\r\n\r\nRegarding `FluidRenderingGUI`, it is a debug class which is using the LiLGUI package...\r\n\r\nIt was the easiest and fastest way to provide a debug UI when I did it as a standalone project, but now that the classes are merged into Babylon.js, it should probably be a component of the inspector... However, it's not a small task and I'm not a React expert, so I have not done it as part of this PR.\r\n\r\nIf we don't want to reference the LiLGUI package from `FluidRenderingGUI`, maybe I should remove the class and add it in the documentation for users as a debugging tool?\r\n\r\nCloses #13087 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/copyTextureToTexture.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderer.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingDepthTextureCopy.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingObject.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingObjectCustomParticles.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingObjectParticleSystem.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingTargetRenderer.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/fluidRenderingTextures.ts",
                    "packages/dev/core/src/Rendering/fluidRenderer/index.ts",
                    "packages/dev/core/src/Rendering/index.ts",
                    "packages/dev/core/src/Shaders/copyTextureToTexture.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingBilateralBlur.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleDepth.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleDepth.vertex.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleDiffuse.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleDiffuse.vertex.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleThickness.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingParticleThickness.vertex.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingRender.fragment.fx",
                    "packages/dev/core/src/Shaders/fluidRenderingStandardBlur.fragment.fx",
                    "packages/dev/core/src/sceneComponent.ts",
                    "packages/tools/playground/public/textures/flare32bits.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/fluidBoxSphere.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/fluidParticleSystem.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13307",
                "title": "Fix: Animation Groups not showing the correct current frame value in …",
                "description": "…the Inspector. Fix: When playing an animation group in the Inspector, other groups in the same scene were being paused.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/loading-character-with-animations-to-scene-and-cloning-it-with-animation-groups/19685/14",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationGroupPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13305",
                "title": "Call the KHR_texture_transform exporter when exporting a GLTF file",
                "description": "Related issue: https://forum.babylonjs.com/t/glb-export-uv-mapping-not-saving/36140\r\nYou can use this playground that exports and imports some textured planes to compare the expected results: https://playground.babylonjs.com/#20OAV9#9228 (also added as a visualization test)",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_texture_transform.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/exportGltfKHRTextureTransform.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "exporters",
                    "glTF"
                ]
            },
            {
                "pr": "13311",
                "title": "Scene: Make sure dispose cleans up everything even if running custom code raises an exception",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13312",
                "title": "Add playback rate getter",
                "description": "https://forum.babylonjs.com/t/sound-playbackrate-requires-getter/36241/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "enhancement",
                    "audio"
                ]
            },
            {
                "pr": "13314",
                "title": "update image from snapshot",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/ReferenceImages/node-material1.png"
                ],
                "tags": []
            },
            {
                "pr": "13309",
                "title": "Bump decode-uri-component from 0.2.0 to 0.2.2",
                "description": "Bumps [decode-uri-component](https://github.com/SamVerschueren/decode-uri-component) from 0.2.0 to 0.2.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/SamVerschueren/decode-uri-component/releases\">decode-uri-component's releases</a>.</em></p>\n<blockquote>\n<h2>v0.2.2</h2>\n<ul>\n<li>Prevent overwriting previously decoded tokens  980e0bf</li>\n</ul>\n<p><a href=\"https://github.com/SamVerschueren/decode-uri-component/compare/v0.2.1...v0.2.2\">https://github.com/SamVerschueren/decode-uri-component/compare/v0.2.1...v0.2.2</a></p>\n<h2>v0.2.1</h2>\n<ul>\n<li>Switch to GitHub workflows  76abc93</li>\n<li>Fix issue where decode throws - fixes <a href=\"https://github-redirect.dependabot.com/SamVerschueren/decode-uri-component/issues/6\">#6</a>  746ca5d</li>\n<li>Update license (<a href=\"https://github-redirect.dependabot.com/SamVerschueren/decode-uri-component/issues/1\">#1</a>)  486d7e2</li>\n<li>Tidelift tasks  a650457</li>\n<li>Meta tweaks  66e1c28</li>\n</ul>\n<p><a href=\"https://github.com/SamVerschueren/decode-uri-component/compare/v0.2.0...v0.2.1\">https://github.com/SamVerschueren/decode-uri-component/compare/v0.2.0...v0.2.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/a0eea469d26eb0df668b081672cdb9581feb78eb\"><code>a0eea46</code></a> 0.2.2</li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152\"><code>980e0bf</code></a> Prevent overwriting previously decoded tokens</li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/3c8a373dd4837e89b3f970e01295dd03e1405a33\"><code>3c8a373</code></a> 0.2.1</li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/76abc939783fe3900fadb7d384a74d324d5557f3\"><code>76abc93</code></a> Switch to GitHub workflows</li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\"><code>746ca5d</code></a> Fix issue where decode throws - fixes <a href=\"https://github-redirect.dependabot.com/SamVerschueren/decode-uri-component/issues/6\">#6</a></li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/486d7e26d3a8c0fbe860fb651fe1bc98c2f2be30\"><code>486d7e2</code></a> Update license (<a href=\"https://github-redirect.dependabot.com/SamVerschueren/decode-uri-component/issues/1\">#1</a>)</li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/a65045724e6234acef87f31da499d4807b20b134\"><code>a650457</code></a> Tidelift tasks</li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/66e1c2834c0e189201cb65196ec3101372459b02\"><code>66e1c28</code></a> Meta tweaks</li>\n<li>See full diff in <a href=\"https://github.com/SamVerschueren/decode-uri-component/compare/v0.2.0...v0.2.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=decode-uri-component&package-manager=npm_and_yarn&previous-version=0.2.0&new-version=0.2.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "13310",
                "title": "typedoc update for POV methods",
                "description": null,
                "author": {
                    "name": "ssatguru",
                    "url": "https://github.com/ssatguru"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            }
        ],
        "5.35.1": [
            {
                "pr": "13308",
                "title": "Fix restore context in WebGL1 when using non POT textures",
                "description": "See https://forum.babylonjs.com/t/context-restore-for-textures-with-bloburl-not-working/36114/7",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13306",
                "title": "Fixed NativeEngine render target assignment",
                "description": "Native engine is currently not assingning the new texture passed in bindFrameBuffer to its _currentRenderTarget. This will result in NaN values for camera's projection matrix since it uses the engine.getRenderWidth() and engine.getRenderHeight() and those values will be zero. \r\n\r\nStoring _currentRenderTarget fixes the problem. ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13275",
                "title": "Support create RTT from internal texture directly",
                "description": "Currently, once a hardware texture is wrapped with `engine.wrapWebGLTexture`/`engine.wrapWebGPUTexture`/`engine.wrapNativeTexture`, there is no way to create a render target from it. With this change it is now possible.\r\n\r\nAlso cleaned up the code quite a bit to make web and native engines more consistent.\r\n\r\nThere is also a corresponding change on the Babylon Native side: https://github.com/BabylonJS/BabylonNative/pull/1173.\r\n\r\nNote that there is PROTOCOL_VERSION change in both PRs.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTargetCube.ts",
                    "packages/dev/core/src/Engines/Native/nativeHardwareTexture.ts",
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/Native/nativePipelineContext.ts",
                    "packages/dev/core/src/Engines/Native/nativeRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTargetCube.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureCreationOptions.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "5.35.0": [
            {
                "pr": "13302",
                "title": "Enabling gizmo when NME is open renders gizmo in NME preview panel instead of scene",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/entities/sceneTreeItemComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13300",
                "title": "Preserve camera control settings when reattaching camera controls",
                "description": "This PR addressed the issue I described in https://forum.babylonjs.com/t/boundingboxgizmo-does-not-respect-panning-button-when-reattaching-camera/36118",
                "author": {
                    "name": "ericwood73",
                    "url": "https://github.com/ericwood73"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/baseSixDofDragBehavior.ts"
                ],
                "tags": [
                    "bug",
                    "gizmos"
                ]
            },
            {
                "pr": "13299",
                "title": "Fix Texture rebuild on context lost",
                "description": "https://forum.babylonjs.com/t/context-restore-for-textures-with-bloburl-not-working/36114",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13298",
                "title": "Fix teleportation bug When changing controllers",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": []
            },
            {
                "pr": "13297",
                "title": "clear as default when in layers multiview",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13295",
                "title": "InputManager: Fix Order and Execution of onPrePointerObservable",
                "description": "A user on the forum had pointed out that there was an issue with how `onPrePointerObservable` was handling types and skipping for `onPointerObservable`.  After investigating the areas pointed out by the user and their proposed solutions, we were able to determine that there was an issue with `onPrePointerObservable` and how it interacted with `onPointerObservable`.\r\n\r\nThis PR not only contains the proposed fixes but also changes the order that UP and TAP/DOUBLETAP are executed to reflect a similar order to how PointerEvents are processed (`pointerup` happens before `click`).\r\n\r\nForum Link: https://forum.babylonjs.com/t/prepointerobservable-pointertap-fired-after-drag-when-skiponpointerobservable-true/35691/2",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13284",
                "title": "KTXDecoder: Update and add new universal transcoders",
                "description": "Fixes #12002 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/msc_basis_transcoder.js",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/msc_basis_transcoder.wasm",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/uastc_astc.wasm",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/uastc_bc7.wasm",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/uastc_r8_unorm.wasm",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/uastc_rg8_unorm.wasm",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/uastc_rgba8_srgb_v2.wasm",
                    "packages/tools/babylonServer/public/ktx2Transcoders/1/uastc_rgba8_unorm_v2.wasm",
                    "packages/tools/babylonServer/src/ktx2Decoder/index.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_ASTC.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_BC7.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_R8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RG8_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_SRGB.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/liteTranscoder_UASTC_RGBA_UNORM.ts",
                    "packages/tools/ktx2Decoder/src/Transcoders/mscTranscoder.ts",
                    "packages/tools/ktx2Decoder/src/ktx2Decoder.ts",
                    "packages/tools/ktx2Decoder/src/transcodeDecisionTree.ts",
                    "packages/tools/ktx2Decoder/src/transcoder.ts"
                ],
                "tags": [
                    "enhancement",
                    "glTF"
                ]
            },
            {
                "pr": "13293",
                "title": "Cameras: Modified cameras to work under onPointerObservable",
                "description": "A user on the forums recently found an issue related to `onPointerObservable` where skipNextObservers weren't working as they used to.  This issue was a side effect of an optimization make in support of Lazy Picking.  This optimization would take all internal camera inputs and remove them from the user-facing `onPointerObservable`.  This would cause the camera input observers to be inaccessible in the same way.  This PR will add them back to `onPointerObservable` but keep track of how many camera input observers have been added and require either user-defined observer as part of the criteria for picking.\r\n\r\nForum Post: https://forum.babylonjs.com/t/no-longer-able-to-cancel-camera-inputs-with-new-oncamerainputobservable/35793",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.freeCameraInputs.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13280",
                "title": "remove prepublish step, fix node.js issue on windows",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/addJSToCompiledFiles.ts",
                    "packages/dev/buildTools/src/copyAssets.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/prepareEs6Build.ts",
                    "packages/dev/gui/package.json",
                    "packages/dev/inspector/package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/public/@babylonjs/core/node.cmd",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/shared-ui-components/package.json",
                    "packages/public/@babylonjs/shared-ui-components/tsconfig.build.json",
                    "packages/public/@babylonjs/viewer/package.json",
                    "packages/public/@babylonjs/viewer/tsconfig.build.json",
                    "packages/tools/accessibility/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13281",
                "title": "Add static Reflect function to Vector3",
                "description": "This adds a static function to Vector3 to Reflect a vector off the plane defined by a normal",
                "author": {
                    "name": "AlvaroHerreroDev",
                    "url": "https://github.com/AlvaroHerreroDev"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13290",
                "title": "Test the PickingInfo class",
                "description": "See https://github.com/BabylonJS/Babylon.js/pull/13269\r\n\r\nThe getTextureCoordinates method don't return normal of pickedSprite if it is picked. Is it correct baheviour?",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/test/unit/Collisions/babylon.pickingInfo.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13289",
                "title": "RTT: Make sure we increment scene frameId even in \"check readiness\" mode",
                "description": "See https://forum.babylonjs.com/t/cube-rendertargettexture-cameras-inverty-and-rendering/35999/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13288",
                "title": "PBRBaseMaterial fix getAnimatables JSDoc",
                "description": "Updates after changes here https://github.com/BabylonJS/Babylon.js/pull/13276/files#diff-239207fce5e96cbc0a17abc8f42802e31cb87e9d4fab70be77f697b789df0112",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/test/unit/Materials/PBR/babylon.PBRMaterial.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13287",
                "title": "Bump: Fix black spots in bump when no uv gradients",
                "description": "See https://forum.babylonjs.com/t/grain-flickering-on-glb-model-with-grain-disabled-and-enabled/35942/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/bumpFragmentMainFunctions.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13286",
                "title": "Ensure bloom blur size is consistent across hardware scaling levels",
                "description": "The default rendering pipeline seemed like it was attempting to normalize the bloom blur kernel by the hardware scaling level, but it only took it into account when the hardware scaling level changes at runtime and didn't factor it in upon creation or when constructing the bloom effect itself.\r\n\r\nI think the idea to keep the bloom size consistent across different hardware scaling levels is the right idea, but the code needs to change a bit to account for this.\r\n\r\nTo show the difference:\r\n\r\n| Starting hardware scale | Before | After |\r\n| --- | --- | --- |\r\n| 1x | ![image](https://user-images.githubusercontent.com/20366429/204055178-0bf27171-6da8-4012-a48e-d128aa3a4d05.png) ✅  |  ![image](https://user-images.githubusercontent.com/20366429/204055427-14b6491a-c1af-4632-90c4-f18ec8ba8b1c.png) ✅ |\r\n| 2x | ![image](https://user-images.githubusercontent.com/20366429/204055206-640b8bbb-9272-4c64-8578-506d6cb5f439.png) ❌ |  ![image](https://user-images.githubusercontent.com/20366429/204055264-06ecfcbe-42fa-4bdd-a6e7-f3658d91c32b.png) ✅  |\r\n\r\nNotice the bottom left before image of 2x scale has a bloom that is much wider and blurrier, rather than matching the 1x scale.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13285",
                "title": "Test babylon scene materials",
                "description": "See https://github.com/BabylonJS/Babylon.js/pull/13277 from @sebavan \r\nHere I added some tests for scene materials, note to the method, fix typos and simplify methods bodies.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/babylon.scene.materials.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13282",
                "title": "Mesh: Add forceWorldMatrixInstancedBufferUpdate property",
                "description": "See https://forum.babylonjs.com/t/webgpu-instancing-does-not-render/31622/4\r\n\r\nInstead of creating a new method I have added a boolean that forces updating the matrix buffer even in frozen mode.\r\n\r\nFix #12780 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13283",
                "title": "Observable: Do not include deleted observers in hasObservers result",
                "description": "See https://forum.babylonjs.com/t/observable-hasobservers-is-still-true-after-removing-all-the-observers/35987\r\n\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/observable.ts"
                ],
                "tags": [
                    "bug",
                    "design"
                ]
            }
        ],
        "5.34.0": [
            {
                "pr": "13278",
                "title": "define engine and canvas as globals",
                "description": "https://forum.babylonjs.com/t/code-completion-for-the-engine-in-the-playground/35525",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": [
                    "Playground",
                    "new feature"
                ]
            },
            {
                "pr": "13277",
                "title": "Add multi material in material search",
                "description": "https://forum.babylonjs.com/t/how-to-find-a-multimaterial-by-its-name/35906/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13272",
                "title": "NME: multiple changes to support ray marching in the NME",
                "description": "The main changes are that some blocks can be configured to generate their code in the fragments shader only (`Lights`, `PBRMetallicRoughness`, `Reflection`).\r\n\r\nNew blocks have also been added: `FragDepthBlock` to write fragment depth, `ShadowMapBlock` to generate depth in a shadow map.\r\n\r\nThe `ShadowDepthWrapper` has also been updated to work with materials using a `ShadowMapBlock`.\r\n\r\nA couple of helper blocks have also been created: `TriPlanarBlock` and `BiPlanarBlock` for sampling a texture with a tri/bi planar mapping (ray marching does not usually produce uvs, so we need to be able to sample a texture with a position+normal instead).\r\n\r\nNote that we haven't created a ray marching node itself, but it's now possible for users to create one. In the PG demo below, we have implemented a very basic one with a `CustomBlock`.\r\n\r\nHere is a PG that uses all these new features:\r\n\r\nhttps://playground.babylonjs.com/#M3QR7E#34\r\n\r\n![image](https://user-images.githubusercontent.com/4152247/203122324-d3f20b41-c7c5-40b9-96ab-b0baa03da9ca.png)\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/lightBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBaseBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/fragDepthBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/shadowMapBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/reflectionBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/biPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/triPlanarBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildStateSharedData.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialDecorator.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/shadowDepthWrapper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerToDisplayLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToPropertyLedger.ts"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "13276",
                "title": "Couple tiny fixes",
                "description": "Fix #13274",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts",
                    "packages/dev/core/test/unit/Materials/PBR/babylon.PBRMaterial.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.33.2": [
            {
                "pr": "13269",
                "title": "Ray picking: Fix flipping of the normal when calling getNormal",
                "description": "See https://forum.babylonjs.com/t/how-to-get-correct-rotation-value-from-pickinfo-getnormal/14280/8\r\n\r\nThis is a follow-up to #13128.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Collisions/pickingInfo.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13271",
                "title": "Add accessibility package to playground",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/declarationConfigDev.json",
                    "packages/tools/babylonServer/src/accessibility/index.ts",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "13270",
                "title": "Addressing export issue",
                "description": "UMD was fixed, es6 is now built correctly.\r\n\r\nAddressing https://forum.babylonjs.com/t/import-bug-with-npm-install-babylonjs-inspector-proposed-fix-included/35583/8",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/gui-editor/config.json",
                    "packages/public/@babylonjs/inspector/config.json",
                    "packages/public/@babylonjs/node-editor/config.json"
                ],
                "tags": []
            },
            {
                "pr": "13268",
                "title": "Test babylon pbrmaterial",
                "description": "Hi!\r\nI made some test cases for PBRMaterial.\r\nOne strange point — the getAnimatables don't return all possilbe textures, such metallic reflectance, reflectance, micro surface and refraction texture. So I added a note to the method JSDoc, and comment to the test case.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/test/unit/Materials/PBR/babylon.PBRMaterial.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13266",
                "title": "adding integration tests for loaders and serializers",
                "description": "Some loader tests still need to be added.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/loaders/test/integration/babylon.sceneLoader.test.ts",
                    "packages/dev/serializers/test/integration/glTFSerializer.test.ts"
                ],
                "tags": []
            }
        ],
        "5.33.1": [
            {
                "pr": "13267",
                "title": "Fix prepareDefinesForClipPlanes returning true too often",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/clipPlaneMaterialHelper.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13265",
                "title": "fixing billboardMode mode for instanced meshes",
                "description": "Hi.\r\nThis PR is fixing an issue with the `billboardMode` for instanced objects.\r\nIt was sometimes `undefined` which was causing the `instancedMesh` to use the rotation of the source transformation.\r\n\r\nHere is a simple demo of this issue:\r\nhttps://playground.babylonjs.com/#9NN1BK#1\r\n\r\nIf you uncomment the \"FIX\" it's working as expected (only the source mesh is rotating)",
                "author": {
                    "name": "Bastl34",
                    "url": "https://github.com/Bastl34"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "13264",
                "title": "Add confirmation message in PG when switching version",
                "description": "Fix #13260",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/playground/src/components/commandBarComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13263",
                "title": "Fix glTF export texture dedupe code",
                "description": "See: https://forum.babylonjs.com/t/exported-file-size/35740/4\r\n\r\nThe dedupe code was async and I didn't test it properly the first time. Working with @RaananW on adding tests.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "bug",
                    "exporters"
                ]
            },
            {
                "pr": "13214",
                "title": "glTF export root node removal fix",
                "description": "See forum: https://forum.babylonjs.com/t/glbexporter-exports-bones-facing-opposite-direction-to-mesh/35330\r\n\r\nTests will be done later.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "13262",
                "title": "Matrix: Update the doc for the LookAt functions",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13261",
                "title": "PBR material: Add missing test for the emissive texture in hasTexture",
                "description": "See https://forum.babylonjs.com/t/weird-result-when-setting-texture-offset/35769",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "13259",
                "title": "Add Sprite Manager Metadata",
                "description": "https://forum.babylonjs.com/t/serialize-spritemanager-missing-id-and-metadata/35750",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Sprites/spriteManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "sprite"
                ]
            }
        ],
        "5.33.0": [
            {
                "pr": "13258",
                "title": "FreeCameraMouseInput: Fix for PointerLock Movement",
                "description": "A bug was identified in the forums where the camera wasn't moving while a pointer lock was active.  The issue was determined to be caused by a previous bug fix that tracked active pointer ids but the logic for ignoring input was incorrect.  This PR corrects that input and adds a test to verify that movementX/Y will move the camera for pointer lock but not standard input.\r\n\r\nForum Post: https://forum.babylonjs.com/t/camera-rotate-broken/35752",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.freeCameraInputs.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13257",
                "title": "Fix IKController with leaf node",
                "description": "https://forum.babylonjs.com/t/exception-in-boneikcontroller-for-leaf-bones/34896/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Bones/boneIKController.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "13256",
                "title": "PostProcess: Add hooks to alter shader code used by post processes",
                "description": "This PR allows you to customize the shader code used by the post-processes when specific needs arise.\r\n\r\nIt allows something like:\r\n```javascript\r\n    BABYLON.PostProcess.RegisterShaderCodeProcessing(\"dofMerge\", {\r\n        processFinalCode: (ppName, shaderType, code) => {\r\n            if (shaderType === \"fragment\") {\r\n                code = code.replace(\"#define CUSTOM_FRAGMENT_DEFINITIONS\", \"uniform vec4 colorFilter;\");\r\n                code = code.replace(\"original,\", \"original*colorFilter,\");\r\n            }\r\n            return code;\r\n        },\r\n\r\n        defineCustomBindings: (ppName, defines, uniforms, samplers) => {\r\n            uniforms.push(\"colorFilter\");\r\n            return defines;\r\n        },\r\n\r\n        bindCustomBindings: (ppName, effect) => {\r\n            effect.setFloat4(\"colorFilter\", 0.3, 0.9, 0.4, 1.);\r\n        }\r\n    });\r\n```\r\n\r\nPG: https://playground.babylonjs.com/#B8LWGL#12\r\n\r\nFix #13243 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/imageProcessingFunctions.fx",
                    "packages/dev/core/src/Shaders/circleOfConfusion.fragment.fx"
                ],
                "tags": [
                    "enhancement",
                    "post-process"
                ]
            },
            {
                "pr": "13251",
                "title": "Fix dump tools premultiplied alpha.",
                "description": "Fix #11967\r\n\r\nFixes as well the generation of Environment Textures.",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Misc/dumpTools.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "bug",
                    "exporters"
                ]
            },
            {
                "pr": "13249",
                "title": "Support ClipPlanes in Materials",
                "description": "Fix #13002",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Culling/boundingInfo.ts",
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/clipPlanesBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/clipPlaneMaterialHelper.ts",
                    "packages/dev/core/src/Materials/index.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Materials/thinMaterialHelper.ts",
                    "packages/dev/core/src/Meshes/linesMesh.ts",
                    "packages/dev/core/src/Particles/baseParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Rendering/outlineRenderer.ts",
                    "packages/dev/materials/src/cell/cellMaterial.ts",
                    "packages/dev/materials/src/fire/fireMaterial.ts",
                    "packages/dev/materials/src/fur/furMaterial.ts",
                    "packages/dev/materials/src/gradient/gradientMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts",
                    "packages/dev/materials/src/lava/lavaMaterial.ts",
                    "packages/dev/materials/src/mix/mixMaterial.ts",
                    "packages/dev/materials/src/normal/normalMaterial.ts",
                    "packages/dev/materials/src/shadowOnly/shadowOnlyMaterial.ts",
                    "packages/dev/materials/src/simple/simpleMaterial.ts",
                    "packages/dev/materials/src/sky/skyMaterial.ts",
                    "packages/dev/materials/src/terrain/terrainMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triPlanarMaterial.ts",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "materials",
                    "new feature"
                ]
            },
            {
                "pr": "13254",
                "title": "WebGPU: Improve copy video to texture",
                "description": "Fix #13238 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.videoTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.videoTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Materials/Textures/htmlElementTexture.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "WebGPU"
                ]
            },
            {
                "pr": "13253",
                "title": "Bump loader-utils from 2.0.3 to 2.0.4",
                "description": "Bumps [loader-utils](https://github.com/webpack/loader-utils) from 2.0.3 to 2.0.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/releases\">loader-utils's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.4</h2>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4\">2.0.4</a> (2022-11-11)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>ReDoS problem (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/225\">#225</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">ac09944</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/blob/v2.0.4/CHANGELOG.md\">loader-utils's changelog</a>.</em></p>\n<blockquote>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4\">2.0.4</a> (2022-11-11)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>ReDoS problem (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/225\">#225</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">ac09944</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/6688b5028106f144ee9f543bebc8e6a87b57829f\"><code>6688b50</code></a> chore(release): 2.0.4</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\"><code>ac09944</code></a> fix: ReDoS problem (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/225\">#225</a>)</li>\n<li>See full diff in <a href=\"https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=loader-utils&package-manager=npm_and_yarn&previous-version=2.0.3&new-version=2.0.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "13255",
                "title": "import types to fix d.ts for inspector",
                "description": "Fixes https://forum.babylonjs.com/t/import-bug-with-npm-install-babylonjs-inspector-proposed-fix-included/35583",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/components/layout/utils.ts"
                ],
                "tags": []
            }
        ],
        "5.32.2": [
            {
                "pr": "13252",
                "title": "Better handling of shader code that does not have a main function",
                "description": "See https://forum.babylonjs.com/t/wgsl-struct-internals-seems-to-be-wrongly-generated/35705/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessor.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13250",
                "title": "InputManager: Fixed up/down picking on callback",
                "description": "This PR addresses a bug where the check for picking to occur for onPointerUp and onPointerDown were being checked incorrectly.  The test was also updated to catch this in the future.\r\n\r\nForum Link with Bug Info: https://forum.babylonjs.com/t/scene-onpointerup-issues/35729",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13233",
                "title": "Fix for FreeCameraMouseInput fluxuating input on multi-touch",
                "description": "This PR contains a fix for the FreeCameraMouseInput, when touch is enabled, to prevent multiple touch inputs from providing conflicting inputs.  This is accomplished by tracking the first touch pointerId and ignoring the other inputs while its active.  This approach is being taken because the FreeCameraMouseInput only supports one pointer at a time.\r\n\r\nForum Link with Bug info: https://forum.babylonjs.com/t/free-camera-multi-touch-bug/35536",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.freeCameraInputs.test.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "13246",
                "title": "array flat polyfill for Chakra",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "native"
                ]
            },
            {
                "pr": "13242",
                "title": "No warning dialog when changing engine versions",
                "description": "Fix #13239",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/playground/src/components/commandBarComponent.tsx",
                    "packages/tools/playground/src/components/commandDropdownComponent.tsx",
                    "packages/tools/playground/src/tools/utilities.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13245",
                "title": "Extend dragPlanePoint doc on onDrag*Observables",
                "description": "Copied dragPlanePoint description to onDragStartObservable and onDragEndObservable Furthermore added a comment stating, that the dragPlanePoint does not necessarily equal the attached mesh position if validatedDrag is used.",
                "author": {
                    "name": "dennemark",
                    "url": "https://github.com/dennemark"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "documentation"
                ]
            },
            {
                "pr": "13237",
                "title": "Fix Gizmo Release Drag",
                "description": "Fixes for :\r\n\r\nhttps://forum.babylonjs.com/t/positiongizmo-does-not-respect-update-gizmo-position-to-match-attached-mesh/35673/3\r\nForward properties `updateGizmoPositionToMatchAttachedMesh` and `updateGizmoRotationToMatchAttachedMesh` to agregated gizmos. And uses gizmo rootmesh postion for rotation angle computation\r\n\r\nhttps://forum.babylonjs.com/t/gizmomanager-releasedrag-cant-drag-anymore-after/35289\r\n`_activeDragButton` was not reset in `releaseDrag`. so when calling that method, it was impossible to start a new drag operation after.\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": [
                    "bug",
                    "gizmos"
                ]
            },
            {
                "pr": "13240",
                "title": "Rotation gizmos with non uniform scaling",
                "description": "fixes #13112 \r\n\r\nUsing rotation gizmo with non uniform scaling is a problem because gizmos work on nodes + world matrix and it's not possible in the case of `updateGizmoRotationToMatchAttachedMesh` to decompose/recompose properly the world matrix.\r\nIn that case, a warning is displayed.\r\nOtherwise, the rotation amount is applied in the correct order on the world matrix and the rest of the operations can be done without issue.\r\nIf anyone finds a way to circumvent the warning and apply the rotation, I'm all ears :)",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13241",
                "title": "Support matrix in reciproqual block",
                "description": "Fix #13232 nme inverse block",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/reciprocalBlock.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "13229",
                "title": "Improve glTF material export code",
                "description": "See https://forum.babylonjs.com/t/texture-wangle-counld-not-save-in-glb/35207/4 for context. This only addresses the first two bullets.\r\n\r\nThere are a bunch of issues in the existing exporter code:\r\n1. Textures were being de-duped based on the name.\r\n2. Baking texture transform is not actually a valid solution when texture transform cannot fit the `KHR_texture_transform` extension.\r\n3. Exporting textures go through an unnecessary step of encoding from array buffer to base64 and then back. This is dumb.\r\n4. Code was a mess. Some weird async constructs and code duplication.\r\n\r\nChanges:\r\n- Log a warning instead of baking the texture when the texture transform isn't center at the origin.\r\n- Rewrite a chunk of the material export code to de-dupe textures based on whether the texture points to the same internal texture (and mime type).\r\n- Factor the code.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_texture_transform.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporterExtension.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/shaders/textureTransform.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "13234",
                "title": "Test babylon mesh lod 2",
                "description": "Hi!\r\n\r\nHere I found some trouble with `removeLODLevel` method — in the doc presented example where we can remove `null` from LOD, but the method didn't have ability to do it.\r\n\r\nhttps://doc.babylonjs.com/features/featuresDeepDive/mesh/LOD\r\n\r\n![image](https://user-images.githubusercontent.com/2697890/201533219-ac2de092-4ab7-4d81-8c6c-a68a661c41fa.png)\r\n\r\n---\r\n\r\nAlso I did not found the way how to reach this code part:\r\n![image](https://user-images.githubusercontent.com/2697890/201533270-3e95e367-52f3-4a5d-921f-974b3ccc4a99.png)\r\n\r\nIt's necessary? In which cases?\r\n\r\n---\r\n\r\nAnd one thing more. I dont know is it trouble or not, but the `addLODLevel` method allows to add multiple meshes to the same distance. There are no any checks to this case.\r\nProbably have reaseon to add Logger Warn at least?",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/test/unit/Meshes/babylon.mesh.lod.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13236",
                "title": "ShadowDepthWrapper: Fix shadows when wrapping a material using custom material plugins",
                "description": "See https://forum.babylonjs.com/t/material-plugin-not-support-shadowgenerator/35671",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/shadowDepthWrapper.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "shadows"
                ]
            },
            {
                "pr": "13235",
                "title": "3d slider - dispose textures correctly",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderBarMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderThumbMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13223",
                "title": "Graph Overhaul in VSM",
                "description": "This PR introduces the graph system to be used in the VSM. This is a more React-oriented approach, where Nodes, Lines and other Concepts are all expressed as React Components. It allows for direction markers on the lines, and to position lines wherever needed, instead of always having a line at a connector.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTabsContainer.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphConnectorHandle.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphConnectorHandle.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphContainer.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphContainer.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphContextManager.ts",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphLine.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphLinesContainer.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphNode.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/GraphNodesContainer.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/NodeRenderer.tsx",
                    "packages/dev/sharedUiComponents/src/components/reactGraphSystem/useGraphContext.ts",
                    "packages/tools/vsm/src/components/EditValueComponent.tsx",
                    "packages/tools/vsm/src/components/SceneRendererComponent.tsx",
                    "packages/tools/vsm/src/components/SelectionContext.tsx",
                    "packages/tools/vsm/src/components/StateBehaviorNodeRenderer.tsx",
                    "packages/tools/vsm/src/components/StateBehaviorViewComponent.modules.scss",
                    "packages/tools/vsm/src/components/StateBehaviorViewComponent.tsx",
                    "packages/tools/vsm/src/components/StateViewNodeRenderer.tsx",
                    "packages/tools/vsm/src/components/StatesViewComponent.modules.scss",
                    "packages/tools/vsm/src/components/StatesViewComponent.tsx",
                    "packages/tools/vsm/src/components/nodesDisplay/CommonStyles.modules.scss",
                    "packages/tools/vsm/src/components/nodesDisplay/ReadyActionDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/SetPositionBlock.tsx",
                    "packages/tools/vsm/src/components/nodesDisplay/StartActionDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/StateBlockDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/registerToDisplayLedger.ts",
                    "packages/tools/vsm/src/components/tools/useSceneNode.ts",
                    "packages/tools/vsm/src/components/tools/useSelectedAction.ts",
                    "packages/tools/vsm/src/components/tools/useSelectedState.ts",
                    "packages/tools/vsm/src/components/tools/useStateMachine.ts",
                    "packages/tools/vsm/src/components/types.ts",
                    "packages/tools/vsm/src/context/ActionSelectionContext.ts",
                    "packages/tools/vsm/src/context/SceneContext.ts",
                    "packages/tools/vsm/src/context/StateMachineContext.ts",
                    "packages/tools/vsm/src/context/StateSelectionContext.tsx",
                    "packages/tools/vsm/src/initialLayout.tsx",
                    "packages/tools/vsm/src/stateMachine/State.ts",
                    "packages/tools/vsm/src/stateMachine/StateMachine.ts",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13231",
                "title": "Fix memory leaks",
                "description": "See https://forum.babylonjs.com/t/slidr3d-causes-a-memory-leak/35597",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderBarMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlSliderThumbMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13145",
                "title": "InputManager: Modify Picking to only happen with necessary scenarios",
                "description": "This PR modifies the picking code for UP and DOWN to only pick when there is a user scenario that requires it (user-defined observers in `onPointerObservable`, defined actions for an ActionManager, and assigned behaviors).  Additionally, there are tests being added to verify that the InputManager callbacks and observable are functioning properly, as well as picking functionality.  All camera pointer inputs will now connect to an internal observable `_onCameraInputObservable`",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.inputManager.test.ts",
                    "packages/dev/core/test/unit/DeviceInput/testDeviceInputSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "13228",
                "title": "Fix redirects in code doc",
                "description": "Now redirects to the new doc URLs.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Actions/abstractActionManager.ts",
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Actions/directActions.ts",
                    "packages/dev/core/src/Actions/interpolateValueAction.ts",
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/easing.ts",
                    "packages/dev/core/src/Audio/Interfaces/IAudioEngine.ts",
                    "packages/dev/core/src/Audio/Interfaces/ISoundOptions.ts",
                    "packages/dev/core/src/Audio/analyser.ts",
                    "packages/dev/core/src/Audio/audioEngine.ts",
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/src/Audio/soundTrack.ts",
                    "packages/dev/core/src/BakedVertexAnimation/bakedVertexAnimationManager.ts",
                    "packages/dev/core/src/Behaviors/Cameras/autoRotationBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/bouncingBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/boneIKController.ts",
                    "packages/dev/core/src/Bones/boneLookController.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraGamepadInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraVRDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraKeyboardInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraGamepadInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraVirtualJoystickInput.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphArcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphFreeCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphGamepadCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/anaglyphUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicArcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicFreeCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicGamepadCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicScreenUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrCameraMetrics.ts",
                    "packages/dev/core/src/Cameras/VR/vrDeviceOrientationArcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrDeviceOrientationFreeCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrDeviceOrientationGamepadCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Cameras/VR/webVRCamera.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/arcRotateCameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/cameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/flyCamera.ts",
                    "packages/dev/core/src/Cameras/flyCameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/followCamera.ts",
                    "packages/dev/core/src/Cameras/followCameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/freeCameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/gamepadCamera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Cameras/touchCamera.ts",
                    "packages/dev/core/src/Cameras/universalCamera.ts",
                    "packages/dev/core/src/Cameras/virtualJoysticksCamera.ts",
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/src/Culling/Octrees/octree.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeBlock.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/src/Culling/boundingInfo.ts",
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Debug/rayHelper.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.alpha.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.uniformBuffer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.webVR.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Gamepads/gamepadSceneComponent.ts",
                    "packages/dev/core/src/Helpers/sceneHelpers.ts",
                    "packages/dev/core/src/Instrumentation/engineInstrumentation.ts",
                    "packages/dev/core/src/Instrumentation/sceneInstrumentation.ts",
                    "packages/dev/core/src/Layers/effectLayerSceneComponent.ts",
                    "packages/dev/core/src/Layers/glowLayer.ts",
                    "packages/dev/core/src/LensFlares/lensFlare.ts",
                    "packages/dev/core/src/LensFlares/lensFlareSystem.ts",
                    "packages/dev/core/src/LensFlares/lensFlareSystemSceneComponent.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts"
                ],
                "tags": []
            }
        ],
        "5.32.1": [
            {
                "pr": "13227",
                "title": "EffectRender: Fix culling state not reset properly",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/effectRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            }
        ],
        "5.32.0": [
            {
                "pr": "13225",
                "title": "STL file loader isBinary update",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/STL/stlFileLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13222",
                "title": "Texture: Add new copy texture to texture class",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Misc/copyTextureToTexture.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Shaders/copyTextureToTexture.fragment.fx"
                ],
                "tags": [
                    "rendering engine",
                    "new feature",
                    "texture"
                ]
            },
            {
                "pr": "13224",
                "title": "accessibility package not following the same version as core",
                "description": "Package version was manually released to NPM.\nStarting next minor version it will fit the core versioning schema",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/accessibility/package.json",
                    "packages/public/umd/babylonjs-accessibility/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13220",
                "title": "Support correct spelling on center",
                "description": "Fix #13207 or mostly prevent the need for it",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/PostProcesses/imageProcessingPostProcess.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/tools/viewer/public/renderOnlyViewer.html",
                    "packages/tools/viewer/src/configuration/interfaces/imageProcessingConfiguration.ts",
                    "packages/tools/viewer/src/configuration/types/extended.ts"
                ],
                "tags": [
                    "enhancement",
                    "post-process"
                ]
            },
            {
                "pr": "13218",
                "title": "Properly clear a selected line container component after it is seen",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/lineContainerComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector",
                    "sandbox"
                ]
            },
            {
                "pr": "13219",
                "title": "MeshExploder bugfix",
                "description": "## Overview\r\n\r\nForces MeshExploder to update word matrix for the input meshes before calculating scale direction vectors. This was an issue mentioned on the forum where all playground made using MeshExploder are no longer working. \r\n\r\nForum issue: \r\nhttps://forum.babylonjs.com/t/meshexploder-is-not-working/35483\r\n\r\nFix: \r\nCall ```mesh.computeWorldMatrix(true)``` before calculating direction vectores. ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Misc/meshExploder.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13217",
                "title": "Fix aliasing issue in webxr multiview",
                "description": "If a setter is set, the getter is not inherited from the parent class.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/MultiviewRenderTarget.ts"
                ],
                "tags": []
            },
            {
                "pr": "13216",
                "title": "Bump loader-utils from 2.0.2 to 2.0.3",
                "description": "Bumps [loader-utils](https://github.com/webpack/loader-utils) from 2.0.2 to 2.0.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/releases\">loader-utils's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.3</h2>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.1...v2.0.3\">2.0.3</a> (2022-10-20)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>security:</strong> prototype pollution exploit (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/217\">#217</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\">a93cf6f</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/blob/v2.0.3/CHANGELOG.md\">loader-utils's changelog</a>.</em></p>\n<blockquote>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.1...v2.0.3\">2.0.3</a> (2022-10-20)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>security:</strong> prototype pollution exploit (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/217\">#217</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\">a93cf6f</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/7162619fb982c394ed75098a0a0ed7e7f3177c70\"><code>7162619</code></a> chore(release): 2.0.3</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\"><code>a93cf6f</code></a> fix(security): prototype polution exploit (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/217\">#217</a>)</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/90c7c4be17e3e0b2f6091a69c67db7a6df9fd044\"><code>90c7c4b</code></a> chore(release): 2.0.2</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/8c2d24ee400bc4567335e97ee6004c3baa6ef66f\"><code>8c2d24e</code></a> fix: base64 generation and unicode characters (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/197\">#197</a>)</li>\n<li>See full diff in <a href=\"https://github.com/webpack/loader-utils/compare/v2.0.2...v2.0.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=loader-utils&package-manager=npm_and_yarn&previous-version=2.0.2&new-version=2.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "13215",
                "title": "Change doc to match code",
                "description": "CreateHermiteSpline creates n+1 points or n curve segments, given its 'nbPoints' argument. This changes 'nbPoints' to ''nSegs' and rewords parameter description",
                "author": {
                    "name": "Lowclouds",
                    "url": "https://github.com/Lowclouds"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.path.ts"
                ],
                "tags": []
            },
            {
                "pr": "13194",
                "title": "Remake OptionsLineComponent with custom options",
                "description": "This reverts the previous OptionsLineComponents in shared-ui-components/lines to the previous state to avoid more bugs, and reworks the custom font selection feature to use a new OptionsLineComponent in shared-ui-components/components/lines that's more flexible.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/dev/sharedUiComponents/src/components/Button.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Button.tsx",
                    "packages/dev/sharedUiComponents/src/components/Icon.tsx",
                    "packages/dev/sharedUiComponents/src/components/TextInputWithSubmit.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/TextInputWithSubmit.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/OptionsLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/OptionsLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Introduction.stories.mdx",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandBarComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandButtonComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/colorPicker/ColorPicker.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/layout/FlexibleGridLayout.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/ColorLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/ColorPickerLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/FileButtonLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/NumericInputComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/OptionsLineComponent.stories.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13213",
                "title": "WebGPU: Fixes errors in the console log",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/bumpFragmentFunctions.fx",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/dissolve effect with node material and glow layer.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13206",
                "title": "Test babylon mesh baking",
                "description": "Here I found one bug in the `isVerticesDataPresent` method.\r\n\r\nTest case:\r\n```ts\r\nconst box = BABYLON.MeshBuilder.CreateBox(\"box\", { size: 1 }, scene);\r\nbox.getVertexBuffer(BABYLON.VertexBuffer.PositionKind)?.dispose();\r\nbox.bakeTransformIntoVertices(BABYLON.Matrix.Scaling(-1, -1, -1));\r\n```\r\nPlayground: https://playground.babylonjs.com/#YFTMIL\r\n\r\nError in the console:\r\n```\r\nTypeError: Cannot read properties of null (reading 'length')\r\n```\r\n\r\nSo I add a check into the method: `if (!this._vertexBuffers || !this.getVerticesData(kind)) {`\r\n\r\n\r\nAnd also I add test cases for baking methods — `bakeTransformIntoVertices` and `bakeCurrentTransformIntoVertices`.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/test/unit/Meshes/babylon.mesh.bake.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13212",
                "title": "Fix camera selection in sandbox for cameras with duplicated names",
                "description": "Fix #13203",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/sandbox/src/components/footer.tsx"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.31.2": [
            {
                "pr": "13211",
                "title": "Two fixes for the public shared-ui package",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/public/@babylonjs/shared-ui-components/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13210",
                "title": "Expose engine on effect renderer",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/effectRenderer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.31.1": [
            {
                "pr": "13208",
                "title": "include assets when packaging shared ui components",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/shared-ui-components/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13201",
                "title": "Test babylon octree block",
                "description": "Test cases for all OctreeBlock method with 100% coverage",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/test/unit/Culling/babylon.octreeBlock.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13202",
                "title": "Test babylon mesh lod screen coverage",
                "description": "Hi!\r\nI added a note to `useLODScreenCoverage`. As I found, it's not working after LODs was added, so, useLODScreenCoverage should be set before LODs adding if it neccessary.\r\n\r\nAlso I added two playground links to show how LODs works with distance or screen coverage.\r\n\r\nAnd one test case to check `addLODLevel` and `getLOD` with the screen coverage feature.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/test/unit/Meshes/babylon.mesh.lod.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13204",
                "title": "fix: switch back to the main scene using multiple canvases, and rende…",
                "description": "hi when i was using multiple canvases unregister all sub-canvases, the main scene will not trigger the _renderFrame method. After debugging, it is found that when the sub-canvas registration is canceled and the number of sub-canvases is 0, a logic problem will occur in _renderViews, resulting in the inability to execute _renderFrame\r\n\r\n> packages/dev/core/src/Engines/Extensions/engine.views.ts\r\n```\r\nEngine.prototype._renderViews = function () {\r\n    //  ！！！ this.views is an array and has zero length，will continue to execute the code ！！！\r\n    if (!this.views) {\r\n        return false;\r\n    }\r\n\r\n    const parent = this.getRenderingCanvas();\r\n\r\n    if (!parent) {\r\n        return false;\r\n    }\r\n    // the code inside cannot be executed because the array length is zero\r\n    for (const view of this.views) {\r\n        if (!view.enabled) {\r\n            continue;\r\n        }\r\n        const canvas = view.target;\r\n        const context = canvas.getContext(\"2d\");\r\n        if (!context) {\r\n            continue;\r\n        }\r\n        _onBeforeViewRenderObservable.notifyObservers(view);\r\n        const camera = view.camera;\r\n        let previewCamera: Nullable<Camera> = null;\r\n        let scene: Nullable<Scene> = null;\r\n        if (camera) {\r\n            scene = camera.getScene();\r\n\r\n            if (scene.activeCameras && scene.activeCameras.length) {\r\n                continue;\r\n            }\r\n\r\n            this.activeView = view;\r\n\r\n            previewCamera = scene.activeCamera;\r\n            scene.activeCamera = camera;\r\n        }\r\n\r\n        if (view.customResize) {\r\n            view.customResize(canvas);\r\n        } else {\r\n            // Set sizes\r\n            const width = Math.floor(canvas.clientWidth / this._hardwareScalingLevel);\r\n            const height = Math.floor(canvas.clientHeight / this._hardwareScalingLevel);\r\n\r\n            const dimsChanged = width !== canvas.width || parent.width !== canvas.width || height !== canvas.height || parent.height !== canvas.height;\r\n            if (canvas.clientWidth && canvas.clientHeight && dimsChanged) {\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                this.setSize(width, height);\r\n            }\r\n        }\r\n\r\n        if (!parent.width || !parent.height) {\r\n            return false;\r\n        }\r\n\r\n        // Render the frame\r\n        this._renderFrame();\r\n\r\n        this.flushFramebuffer();\r\n\r\n        // Copy to target\r\n        if (view.clearBeforeCopy) {\r\n            context.clearRect(0, 0, parent.width, parent.height);\r\n        }\r\n        context.drawImage(parent, 0, 0);\r\n\r\n        // Restore\r\n        if (previewCamera && scene) {\r\n            scene.activeCamera = previewCamera;\r\n        }\r\n        _onAfterViewRenderObservable.notifyObservers(view);\r\n    }\r\n\r\n    this.activeView = null;\r\n\r\n    return true;\r\n};\r\n\r\n```\r\n> packages/dev/core/src/Engines/engine.ts\r\n```\r\n    public _renderLoop(): void {\r\n        if (!this._contextWasLost) {\r\n            let shouldRender = true;\r\n            if (!this.renderEvenInBackground && this._windowIsBackground) {\r\n                shouldRender = false;\r\n            }\r\n\r\n            if (shouldRender) {\r\n                // Start new frame\r\n                this.beginFrame();\r\n\r\n                // Child canvases \r\n               // ！！！When the length of the word canvas array is zero, this._renderViews() cannot return false, resulting in _renderFrame not triggering ！！！\r\n                if (!this._renderViews()) {\r\n                    // Main frame\r\n                    this._renderFrame();\r\n                }\r\n\r\n                // Present\r\n                this.endFrame();\r\n            }\r\n        }\r\n\r\n        if (this._activeRenderLoops.length > 0) {\r\n            // Register new frame\r\n            if (this.customAnimationFrameRequester) {\r\n                this.customAnimationFrameRequester.requestID = this._queueNewFrame(\r\n                    this.customAnimationFrameRequester.renderFunction || this._boundRenderFunction,\r\n                    this.customAnimationFrameRequester\r\n                );\r\n                this._frameHandler = this.customAnimationFrameRequester.requestID;\r\n            } else if (this.isVRPresenting()) {\r\n                this._requestVRFrame();\r\n            } else {\r\n                this._frameHandler = this._queueNewFrame(this._boundRenderFunction, this.getHostWindow());\r\n            }\r\n        } else {\r\n            this._renderingQueueLaunched = false;\r\n        }\r\n    }\r\n```\r\n",
                "author": {
                    "name": "MILIFIRE",
                    "url": "https://github.com/MILIFIRE"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13205",
                "title": "Cube textures: Fix updating data with engine.updateTextureData",
                "description": "See https://forum.babylonjs.com/t/updatetexturedata-does-not-work-correctly-for-cubetextures/35418\r\n\r\nIt also fixes passing null for the `data` parameter of `RawCubeTexture.constructor`. So, if you don't have data at texture creation, you can now avoid creating dummy buffers and simply pass `null`.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "texture"
                ]
            },
            {
                "pr": "13190",
                "title": "Xr camera",
                "description": "Fix #13185 \r\n\r\nThe layer setup of the XR cameras is not propagated to the rigged cameras.\r\n\r\nThis is a tentative fix that will need @RaananW review when he is back from vacation in a week :-)",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "13200",
                "title": "Motion blur: Fix motion blur when not in the \"object based\" mode",
                "description": "See https://forum.babylonjs.com/t/motion-blur-during-camera-flyby-in-skybox/34481/7",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/motionBlurPostProcess.ts",
                    "packages/dev/core/src/Shaders/motionBlur.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13199",
                "title": "AssetContainer: Fix crash when calling moveAllFromScene if environmentTexture is present",
                "description": "See https://forum.babylonjs.com/t/assetcontainer-fails-with-environmenttexture/35362/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug",
                    "assets"
                ]
            },
            {
                "pr": "13198",
                "title": "Add missing samplers to motion blur post process",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/motionBlurPostProcess.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13196",
                "title": "Fix animatable loop",
                "description": "In this playground https://playground.babylonjs.com/#7V0Y1I#2446 we can see the animation triggering a loop on each click before the fix ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": [
                    "bug",
                    "animations"
                ]
            },
            {
                "pr": "13197",
                "title": "Shadows: Fix transparent shadows with ALPHABLEND transparency mode",
                "description": "See https://forum.babylonjs.com/t/transparent-shadow-not-work-for-alphablend-materials/35359",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Shaders/shadowMap.fragment.fx",
                    "packages/dev/core/src/Shaders/shadowMap.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "shadows"
                ]
            }
        ],
        "5.31.0": [
            {
                "pr": "13195",
                "title": "WebGPU: Update TWGSL package",
                "description": "This new version revert the UA (Uniform Analysis) errors to warnings.\r\n\r\nSee https://bugs.chromium.org/p/tint/issues/detail?id=1727#c5",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": []
            },
            {
                "pr": "13193",
                "title": "Reduce memory usage in bakeTransformIntoVertices",
                "description": "Running `bakeTransformIntoVertices` on large meshes can cause memory overflow. This change modifies the data in-place and uses `ToRef` functions so that we allocate O(1) extra data instead of O(n).",
                "author": {
                    "name": "rgerd",
                    "url": "https://github.com/rgerd"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "rendering engine",
                    "optimizations"
                ]
            },
            {
                "pr": "13186",
                "title": "NME: fix wrong perturbed normals when using pre-existing tangents",
                "description": "Fix #13182 \r\n\r\nNote that regarding tangents in the bump context we don't take into account the w component of the vector.\r\n\r\nIn the regular bump code, we use this component as a factor to negate the bitangent (the w component is normally either 1 or -1):\r\n\r\nFrom `bumpVertex.fx`:\r\n\r\n```typescript\r\n#if defined(BUMP) || defined(PARALLAX) || defined(CLEARCOAT_BUMP) || defined(ANISOTROPIC)\r\n\t#if defined(TANGENT) && defined(NORMAL)\r\n\t\tvec3 tbnNormal = normalize(normalUpdated);\r\n\t\tvec3 tbnTangent = normalize(tangentUpdated.xyz);\r\n\t\tvec3 tbnBitangent = cross(tbnNormal, tbnTangent) * tangentUpdated.w;\r\n\t\tvTBN = mat3(finalWorld) * mat3(tbnTangent, tbnBitangent, tbnNormal);\r\n\t#endif\r\n#endif\r\n```\r\n\r\nWe don't do it in the NME: should we? If yes, we need to discuss it, I don't see a way to do it without a breaking change...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13192",
                "title": "Add information to Matrix API",
                "description": "Ref https://forum.babylonjs.com/t/matrix-multiply-does-premultiplication/15492/3?u=johnk",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13188",
                "title": "Test babylon camera inputs manager",
                "description": "Hi!\r\n\r\nI updated links to the docs.\r\n\r\nAnd in the `remove` method added the `return` statement. Looks like the whole loop is not neccessary when target are found. At least no one added test case not failed here. So it probably a little perfomance improve :D\r\nBut in this case there are not possible to add one CameraInput multiple times one camera. Is it correct?",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Cameras/cameraInputsManager.ts",
                    "packages/dev/core/test/unit/Cameras/babylon.cameraInputsManager.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13191",
                "title": "WebGPU: Add support for GLES3 to WebGPU GLSL processing",
                "description": "See https://forum.babylonjs.com/t/webgpuengine-vs-engine-and-webgl-2-0/35124/6\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/iShaderProcessor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts"
                ],
                "tags": [
                    "new feature",
                    "WebGPU"
                ]
            },
            {
                "pr": "13189",
                "title": "Test babylon octree block",
                "description": "Test case for octree createInnerBlocks relative to https://github.com/BabylonJS/Babylon.js/pull/12923\r\n\r\nAnd one simple test case for intersectsRay method",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/test/unit/Culling/babylon.octreeBlock.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13184",
                "title": "Test babylon mesh lod",
                "description": null,
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/test/unit/Meshes/babylon.mesh.lod.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13183",
                "title": "NME: fix wrong lighting for some of the preview meshes",
                "description": "Fix #13161 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    ".gitignore",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts"
                ],
                "tags": [
                    "nme",
                    "skip changelog"
                ]
            },
            {
                "pr": "13187",
                "title": "NME: Fix preview not updated when changing the clamp settings in the Texture block",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "13181",
                "title": "Test babylon transform node",
                "description": "Hi!\r\nThe url `https://doc.babylonjs.com/how_to/parenting` currently is 404, so I updated it.\r\n\r\nAnd one strange momemnt to me. I tried to write test case like this:\r\n```\r\nconst scene = new Scene(subject);\r\nconst child = new AbstractMesh(\"Child\", scene);\r\nconst parent = new AbstractMesh(\"Parent\", scene);\r\n\r\nchild.rotationQuaternion = new Quaternion(0.1, 0.2, 0.3, 1);\r\nchild.setParent(parent);\r\n```\r\n\r\nAfter `setParent` the `child.rotationQuaternion` equals to `{\"_isDirty\": true, \"_w\": 0.9193215324678584, \"_x\": 0.10613875217731637, \"_y\": 0.21264414489225805, \"_z\": 0.31622577190124856}`\r\nIt happens after call `composedMatrix.decompose()` in the `setParent()` method.\r\nI don't know, is this behaviour correct?",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/test/unit/Meshes/babylon.transformNode.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13177",
                "title": "Lights: Add support for multiple shadow generators",
                "description": "Currently a light can only have a single shadow generator associated. The problem is that the cascaded shadow generator (CSG) generates the shadow map depending on a camera position/rotation. So, a CSG is only valid for a light + a camera: if rendering with another camera, the CSG for this light is invalid.\r\n\r\nThis PR adds support for multiple shadow generators per light: an additional `camera` parameter can be passed to the shadow generator constructor. By default, `camera=null` and the code is backward compatible: when you retrieve a shadow generator, you get the one for the null camera.\r\n\r\nFix #12716.\r\n\r\nHere's a fixed PG:\r\n\r\nhttps://playground.babylonjs.com/#11BH6Z#947",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/cascadedShadowGenerator.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Lights/Shadows/shadowGeneratorSceneComponent.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Lights/pointLight.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/sceneRecorder.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/multiSGPerLight.png",
                    "packages/tools/tests/test/visualization/config.json",
                    "packages/tools/viewer/src/managers/sceneManager.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13179",
                "title": "Fix bug rendering transparent meshes using their own materials in effect layer",
                "description": "I believe I found a corner-case bug in effectLayer.ts. I've posted about it on the forum here:\r\n\r\nhttps://forum.babylonjs.com/t/bug-and-proposed-fix-effectlayer-with-meshes-using-their-own-materials-ignores-transparency/35194\r\n\r\nSince (I think) I have found the fix already and it's just a one-liner, here is a PR with the fix. I've run \"npm run test:unit\" and \"npm run build:dev\" in GitPod, both were OK. The one-line change fixed the bug in my local repro.\r\n\r\nDetails of the bug (copied from the forum post):\r\n\r\n1. Add two meshes to a scene, add both to the glow layer, set both to use their own material (referenceMeshToUseItsOwnMaterial).\r\n2. Make the meshes partially transparent.\r\n3. Move the camera so it is looking through transparent parts of one mesh to see the other.\r\n4. The far-away mesh will lose its glow effect when seen through the transparent parts of the close mesh.\r\n\r\nDemo: https://playground.babylonjs.com/#SRZRWV#1139\r\n(Move the camera so that you are looking at parts of one glowing ball through the transparent parts of another ball. Observe that the parts of the far-away ball seen through the close-up ball do not glow.)",
                "author": {
                    "name": "djn24",
                    "url": "https://github.com/djn24"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13178",
                "title": "fix nightly for BN",
                "description": "Fix BN nightly because of changes introduced here : https://github.com/BabylonJS/Babylon.js/pull/13154",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/hdrFilteringFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/mrtFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/shadowsFragmentFunctions.fx",
                    "packages/dev/core/src/Shaders/fxaa.fragment.fx",
                    "packages/dev/core/src/Shaders/spriteMap.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "native"
                ]
            },
            {
                "pr": "13176",
                "title": "UniformBuffer: Improve error message in updateUniformArray",
                "description": "See https://forum.babylonjs.com/t/anyone-has-a-working-playground-showing-a-uniformbuffer/35136/5",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/uniformBuffer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.30.0": [
            {
                "pr": "13175",
                "title": "ADT: Added check to attachToMesh to prevent potential memory leak",
                "description": "While investigating an issue with the AdvancedDynamicTexture, I found that if `attachToMesh` is called after it's been called previously, it will not purge the previous observer used for mesh interaction.  This PR adds a check to remove the obsolete observer.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "inputs",
                    "texture"
                ]
            },
            {
                "pr": "13172",
                "title": "Small fix for types in the webxr typing",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts"
                ],
                "tags": []
            },
            {
                "pr": "13173",
                "title": "Revert \"Use the latest CDN nightly version and not unpkg\"",
                "description": "Reverts BabylonJS/Babylon.js#13169\r\n\r\nCC @sebavan \r\n\r\nThis might cause issues with peopole using the inspector with older versions. We will find a cleaner solution",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "13171",
                "title": "NME: Fix and improve the HeightToNormal block",
                "description": "The `position`/`normal`/`tangent` inputs have been renamed to `worldPosition`/`worldNormal`/`worldTangent` and the old `output` output has been renamed `xyz` (the `output` output is now a vec4).\r\n\r\nI didn't add code to keep back compat as this is a new block in 6.0 and probably few people have used it until now. Feel free to complain about this and I may revise my judgement :)\r\n\r\nNote also that `worldNormal` and `worldTangent` must be normalized! I added two switches to allow for easy normalization for the user.\r\n\r\nThe new \"Generate in world space\" mode allows to generate a normal which is directly usable as the `worldNormal` input of the **PBRMetallicRoughness**/**Light** block without the need for a **PerturbNormal** block.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "13170",
                "title": "fixing screen coverage LOD for ortho camera",
                "description": null,
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13168",
                "title": "WIP VSM Initial definitions of Actions, Triggers and States",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBarComponent.tsx",
                    "packages/tools/vsm/src/StateMachineContext.ts",
                    "packages/tools/vsm/src/actions/ActionCoordinator.ts",
                    "packages/tools/vsm/src/actions/BaseBehavior.ts",
                    "packages/tools/vsm/src/actions/actions/BaseAction.ts",
                    "packages/tools/vsm/src/actions/actions/ExecuteCodeAction.ts",
                    "packages/tools/vsm/src/actions/actions/LogAction.ts",
                    "packages/tools/vsm/src/actions/actions/SetPositionAction.ts",
                    "packages/tools/vsm/src/actions/triggers/BaseTrigger.ts",
                    "packages/tools/vsm/src/actions/triggers/ClickTrigger.ts",
                    "packages/tools/vsm/src/components/EditValueComponent.tsx",
                    "packages/tools/vsm/src/components/NodeListComponent.modules.scss",
                    "packages/tools/vsm/src/components/NodeListComponent.tsx",
                    "packages/tools/vsm/src/components/StateBehaviorViewComponent.tsx",
                    "packages/tools/vsm/src/components/StatesViewComponent.tsx",
                    "packages/tools/vsm/src/components/imgs/pauseIcon.svg",
                    "packages/tools/vsm/src/components/imgs/playIcon.svg",
                    "packages/tools/vsm/src/components/nodesDisplay/StateBlockDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/ValueBlockDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/registerToDisplayLedger.ts",
                    "packages/tools/vsm/src/components/tools/useSceneNode.tsx",
                    "packages/tools/vsm/src/components/tools/useStateMachine.tsx",
                    "packages/tools/vsm/src/initialLayout.tsx",
                    "packages/tools/vsm/src/stateMachine/State.ts",
                    "packages/tools/vsm/src/stateMachine/StateMachine.ts",
                    "packages/tools/vsm/src/testComponent.tsx",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13169",
                "title": "Use the latest CDN nightly version and not unpkg",
                "description": "Prevent issues like this:\n\nhttps://forum.babylonjs.com/t/can-t-launch-inspector-from-code-since-this-morning/35080",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "13167",
                "title": "Update glTF-Validator to 2.0.0-dev.3.9",
                "description": "See #12380. This still updates the file manually. Updating it correctly using the build is still in progress.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/tools/babylonServer/public/gltf_validator.js"
                ],
                "tags": []
            },
            {
                "pr": "13166",
                "title": "Different ports for our hosted tools",
                "description": "Every tool in the local dev environment now has a different port. They all depend on the babylon server at port 1337.\nPlayground: 1338\nSandbox: 1339\nNME: 1340\nGUI: 1341\nVSM: 1342\n\nAll can be overwritten by an environment variable, if needed.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/launch.json",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js",
                    "packages/tools/playground/webpack.config.js",
                    "packages/tools/sandbox/webpack.config.js",
                    "packages/tools/vsm/webpack.config.js"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13160",
                "title": "Support relative urls in KTX2 configuration",
                "description": "Fixes #13158",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts"
                ],
                "tags": []
            },
            {
                "pr": "13165",
                "title": "(Local only) Fix ktx and loaders local-dev references",
                "description": "The global namespace of the ktx loader was incorrect (didn't export the entire namespace, only one class).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/src/ktx2Decoder/index.ts",
                    "packages/tools/babylonServer/src/loaders/index-dev.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13124",
                "title": "Vsm state view wip",
                "description": "This adds basic nodes view and a very very simple state implementation that only responds to click events on a basic scene.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTab.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTabsContainer.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/types.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/tools/vsm/README.md",
                    "packages/tools/vsm/package.json",
                    "packages/tools/vsm/src/SceneContext.ts",
                    "packages/tools/vsm/src/components/EditValueComponent.tsx",
                    "packages/tools/vsm/src/components/SceneRendererComponent.tsx",
                    "packages/tools/vsm/src/components/SelectionContext.tsx",
                    "packages/tools/vsm/src/components/StateBehaviorViewComponent.modules.scss",
                    "packages/tools/vsm/src/components/StateBehaviorViewComponent.tsx",
                    "packages/tools/vsm/src/components/StatesViewComponent.modules.scss",
                    "packages/tools/vsm/src/components/StatesViewComponent.tsx",
                    "packages/tools/vsm/src/components/nodesDisplay/CommonStyles.modules.scss",
                    "packages/tools/vsm/src/components/nodesDisplay/ReadyActionDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/StartActionDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/StateBlockDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/ValueBlockDisplayManager.ts",
                    "packages/tools/vsm/src/components/nodesDisplay/registerToDisplayLedger.ts",
                    "packages/tools/vsm/src/components/types.ts",
                    "packages/tools/vsm/src/initialLayout.tsx",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13162",
                "title": "Fix Camera Order Back Compat",
                "description": "Following this: https://github.com/BabylonJS/Babylon.js/pull/12779\r\n\r\nSome back compat issues were detected. Reverting in favor of a manual option to chose the gizmo Camera.\r\n\r\nThis playground will be working accordingly: https://www.babylonjs-playground.com/#XQ729G#3\r\n\r\n",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/sceneTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/dev/inspector/src/inspector.ts"
                ],
                "tags": [
                    "bug",
                    "gizmos"
                ]
            },
            {
                "pr": "13157",
                "title": "Fix loading the gltf loaders and validations twice",
                "description": "Bug fix when working locally",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/src/loaders/index-dev.ts",
                    "packages/tools/babylonServer/src/loaders/index-lts.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13156",
                "title": "ParticleSystem: Add BILLBOARDMODE_STRETCHED_LOCAL mode",
                "description": "See https://forum.babylonjs.com/t/stretched-billboard-without-rotating/34847/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Shaders/particles.vertex.fx"
                ],
                "tags": [
                    "particles",
                    "new feature"
                ]
            },
            {
                "pr": "13154",
                "title": "WebGPU: Fix PGs errors / warnings",
                "description": "Fix #13066 ",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTintWASM.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Misc/observable.ts",
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/PostProcesses/postProcess.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/shadowsFragmentFunctions.fx",
                    "packages/dev/core/src/Shaders/fxaa.fragment.fx",
                    "packages/dev/core/src/Shaders/spriteMap.fragment.fx",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/proceduralTextures/src/starfield/starfieldProceduralTexture.fragment.fx",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/custom handling of materials for render target pass.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/webgpu/show all procedural textures.png",
                    "packages/tools/tests/test/visualization/visualization.utils.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgl1.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgl2.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgpu.test.ts",
                    "packages/tools/tests/test/visualization/webgpu.json"
                ],
                "tags": []
            },
            {
                "pr": "13151",
                "title": "OIT fix : clearing front render target when no transparent mesh are rendered",
                "description": "Not clearing was causing ghost meshes being composed with the opaque texture when they shouldn't",
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts"
                ],
                "tags": []
            },
            {
                "pr": "13152",
                "title": "quaternion PG examples",
                "description": "Change in comments only",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13155",
                "title": "Attempting to fix missing renderingManager() typescript definition",
                "description": "I don't see the scene's `get renderingManager()` property in the scene.d.ts after npm installing Babylon.js into my project. Oddly, I'm not sure how to repro it when building Babylon.js locally (on master) as my local build includes the `renderingManager` getter definition. :/\r\n\r\nI doubt adding a return type (ie. this change) will actually fix the missing definition, but it seemed like worthwhile cleanup either way.\r\n\r\nIf there is another change that needs to be made to fix the missing definition, let me know and I can include it here.\r\n\r\n",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13146",
                "title": "Update Pressure Observer to latest version of the WICG spec",
                "description": "Update to latest Experimental Pressure API https://wicg.github.io/compute-pressure/",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/browser.d.ts",
                    "packages/dev/core/src/Misc/PerformanceViewer/performanceViewerCollectionStrategies.ts",
                    "packages/dev/core/src/Misc/computePressure.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Misc/pressureObserverWrapper.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/performanceViewer/performanceViewerComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "performance viewer"
                ]
            },
            {
                "pr": "13148",
                "title": "InputManager: Reset Swipe Status if we skip the next Observable notify",
                "description": "Recently, there was a bug fix put out that addressed an issue where a POINTERTAP event was occurring if the cursor happened to return to the same position after moving outside of the tap range.  Unfortunately, there was a missed scenario where the swipe state wasn't being properly reset if we skipped the next observable call (like when clicking on a UI element).  This PR adds a check to make sure that we reset the swipe state if we are skipping said call.  \r\n\r\nRelated Forum Post: https://forum.babylonjs.com/t/first-pointerpick-event-is-not-emitted-immediately-after-interacting-with-gui-control-that-is-a-pointerblocker/35008",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "12074",
                "title": "Build Accessibility Tree from scene",
                "description": "(A draft PR hoping to get early feedback.)\r\n\r\n1) build a DOM tree for: Node that are marked as salient, and GUI Controls. In this way, the screen reader can read the page content.\r\n2) make the DOM elements interactive for actionable nodes. So the user can use \"tab\" key to focus on interactive nodes or controls, and \"enter\" key to trigger the interactive nodes.\r\n3) when the scene content changes (e.g. show/hide new salient mesh), the DOM tree updates too.\r\n\r\n@RaananW @Exolun \r\n\r\n![image](https://user-images.githubusercontent.com/5469750/156278968-16093b39-80ee-40ad-b7e3-04fa72716ad7.png)\r\n![image](https://user-images.githubusercontent.com/5469750/163634913-249af3dc-26f8-419e-8c24-d32229eef502.png)\r\n\r\n\r\nTesting:\r\n\r\nTesting code 1:\r\nGiven a scene that has objects that cover conditions of: \r\n\r\n- some are salient, some are not not-salient \r\n- some objects (spheres) are interactive, and could be left and right clicked\r\n- objects have parent-children hierarchy\r\n\r\n```\r\nlet createScene = function () {\r\n    let scene = new BABYLON.Scene(engine);\r\n    let camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI/2, Math.PI/4, 10, new BABYLON.Vector3(0, 0, 0), scene);\r\n    camera.setTarget(BABYLON.Vector3.Zero());\r\n    camera.attachControl(canvas, true);\r\n    let light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    light.intensity = 0.7;\r\n\r\n    // add some objects\r\n\r\n    // not salient objects\r\n    const parent = new BABYLON.TransformNode('parent');\r\n    parent.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A parent of all, of the root\",\r\n    }\r\n\r\n    const boxDecs = new BABYLON.TransformNode('boxDecs');\r\n    boxDecs.parent = parent;\r\n    boxDecs.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A parent without salient children\",\r\n    }\r\n    let boxDec1 = BABYLON.MeshBuilder.CreateBox(\"boxDec1\", {size: 0.3}, scene);\r\n    boxDec1.parent = boxDecs;\r\n    boxDec1.position.x = -3;\r\n    boxDec1.position.z = -4;\r\n    let boxDec2 = BABYLON.MeshBuilder.CreateBox(\"boxDec2\", {size: 0.3}, scene);\r\n    boxDec2.parent = boxDecs;\r\n    boxDec2.position.x = 3;\r\n    boxDec2.position.z = -4;\r\n\r\n    // salient objects, static\r\n    let boxes = new BABYLON.TransformNode(\"boxes\");\r\n    boxes.parent = parent;\r\n    boxes.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A group of boxes\",\r\n    }\r\n    let box0 = BABYLON.MeshBuilder.CreateBox(\"box3\", {size: 0.5}, scene);\r\n    box0.parent = boxes;\r\n    box0.position.z = -1;\r\n    box0.position.y = 0.6;\r\n    box0.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A small box in the middle of the scene\",\r\n    }\r\n    let box1 = BABYLON.MeshBuilder.CreateBox(\"box1\", {}, scene);\r\n    box1.parent = boxes;\r\n    box1.position.x = 1;\r\n    box1.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A big box on the left of the small box\",\r\n    }\r\n    let box2 = BABYLON.MeshBuilder.CreateBox(\"box2\", {}, scene);\r\n    box2.parent = boxes;\r\n    box2.position.x = -1;\r\n    box2.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A big box on the right of the small box\",\r\n    }\r\n\r\n    // salient objects, interactive\r\n    let sphereWrapper = new BABYLON.TransformNode('sphereWrapper');\r\n    sphereWrapper.accessibilityTag = {\r\n        isSalient: true,\r\n        description: 'A group of spheres',\r\n    };\r\n    // sphereWrapper.parent = parent;\r\n    let mat = new BABYLON.StandardMaterial(\"Gray\", scene);\r\n    mat.diffuseColor = BABYLON.Color3.Gray();\r\n    let spheresCount = 6;\r\n    let alpha = 0;\r\n    for (let index = 0; index < spheresCount; index++) {\r\n        const sphere = BABYLON.Mesh.CreateSphere(\"Sphere \" + index, 32, 1, scene);\r\n        sphere.parent = sphereWrapper;\r\n        sphere.position.x = 3 * Math.cos(alpha);\r\n        sphere.position.z = 3 * Math.sin(alpha);\r\n        sphere.material = mat;\r\n        const sphereOnClicked = () => {\r\n            alert(`You just clicked ${sphere.name}!`)\r\n        }\r\n        const sphereOnLeftClicked2 = () => {\r\n            alert(`You just LEFT clicked ${sphere.name}!`)\r\n        }\r\n        const sphereOnRightClicked = () => {\r\n            alert(`You just RIGHT clicked ${sphere.name}!`)\r\n        }\r\n        sphere.accessibilityTag = {\r\n            isSalient: true,\r\n            description: sphere.name,\r\n        };\r\n        sphere.actionManager = new BABYLON.ActionManager(scene);\r\n        sphere.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickTrigger, sphereOnClicked));\r\n        sphere.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnLeftPickTrigger, sphereOnLeftClicked2));\r\n        sphere.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnRightPickTrigger, sphereOnRightClicked));\r\n        alpha += (2 * Math.PI) / spheresCount;\r\n    }\r\n\r\n    console.log('Start the show!');\r\n    AccessibilityRenderer.renderAccessibilityTree(scene);\r\n    return scene;\r\n};\r\n```\r\n\r\nTesting code 2:\r\n\r\n```\r\n/**\r\n * A simple GUI scene. Shows a card GUI for a easter event, with buttons to 'Join' event, and 'close' card.\r\n */\r\nexport let createScene = function ()\r\n{\r\n    let scene = new BABYLON.Scene(engine);\r\n    let camera = new BABYLON.ArcRotateCamera('Camera', -Math.PI/2, Math.PI/2, 5, new BABYLON.Vector3(0, 0, 0), scene);\r\n    camera.setTarget(BABYLON.Vector3.Zero());\r\n    camera.attachControl(canvas, true);\r\n    let light = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(0, 1, 0), scene);\r\n    light.intensity = 0.7;\r\n\r\n    let wrapper = new BABYLON.TransformNode(\"Wrapper\");\r\n    wrapper.setEnabled(true);\r\n\r\n    let egg = BABYLON.MeshBuilder.CreateSphere(\"Egg\", {diameterX: 0.62, diameterY: 0.8, diameterZ: 0.6}, scene);\r\n    egg.parent = wrapper;\r\n    egg.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"An easter egg\"\r\n    }\r\n    egg.actionManager = new BABYLON.ActionManager(scene);\r\n    egg.actionManager.registerAction(new BABYLON.ExecuteCodeAction(\r\n        BABYLON.ActionManager.OnPickTrigger,\r\n        () => {\r\n            wrapper.setEnabled(false);\r\n            card.setEnabled(true);\r\n        })\r\n    );\r\n\r\n    let box1 = BABYLON.MeshBuilder.CreateBox(\"box1\", {size: 0.3}, scene);\r\n    box1.parent = wrapper;\r\n    box1.position.x = 1;\r\n    box1.position.z = 0.2;\r\n    box1.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A small box on the left of the egg\",\r\n        isWholeObject: true,\r\n    }\r\n    let box2 = BABYLON.MeshBuilder.CreateBox(\"box2\", {size: 0.3}, scene);\r\n    box2.parent = wrapper;\r\n    box2.position.x = -1;\r\n    box2.position.z = 0.2;\r\n    box2.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"A small box on the right of the egg\",\r\n        isWholeObject: true,\r\n    }\r\n\r\n    let box = BABYLON.MeshBuilder.CreateBox(\"box\", {size: 0.5}, scene);\r\n    box.position.y = -0.65;\r\n    box.parent = egg;\r\n\r\n    // GUI\r\n    let card = BABYLON.MeshBuilder.CreatePlane('card', {size: 3});\r\n    card.setEnabled(false);\r\n    card.accessibilityTag = {\r\n        isSalient: true,\r\n        description: \"Easter Event Card\"\r\n    }\r\n    card.position.z = 0.5;\r\n    let adt = GUI.AdvancedDynamicTexture.CreateForMesh(card);\r\n\r\n    let wrapFront = new GUI.Rectangle('TeamsCardUI_wrapFront');\r\n    wrapFront.width = '80%';\r\n    wrapFront.background = 'white';\r\n    adt.addControl(wrapFront);\r\n\r\n    let thumbnailBg = new GUI.Rectangle('TeamsCardUI_ThumbnailBg');\r\n    thumbnailBg.width = '100%';\r\n    thumbnailBg.height = '40%';\r\n    thumbnailBg.background = 'gray';\r\n    thumbnailBg.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    thumbnailBg.top = 0;\r\n    wrapFront.addControl(thumbnailBg);\r\n\r\n    let url = 'https://raw.githubusercontent.com/TNyawara/EasterBunnyGroupProject/master/Assets/Easter_UI/Backgrounds/background_10.png';\r\n    let thumbnailCustomized = new GUI.Image('TeamsCardUI_ThumbnailImage', url);\r\n    thumbnailCustomized.alt = 'Background image';\r\n    thumbnailCustomized.width = '100%';\r\n    thumbnailCustomized.height = '100%';\r\n    thumbnailBg.addControl(thumbnailCustomized);\r\n\r\n    const titleFront = new GUI.TextBlock(\r\n    'TeamsCardUIText_Title',\r\n    'Event: Happy Hoppy'\r\n    );\r\n    titleFront.fontSize = 60;\r\n    titleFront.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    titleFront.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n    titleFront.paddingLeft = '7.5%';\r\n    titleFront.top = '40%';\r\n    titleFront.height = '10%';\r\n    wrapFront.addControl(titleFront);\r\n\r\n    let dateFront = new GUI.TextBlock('TeamsCardUIText_Date', 'Every day');\r\n    wrapFront.addControl(dateFront);\r\n    dateFront.fontSize = 40;\r\n    dateFront.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    dateFront.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n    dateFront.paddingLeft = '7.5%';\r\n    dateFront.top = '50%';\r\n    dateFront.height = '5%';\r\n    dateFront.isEnabled = false;\r\n\r\n    const timeFront = new GUI.TextBlock('TeamsCardUIText_Time', '00:00 - 23:59');\r\n    wrapFront.addControl(timeFront);\r\n    timeFront.fontSize = 40;\r\n    timeFront.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    timeFront.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n    timeFront.paddingLeft = '35%';\r\n    timeFront.top = '50%';\r\n    timeFront.height = '5%';\r\n\r\n    const meetingDetail = new GUI.TextBlock(\r\n    'TeamsCardUIText_GroupName',\r\n    \"Help the little bunny rabbits get ready for Easter! Look at all the different colors to decorate Easter eggs with and pick out the shapes you'd like to wear in the parade. \"\r\n    );\r\n    wrapFront.addControl(meetingDetail);\r\n    meetingDetail.fontSize = 40;\r\n    meetingDetail.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    meetingDetail.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n    meetingDetail.paddingLeft = '7.5%';\r\n    meetingDetail.top = '55%';\r\n    meetingDetail.height = '30%';\r\n    meetingDetail.width = '100%';\r\n    meetingDetail.textWrapping = GUI.TextWrapping.WordWrapEllipsis;\r\n\r\n    let joinButton = GUI.Button.CreateSimpleButton('TeamsCardUIButton_Join', 'Join');\r\n    joinButton.background = 'black';\r\n    joinButton.color = 'white';\r\n    joinButton.fontSize = 40;\r\n    joinButton.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    joinButton.textBlock.textHorizontalAlignment = GUI.Control.VERTICAL_ALIGNMENT_CENTER;\r\n    joinButton.top = '85%';\r\n    joinButton.height = '10%';\r\n    joinButton.width = '40%';\r\n    wrapFront.addControl(joinButton);\r\n    joinButton.onPointerClickObservable.add(() => {\r\n        alert('💐🌼Happy Easter! 🐰🥚');\r\n    });\r\n\r\n    let closeButton = GUI.Button.CreateSimpleButton('TeamsCardUIButton_Close', 'X');\r\n    closeButton.background = 'black';\r\n    closeButton.color = 'white';\r\n    closeButton.fontSize = 40;\r\n    closeButton.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    closeButton.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n    closeButton.textBlock.textHorizontalAlignment = GUI.Control.VERTICAL_ALIGNMENT_CENTER;\r\n    closeButton.top = '0';\r\n    closeButton.height = '12%';\r\n    closeButton.width = '15%';\r\n    wrapFront.addControl(closeButton);\r\n    closeButton.onPointerClickObservable.add(() => {\r\n        card.setEnabled(false);\r\n        wrapper.setEnabled(true);\r\n    });\r\n\r\n    console.log('Start the show!');\r\n    AccessibilityRenderer.RenderAccessibilityTree(scene);\r\n    return scene;\r\n}\r\n```",
                "author": {
                    "name": "mysunnytime",
                    "url": "https://github.com/mysunnytime"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/core/src/IAccessibilityTag.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/gui/src/2D/controls/container.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/image.ts",
                    "packages/public/@babylonjs/.gitignore",
                    "packages/public/@babylonjs/accessibility/config.json",
                    "packages/public/@babylonjs/accessibility/license.md",
                    "packages/public/@babylonjs/accessibility/package.json",
                    "packages/public/@babylonjs/accessibility/readme.md",
                    "packages/public/@babylonjs/accessibility/src/index.ts",
                    "packages/public/@babylonjs/accessibility/tsconfig.build.json",
                    "packages/public/@babylonjs/accessibility/tsconfig.json",
                    "packages/public/@babylonjs/accessibility/webpack.config.js",
                    "packages/public/umd/babylonjs-accessibility/.npmignore",
                    "packages/public/umd/babylonjs-accessibility/config.json",
                    "packages/public/umd/babylonjs-accessibility/license.md",
                    "packages/public/umd/babylonjs-accessibility/package.json",
                    "packages/public/umd/babylonjs-accessibility/readme.md",
                    "packages/public/umd/babylonjs-accessibility/src/index.ts",
                    "packages/public/umd/babylonjs-accessibility/tsconfig.build.json",
                    "packages/public/umd/babylonjs-accessibility/tsconfig.json",
                    "packages/public/umd/babylonjs-accessibility/webpack.config.js",
                    "packages/tools/accessibility/README.md",
                    "packages/tools/accessibility/package.json",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinGUIItem.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinHostComponent.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinItem.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinNodeItem.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinRenderer.ts",
                    "packages/tools/accessibility/src/HtmlTwin/htmlTwinTreeComponent.tsx",
                    "packages/tools/accessibility/src/HtmlTwin/index.ts",
                    "packages/tools/accessibility/src/index.ts",
                    "packages/tools/accessibility/src/legacy/legacy.ts",
                    "packages/tools/accessibility/tsconfig.build.json",
                    "packages/tools/accessibility/tsconfig.json",
                    "packages/tools/accessibility/tsconfig.nocomposite.json",
                    "packages/tools/devHost/package.json",
                    "tsconfig.build.json",
                    "tsconfig.json"
                ],
                "tags": []
            },
            {
                "pr": "13144",
                "title": "Take into account adaptWidth/HeightToChildren in the StackPanel",
                "description": "Fixes #13139\r\n\r\nExample Playground where you can test the change: https://playground.babylonjs.com/#PE9NXK#12 (use the vertical parameter to switch between a horizontal and a vertical StackPanel)",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/stackPanel.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "13137",
                "title": "remove new methods",
                "description": "The recently added methods that have now been deleted, RotationQuaternionFromOntoToRef and RotationQuaternionFromOnto, turned out to be equivalent to the existing one FromUnitVectorsToRef so are not necessary.\r\n\r\nWill any reference to them in What's New be automatically deleted?",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13128",
                "title": "Flip normal if picking ray is in the same direction",
                "description": "Fixes #13115",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Collisions/pickingInfo.ts"
                ],
                "tags": [
                    "bug",
                    "picking"
                ]
            },
            {
                "pr": "13143",
                "title": "InputManager: Fix for onPointerMove",
                "description": "In the latest release, there was a check that was erroneously checking for pickResult on onPointerMove that would make that callback not function as intended, this PR will fix that by removing the check and forcing a pick before executing the callback.\r\n\r\nNote: Scene.pick has been changed to return `PickingInfo` as opposed to `Nullable<PickingInfo>` because it has been determined that pick will never return null.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "inputs",
                    "skip changelog"
                ]
            },
            {
                "pr": "13141",
                "title": "Add Vector2 type to custom inspector properties",
                "description": "Add Vector2 type to custom inspector properties",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "13138",
                "title": "Move the viewer to the /viewer/ directory",
                "description": "The viewer was uploaded to the CDN, but to the wrong directory (was in the base directory and not the /viewer/ directory. This fixes the issue.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/packageMapping.ts"
                ],
                "tags": []
            }
        ],
        "5.29.0": [
            {
                "pr": "13129",
                "title": "Fix loading of GUIs with custom fonts and add font controls to InputText and InputPassword",
                "description": "Fixes #13125",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13136",
                "title": "InputManager: Fix for POINTERTAP firing when cursor is moved",
                "description": "This PR contains a fix for the InputManager to not erroneously treat a `pointerup` event as a POINTERTAP if the cursor has moved outside of the drag threshold, even if it returns to the exact same point.\r\n\r\nThis fix should address this bug: https://github.com/BabylonJS/ThePirateCove/issues/168",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "inputs"
                ]
            },
            {
                "pr": "13131",
                "title": "Fix infinite sprites draw in frozen scenes",
                "description": "https://forum.babylonjs.com/t/spritemanager-infinite-drawcalls-bug/34948",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingGroup.ts",
                    "packages/dev/core/src/Rendering/renderingManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "sprite"
                ]
            },
            {
                "pr": "13134",
                "title": "Fix usage of useReverseDepthBuffer with orthographic cameras",
                "description": "See https://forum.babylonjs.com/t/usereversedepthbuffer-orthographic-camera-lead-to-z-order-issue/34952/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13127",
                "title": "Workaround Firefox Leak",
                "description": "https://forum.babylonjs.com/t/videotexture-memory-leak-in-firefox/34876",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.videoTexture.ts",
                    "packages/dev/core/src/Materials/Textures/htmlElementTexture.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13126",
                "title": "Fix Doc",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/button.ts",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13122",
                "title": "Add correct placeholders to dropup button on sandbox.",
                "description": "Fixes #13091",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/sandbox/src/components/animationBar.tsx",
                    "packages/tools/sandbox/src/components/dropUpButton.tsx",
                    "packages/tools/sandbox/src/components/footer.tsx",
                    "packages/tools/sandbox/src/scss/footer.scss"
                ],
                "tags": [
                    "bug",
                    "sandbox"
                ]
            },
            {
                "pr": "13123",
                "title": "Increase the maximum bloom threshold value on the inspector slider",
                "description": "HDR scenes may benefit from having a bloom threshold greater than 1",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "13120",
                "title": "Fix GUI json load.",
                "description": "Related issue: https://forum.babylonjs.com/t/gui-editor-will-generate-error-if-save-locally/34853/2",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/loadGuiSnippetWithUnicode.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/parseGuiJsonWithUnicode.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "13121",
                "title": "Add API to enable/disable auto-build of the DefaultRenderingPipeline.",
                "description": "I use this to perform some custom setup after the DefaultRenderingPipeline is constructed; I construct the pipeline with auto-build disabled (to avoid it's ctor creating effects which will need to be recreated), then perform some setup, and finally prepare() and re-enable the pipeline's automaticBuild.\r\n\r\nPrior to this change, I wasn't able to turn the automaticBuild back on so would have either had to track effect changes manually or live with unneeded effect creation in the ctor.\r\n\r\nOther minor cleanup included.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13044",
                "title": "Implement Lazy Picking for POINTERMOVE",
                "description": "This PR changes the code for picking during a move event to only pick when the user (or mechanism like the ActionManager) require it.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Events/pointerEvents.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13118",
                "title": "update dependencies and an audit-fix",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/public/@babylonjs/shared-ui-components/package.json"
                ],
                "tags": []
            },
            {
                "pr": "13076",
                "title": "Normalized return values and made vector classes use extendable types",
                "description": "This commit tries to normalize the return type of all math functions so that all ToRef versions return the ref. It also changes so that functions that create new Objects try to do that with an extended type when possible.\r\n\r\nMore information can be found [here](https://forum.babylonjs.com/t/types-in-math-vector-ts/34514/13)",
                "author": {
                    "name": "LostInClams",
                    "url": "https://github.com/LostInClams"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13116",
                "title": "Fix crash when using a custom material for LineMesh with an effect layer",
                "description": "See https://forum.babylonjs.com/t/exception-if-material-parameter-set-on-linesmesh/34769/8\r\n\r\nIt's actually a problem of the `isReady` function being called for the wrong material when testing for material readyness in a RTT.\r\n\r\nIt was normally already handled by #11696, but the `mesh.isReady(false)` call I added at the start of the `customIsReadyFunction` implementation can end up calling a `isReady` function for the wrong material if the `Mesh.isReady` function is overriden, which is what `LineMesh` is doing: \r\n\r\n```typescript\r\npublic isReady() {\r\n    if (!this._lineMaterial.isReady(this, !!this._userInstancedBuffersStorage)) {\r\n        return false;\r\n    }\r\n\r\n    return super.isReady();\r\n}\r\n```\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13106",
                "title": "First iteration of flexible grid layout for VSM",
                "description": "Current capabilities: \r\n* Resize row/column\r\n* Drag and drop single tab",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/dev/sharedUiComponents/src/components/layout/DraggableIcon.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleColumn.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleColumn.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleDragHandler.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleDropZone.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleDropZone.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleGridContainer.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleGridContainer.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleGridLayout.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleResizeBar.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleResizeBar.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTab.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTab.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTabsContainer.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/layout/FlexibleTabsContainer.tsx",
                    "packages/dev/sharedUiComponents/src/components/layout/LayoutContext.ts",
                    "packages/dev/sharedUiComponents/src/components/layout/types.ts",
                    "packages/dev/sharedUiComponents/src/components/layout/utils.ts",
                    "packages/dev/sharedUiComponents/src/imgs/dragDotsIcon_white.svg",
                    "packages/dev/sharedUiComponents/src/stories/layout/FlexibleGridLayout.stories.tsx",
                    "packages/tools/vsm/src/initialLayout.tsx",
                    "packages/tools/vsm/src/testComponent.tsx",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13113",
                "title": "Publish @babylonjs/shared-ui-components package",
                "description": "For a start we will release an es6 version of the shared ui components. the package exists on npm already (as the public scope had to be set beforehand):\n\nhttps://www.npmjs.com/package/@babylonjs/shared-ui-components",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package.json",
                    "packages/dev/buildTools/src/addJSToCompiledFiles.ts",
                    "packages/dev/buildTools/src/copyAssets.ts",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorLineComponent.tsx",
                    "packages/public/@babylonjs/.gitignore",
                    "packages/public/@babylonjs/inspector/tsconfig.build.json",
                    "packages/public/@babylonjs/shared-ui-components/license.md",
                    "packages/public/@babylonjs/shared-ui-components/package.json",
                    "packages/public/@babylonjs/shared-ui-components/readme.md",
                    "packages/public/@babylonjs/shared-ui-components/tsconfig.build.json",
                    "packages/public/@babylonjs/shared-ui-components/tsconfig.json"
                ],
                "tags": []
            },
            {
                "pr": "13114",
                "title": "forceSharedVertices with skinmesh support",
                "description": "forceSharedVertices didn't support skin mesh infos which results in glitched mesh rendering.\r\nFor example this PG:\r\nhttps://playground.babylonjs.com/#92Y727#293",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13111",
                "title": "Decals: Add support for rigged meshes + optimization for speed",
                "description": "See https://forum.babylonjs.com/t/decals-are-not-supported-for-glb-files/34571/21\r\n\r\nThe doc has also been updated (https://github.com/BabylonJS/Documentation/pull/673).\r\n\r\nI have tried to remove a number of object creations (`Vector3` / `Vector4`) to lower GC pressure, at least in the main paths.\r\n\r\nAlso, to avoid over-complicating the code even more, I handle only the first 4 matrix indices/weights of a rigged mesh when creating new vertices at the clipping stage (vertices that are not clipped retain their full indices/weights). I did not see any artefacts because of that in my testings. This code can be revisited later if necessary.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/decalBuilder.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "13110",
                "title": "Depth of field optimizations and cleanup",
                "description": "The main change here is to use R-only texture format for the circle of confusion (which only needs to store a single value per pixel) rather than using an RGBA texture. This will save space and should be more bandwidth efficient to sample from during the subsequent blur passes.\r\n\r\nAlso removes `sampleDistance` from the blur shader-- it's not used AFAICT and deleting this code removes the need for passing cameraMinMaxZ uniform.\r\n\r\nOther changes here are just minor cleanup. ",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/blurPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/circleOfConfusionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/depthOfFieldBlurPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/depthOfFieldEffect.ts",
                    "packages/dev/core/src/PostProcesses/depthOfFieldMergePostProcess.ts",
                    "packages/dev/core/src/Shaders/circleOfConfusion.fragment.fx",
                    "packages/dev/core/src/Shaders/depthOfFieldMerge.fragment.fx",
                    "packages/dev/core/src/Shaders/kernelBlur.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "13107",
                "title": "Encode and decode GUI Editor snippet as JSON when needed.",
                "description": "Forum thread: https://forum.babylonjs.com/t/gui-editor-can-not-input-chinese-character/34759/\r\nI'm taking the same approach as: https://github.com/BabylonJS/Babylon.js/pull/12391 by saving the encoded GUI in a separate field\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/tools/guiEditor/public/index.js",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "13108",
                "title": "fix the samples returned when using multiview in WebXR",
                "description": "When using multiview on WebXR I don't want to update the samples using `setSamples` because of the extra work done there (that is not needed).\nThis is one solution. A different one would be to introduce a (hidden) setter to the _samples of the wrapper but this approach makes sure the state of the wrapper doesn't change.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/XR/webXRRenderTargetTextureProvider.ts"
                ],
                "tags": []
            },
            {
                "pr": "13109",
                "title": "Fix glTF extension links and fix lint warnings",
                "description": "Will fix documentation that shouldn't have been exposed also.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/EXT_lights_image_based.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/EXT_meshopt_compression.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/EXT_texture_webp.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.data.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_draco_mesh_compression.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_clearcoat.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_emissive_strength.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_ior.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_sheen.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_specular.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_translucency.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_transmission.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_unlit.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_variants.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_volume.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_mesh_quantization.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_texture_basisu.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_texture_transform.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_xmp_json_ld.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/MSFT_audio_emitter.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/MSFT_lod.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/MSFT_minecraftMesh.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/MSFT_sRGBFactors.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderAnimation.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_texture_transform.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13071",
                "title": "GLB header length check from exception to warning",
                "description": "glTF-Validator accepts some GLBs that we don't. Loosening the check to allow them to go through with a warning in the log.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "enhancement",
                    "glTF"
                ]
            }
        ],
        "5.28.0": [
            {
                "pr": "13105",
                "title": "WebGPU fix PCF shadows",
                "description": "- Fix Uniform analysis for WebGPU\r\n- Update Twgls to latest\r\n- Squeezed in fix for https://forum.babylonjs.com/t/typeerror-using-mesh-serialize/34708/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/shadowsFragmentFunctions.fx",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "13104",
                "title": "update the webxr typings to match current state",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/handConstraintBehavior.ts",
                    "packages/dev/core/src/LibDeclarations/webxr.d.ts",
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts",
                    "packages/dev/core/src/XR/features/WebXRHitTest.ts",
                    "packages/dev/core/src/XR/webXRInput.ts",
                    "packages/dev/core/src/XR/webXRManagedOutputCanvas.ts",
                    "packages/dev/core/src/XR/webXRWebGLLayer.ts"
                ],
                "tags": []
            },
            {
                "pr": "13101",
                "title": "Texture: Make some setters protected for properties not meant to be changed by end user",
                "description": "See https://forum.babylonjs.com/t/set-content-of-texture-array-from-canvas/34710/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/thinTexture.ts",
                    "packages/dev/core/src/Misc/dds.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts",
                    "packages/dev/core/src/XR/features/WebXRLightEstimation.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13099",
                "title": "Implement IAnimatable on GUI controls",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": []
            },
            {
                "pr": "13102",
                "title": "A little fix: links referenced in sceneLoader.ts are not found",
                "description": "A very little fix.\r\nI found a link in the SceneLoader's error message not found.\r\nSo, I fixed from `https://doc.babylonjs.com/how_to/load_from_any_file_type` to `https://doc.babylonjs.com/features/featuresDeepDive/importers/loadingFileTypes`",
                "author": {
                    "name": "drumath2237",
                    "url": "https://github.com/drumath2237"
                },
                "files": [
                    "packages/dev/core/src/Loading/sceneLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "13098",
                "title": "Adding a parameter for setParent() method that takes into account the pivot change",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "13097",
                "title": "Add extension support to assetsManager",
                "description": "Fix #13096",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/assetsManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "loaders"
                ]
            },
            {
                "pr": "13095",
                "title": "`PostProcessRenderPipeline`: Made `_renderEffects` protected to allow subclassing",
                "description": "It is not possible to manipulate the render effects in subclasses of `PostProcessRenderPipeline` so making these attributes protected can do the trick.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13090",
                "title": "Texture inspector in Sandbox does not function correctly",
                "description": "Fixes #13069",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureCanvasManager.ts"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "13088",
                "title": "NullEngine Cannot use a ShadowGenerator",
                "description": "https://forum.babylonjs.com/t/cannot-create-shadow-map-with-point-light-in-node-on-server/21450/5",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/test/unit/Lights/Shadows/babylon.shadowGenerator.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13089",
                "title": "Hide change for billboard hierarchy with a static flag",
                "description": "Hides changes in these PRs with a flag for better back compat:\r\nhttps://github.com/BabylonJS/Babylon.js/pull/12984\r\nhttps://github.com/BabylonJS/Babylon.js/pull/13042",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            }
        ],
        "5.27.1": [
            {
                "pr": "13086",
                "title": "Set target to ES2018",
                "description": "Based on feedback and babylon native needs I am moving the target for our es packages to es2018",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "13079",
                "title": "Fixed transform gizmos screen size",
                "description": "Hi,\r\nI noticed that [gizmos](https://doc.babylonjs.com/features/featuresDeepDive/mesh/gizmo) do not correctly preserve the size on the screen.\r\n\r\nYou can notice that if the aspect ratio of the screen is big enough and you move a gizmo to the edge of the screen. It gets bigger. And this doesn't work at all with ORTHO-cameras.\r\n\r\nI've fixed the math a little bit and added branching depending on whether the camera is PERSP or ORTHO\r\nBefore:\r\nhttps://user-images.githubusercontent.com/2855321/194728765-276ae78a-4906-4c95-9ef9-6a4bae9d5501.mp4\r\nAfter:\r\nhttps://user-images.githubusercontent.com/2855321/194755033-bfe76baf-25d3-40a0-9795-f891941d6d51.mp4\r\n\r\n\r\n\r\n",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "13085",
                "title": "Fix declaration generation when \"as\" is used",
                "description": "After this change, every `export { C as B } from \"path\"` will be supported when exporting the declaration. This will fix the issue with the TouchHolographicButtonV3",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/gui/src/3D/controls/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "13083",
                "title": "Add epsilon to Quaternion.AreClose",
                "description": "Ref https://forum.babylonjs.com/t/is-this-metric-to-check-how-close-rotation-quaternions-are-useful/34642/7?u=johnk",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13077",
                "title": "Update waterMaterial.ts",
                "description": "Fix the problem of disordered reflection when the water material model is in the sub node",
                "author": {
                    "name": "xg-qd",
                    "url": "https://github.com/xg-qd"
                },
                "files": [
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "13060",
                "title": "Handle CSP violation errors when loading images.",
                "description": "Previously, whenever a texture fetch failed, we would try to load the fallback texture with \"data:\". If the user's page has a CSP rule that prohibits this, this fallback load would fail and prompt another fallback load, leading to an infinite loop. Now, we stop trying to load the fallback if we hit a security violation error (which is where CSP falls).\r\n\r\nThis behavior can be reproduced on the Playground by adding the CSP tag to the document:\r\nhttps://playground.babylonjs.com/#YCY2IL#1105\r\nhttps://playground.babylonjs.com/#8LFTCH#1452",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13078",
                "title": "remove in Place from conjugate comments",
                "description": "ref https://forum.babylonjs.com/t/quaternion-conjugate-two-inplace/34551/4?u=johnk",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13080",
                "title": "change CustomProceduralTexture constructor size type",
                "description": "The type of param size in CustomProceduralTexture'constructor is now number, I think it is more appropriate to use TextureSize instead.",
                "author": {
                    "name": "Hypnosss",
                    "url": "https://github.com/Hypnosss"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/customProceduralTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13081",
                "title": "prepass reflectivity channel support unlit materials",
                "description": "Add support for prepass reflectivity channel with unlit materials.\r\nBefore: https://playground.babylonjs.com/#RPBXIC\r\nAfter: https://playground.babylonjs.com/#RPBXIC#1",
                "author": {
                    "name": "Hypnosss",
                    "url": "https://github.com/Hypnosss"
                },
                "files": [
                    "packages/dev/core/src/Shaders/pbr.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "13074",
                "title": "Material block-dirty mechanism",
                "description": "This PR introduces a block-dirty mechanism on the material level, on top of the scene level.\nIt also adds the ability to run an atomic callback to make changes to the material (dirty-setting-wise)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13072",
                "title": "Fix blur kernel size in glow layer second try",
                "description": "https://forum.babylonjs.com/t/glowlayers-kernelblursize-is-reset-on-canvas-resize/34495/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/glowLayer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13070",
                "title": "Depth peeling renderer: Add excluded mesh support",
                "description": "See https://forum.babylonjs.com/t/depthpeeler-transparent-groundmaterial/34511/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            }
        ],
        "5.27.0": [
            {
                "pr": "13062",
                "title": "Allow GLTF Exporter to export WebP images",
                "description": "Adds JPEG and WEBP as valid optional mimetype options when serializing to a GLB. \r\n\r\nUsage:\r\nAdd this to the dev host scene's button:\r\n\r\n```\r\nbutton1.onPointerUpObservable.add(function () {\r\n        GLTF2Export.GLBAsync(scene, \"webp.glb\", {mimeType: ImageMimeType.WEBP}).then((glb) => {\r\n            glb.downloadFiles();\r\n          });\r\n    });\r\n```  \r\n\r\nOutput as per `gltf-transform inspect`\r\n**PNG**\r\n```\r\nTEXTURES\r\n ────────────────────────────────────────────\r\n┌───┬─────────────────────────────────────┬─────┬──────────────────────────┬───────────┬───────────┬────────────┬───────────┬──────────┐\r\n│ # │ name                                │ uri │ slots                    │ instances │ mimeType  │ resolution │ size      │ gpuSize¹ │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼───────────┼────────────┼───────────┼──────────┤\r\n│ 0 │ Material (Base Color) image         │     │ baseColorTexture         │ 1         │ image/png │ 1024x1024  │ 380.17 KB │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼───────────┼────────────┼───────────┼──────────┤\r\n│ 1 │ Material (Metallic Roughness) image │     │ metallicRoughnessTexture │ 1         │ image/png │ 1024x1024  │ 2.66 MB   │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼───────────┼────────────┼───────────┼──────────┤\r\n│ 2 │ Material (Normal) image             │     │ normalTexture            │ 1         │ image/png │ 1024x1024  │ 2.89 MB   │ 5.59 MB  │\r\n└───┴─────────────────────────────────────┴─────┴──────────────────────────┴───────────┴───────────┴────────────┴───────────┴──────────┘\r\n```\r\n\r\n\r\n**JPEG***\r\n```\r\nTEXTURES\r\n ────────────────────────────────────────────\r\n┌───┬─────────────────────────────────────┬─────┬──────────────────────────┬───────────┬────────────┬────────────┬───────────┬──────────┐\r\n│ # │ name                                │ uri │ slots                    │ instances │ mimeType   │ resolution │ size      │ gpuSize¹ │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 0 │ Material (Base Color) image         │     │ baseColorTexture         │ 1         │ image/jpeg │ 1024x1024  │ 42.62 KB  │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 1 │ Material (Metallic Roughness) image │     │ metallicRoughnessTexture │ 1         │ image/jpeg │ 1024x1024  │ 537.51 KB │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 2 │ Material (Normal) image             │     │ normalTexture            │ 1         │ image/jpeg │ 1024x1024  │ 584.05 KB │ 5.59 MB  │\r\n└───┴─────────────────────────────────────┴─────┴──────────────────────────┴───────────┴────────────┴────────────┴───────────┴──────────┘\r\n```\r\n**WEBP**\r\n```\r\nTEXTURES\r\n ────────────────────────────────────────────\r\n┌───┬─────────────────────────────────────┬─────┬──────────────────────────┬───────────┬────────────┬────────────┬───────────┬──────────┐\r\n│ # │ name                                │ uri │ slots                    │ instances │ mimeType   │ resolution │ size      │ gpuSize¹ │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 0 │ Material (Base Color) image         │     │ baseColorTexture         │ 1         │ image/webp │ 1024x1024  │ 12.19 KB  │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 1 │ Material (Metallic Roughness) image │     │ metallicRoughnessTexture │ 1         │ image/webp │ 1024x1024  │ 375.18 KB │ 5.59 MB  │\r\n├───┼─────────────────────────────────────┼─────┼──────────────────────────┼───────────┼────────────┼────────────┼───────────┼──────────┤\r\n│ 2 │ Material (Normal) image             │     │ normalTexture            │ 1         │ image/webp │ 1024x1024  │ 418.08 KB │ 5.59 MB  │\r\n└───┴─────────────────────────────────────┴─────┴──────────────────────────┴───────────┴────────────┴────────────┴───────────┴──────────┘\r\n```\r\n\r\nMy first PR for this project, so let me know if I'm missing anything. ",
                "author": {
                    "name": "christaggart",
                    "url": "https://github.com/christaggart"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "13064",
                "title": "deal with dead codes correctly",
                "description": "Playground: #I1Y5YT#47\n\nThis treats dead code as expected minus a few modifiers that are not available in a keyboard event. For example - on a supporting keyboard - when entering a quote (\") and A afterwards we should output ä, but the expected result if entering \" and f (for example) afterwards is: `\"f`. This is not provided in the event. Threfore we are using the default behavior, which is output the dead key if space was entered right after.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/inputText.ts"
                ],
                "tags": []
            },
            {
                "pr": "13068",
                "title": "fix glow layer kernel set",
                "description": "related to https://forum.babylonjs.com/t/glowlayers-kernelblursize-is-reset-on-canvas-resize/34495\r\n\r\nsuperseeds https://github.com/BabylonJS/Babylon.js/pull/13063",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/glowLayer.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "13067",
                "title": "PBR: Reset all defines when enabling/disabling pbr components",
                "description": "See https://forum.babylonjs.com/t/disabling-clearcoat-results-in-missing-object-within-next-screenshot/34479/4",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrClearCoatConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSheenConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12989",
                "title": "Create mrtkv3 button",
                "description": "This is a continuation of the work started in this PR: https://github.com/BabylonJS/Babylon.js/pull/12707:\r\nAssets PR: https://github.com/BabylonJS/Assets/pull/67\r\n\r\nPreview: \r\n\r\nThe design team is currently working on creating an interactive documentation for showcasing graphics tools components. This PR creates a TouchHolographicV3Button which mirrors the visual design of the MRTK v3.0 button.\r\nFor the time being, we would be using snapshots from this experimental PR and other PRs to create this documentation pending when we figure out the best way to release these new designs.\r\n\r\nTODO\r\n\r\n- [x] Figure out how to handle versioning between this button and the TouchHolographic button. As new designs for MRTK components are released, we might need to figure out the best way for users to switch from one version to the other. Otherwise, the growing list of varying components like the button might become confusing to use. - Solution: https://github.com/BabylonJS/Babylon.js/pull/12707#issuecomment-1230317075\r\n\r\n**Playground ID - /#UHMKE6#1**\r\n\r\n![image](https://user-images.githubusercontent.com/15232740/190650189-dc76d907-2da5-4771-9129-489e8e6384f1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/88052040/184244268-b19be3ca-eef3-429a-8600-9758159f0f77.gif)\r\n",
                "author": {
                    "name": "tayomadein",
                    "url": "https://github.com/tayomadein"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/MRTK3/touchHolographicButton.ts",
                    "packages/dev/gui/src/3D/controls/index.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackglowMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlFrontplateMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlInnerquadMaterial.ts",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlBackglow.fragment.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlBackglow.vertex.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlFrontplate.fragment.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlFrontplate.vertex.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlInnerquad.fragment.fx",
                    "packages/dev/gui/src/3D/materials/mrdl/shaders/mrdlInnerquad.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "13061",
                "title": "fix undefined self",
                "description": "https://forum.babylonjs.com/t/importasyncmesh-on-server-side-without-scene/34151/20",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13057",
                "title": "Fix Texture Cache",
                "description": "https://forum.babylonjs.com/t/draw-a-layer-using-a-render-target-as-background-to-render-target-2-dont-have-the-right-size/34423",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "13056",
                "title": "Fix pipelineContext deletion in releaseEffect",
                "description": null,
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13054",
                "title": "InputManager: add a property to disable mesh checking in the onPointerOver event",
                "description": "See https://forum.babylonjs.com/t/trigger-onpointerovertrigger-when-hovering-between-2-thin-instances/33943/3",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "new feature",
                    "inputs"
                ]
            },
            {
                "pr": "13055",
                "title": "Fix negative scaling issue with instances",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/negative scaling with instances.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13053",
                "title": "Fix TmpVectors usage in Polar/Spherical toVector methods",
                "description": null,
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.polar.ts"
                ],
                "tags": []
            },
            {
                "pr": "13052",
                "title": "Inspector: Raise the limit of samples in SSAO",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonRenderingPipelinePropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "13051",
                "title": "Optional camera for all post processes",
                "description": "Camera is now optional for all posteffects except for anaglyph and multiview\r\n\r\n[Thread](https://forum.babylonjs.com/t/issues-in-the-documentation-for-posteffects/34370) in the forums",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/blackAndWhitePostProcess.ts",
                    "packages/dev/core/src/PostProcesses/colorCorrectionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/refractionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/tonemapPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/vrDistortionCorrectionPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/vrMultiviewToSingleviewPostProcess.ts",
                    "packages/dev/postProcesses/src/asciiArt/asciiArtPostProcess.ts",
                    "packages/dev/postProcesses/src/digitalRain/digitalRainPostProcess.ts"
                ],
                "tags": []
            },
            {
                "pr": "13050",
                "title": "Provide Example PGs for Vector2s, for new Vector3s and a couple of Quaternions",
                "description": "\r\nProvide example PGs  for methods and properties. Changes to comments only.\r\n",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13040",
                "title": "Don't alter the scene's active cameras in the middle of taking a scre…",
                "description": "…enshot with RenderTargetTexture, because we can just set the RTT active camera instead.\r\n\r\nRelated to: https://forum.babylonjs.com/t/how-to-freeze-the-camera/34284/10 so we don't need to manually set the scene's active camera after taking a screenshot.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13046",
                "title": "Inspector Doc Link Fix",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13045",
                "title": "Change the artboard color on VSM",
                "description": "![vsm-artboard](https://user-images.githubusercontent.com/6002144/193133519-b338107e-5b88-4d9c-94db-e063c0f30798.gif)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/.storybook/main.js",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBar.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBarComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorComponentEntry.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorComponentEntry.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorPicker.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/ColorPicker.tsx",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/HexColor.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/colorPicker/HexColor.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorPickerLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/ColorPickerLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/lines/NumericInputComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/NumericInputComponent.tsx",
                    "packages/dev/sharedUiComponents/src/imgs/copy.svg",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandBarComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/colorPicker/ColorPicker.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/ColorLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/ColorPickerLineComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/NumericInputComponent.stories.tsx",
                    "packages/tools/vsm/src/workbench.modules.scss",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13042",
                "title": "Fix billboard scale in hierarchy",
                "description": "Follow up https://forum.babylonjs.com/t/billboardmode-rotation-bug/33908 and https://forum.babylonjs.com/t/object-scaling-bug/34312/14\r\nFix done in https://github.com/BabylonJS/Babylon.js/pull/12984 was applying scale multiple time. Only taking care of rotation for billboard.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/billboardParentScale.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13043",
                "title": "Fix wrong plugin name check for babylon serialization",
                "description": "Follow up https://forum.babylonjs.com/t/physics-plugin-names-are-different-from-the-name-used-in-babylonfileloader-ts/34345\r\nFix bad plugin name check. Keep previous ones, just in case for back compat.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            }
        ],
        "5.26.1": [
            {
                "pr": "13041",
                "title": "fix declaration generation",
                "description": "The problem was the storybook declarations that were included in the final declaration of the inspector, the gui editor and the node editor",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBlockConnectionPoint.ts",
                    "packages/public/umd/babylonjs-gui/config.json",
                    "packages/public/umd/babylonjs-inspector/config.json",
                    "packages/public/umd/babylonjs-node-editor/config.json",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts"
                ],
                "tags": []
            }
        ],
        "5.26.0": [
            {
                "pr": "13036",
                "title": "Add applyPostProcess flag on ADV to optionally draw it after the post…",
                "description": "… processes have been applied.\r\n\r\nThanks Seb for the guidance :D \r\n\r\nSome Playground examples:\r\n#FBH4J7#144\r\n#J9H084#392 (has renderTarget)",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Layers/layer.ts",
                    "packages/dev/core/src/Layers/layerSceneComponent.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/src/sceneComponent.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/uiUnaffected.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "13035",
                "title": "Remove unneeded prefixes and unused code",
                "description": "Those were found while working on thinEngine/Engine optimizations as part of the ESM work.\r\n\r\nEach function was inspected for backwards compatibility. If a prefix is needed (as the case in some webkit-functionalities) it stayed, otherwise it was removed. ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioEngine.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Gamepads/gamepadManager.ts",
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Misc/virtualJoystick.ts",
                    "packages/tools/testTools/src/utils.ts"
                ],
                "tags": []
            },
            {
                "pr": "13034",
                "title": "Initial VSM Design",
                "description": "Just adding a basic menu (with a class extracted from the GE menu, hopefully can be reused back there later).",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".vscode/tasks.json",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBar.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandBarComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandButton.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandButtonComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandDropdown.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/bars/CommandDropdownComponent.tsx",
                    "packages/dev/sharedUiComponents/src/components/classNames.ts",
                    "packages/dev/sharedUiComponents/src/components/lines/FileButtonLineComponent.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/lines/FileButtonLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/imgs/betaFlag.svg",
                    "packages/dev/sharedUiComponents/src/imgs/canvasFitIcon.svg",
                    "packages/dev/sharedUiComponents/src/imgs/hamburger.svg",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandBarComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/bars/CommandButtonComponent.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/lines/FileButtonLineComponent.stories.tsx",
                    "packages/tools/vsm/src/customDeclarations.d.ts",
                    "packages/tools/vsm/src/workbench.modules.scss",
                    "packages/tools/vsm/src/workbench.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13038",
                "title": "Fix creation of cube textures from URL",
                "description": "This PR should fix the issue mentioned in this [forum post](https://forum.babylonjs.com/t/cubetexture-createfromprefiltereddata-does-not-work-with-url-that-contains-uri-params/34097) by cropping the URL params before parsing the file extension.",
                "author": {
                    "name": "HoferMarkus",
                    "url": "https://github.com/HoferMarkus"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13039",
                "title": "add picking for fullscreen ADTs",
                "description": "See https://forum.babylonjs.com/t/how-to-handle-gui-interactions-pointer-events-in-offscreen-canvas/34221",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "13031",
                "title": "correction",
                "description": "I did not check https://playground.babylonjs.com/?snapshot=refs/pull/13012/merge#S7HDGQ#5 before merge, the green axis should be tangential to the line and it was not. Should be OK after this PR\r\n\r\nReason for correction\r\n\r\nPitchYawRollToMoveBetweenPointsToRef(start: Vector3, target: Vector3, ref: Vector3)\r\n\r\nCannot guarentee ref with be a zero vector and so need to make ref.z explicitly 0\r\n",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13033",
                "title": "Update Storybook to 7",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/sharedUiComponents/.storybook/main.js",
                    "packages/dev/sharedUiComponents/package.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13029",
                "title": "Improve heap-testing memory leak results",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/babylonServer/src/sceneJs.js",
                    "packages/tools/testsMemoryLeaks/src/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "13032",
                "title": "Fix fallback value",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13012",
                "title": "Add function to get angles between two vectors (Vector3.GetAnglesBetweenVectorsForDirectionChange)",
                "description": "Also add prettier settings to workspace settings.\r\n\r\nSee [this](https://github.com/BabylonJS/Babylon.js/pull/12942) PR for more details.\r\n\r\nDemo PGs: \r\nhttps://playground.babylonjs.com/#QYA3JC#25\r\nhttps://playground.babylonjs.com/#QYA3JC#26\r\n(Press space to start)\r\n\r\n@BabylonJSGuide \r\nI have the opportunity to talk with a physicist almost every day of the week, so I asked him about the problem and worked out the same equations used. After researching how `Math.atan2` works though, and found an issue with the equations: for the phi calculation, the `diff.y` should have been the second parameter of `Math.atan2`, not the first.",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    ".vscode/settings.json",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13019",
                "title": "Restore wasDispatched to false when MaintainStateBetweenFrames is set to false",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13006",
                "title": "Add smoothing for freeCameraDeviceOrientationInputs",
                "description": "Add a simple low-pass filter on alpha/beta/gamma to limit objects \"shaking\"",
                "author": {
                    "name": "ilrico",
                    "url": "https://github.com/ilrico"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraDeviceOrientationInput.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "13028",
                "title": "Fix default initialization.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13026",
                "title": "Some fixes to OptionLineComponent related to wrong parent info showin…",
                "description": "…g up on Inspector.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/bug-display-of-parent-in-the-inspector-shows-parenting-that-has-not-been-set/34256",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "13022",
                "title": "Test babylon octree scene component active meshes",
                "description": null,
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/test/unit/Culling/babylon.octreeSceneComponent.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "13004",
                "title": "Add rotation from one vector3 to another",
                "description": "First commit wherever a result was returned this is now reflected in comments. Only comments changed, if current vector was returned then this was kept and and comment not changed. Ref https://forum.babylonjs.com/t/comments-refer-to-wrong-vectors-returned-by-method-using-toref/34093/3?u=johnk\r\n\r\nAn alternative way of managing an animation along a curve by calculating the rotation needed from a set rotation to a tangent. Example PGs to follow.",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "13021",
                "title": "Fix instance buffer",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/thinRenderTargetTexture.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentExtraDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/vertexColorMixing.fx",
                    "packages/dev/core/src/Shaders/color.fragment.fx",
                    "packages/dev/core/src/Shaders/color.vertex.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/default.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/materials/src/cell/cell.fragment.fx",
                    "packages/dev/materials/src/fire/fire.fragment.fx",
                    "packages/dev/materials/src/fur/fur.fragment.fx",
                    "packages/dev/materials/src/gradient/gradient.fragment.fx",
                    "packages/dev/materials/src/lava/lava.fragment.fx",
                    "packages/dev/materials/src/mix/mix.fragment.fx",
                    "packages/dev/materials/src/simple/simple.fragment.fx",
                    "packages/dev/materials/src/simple/simple.vertex.fx",
                    "packages/dev/materials/src/sky/sky.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.vertex.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.fragment.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx",
                    "packages/dev/materials/src/water/water.fragment.fx",
                    "packages/dev/materials/src/water/water.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13023",
                "title": "Fix SSAO2 sample generation",
                "description": "See https://forum.babylonjs.com/t/ssao-2-has-different-results-each-time-i-add-it-to-the-scene-video-showing-it/33967/8",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/prepass-ssao-b-and-w.png"
                ],
                "tags": [
                    "bug",
                    "rendering engine",
                    "breaking change"
                ]
            },
            {
                "pr": "13016",
                "title": "Adding memory leak tests using heap snapshots",
                "description": "This adds heap based memory leak tests during integration tests. Using memlab under the hood.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Loading/loadingScreen.ts",
                    "packages/tools/babylonServer/public/test.html",
                    "packages/tools/testsMemoryLeaks/package.json",
                    "packages/tools/testsMemoryLeaks/src/index.ts",
                    "packages/tools/testsMemoryLeaks/tsconfig.build.json",
                    "packages/tools/testsMemoryLeaks/tsconfig.json"
                ],
                "tags": []
            },
            {
                "pr": "13018",
                "title": "Fix particle system support for logarithmic depth",
                "description": "See https://forum.babylonjs.com/t/z-fighting-on-multiple-objects/34067/16",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13017",
                "title": "Nit",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingManager.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13014",
                "title": "More features for the aggressive performance mode",
                "description": "Some tiny perf changes + a major one: Now in aggressive mode, the renderingGroups are not reset between frames.",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/baseParticleSystem.ts",
                    "packages/dev/core/src/Rendering/renderingManager.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13015",
                "title": "Fix fast",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "13011",
                "title": "Tiny perf fix",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "13013",
                "title": "Fix some more lint warnings",
                "description": "And add back comment that I forgot to add back in previous PR.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderInterfaces.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "13000",
                "title": "Clean up implementation of KHR_animation_pointer",
                "description": "This is the result of trying to fix an issue reported here: https://forum.babylonjs.com/t/breaking-changes-in-gltf-loader/32807. I ended up refactoring/simplifying most of the KHR_animation_pointer code, but the overall idea is still the same.\r\n\r\n- Fix the code such that it will call animation loading extension functions again. This is the main thing that was broken.\r\n- Update the contract for loading animations to support custom extensions to be more flexible without override arguments (e.g., `animationTargetOverride`).\r\n- Break up the animation pointer map into core and extensions to avoid core loader depending on code from an extension.\r\n- Greatly simplify parsing of animation pointers.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.data.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.map.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderAnimation.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderExtension.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderInterfaces.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFUtilities.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "bug",
                    "skip changelog"
                ]
            },
            {
                "pr": "13010",
                "title": "Add Logarithmic Depth Support on ParticleSystem",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/baseParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Shaders/gpuRenderParticles.fragment.fx",
                    "packages/dev/core/src/Shaders/gpuRenderParticles.vertex.fx",
                    "packages/dev/core/src/Shaders/particles.fragment.fx",
                    "packages/dev/core/src/Shaders/particles.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "13009",
                "title": "Bump scss-tokenizer from 0.3.0 to 0.4.3",
                "description": "Bumps [scss-tokenizer](https://github.com/sasstools/scss-tokenizer) from 0.3.0 to 0.4.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/sasstools/scss-tokenizer/releases\">scss-tokenizer's releases</a>.</em></p>\n<blockquote>\n<h2>v0.4.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump acorn from 5.7.3 to 5.7.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/33\">sasstools/scss-tokenizer#33</a></li>\n<li>Fixed ReDoS in &quot;loadAnnotation&quot; function of &quot;previous-map.js&quot; by <a href=\"https://github.com/sushantmittal\"><code>@​sushantmittal</code></a> in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/49\">sasstools/scss-tokenizer#49</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/33\">sasstools/scss-tokenizer#33</a></li>\n<li><a href=\"https://github.com/sushantmittal\"><code>@​sushantmittal</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/pull/49\">sasstools/scss-tokenizer#49</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/sasstools/scss-tokenizer/compare/v0.4.2...v0.4.3\">https://github.com/sasstools/scss-tokenizer/compare/v0.4.2...v0.4.3</a></p>\n<h2>v0.4.2</h2>\n<h2>Misc</h2>\n<ul>\n<li>Restore <code>prepublishOnly</code> npm script (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, ae79d74)</li>\n</ul>\n<h2>v0.4.1</h2>\n<h2>Fixes</h2>\n<ul>\n<li>Error handling utf-8 encoded sourcemap urls (<a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/13\">#13</a>, <a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>)</li>\n</ul>\n<h2>v0.4.0</h2>\n<h2>Fixes</h2>\n<ul>\n<li>Fix <code>endInterpolant</code> not being captured (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/20\">#20</a>)</li>\n<li>Fix tracking of token position (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/22\">#22</a>)</li>\n</ul>\n<h2>Tests</h2>\n<ul>\n<li>Add basic test coverage to interpolant tokenization (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/20\">#20</a>)</li>\n</ul>\n<h2>Dependencies</h2>\n<ul>\n<li>Replace babel-preset-es2015 with babel-preset-env (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>sass-spec@2.5.1 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>babel-core@^6.26.3 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>babel-jest@^23.6.0 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>glob@^7.1.3 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>jest@^23.6.0 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>js-base64@^2.4.9 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n<li>source-map@^0.7.3 (<a href=\"https://github.com/xzyfer\"><code>@​xzyfer</code></a>, <a href=\"https://github-redirect.dependabot.com/sasstools/scss-tokenizer/issues/23\">#23</a>)</li>\n</ul>\n<h2>Misc</h2>\n<ul>\n<li>TravisCI now tests all supported Node versions</li>\n<li>Commit <code>package-lock.json</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/3e518d908cea22d0ca1bdf927ef752b7539f0533\"><code>3e518d9</code></a> 0.4.3</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/ff8e9945bcf991d30e009e2f0ef4088d2830c92d\"><code>ff8e994</code></a> Update changelog</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/a53b6f233e648cc01acbdd89c58786cf8ba56e35\"><code>a53b6f2</code></a> Fixed ReDoS in 'loadAnnotation' function of previous-map.js.</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/b55257baa54197e7dae8085184cad7948fea0796\"><code>b55257b</code></a> Bump acorn from 5.7.3 to 5.7.4</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/db9b196df81b399fa104928e8361c5c6f3efde10\"><code>db9b196</code></a> 0.4.2</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/ae79d74ad591e2f8a5e61ed68be2595b4bfd37af\"><code>ae79d74</code></a> Restore prepublishOnly npm script</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/32a65d8d8d757f2e0cca0b2e71ec69840466dded\"><code>32a65d8</code></a> 0.4.1</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/cef5140251617c6d15cf639a4ffda246b7704344\"><code>cef5140</code></a> Add support for utf8 name in input source map encoding</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/07c191732c621047a302c68b6718fd6bf0bd90d4\"><code>07c1917</code></a> 0.4.0</li>\n<li><a href=\"https://github.com/sasstools/scss-tokenizer/commit/d74f8038a00673adcb7a3b2fee91eebb7d6153e3\"><code>d74f803</code></a> Commit package-lock.json</li>\n<li>Additional commits viewable in <a href=\"https://github.com/sasstools/scss-tokenizer/compare/v0.3.0...v0.4.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=scss-tokenizer&package-manager=npm_and_yarn&previous-version=0.3.0&new-version=0.4.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.25.0": [
            {
                "pr": "13008",
                "title": "Fix cache issue",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12999",
                "title": "Move from @hidden to @internal",
                "description": "Setting as Draft for now to check side effects\nThere shouldn't be any, just need to be 100% sure :-)",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "packages/dev/buildTools/src/buildShaders.ts",
                    "packages/dev/core/src/Actions/action.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Actions/condition.ts",
                    "packages/dev/core/src/Actions/directActions.ts",
                    "packages/dev/core/src/Actions/directAudioActions.ts",
                    "packages/dev/core/src/Actions/interpolateValueAction.ts",
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/animationEvent.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Animations/easing.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts",
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/src/BakedVertexAnimation/bakedVertexAnimationManager.ts",
                    "packages/dev/core/src/Behaviors/Meshes/attachToBoxBehavior.ts",
                    "packages/dev/core/src/Behaviors/Meshes/followBehavior.ts",
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Buffers/storageBuffer.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraVRDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraKeyboardInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraDeviceOrientationInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/RigModes/stereoscopicAnaglyphRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/stereoscopicRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/vrRigMode.ts",
                    "packages/dev/core/src/Cameras/RigModes/webVRRigMode.ts",
                    "packages/dev/core/src/Cameras/Stereoscopic/stereoscopicScreenUniversalCamera.ts",
                    "packages/dev/core/src/Cameras/VR/vrCameraMetrics.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Cameras/VR/webVRCamera.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/deviceOrientationCamera.ts",
                    "packages/dev/core/src/Cameras/flyCamera.ts",
                    "packages/dev/core/src/Cameras/followCamera.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/freeCameraInputsManager.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Cameras/touchCamera.ts",
                    "packages/dev/core/src/Collisions/collider.ts",
                    "packages/dev/core/src/Collisions/collisionCoordinator.ts",
                    "packages/dev/core/src/Collisions/intersectionInfo.ts",
                    "packages/dev/core/src/Collisions/meshCollisionData.ts",
                    "packages/dev/core/src/Collisions/pickingInfo.ts",
                    "packages/dev/core/src/Compute/IComputeContext.ts",
                    "packages/dev/core/src/Compute/IComputePipelineContext.ts",
                    "packages/dev/core/src/Compute/computeEffect.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeBlock.ts",
                    "packages/dev/core/src/Culling/Octrees/octreeSceneComponent.ts",
                    "packages/dev/core/src/Culling/boundingBox.ts",
                    "packages/dev/core/src/Culling/boundingInfo.ts",
                    "packages/dev/core/src/Culling/boundingSphere.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Debug/physicsViewer.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceEnums.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/internalDeviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/nativeDeviceInputSystem.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.debugging.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.multiview.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.textureSelector.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.transformFeedback.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.webVR.ts",
                    "packages/dev/core/src/Engines/IDrawContext.ts",
                    "packages/dev/core/src/Engines/IMaterialContext.ts",
                    "packages/dev/core/src/Engines/IPipelineContext.ts",
                    "packages/dev/core/src/Engines/Native/nativeDataStream.ts",
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineAndOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineArithmeticOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineIsDefinedOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/Operators/shaderDefineOrOperator.ts",
                    "packages/dev/core/src/Engines/Processors/Expressions/shaderDefineExpression.ts",
                    "packages/dev/core/src/Engines/Processors/iShaderProcessor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeConditionNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeTestNode.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessingOptions.ts",
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts",
                    "packages/dev/core/src/Engines/WebGL/webGL2ShaderProcessors.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLHardwareTexture.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts"
                ],
                "tags": []
            },
            {
                "pr": "13007",
                "title": "Fix effects onError notifications",
                "description": "https://forum.babylonjs.com/t/how-to-get-onerror-when-shader-fails-to-compile-for-a-postprocess/34086\r\n\r\nTest Playground: https://playground.babylonjs.com/#H5WK8Z",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "13001",
                "title": "Fix nme drop",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts"
                ],
                "tags": [
                    "bug",
                    "nme",
                    "skip changelog"
                ]
            },
            {
                "pr": "12998",
                "title": "Fix XR picking in utility laters",
                "description": "See https://forum.babylonjs.com/t/holographicslate-slate-gizmo-seems-to-be-broken-in-oculus-quest-2/34060\n\nThis PR should work after this is merged:\n\nhttps://playground.babylonjs.com/#SYD2M2#40",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/baseSixDofDragBehavior.ts",
                    "packages/dev/core/src/Events/pointerEvents.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Rendering/utilityLayerRenderer.ts",
                    "packages/dev/core/src/XR/features/WebXRNearInteraction.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12958",
                "title": "Add camera refresh rate support in XR enableSpectatorMode().",
                "description": "Fixed #10832. Add enable / disable switch for XR spectator Mode and camera refresh rate support.",
                "author": {
                    "name": "daoshengmu",
                    "url": "https://github.com/daoshengmu"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12997",
                "title": "Update tubeBuilder docs.",
                "description": "Update to make it clearer that the number of points on the path can't change, just their positions.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/tubeBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12990",
                "title": "Add operator functions to Polar and Spherical",
                "description": null,
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.polar.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12996",
                "title": "Test babylon vertex buffer instance divisor",
                "description": "Hi! There are some tests again :)\r\n\r\nSome points here:\r\n1. Simplify the code.\r\n2. Setter was recompute the hash after every set call, but it shuld be only after change the `this._instanced` as it we can see in the `_computeHashCode` method.\r\n3. I found shadowed variable (`data`) in the constructor and fix it (to `vertexData` in the local scope).\r\n\r\nAnd just in case I explain my pipeline:\r\n1. First I wrote test cases.\r\n2. Only after it I started to modify the code.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/test/unit/Buffers/babylon.buffer.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12995",
                "title": "Texture UV animation performance",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12992",
                "title": "test(particles.cloudPoint): add tests for intersectsMesh function",
                "description": "Hi!\r\nI add some tests to Particles/cloudPoint, the function is intersectsMesh.\r\n\r\nHere I found some points.\r\n1. The property of PointsCloudSystem `mesh` has incorrect type. In fact this property may have `undefined` as value, because it's not defined in the constructor. So I add optional mark `?` to type and required checks in the class.\r\n2. And after this I found what the `intersectsMesh` function did not check the mesh property existing in the point cloud system. So I add a new Error here, that notice about required mesh to next calculations.\r\n3. The line `isSphere = isSphere ? isSphere : false;` look like redundant, because TypeScript promise that it have boolean type.\r\n4. Next I move the getBoundingInfo call into one line `const bbox = target.getBoundingInfo().boundingBox;`. It's look for me as potential performance boost, maybe.\r\n5. And at the end I remove `else` branch because it rendundant because the code above have return statements.\r\n\r\nAnd I limited test cases from 729 possible combinations to 126, they seems like corner cases for me. I dont know which cases we can reduce to save the working guarantee.",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Particles/cloudPoint.ts",
                    "packages/dev/core/src/Particles/pointsCloudSystem.ts",
                    "packages/dev/core/test/unit/Particles/babylon.cloudPoint.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12991",
                "title": "WebGPU: Fix geometry buffer renderer in WebGPU",
                "description": "In WebGPU (WGSL), if you declare some uniforms in the shader code (even if you don't use those uniforms in the code itself) the drawing code must set their values and can't leave them empty.\r\n\r\nSo, the declarations must be guarded by some `#ifdef` to make sure the uniforms we don't set values for are not declared in the shader code.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Shaders/geometry.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12994",
                "title": "Fix typings for the options passed",
                "description": "They options passed are augmented with the required members, so there is no need to define them fully. Partial of those options is enough.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRDefaultExperience.ts"
                ],
                "tags": []
            },
            {
                "pr": "12988",
                "title": "PrePass renderer: Fix engine current render pass id set too early",
                "description": "See https://forum.babylonjs.com/t/issue-when-prepassrenderer-and-rendertargettexture-are-used-at-the-same-time/29317/7\r\n\r\nBasically it's a revert of my changes from:\r\n\r\nhttps://github.com/BabylonJS/Babylon.js/commit/269132ca6281f1cb5c9b59474af1d2e827196d62#diff-5fec6a90573f71adda2b2d7c9364ac6da73fe8cfc6a641b129a051bf38d67cd2\r\n\r\nI don't remember why I did this change at that time, I think it's wrong to set `Engine.currentRenderPassId` in `PrePassRenderer._setRenderTarget` as `RenderTargetTexture._renderToTarget` will set the right pass id before drawing the meshes anyway.\r\n\r\n[EDIT] Ok, I updated the fix which is not simply a revert now: the `engine.currentRenderPassId` needs to be updated but only when setting the default RT.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/prePassRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12962",
                "title": "Issue158",
                "description": "Dragging the mouse up and down zooms in and out. However, I'm having a problem where if you mouse down on a control and drag, that control is not recognized as selected so dragging the control zooms in and out as well. I was wondering if there was anything to identify when control has been selected other than selectedcontrols? ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/coordinateHelper.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12920",
                "title": "Font Family Drowpdown",
                "description": "Created a dropdown menu for font family options, with the ability to add custom fonts beyond the ones already provided",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/buttonPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/checkboxPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/controlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/displayGridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/ellipsePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/gridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/imageBasedSliderPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/imagePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/linePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/radioButtonPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/rectanglePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/scrollViewerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/sliderGenericPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/stackPanelPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/textBlockPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "12986",
                "title": "distance and normal in collision callback for ammojs",
                "description": "Follow up https://forum.babylonjs.com/t/how-to-measure-impulse-in-ammo/33897\r\nAdd more infos to the collision callback coming from ammojs",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": [
                    "enhancement",
                    "physics"
                ]
            }
        ],
        "5.24.0": [
            {
                "pr": "12978",
                "title": "Some fixes for NME CSS",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12985",
                "title": "Add maths polar export",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/index.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12983",
                "title": "GeometryBufferRenderer: Allow setting the depth texture format",
                "description": "See https://forum.babylonjs.com/t/postprocess-with-prepassrenderer-caused-msaa-not-work/33907/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRendererSceneComponent.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12984",
                "title": "Fix billboard translation with parenting",
                "description": "Follow up with https://forum.babylonjs.com/t/billboardmode-rotation-bug/33908/4\r\n\r\nbillboard translation was not transformed by parent transform. ",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12982",
                "title": "Fix Array Observers",
                "description": "Ref: https://github.com/BabylonJS/Babylon.js/pull/12905",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Misc/arrayTools.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Misc/babylon.arrayTools.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12942",
                "title": "Add polar and spherical coordinate system support",
                "description": "Also fixes a misspelling with the `Vector3.GetAngleBetweenVectors` jsdoc parameters",
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.polar.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12980",
                "title": "Fix Typos in Physics",
                "description": "Small typo and wrong comment.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts"
                ],
                "tags": [
                    "documentation"
                ]
            },
            {
                "pr": "12979",
                "title": "If blob or data load the image directly, as no caching is needed.",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "12975",
                "title": "Add teleportationCircleMaterial to WebXR teleportation options",
                "description": null,
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerTeleportation.ts"
                ],
                "tags": []
            },
            {
                "pr": "12976",
                "title": "Add createRadialGradient to ICanvas",
                "description": "Description borrowed from: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient",
                "author": {
                    "name": "yuripourre",
                    "url": "https://github.com/yuripourre"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts"
                ],
                "tags": []
            },
            {
                "pr": "12974",
                "title": "test(math.vector): add tests for GetAngleBetweenVectorsOnPlane function",
                "description": "I generated 1000 variants of usage the GetAngleBetweenVectorsOnPlane function base on these values:\r\n```\r\nconst possibleValues = [\r\n        // negative values\r\n        Number.MIN_SAFE_INTEGER,\r\n        Number.MIN_SAFE_INTEGER / 2,\r\n        -Math.PI,\r\n        -0.0000000001,\r\n\r\n        0,\r\n\r\n        // positive values\r\n        0.0000000001,\r\n        Math.PI,\r\n        Number.MAX_SAFE_INTEGER / 2,\r\n        Number.MAX_SAFE_INTEGER,\r\n    ];\r\n```\r\n\r\nSo I got time comutation statistics that added to jsdoc.\r\n\r\nWhat do you think about unit tests like this? Or probably we should set just several examples without edge values (like max_safe_integer)?",
                "author": {
                    "name": "Dok11",
                    "url": "https://github.com/Dok11"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.get-angle-between-vectors-on-plane.test-cases.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12970",
                "title": "Babylon eslint plugin",
                "description": "This plugin checks for the existance of tsdoc in typescript files, and is ready to be extended.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/core/src/Actions/abstractActionManager.ts",
                    "packages/dev/core/src/Actions/actionManager.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Behaviors/Cameras/autoRotationBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/bouncingBehavior.ts",
                    "packages/dev/core/src/Behaviors/Cameras/framingBehavior.ts",
                    "packages/dev/core/src/Bones/bone.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/freeCamera.ts",
                    "packages/dev/core/src/Cameras/gamepadCamera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts",
                    "packages/dev/core/src/Cameras/touchCamera.ts",
                    "packages/dev/core/src/Cameras/universalCamera.ts",
                    "packages/dev/core/src/Cameras/virtualJoysticksCamera.ts",
                    "packages/dev/core/src/Culling/boundingBox.ts",
                    "packages/dev/core/src/Culling/ray.ts",
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Events/clipboardEvents.ts",
                    "packages/dev/core/src/Gamepads/Controllers/windowsMotionController.ts",
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Layers/glowLayer.ts",
                    "packages/dev/core/src/Layers/highlightLayer.ts",
                    "packages/dev/core/src/Lights/directionalLight.ts",
                    "packages/dev/core/src/Lights/hemisphericLight.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Lights/lightConstants.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/Filtering/hdrFiltering.ts",
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts",
                    "packages/dev/core/src/Materials/Textures/colorGradingTexture.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/rawCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/colorCurves.ts",
                    "packages/dev/core/src/Materials/fresnelParameters.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Maths/math.functions.ts",
                    "packages/dev/core/src/Maths/math.scalar.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/cubemapToSphericalPolynomial.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/hdr.ts",
                    "packages/dev/core/src/Misc/HighDynamicRange/panoramaToCubemap.ts",
                    "packages/dev/core/src/Misc/assetsManager.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/environmentTextureTools.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/observable.ts",
                    "packages/dev/core/src/Misc/performanceMonitor.ts",
                    "packages/dev/core/src/Misc/rgbdTextureTools.ts",
                    "packages/dev/core/src/Misc/sceneOptimizer.ts",
                    "packages/dev/core/src/Misc/stringDictionary.ts",
                    "packages/dev/core/src/Misc/textureTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Misc/videoRecorder.ts",
                    "packages/dev/core/src/Particles/IParticleSystem.ts",
                    "packages/dev/core/src/Particles/gpuParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Physics/physicsEngineComponent.ts",
                    "packages/dev/core/src/PostProcesses/blurPostProcess.ts",
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts",
                    "packages/dev/core/src/Rendering/edgesRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Rendering/subSurfaceConfiguration.ts",
                    "packages/dev/core/src/XR/motionController/webXRAbstractMotionController.ts",
                    "packages/dev/core/src/XR/motionController/webXRControllerComponent.ts",
                    "packages/dev/core/src/XR/motionController/webXRMotionControllerManager.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/loaders/src/OBJ/mtlFileLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/postProcesses/src/asciiArt/asciiArtPostProcess.ts",
                    "packages/dev/postProcesses/src/digitalRain/digitalRainPostProcess.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts",
                    "packages/lts/core/src/scene.ts",
                    "packages/tools/eslintBabylonPlugin/package.json",
                    "packages/tools/eslintBabylonPlugin/src/ConfigCache.ts",
                    "packages/tools/eslintBabylonPlugin/src/Debug.ts",
                    "packages/tools/eslintBabylonPlugin/src/index.ts",
                    "packages/tools/eslintBabylonPlugin/tsconfig.build.json",
                    "packages/tools/eslintBabylonPlugin/tsconfig.json"
                ],
                "tags": []
            },
            {
                "pr": "12973",
                "title": "Fix WebGPU for mobile support.",
                "description": "https://twitter.com/Tojiro/status/1568341051160788993",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12916",
                "title": "OIT aliasing fixes",
                "description": "* Implemented multisampling for DepthPeeling (works but has artifacts along triangle edges because we need to access multisampled depth in the shader, which cannot be done for now)\r\n* Made depth peeling compatible with post processes to be able to use FXAA post process",
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLRenderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/renderTargetWrapper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Rendering/depthPeelingRenderer.ts",
                    "packages/dev/core/src/Rendering/prePassRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/oitFragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12972",
                "title": "ts config for tests (older syntax) for older node.js",
                "description": "Node 14 and under don't support the 2021 syntax we used when running tests.\nFrom now, when testing we compile to es5",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "jest.config.ts",
                    "packages/dev/core/tsconfig.test.json",
                    "tsconfig.test.json"
                ],
                "tags": []
            },
            {
                "pr": "12971",
                "title": "404 error trying to load “config.json” when using custom procedural texture with ShadersStore",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/customProceduralTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12969",
                "title": "Giz misc",
                "description": "Quick PR for https://forum.babylonjs.com/t/constrain-dragging-to-y-axis-for-boundingboxgizmo/33729",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12966",
                "title": "Freeze instance storage",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12964",
                "title": "Better support for freeze in aggressive mode",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12952",
                "title": "Minimize code in effect and pipeline context",
                "description": "The idea here is to keep the typescript declarations of those functions (i.e. - they exist still), but use a proxy to catch missing functions and call the right function when the missing functions are called. \r\n\r\nThis will minimize the initial needed code when importing those classes.\r\n\r\nRegarding reusability - there might be 2-3 lines of code that are reusable, but the overhead of moving it out of the constructor context will cost more than the code written.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": []
            },
            {
                "pr": "12963",
                "title": "new options for aggressive mode",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12960",
                "title": "Introduce autoFixFaceOrientation feature to solidParticleSystem",
                "description": "**What:**\r\nIntroduce an option to \"autofix face orientation\" in solid particle system\r\n\r\n**How**\r\nWhen there is a transformation which changes the orientation (for example scaling `(-1, 1, 1)`), the solid particle system will automatically flip all the faces of the particle affected by this transformation.\r\n\r\n**Why**\r\nI needed this functionality in my application, so I decided to make a PR and hope that it will get into the babylon itself :D\r\n\r\n**Example**\r\nhttps://playground.babylonjs.com/#GLZ1PX#714\r\nin this example, the cone on the right has flipped faces. Using the new flag will fix this issue. ",
                "author": {
                    "name": "Michalzr",
                    "url": "https://github.com/Michalzr"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": []
            }
        ],
        "5.23.0": [
            {
                "pr": "12945",
                "title": "Optimize animation interpolate function",
                "description": "Not 100% sure this actually helps since we are seeing weird results in the profile, but it is certainly easier to read.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Animations/runtimeAnimation.ts"
                ],
                "tags": []
            },
            {
                "pr": "12948",
                "title": "Use CSS Modules in Graph System",
                "description": "This is part of the work to make the graph system more reusable.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/common.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.modules.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/common.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/outputDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.modules.scss",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.ts",
                    "packages/tools/nodeEditor/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12954",
                "title": "Performance mode",
                "description": "The goal is to protect backward compatibility but also offer an option for users to say they are ok to not be backward compatible (OR less easy to use) to favor perf by default",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12961",
                "title": "Fix Rendering Pipeline cameras",
                "description": "https://forum.babylonjs.com/t/camera-list-iteration-on-ssaorenderingpipeline/33758",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            },
            {
                "pr": "12959",
                "title": "Stop vis test in puppeteer if debug enabled",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/visualization.webgl1.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgl2.test.ts",
                    "packages/tools/tests/test/visualization/visualization.webgpu.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12957",
                "title": "Fix stl loader right handed",
                "description": "https://forum.babylonjs.com/t/permanently-change-set-of-axes/19096/62",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/STL/stlFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "12956",
                "title": "Update default linter",
                "description": "I thought the old way worked, but it doesn't. This change comes directly from using vscode's UI, so hopefully it will stick this time.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    ".vscode/settings.json"
                ],
                "tags": []
            },
            {
                "pr": "12955",
                "title": "Fix quaternion blending math",
                "description": "See https://forum.babylonjs.com/t/not-able-to-blend-animation-with-beginweightedanimation/32204\r\n\r\nSolution based on quaternion average approximation: https://math.stackexchange.com/questions/61146/averaging-quaternions",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12865",
                "title": "DeviceInputSystem: Pull browser specific code into WebDeviceInputSystem",
                "description": "The purpose of this PR is to pull browser specific code (eg. movementX vs. mozMovementX) into the WebDeviceInputSystem and make it a bit more uniform in execution.  This also simplify things for BabylonNative since a lot of this code is irrelevant to its input execution.  Also, some references to `srcElement` were removed because we no longer need to support that property since dropping support for IE.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraPointersInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraMouseInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraMouseInput.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Events/deviceInputEvents.ts",
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Offline/database.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12953",
                "title": "Use the right function when reaching limits",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/logger.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12951",
                "title": "Fix some NME bugs.",
                "description": "1 - When dragging a unique block to the graph twice and closing the error message, for each subsequent block added (even the non-unique ones), the error message was still appearing.\r\n2 - When using the PerturbNormal block without the connected normalColor input, the following error message appeared:\r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/6002144/188502443-f3ca0a1b-ec89-4185-8deb-3e4524e051e7.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12949",
                "title": "Sprite double pick",
                "description": "https://forum.babylonjs.com/t/babylon-actionmanager-ondoublepicktrigger-on-player-not-working/33647/2",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Sprites/spriteSceneComponent.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/src/sceneComponent.ts"
                ],
                "tags": [
                    "bug",
                    "sprite"
                ]
            },
            {
                "pr": "12947",
                "title": "Fix Basis Loader",
                "description": "https://forum.babylonjs.com/t/error-in-basis-cubetexture/33516",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Misc/basis.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12944",
                "title": "Animation perf improvments",
                "description": "Improve frame time of https://playground.babylonjs.com/#LYKRYG",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "enhancement",
                    "animations"
                ]
            },
            {
                "pr": "12950",
                "title": "Improve optimize docstring.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/groundMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12946",
                "title": "Clear some values used during loading at the end of the load",
                "description": "Related issue: https://forum.babylonjs.com/t/imported-meshes-appear-broken-if-they-have-the-same-geometry-uniqueid/33567/3",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12943",
                "title": "Added AudioBuffer as parameter for Sound",
                "description": "I ran into a situation where I wanted to use the sound engine in Babylon to play my pre-generated Web Audio Buffer. I managed to get it to work by looking at the code, but I had to access some private properties. I noticed that it would be pretty small refactoring to implement it correctly since the code was already there. This PR enable the passing of an AudioBuffer to the constructor of BABYLON.Sound.\r\n\r\nThis (very simplified) example shows how it is used:\r\n\r\n\r\n```\r\nvar createScene = function () {\r\n\r\n    var scene = new BABYLON.Scene(engine);\r\n    const camera = new BABYLON.ArcRotateCamera(\"Camera\", -Math.PI / 2, Math.PI / 4, 15, BABYLON.Vector3.Zero());\r\n    camera.attachControl(canvas, true);\r\n\r\n    // Create buffer\r\n    let sineBuffer = BABYLON.Engine.audioEngine.audioContext.createBuffer(1, 12e3, 48e3);\r\n    const hitBufferData = sineBuffer.getChannelData(0);\r\n    for (let i = 12e3; i--;) hitBufferData[i] = Math.cos(i * .04); \r\n\r\n    // Create and use the sound\r\n    this.sineSound = new BABYLON.Sound(\"sine\", sineBuffer); \r\n    this.sineSound.play();\r\n\r\n    return scene;\r\n};\r\n```\r\n\r\n",
                "author": {
                    "name": "sorskoot",
                    "url": "https://github.com/sorskoot"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts"
                ],
                "tags": [
                    "enhancement",
                    "audio"
                ]
            }
        ],
        "5.22.1": [
            {
                "pr": "12941",
                "title": "switch to new PG",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12940",
                "title": "Fix reflection block empty output",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/reflectionTextureBlock.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12937",
                "title": "Fix loading of base64 svgs",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12939",
                "title": "Empty array, no reassign",
                "description": "Fixes #12938",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Rendering/edgesRenderer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12936",
                "title": "Reducing amount of code in Observable and Logger",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Misc/logger.ts",
                    "packages/dev/core/src/Misc/observable.extensions.ts",
                    "packages/dev/core/src/Misc/observable.ts",
                    "packages/tools/viewer/src/loader/modelLoader.ts",
                    "packages/tools/viewer/src/managers/sceneManager.ts",
                    "packages/tools/viewer/src/model/viewerModel.ts",
                    "packages/tools/viewer/src/viewer/renderOnlyViewer.ts",
                    "packages/tools/viewer/src/viewer/viewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12933",
                "title": "Add Link offset properties to Gui Editor",
                "description": "Related forum issue: https://forum.babylonjs.com/t/improve-the-linewidthmesh-attribute-of-gui-functions/31630\r\n![image](https://user-images.githubusercontent.com/6002144/187906219-015a7a92-f52b-4903-9ed1-f49ed01da695.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/imgs/linkedMeshOffsetIcon.svg",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/coordinateHelper.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "12935",
                "title": "ADT clone method needs special version",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12932",
                "title": "Add dithering effect to image processing.",
                "description": "This can be used to reduce banding in final output. It's good to have it as part of the image processing functions, as the more artistic alternative to this would be the grain post process which requires a separate pass and thus has more overhead. If all you're looking for is to reduce banding, this will be a simple/efficient option.\r\n\r\nI've been testing this change via the inspector -> add a default rendering pipeline -> enable dithering.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/imageProcessingBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/PostProcesses/imageProcessingPostProcess.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/imageProcessingDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/imageProcessingFunctions.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12934",
                "title": "Time Factor for crowd agents update",
                "description": "Follow up https://forum.babylonjs.com/t/possible-to-pause-recastjs-crowd-navigation/33025/7\r\nAnd add a little twist.\r\nInstead of just pausing a sim, it's possible to change the time factor. So a pause is possible, and even a progressive one.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12905",
                "title": "Fix scene not clearing in some Default Rendering Pipeline with multicamera cases",
                "description": "Examples of where this would happen:\r\n\r\n- Have a DRP with a camera different than the scene's active camera (rendering to a RTT for instance): https://playground.babylonjs.com/#QW6XJE#4\r\n- Set multiple active cameras AFTER the DRP has been created: https://playground.babylonjs.com/#QW6XJE#13",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Misc/arrayTools.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "post-process"
                ]
            }
        ],
        "5.22.0": [
            {
                "pr": "12925",
                "title": "Add support of clipplanes in GlowLayer",
                "description": "https://forum.babylonjs.com/t/clipping-plane-has-no-effect-on-a-meshs-glow-in-a-glow-layer-unsure-if-this-by-design-or-this-is-a-bug/33565",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Shaders/glowMapGeneration.fragment.fx",
                    "packages/dev/core/src/Shaders/glowMapGeneration.vertex.fx"
                ],
                "tags": [
                    "enhancement",
                    "post-process"
                ]
            },
            {
                "pr": "12929",
                "title": "Revert \"Fixed a bug from opening editor from PG\"",
                "description": "Reverts BabylonJS/Babylon.js#12899\r\nRequested by @amritanarasimhan ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12928",
                "title": "Tiny fixes",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerDefaultInput.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12899",
                "title": "Fixed a bug from opening editor from PG",
                "description": "Responsive button was in the wrong state",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12927",
                "title": "Cameras: Add noPreventDefault as argument to attachControl call",
                "description": "A user in the forum ([Forum Post](https://forum.babylonjs.com/t/potential-inconsistency-with-camerainputsmanagers-add-and-attachelement-functions/32639)) found that there was an inconsistency with how the `noPreventDefault` property was being handled with our camera inputs.  Specifically, if new inputs were added after controls were already attached, the value for `noPreventDefault` was not used when attaching those inputs.  This PR modifies the internal attachControl call to use the input's value for `noPreventDefault`.\r\n\r\nThanks to forum user **kvbh** for the fix suggestion.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/cameraInputsManager.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "12926",
                "title": "Fix broken link in `contributing.md` to `what's new.md`",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "contributing.md"
                ],
                "tags": []
            },
            {
                "pr": "12924",
                "title": "Fix Loading Cube Texture from basis file",
                "description": "https://forum.babylonjs.com/t/error-in-basis-cubetexture/33516/16",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12923",
                "title": "Enforce parent blocks being empty in octree",
                "description": "When creating inner blocks the code enforces that the parent blocks `entries` are ignored (in `octree.select` for example) however the actual `entries` array of the parent block is still populated. Probably not an issue when using just a few objects but it is when using thousands.\r\n\r\nThe code comment says the parent block will be emptied but it isn't.\r\n\r\n",
                "author": {
                    "name": "normanb",
                    "url": "https://github.com/normanb"
                },
                "files": [
                    "packages/dev/core/src/Culling/Octrees/octreeBlock.ts"
                ],
                "tags": [
                    "bug",
                    "optimizations"
                ]
            },
            {
                "pr": "12921",
                "title": "Shortcuts for search and placement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "new feature",
                    "skip changelog"
                ]
            },
            {
                "pr": "12919",
                "title": "Shortcuts for search and placement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "new feature",
                    "skip changelog"
                ]
            },
            {
                "pr": "12918",
                "title": "Two small fixes",
                "description": "* Video texture dome should start on pointer down\n* URL should be revoked when not needed anymore",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Helpers/videoDome.ts",
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12915",
                "title": "Fix wording found by @Popov72",
                "description": null,
                "author": {
                    "name": "julien-moreau",
                    "url": "https://github.com/julien-moreau"
                },
                "files": [
                    "packages/dev/core/src/Probes/reflectionProbe.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12913",
                "title": "Generate sampler name in buildBlock",
                "description": "Related issue: https://forum.babylonjs.com/t/nme-bug-about-screen-depth/33404",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/sceneDepthBlock.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12912",
                "title": "Add type on blob creation",
                "description": "This fixes loading of SVG Textures",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12914",
                "title": "Clamp negative rgb values to zero to avoid parse errors in native",
                "description": "When setting a canvas's fill style to `\"rgb(x, y, z)\"`, browsers clamp negative x/y/z values to zero but native throws parse errors like \"Exception in HostFunction: Unable to parse color: rgb(-51, 13, -128)\".\r\n\r\nThis change fixes the issue by clamping negative rgb values to zero before using them in the style's rgb function.",
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12907",
                "title": "Fixing oit + derivatives branching",
                "description": "https://forum.babylonjs.com/t/order-independent-transparency-bugs-with-bump-texture-and-rendering-pipeline/29173/13",
                "author": {
                    "name": "CraigFeldspar",
                    "url": "https://github.com/CraigFeldspar"
                },
                "files": [
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12911",
                "title": "Add \"metadata\" support to \"ReflectionProbe\" class",
                "description": null,
                "author": {
                    "name": "julien-moreau",
                    "url": "https://github.com/julien-moreau"
                },
                "files": [
                    "packages/dev/core/src/Probes/reflectionProbe.ts",
                    "what's new.md"
                ],
                "tags": []
            },
            {
                "pr": "12910",
                "title": "TouchButton3D's getPressDepth(position) call has depth discrepancy",
                "description": "Fixes #12109\n\nThe issue is not exactly as described in the ticket. During apointer move, the cached integer was not updated, so onPointerMove you wouldn't be able to check the depth to the button. onPointerDown's depth is correct, as onPointerDown is triggered when the button is defined as pressed, which is not when the sphere's center is at the end of the button, but a little before. This \"little\" before is defined by the pickRadius in near interaction (0.02 units).\n\nThis PR updated the height variable on pointer move as well, which would allow to check the distance correctly when using pointer move.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/touchButton3D.ts"
                ],
                "tags": []
            },
            {
                "pr": "12901",
                "title": "Document the ranges of FromHSV's parameters",
                "description": "PR to help clear up confusion about the range of the hue, saturation, and value parameters to Vector3.FromHSV. :)\r\nForum: https://forum.babylonjs.com/t/color3-fromhsv-constructor-needs-more-detailed-documentation/33374",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": []
            },
            {
                "pr": "12908",
                "title": "Fix drawing a rounded rectangle",
                "description": "Related issue: https://forum.babylonjs.com/t/potential-regression-in-bjs-5-21-0-failed-to-execute-arc-on-canvasrenderingcontext2d/33455\r\nRelated playground: https://playground.babylonjs.com/#R6NPW8",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12909",
                "title": "Fix null error in late animation bindings",
                "description": "https://forum.babylonjs.com/t/error-in-processlateanimationbindings/33464\r\n\r\n```\r\nTypeError: Cannot read properties of null (reading 'm')\r\n    at core_scene.a._processLateAnimationBindings (animatable.js:730:48)\r\n    at core_scene.a._animate (animatable.js:429:1)\r\n    at Scene.animate (scene.js:3661:1)\r\n    at Scene.render (scene.js:3737:1)\r\n```",
                "author": {
                    "name": "jjv360",
                    "url": "https://github.com/jjv360"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": []
            },
            {
                "pr": "12900",
                "title": "Bump trim-newlines from 1.0.0 to 3.0.1",
                "description": "Bumps [trim-newlines](https://github.com/sindresorhus/trim-newlines) from 1.0.0 to 3.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/sindresorhus/trim-newlines/releases\">trim-newlines's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<p>Breaking:</p>\n<ul>\n<li>Require Node.js 8 (<a href=\"https://github-redirect.dependabot.com/sindresorhus/trim-newlines/issues/1\">#1</a>)  75db891</li>\n</ul>\n<p>Enhancements:</p>\n<ul>\n<li>Add TypeScript definition (<a href=\"https://github-redirect.dependabot.com/sindresorhus/trim-newlines/issues/1\">#1</a>)  75db891</li>\n</ul>\n<p><a href=\"https://github.com/sindresorhus/trim-newlines/compare/v2.0.0...v3.0.0\">https://github.com/sindresorhus/trim-newlines/compare/v2.0.0...v3.0.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/sindresorhus/trim-newlines/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=trim-newlines&package-manager=npm_and_yarn&previous-version=1.0.0&new-version=3.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "12904",
                "title": "InstancedMesh should be cloned with the new source mesh",
                "description": "Forum thread:\nhttps://forum.babylonjs.com/t/instancedmeshes-cloned-from-assetcontainer-set-new-source/33301\n\nQuick explanation - when using the assets container to instantiate meshes to the scene and cloning a new InstancedMesh, its sourceMesh is the one that is in the assets container and not the clone that was added to the scene.\n\nThis PR does the following:\n\n* Adding the option to set the new source mesh to the instanced mesh cloning function\n* when cloning a mesh that has an instanced mesh as a child the source mesh will be updated\n* when using the assets container the new instanced mesh will have the cloned mesh as a source mesh.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12897",
                "title": "Remove tslib reference in es6 packages (First step towards esm)",
                "description": "Fixes #12784\n\nThis PR removes the tslib dependency (while still providing it locally in its es6 version). This will allow using the es6 packages in the browser directly and will minimally help tree shaking, as not all of tslib is even needed (ATM only decorators).\n\nAnother change - the output for the esm packages is no longer es5! it is now es2021.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/prepareEs6Build.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/procedural-textures/tsconfig.build.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/serializers/tsconfig.build.json",
                    "tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "12902",
                "title": "Fix picking on ADV to account for texture coordinates",
                "description": "This was the underlying issue for this report: https://forum.babylonjs.com/t/why-elements-holographicslate-are-not-always-clickable/33299, but was also affecting any texture that had transformations (offset, rotation and scale).\r\n\r\nExample playground: https://playground.babylonjs.com/#H8NS43",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12899",
                "title": "Fixed a bug from opening editor from PG",
                "description": "Responsive button was in the wrong state",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            }
        ],
        "5.21.0": [
            {
                "pr": "12883",
                "title": "Testing: Update Safari Interactions test to point to BrowserStack",
                "description": "There are slight modifications that have been made to the safari tests so that they use BrowserStack.  This change should allow these tests to be used in the CI.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/testTools/src/seleniumTestUtils.ts",
                    "packages/tools/tests/test/interactions/safari.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12896",
                "title": "Store which pointerIds have been captured by the ADV so those are the…",
                "description": "… only ones that fire pointerout events.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/nothing-happens-when-you-click-grid/33320\r\n\r\nThis is to compliment another fix from #12887, where the condition should only apply if the control has been captured by the scene only, and not by the GUI.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12891",
                "title": "Use LoadFile when loading images so that WebRequest custom headers ar…",
                "description": "…e properly passed.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/why-does-textureassettask-ignore-webrequest/33197\r\nRelated Playground: https://playground.babylonjs.com/#ZJYNY#1297\r\n\r\n![vvvvvvvv](https://user-images.githubusercontent.com/6002144/186015150-d25a4d1e-8da6-466a-b3ef-2840407fb761.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/fileTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12893",
                "title": "Allow package name in local packages",
                "description": "Further changes to support that in lts as well",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/ltsTransformer.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/tsconfig.build.json",
                    "packages/dev/gui/tsconfig.build.json",
                    "packages/dev/inspector/tsconfig.build.json",
                    "packages/dev/loaders/tsconfig.build.json",
                    "packages/dev/materials/tsconfig.build.json",
                    "packages/dev/postProcesses/tsconfig.build.json",
                    "packages/dev/proceduralTextures/tsconfig.build.json",
                    "packages/dev/serializers/tsconfig.build.json",
                    "packages/dev/sharedUiComponents/tsconfig.build.json",
                    "packages/lts/core/tsconfig.build.json",
                    "packages/lts/gui/tsconfig.build.json",
                    "packages/lts/loaders/tsconfig.build.json",
                    "packages/lts/materials/tsconfig.build.json",
                    "packages/lts/postProcesses/tsconfig.build.json",
                    "packages/lts/proceduralTextures/tsconfig.build.json",
                    "packages/lts/serializers/tsconfig.build.json",
                    "packages/public/@babylonjs/core/tsconfig.build.json",
                    "packages/public/@babylonjs/gui/tsconfig.build.json",
                    "packages/public/@babylonjs/loaders/tsconfig.build.json",
                    "packages/public/@babylonjs/materials/tsconfig.build.json",
                    "packages/public/@babylonjs/post-processes/tsconfig.build.json",
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/nodeEditor/tsconfig.build.json",
                    "packages/tools/playground/tsconfig.build.json",
                    "tsconfig.devpackages.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12894",
                "title": "make a PR a breaking change and document how to do it",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".build/changelog.json",
                    "buildSystem.md"
                ],
                "tags": []
            },
            {
                "pr": "12890",
                "title": "Fix a bug where deleting a row/column with a control inside wouldn't …",
                "description": "…remove that control from the Scene Explorer.\r\n\r\nRelated issue: https://forum.babylonjs.com/t/gui-editor-bugs-from-editing/33214\r\nRelated Playground: https://gui.babylonjs.com/#LIDH5L#1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/gridPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/components/sceneExplorer/sceneExplorerComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12887",
                "title": "Fix Drag/Release Behavior in GUI and Photo Dome",
                "description": "See: https://forum.babylonjs.com/t/ispointerblocker-improvement/31152/10?u=stevendelapena\r\n\r\nRecent changes to GUI mouse behavior breaks previous behavior for scenes utilizing a Video and Photo Domes. See PG: https://playground.babylonjs.com/#SQ5UC1#375 and https://playground.babylonjs.com/#14KRGG#715\r\n\r\nClick and drag from outside of GUI element to gain control of camera. Release mouse from within the GUI element. You’ll notice the camera is still observing the mouse movement and pans around with mouse even though click/pointer has been released\r\n\r\nFix suggested is to allow mouse release to propagate to scene to allow for release of camera observers.",
                "author": {
                    "name": "stevendelapena",
                    "url": "https://github.com/stevendelapena"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12886",
                "title": "Allow package name in local files.",
                "description": "This PR provides the ability to import from the local package's package - for example use `import ... from core/...` in the core directory. So far we had to have relative files.\n\nThere might be other consequences to the change, so I will be monitoring that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/core/tsconfig.build.json",
                    "packages/dev/gui/tsconfig.build.json",
                    "packages/dev/inspector/tsconfig.build.json",
                    "packages/dev/loaders/tsconfig.build.json",
                    "packages/dev/materials/tsconfig.build.json",
                    "packages/dev/postProcesses/tsconfig.build.json",
                    "packages/dev/proceduralTextures/tsconfig.build.json",
                    "packages/dev/serializers/tsconfig.build.json",
                    "packages/dev/sharedUiComponents/tsconfig.build.json",
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/nodeEditor/tsconfig.build.json",
                    "packages/tools/playground/tsconfig.build.json",
                    "tsconfig.devpackages.json"
                ],
                "tags": []
            },
            {
                "pr": "12888",
                "title": "Create a separate callback for the FileButton",
                "description": "The previous PR I recently submitted to add a FileButton can produce an error in the Typescript compiler since the `callback` function of the inspectable does not expect a parameter (so putting in a File parameter causes a compiler error).\r\n\r\nThis can be worked around by using a callback that takes a file param and then recasting it into a callback that takes no parameter i.e.,\r\n\r\n```\r\n        {\r\n            label: \"File Button demo\",\r\n            propertyName: \"unused\",\r\n            type: InspectableType.FileButton,\r\n            callback: ((file: File) => {\r\n                // ...\r\n            }) as () => void,\r\n            accept: \".jpg, .jpeg\",\r\n        },\r\n```\r\n\r\nBut that's not so great.\r\n\r\nHere's a better solution. Add an explicit fileCallback that takes the file as a parameter. This is the callback that will be used with the FileButton.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12885",
                "title": "run the babylon server in visual test mode",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "buildSystem.md",
                    "packages/tools/babylonServer/src/sceneJs.js"
                ],
                "tags": []
            },
            {
                "pr": "12847",
                "title": "Shared message dialog",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/MessageDialog.tsx",
                    "packages/dev/sharedUiComponents/src/stories/MessageDialog.stories.tsx",
                    "packages/tools/guiEditor/src/main.scss",
                    "packages/tools/guiEditor/src/sharedComponents/messageDialog.tsx",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/main.scss",
                    "packages/tools/nodeEditor/src/sharedComponents/messageDialog.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12884",
                "title": "Enable use of Tools.LoadScript in a WebWorker",
                "description": "Fixes #12882 \r\n\r\n* Checks if `LoadScript` is called from a `WebWorker` context and, if so, uses `importScripts` instead of `HTMLScriptElement` to load the script.\r\n* Ensures `LoadScript` always resolves with either `onSuccess` or `onError`\r\n\r\nUse case: using `ImportMeshAsync` in a `WebWorker` for meshes requiring `MeshoptCompression`\r\n\r\nRE the typings: there's apparently no clean solution as [TypeScript is extremely not a fan of code designed to run in both DOM and WebWorker](https://github.com/Microsoft/TypeScript/issues/20595), these hideous double type assertions seemed less bad than falsely declaring importScripts as available on the Window interface\r\n",
                "author": {
                    "name": "wmurphyrd",
                    "url": "https://github.com/wmurphyrd"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/browser.d.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": [
                    "enhancement",
                    "tools"
                ]
            },
            {
                "pr": "12880",
                "title": "Fix is ready in a few scenari (light dirty, rendering pass id, material changes outside render loop)",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12881",
                "title": "Improve MergeMeshes documentation.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/strategy-for-merging-glb-gltf-files-into-single-mesh/33159",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "enhancement",
                    "documentation"
                ]
            }
        ],
        "5.20.0": [
            {
                "pr": "12867",
                "title": "Add boolean invertDirection to allow inverting the scrollbar navigati…",
                "description": "…on direction.\r\n\r\nForum issue: https://forum.babylonjs.com/t/scrollviewer-horizontal-direction-is-in-reverse/32995/",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/sliders/imageScrollBar.ts",
                    "packages/dev/gui/src/2D/controls/sliders/scrollBar.ts"
                ],
                "tags": []
            },
            {
                "pr": "12868",
                "title": "GUI Editor launches from PG with correct size",
                "description": "Launching the GUI Editor from the PG would always have the GUI texture be at the default size (1024x1024) instead of whatever size it was orignally defined as ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/advancedDynamicTextureTreeItemComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/guiEditor.ts"
                ],
                "tags": []
            },
            {
                "pr": "12879",
                "title": "add the ability to configure teleportation and near interaction",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRDefaultExperience.ts"
                ],
                "tags": []
            },
            {
                "pr": "12874",
                "title": "Example Playgrounds for Properties and Methods of Vector3",
                "description": "My apologies for the length of this comment, it is because I need advice on whether it will be part of my very limited project or a much larger undertaking by the community. As a large community undertaking it needs considering and approval by @deltakosh along with @PirateJC and @RaananW as it involves the docs even though it is on the API side and I would like to include @sebavan as he as also been very supportive and helpful to me. Please include anyone else you would like to talk to about it.\r\n\r\n**Reason Behind PR**\r\nWithin the API classes the search the playground for each property and method is at best hit and miss, so I thought that each property and method of a class should have its own playground example, which should be simple and as meaningful as possible. For my limited project, except for a few where they were trivial or I couldn't think of a good example or I forgot, I have done this for all the methods and classes of Vector3 in this PR.\r\n\r\n**Implications for a Large Community Undertaking**\r\nAn announcement about the undertaking.\r\nIf members do put in example PGs they could come in piecemeal so lots of individual PRs, unless there was somewhere else to submit them. This would require a moderator or moderators.\r\nSome rules for submitting an example PG, eg\r\n1. PGs should be simple and where possible meaningful.\r\n2. Code for the particular property or method should appear near the top of the PG\r\n        When meaningful means more complex code this can be achieved by wrapping the\r\n        a. method code in a function as in [https://playground.babylonjs.com/#R1F8YU#111](https://playground.babylonjs.com/#R1F8YU#111)\r\n         b. method code within an onBeforeRenderObservable as in [https://playground.babylonjs.com/#R1F8YU#63](https://playground.babylonjs.com/#R1F8YU#63)\r\n         c. complex code within functions as in [https://playground.babylonjs.com/#R1F8YU#106](https://playground.babylonjs.com/#R1F8YU#106)\r\n3. There should be comments at the top describing the method/property also stating the example use matching a template\r\n4. Template PGs for each class would be needed\r\n5. New or edited methods without a PG should have a PG submitted when method PR submitted\r\n\r\nI am sure there are more implications and I am happy for the rules to change. I only came up with them after doing half the methods.\r\n\r\nAlso as members of the community have their own agendas it is probably wishful thinking that enough people would get involved to get it done.\r\n\r\nIn terms of my very limited project I am happy to continue with the math.vector.ts classes, eg Vector2, Vector4, etc\r\n\r\nLet me know what you think and whether it is just my limited project or a community appeal.",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12878",
                "title": "Fix invisible particles being visible again after a call of buildMesh",
                "description": "Related forum issue: https://forum.babylonjs.com/t/expandable-sps-with-invisible-dummy-particle/33096",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "12877",
                "title": "Fix tests running locally",
                "description": "There were two issues preventing tests from running correctly when ran locally.\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts"
                ],
                "tags": []
            },
            {
                "pr": "12850",
                "title": "Created an offset when pasting controls",
                "description": "When controls were pasted, they were visually directly on top of each other. Now, there is a visible change on screen when controls are pasted due to the offset",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "enhancement",
                    "gui editor"
                ]
            },
            {
                "pr": "12876",
                "title": "Draw rectangles with properly rounded corners",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-rectangle-cannot-achieve-semicircular-fillet/32934\r\n\r\nBefore, for a rectangle with same width and height, and a high corner radius, we didn't get a circle:\r\n![image](https://user-images.githubusercontent.com/6002144/184880333-2636f5e9-3485-46c7-90ee-ba62e4031d44.png)\r\nNow, using arcs to draw the rect:\r\n![image](https://user-images.githubusercontent.com/6002144/184880425-1ae03483-65e7-4cc7-bd88-f3e5e8be2ce7.png)\r\n\r\nSame for width != height, before:\r\n![image](https://user-images.githubusercontent.com/6002144/184880503-9782c85f-f344-4b07-83f1-ef3e564d24dd.png)\r\nNow:\r\n![image](https://user-images.githubusercontent.com/6002144/184880537-3c50cb3c-a6d8-4390-acbc-792b2321ce31.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12873",
                "title": "fix signature in scene.ts",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12871",
                "title": "Adds a FileButton to the InspectableTypes",
                "description": "This playground would demo how to use it: https://www.babylonjs-playground.com/#XK769K#5",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12870",
                "title": "Pasted controls are selectable",
                "description": null,
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12872",
                "title": "comment corrections",
                "description": "Comment changes only no code changes\r\n\r\nfloored should be fractional\r\n\r\nOne = (1.0, 1.0, 1.0) is not a unit vector as it has magnitude sqrt(3) not 1",
                "author": {
                    "name": "BabylonJSGuide",
                    "url": "https://github.com/BabylonJSGuide"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12866",
                "title": "Use glb meshes for sphere and plane in NME preview window",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "nme"
                ]
            },
            {
                "pr": "12821",
                "title": "DeviceInputSystem: Update Device Input folder structure",
                "description": "The purpose of this PR is to consolidate all of the DeviceInputSystem specific files into the DeviceInput folder.  All of the import references should also be updated.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSource.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/inputInterfaces.ts",
                    "packages/dev/core/src/DeviceInput/internalDeviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/nativeDeviceInputSystem.ts",
                    "packages/dev/core/src/DeviceInput/webDeviceInputSystem.ts",
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12864",
                "title": "Restore viewport on Procedural Texture Render",
                "description": "https://forum.babylonjs.com/t/potential-rendering-change-between-4-2-1-and-5-x/32949",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Procedurals/proceduralTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12863",
                "title": "Rectangles couldn't get correctly rounded because -2 was subtracted f…",
                "description": "…rom corner radius, so remove that subtraction.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/gui-rectangle-cannot-achieve-semicircular-fillet/32934",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/rectangle.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12862",
                "title": "NME: add copy and paste support for Mac's meta/command key",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12859",
                "title": "Fix WebXR helper",
                "description": "https://forum.babylonjs.com/t/webxr-properties-of-undefined-error-on-enter/32777",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12860",
                "title": "Add scrollbar, search text and tooltip on animation selection tool.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/add-a-slider-to-the-animation-selection/32920",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/sandbox/src/components/dropUpButton.tsx",
                    "packages/tools/sandbox/src/scss/footer.scss"
                ],
                "tags": []
            },
            {
                "pr": "12857",
                "title": "Nme height2normal",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/heightToNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/index.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12856",
                "title": "Fix scene serialization and loading issues.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/importing-mesh-loses-hierarchy/32779\r\n\r\nWhen we parse a mesh, the parentId from the JSON probably won't be the same as the uniqueId of the recreated parent, so keep a mapping to properly find this recreated parent.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/serializeAndLoadHierarchy.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/serializeWithoutMaterials.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            }
        ],
        "5.19.0": [
            {
                "pr": "12858",
                "title": "Update ComputePressureObserver",
                "description": "Hello.\r\n\r\nI have been working on updating our electron app to the latest electron version (20.0.1, previously we used 17.3.1) and we had a breakage in our use of babylon.js when the scene is disposed:\r\n\r\n> TypeError: Failed to execute 'unobserve' on 'ComputePressureObserver': 1 argument required, but only 0 present.\r\n\r\nNote that not all electron applications will experience this problem. ComputePressureObserver is only exposed if you use `experimentalFeatures: true`.\r\n\r\nIt appears that electron 19 and up is using a Chromium version with an updated ComputePressureObserver API. Here is the relevant change in [the working draft](https://wicg.github.io/compute-pressure/):\r\n- https://github.com/WICG/compute-pressure/issues/21\r\n- https://github.com/WICG/compute-pressure/pull/25\r\n\r\nThe error is ignored in `observe` but not in `unobserve`. My first commit here catches the error in `unobserve`. I first tried to use `catch()` like in `observe` but it didn't work so I had to use `try { ... } catch {}`. Even though it isn't documented in the spec, `observe` is returning a promise but `unobserve` is not.\r\n\r\nThe second commit updates the use of the observer to work with electron >= 19. This disables the observer for electron < 19 (`ComputePressureObserver.supportedSources` is not defined), but I don't think many will notice since the only thing this is used for is the CPU utilization metric in the Realtime Performance Viewer.\r\n\r\n![Screen Shot 2022-08-09 at 14 41 31](https://user-images.githubusercontent.com/1991151/183777526-040bc374-458b-446a-9fd6-5f26676ef13b.png)\r\n\r\nThe spec appears to have more updates than what electron supports. Doesn't look like the `samplerate` property works.\r\n\r\nI made this simple Electron Fiddle that can be used to test with: https://gist.github.com/stefansundin/4cee8e88133efb196f54f2d2a9f05155. You need to run `npm run start` to run the babylon.js server as well.\r\n\r\nPlease let me know if you want me to change anything! Thanks!",
                "author": {
                    "name": "stefansundin",
                    "url": "https://github.com/stefansundin"
                },
                "files": [
                    "packages/dev/core/src/Misc/computePressure.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12855",
                "title": "Fix shortcuts firing while user inputs text",
                "description": "Forum issue: https://forum.babylonjs.com/t/gui-editor-shortcuts-bug-on-inputtext/32884",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12854",
                "title": "Serialize scrollbar properties.",
                "description": "Forum issue: https://forum.babylonjs.com/t/gui-editor-scrollviewer-bug-cannot-change-bar-color/32862",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/scrollViewers/scrollViewer.ts"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12815",
                "title": "Inspector step modifier keys",
                "description": "In one of our projects I had to play around with the positions of objects a bunch to get the perfect position. It annoyed me that the `step` of the position fields was a bit low (pressing the up/down arrow keys only moved it slightly).\r\n\r\nThis PR solves that issue by using modifier keys. You can now hold `shift` to increase the step x10. Additionally, if you hold `ctrl` (`meta` on mac) as well, it will increase x100.\r\n\r\nI implemented this feature for both the `NumericInputComponent` and `FloatLineComponent` so it should work for all number input fields in the inspector.",
                "author": {
                    "name": "vinhui",
                    "url": "https://github.com/vinhui"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/numericInputComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "12853",
                "title": "Fix issues with basis texture and inspector (display format, preview window and broken texture)",
                "description": "https://forum.babylonjs.com/t/basis-texture-compression-in-inspector/32802/6\r\n\r\nThis addresses:\r\n* wrong format being displayed\r\n* texture broken on fallback to 565\r\n* preview image being broken on fallback to 565\r\n* texture broken after opening the texture inspector",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/inspector/src/textureHelper.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12852",
                "title": "Add IGizmo-extending interfaces for standard Gizmo variants",
                "description": "This pull request is a follow-up to #12795 and #12796 and adds interfaces representing what public properties should be implemented by custom gizmos seeking to fulfill the role of one of the standard `Gizmo` variants (`AxisDragGizmo`, `PositionGizmo`, etc).\r\n\r\nAdditionally, `Gizmo`-type properties within relevant classes now use the corresponding gizmo interface instead for easier integration of custom gizmos into `PositionGizmo`/`RotationGizmo`/`ScaleGizmo` as well as the standard `GizmoManager`.",
                "author": {
                    "name": "Hsifnus",
                    "url": "https://github.com/Hsifnus"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": [
                    "enhancement",
                    "gizmos"
                ]
            },
            {
                "pr": "12851",
                "title": "Nme fix",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "12849",
                "title": "Add transform nodes result to assetManager",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Misc/assetsManager.ts"
                ],
                "tags": [
                    "enhancement",
                    "loaders"
                ]
            },
            {
                "pr": "12848",
                "title": "Show full hex color on Color Picker component",
                "description": "Forum issue: https://forum.babylonjs.com/t/gui-editor-bug-on-hex-a-color-input/32817",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/colorPicker/colorPicker.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12843",
                "title": "Avoid hooking rtt renderList multiple times",
                "description": "See https://forum.babylonjs.com/t/rendertargettexture-renderlist-crash/31741",
                "author": {
                    "name": "fchoisy",
                    "url": "https://github.com/fchoisy"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12845",
                "title": "Fixed removal of the last geometry in the \"scene.geometries\" array",
                "description": "We have:\r\n`scene.geometries == [g1,g2,g3] `\r\nwe call:\r\n`scene.removeGeometry(g3)`\r\ng3 stays in the `scene._geometriesByUniqueId`  map with index == 2. This happens because it is the last one in the scene.geometries  list. This is already a bug and you can stop here but I'll describe the further horror I experienced in my project during debugging.\r\n\r\n\r\nWe call:\r\n`scene.removeGeometry(g2)` After that scene.geometries == [g1] which is ok.\r\nAgain we call:\r\n`scene.removeGeometry(g3)`  (This can easily happen e.g. if AssetContainer.removeAllFromScene  is called)\r\n\r\nAfter that `scene.geometries == [g1, empty]` due to the conditions in the code block I'm updating in this PR. This has all sorts of nasty consequences in other parts of the engine that I'm not gonna describe in detail. Basically every iteration over geometries is in danger.",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12846",
                "title": "Add `ZeroReadOnly` to Vector2 and Vector4",
                "description": "Adds a read-only zero vector to both the Vector2 and Vector4 classes, as well as a  `DownReadOnly` to the Vector3 class.",
                "author": {
                    "name": "chapmankyle",
                    "url": "https://github.com/chapmankyle"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12842",
                "title": "Fix getHeightAtCoordinates with Impostors and out of bound",
                "description": "Follow up https://forum.babylonjs.com/t/groundmesh-getheightatcoordinates-is-corrupted-by-physicsimpostor-heightmapimpostor/32774\r\n\r\n2 bugs at once:\r\n- The bounds check was not correct\r\n- This fix was incomplete : https://github.com/BabylonJS/Babylon.js/pull/12818",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/groundMesh.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "12844",
                "title": "GUI Editor Tool buttons now respond on the entire document instead of…",
                "description": "… only in the canvas. Also fix an issue where a control could still be moved even if the space key was pressed to pan.\r\n\r\nForum issue: https://forum.babylonjs.com/t/gui-editor-pan-mode-does-not-work-as-expected/32767/4",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12841",
                "title": "Add the possiblity to create custom top level nodes in the scene tree.",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGridTabComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/emptyPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/embedHost/embedHostComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorer.scss",
                    "packages/dev/inspector/src/components/sceneExplorer/sceneExplorerComponent.tsx",
                    "packages/dev/inspector/src/inspector.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12840",
                "title": "Nme drop wire",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss"
                ],
                "tags": []
            },
            {
                "pr": "12838",
                "title": "Safari/Selenium Tests",
                "description": "replace #12811 by simply renaming the test category as requested here: https://github.com/BabylonJS/Babylon.js/pull/12811#pullrequestreview-1060360422\r\n",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    ".vscode/launch.json",
                    "jest.config.ts",
                    "package-lock.json",
                    "package.json",
                    "packages/tools/testTools/package.json",
                    "packages/tools/testTools/src/index.ts",
                    "packages/tools/testTools/src/seleniumTestUtils.ts",
                    "packages/tools/tests/test/interactions/safari.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12837",
                "title": "More Tests on ProjectToPlane",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12836",
                "title": "Export Material Plugin Events",
                "description": "https://forum.babylonjs.com/t/materialpluginevent-is-not-exported-in-materials-index-ts/32760",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/index.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "12811",
                "title": "Safari/Selenium Tests",
                "description": "This PR has the tentative changes to test the input system in Safari",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    ".vscode/launch.json",
                    "jest.config.ts",
                    "package.json",
                    "packages/tools/testTools/package.json",
                    "packages/tools/testTools/src/index.ts",
                    "packages/tools/testTools/src/seleniumTestUtils.ts",
                    "packages/tools/tests/test/selenium/safari.test.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12835",
                "title": "Move typings to Webgl2RenderingContext",
                "description": "Fix #12833 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.transformFeedback.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl.d.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts"
                ],
                "tags": [
                    "enhancement",
                    "tools"
                ]
            },
            {
                "pr": "12834",
                "title": "allow saving a playground when using snapshots",
                "description": "The snapshot was always removed when a snippet was saved. A clear of location.search is not needed.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/tools/saveManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12832",
                "title": "Support for scss modules",
                "description": "css modules is a way to import a css and get a list of classes from it that can be applied to the specific moduels used in a component. It is tree-shaking friendly and a very good practice to avoid global css changes cross-projects.\n\nThis step provides support in our build system for both modules and global scss. If the .scss file is called `whatever.modules.scss` it will be loaded as a module. See the shared ui components project for an example.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/sharedUiComponents/src/components/Button.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Button.tsx",
                    "packages/dev/sharedUiComponents/src/components/Icon.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Icon.tsx",
                    "packages/dev/sharedUiComponents/src/components/Label.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Label.tsx",
                    "packages/dev/sharedUiComponents/src/components/Toggle.modules.scss",
                    "packages/dev/sharedUiComponents/src/components/Toggle.tsx",
                    "packages/dev/sharedUiComponents/src/scssDeclaration.d.ts",
                    "packages/tools/guiEditor/src/custom.d.ts",
                    "packages/tools/nodeEditor/src/custom.d.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "5.18.0": [
            {
                "pr": "12796",
                "title": "Change private members in gizmo to protected",
                "description": "close https://github.com/BabylonJS/Babylon.js/issues/12795\r\n\r\nI changed most of member from private to protected, even for those with public setters and getters, as setters and getters can be overwritten.\r\n\r\nExcept for\r\n\r\n1. caching variables like `_tmpQuaternion`\r\n1. static method of mesh creation\r\n\r\nOne thing I'm not sure about is the shader code in`planeRotationGizmo.ts`. If I change from `private` to `protected`, eslint complains about naming convention, but I wonder whether it is worth to rename.\r\n\r\n```ts\r\nprivate static _RotationGizmoFragmentShader\r\n```\r\n\r\nI'll leave this as a draft for discussion for now, and meanwhile continue to test the extendability on this PR.\r\n ",
                "author": {
                    "name": "braineo",
                    "url": "https://github.com/braineo"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/cameraGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmoManager.ts",
                    "packages/dev/core/src/Gizmos/lightGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/positionGizmo.ts",
                    "packages/dev/core/src/Gizmos/rotationGizmo.ts",
                    "packages/dev/core/src/Gizmos/scaleGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12831",
                "title": "Reinstate original version of projectOnPlaneToRef with small amendment",
                "description": "Ref https://forum.babylonjs.com/t/project-3d-point-on-plane/9862/18?u=johnk\r\n\r\nsuperseeds https://github.com/BabylonJS/Babylon.js/pull/12827",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12830",
                "title": "Add support for Integer attributes",
                "description": "superseeds https://github.com/BabylonJS/Babylon.js/pull/12823",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12828",
                "title": "Make sure artboard is resized correctly when resizing the canvas",
                "description": "There seems to be a race condition between the HTML page and the babylon scene/engine.\nI will create an issue to follow up on this and find a proper fix, but for now, it is enough to run the rezise callback 5 times every time it is needed.\n\nFor future reference, there seems to be an issue with the `top` on the Rect created in ArtBoardComponent",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12825",
                "title": "differentiating where control is dropped",
                "description": "WHen dropping a control in a scene tree hierachy, border line is now aligned with the layer of the hierarchy in which user is dropping the control",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12763",
                "title": "VSM skeleton",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    ".vscode/launch.json",
                    ".vscode/tasks.json",
                    "packages/tools/vsm/README.md",
                    "packages/tools/vsm/package.json",
                    "packages/tools/vsm/public/index.html",
                    "packages/tools/vsm/public/index.js",
                    "packages/tools/vsm/src/index.ts",
                    "packages/tools/vsm/src/legacy/legacy.ts",
                    "packages/tools/vsm/src/vsm.ts",
                    "packages/tools/vsm/src/workbench.tsx",
                    "packages/tools/vsm/tsconfig.build.json",
                    "packages/tools/vsm/tsconfig.json",
                    "packages/tools/vsm/webpack.config.js",
                    "tsconfig.build.json"
                ],
                "tags": []
            },
            {
                "pr": "12767",
                "title": "KHR animation pointer",
                "description": "This is the first version of the `KHR_animation_pointer` for the GLTF loader.\r\nThe basic idea behind the code is to turn every kind of animation into a pointer, in order to keep only one code path for all. This has been tested with success with all the samples provided as part of the Khronos proposal.\r\nEven if functional, the code is still not very clean and many ehancement must be done in order to reach a certain level of quality. However, calendar issue drive us to put this onto PR rapidely.\r\n[AnimateAllTheThings.zip](https://github.com/BabylonJS/Babylon.js/files/9144599/AnimateAllTheThings.zip)\r\nThis can be tested with the file above, which encompass all the cases supported by the `KHR_animation_pointer`.\r\nThe main changes are located into 3 files.\r\n`GLTFLoader` has been simplified by moving all the animation related code to the `KHR_animation_pointer.ts` where the extension lies. `KHR_animation_pointer.map.ts` contains the pointer tree mapping and miscellaneous function to serve the pointer parsing and logic.\r\nAll the other change are to support indirection between GLTF entities and Babylon ones. This is subject to discussion, because not very \"clean\".\r\nMay close #12544 \r\n",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.map.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_animation_pointer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoaderInterfaces.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFUtilities.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "enhancement",
                    "new feature"
                ]
            },
            {
                "pr": "12822",
                "title": "Change \"TO\" to \"To\" in two places in buildSystem.md",
                "description": null,
                "author": {
                    "name": "docEdub",
                    "url": "https://github.com/docEdub"
                },
                "files": [
                    "buildSystem.md"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12807",
                "title": "Moved copy, paste, delete to toolbar",
                "description": "Copy, paste, and delete functionalities were previously in the hamburger menu. They have now been moved to the toolbar and appear as icons",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandButtonComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/imgs/buttonBar_deleteIcon.svg",
                    "packages/tools/guiEditor/src/imgs/buttonBar_deleteIcon_disabled.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_copyIcon.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_copyIcon_disabled.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_pasteIcon.svg",
                    "packages/tools/guiEditor/src/imgs/buttonbar_pasteIcon_disabled.svg",
                    "packages/tools/guiEditor/src/scss/commandBar.scss"
                ],
                "tags": []
            },
            {
                "pr": "12819",
                "title": "Fix babylon native sprites",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/engineFeatures.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Sprites/spriteRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "native"
                ]
            },
            {
                "pr": "12818",
                "title": "Fxi heightmap impostor with Cannon",
                "description": "fixes #12578 \r\nWorld transform was not updated properly and adding/removing delta was happening with different world matrix values leading to a translation each frame.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "12814",
                "title": "fix missing indexedDB reference in nodejs",
                "description": "There is also no need for browser prefixes anymore.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Offline/database.ts"
                ],
                "tags": []
            },
            {
                "pr": "12816",
                "title": "Small changes to EngineView",
                "description": "added before and after view observables, added id for view",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.views.ts"
                ],
                "tags": []
            },
            {
                "pr": "12809",
                "title": "Physics typos",
                "description": "Fix some minor typos and comments in physics plugins.",
                "author": {
                    "name": "eoineoineoin",
                    "url": "https://github.com/eoineoineoin"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/ammoJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts"
                ],
                "tags": []
            },
            {
                "pr": "12808",
                "title": "fix native sprites",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/sprites.fragment.fx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12810",
                "title": "Defensive URL detection",
                "description": "Make sure the environment running babylon has the URL object before using it.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/dev/core/src/Misc/fileTools.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer2.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Offline/database.ts"
                ],
                "tags": []
            },
            {
                "pr": "12806",
                "title": "Use Custom NME Material for shadow map shaders",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/lightInformationBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            }
        ],
        "5.17.1": [
            {
                "pr": "12805",
                "title": "Fix crash when loading node material with loadasync",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12804",
                "title": "Allow creation of baseTexture from internalTexture",
                "description": "https://forum.babylonjs.com/t/cubetexture-from-canvas/32412/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            }
        ],
        "5.17.0": [
            {
                "pr": "12803",
                "title": "Expose tbn lines",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12802",
                "title": "Switch `= ` to `.length = 0` where possible",
                "description": "Quickly scraped all references to ` this.[anything] = [];` and checked if they are already created previously. In this case, setting to `length = 0` will be enough and will prevent the array from being garbage-collected.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts",
                    "packages/dev/core/src/Animations/animationGroup.ts",
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/flyCameraKeyboardInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraKeyboardMoveInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts",
                    "packages/dev/core/src/Cameras/VR/vrExperienceHelper.ts",
                    "packages/dev/core/src/Cameras/VR/webVRCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuOcclusionQuery.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/gradientBlock.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/prePassRenderTarget.ts",
                    "packages/dev/core/src/Materials/materialDefines.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Misc/smartArray.ts",
                    "packages/dev/core/src/Particles/computeShaderParticleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystem.ts",
                    "packages/dev/core/src/Particles/particleSystemSet.ts",
                    "packages/dev/core/src/Particles/webgl2ParticleSystem.ts",
                    "packages/dev/core/src/Physics/Plugins/cannonJSPlugin.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/standardRenderingPipeline.ts",
                    "packages/dev/core/src/XR/features/WebXRLayers.ts",
                    "packages/dev/core/src/assetContainer.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/gui/src/2D/controls/grid.ts",
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts",
                    "packages/dev/gui/src/3D/controls/container3D.ts",
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": []
            },
            {
                "pr": "12800",
                "title": "InputManager: Removed pointerup check that prevented event from being processed.",
                "description": "During some testing, I found that there was a bug that was causing one of `scene.onPointerObservable.notifyObservers` calls to not be called if more than one button was pressed.  This could be reproduced in Chromium, Firefox, and Safari browsers.  \r\n\r\nBasic Repro Steps:\r\n\r\n1. Open Basic PG\r\n2. Press left button, middle button, then right button (Do not let go of any of them)\r\n3. Release them in this order while moving around a bit (Right, Left, Middle)\r\n4. Now camera movement should be locked to your cursor movement\r\n\r\nIt should be noted that the DeviceSourceManager/DeviceInputSystem is still storing the correct values.  This fix removes the check from the InputManager.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12799",
                "title": "Added `Color3.FromHSV`",
                "description": "A simple static method to create a new Color3 from HSV color space.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": []
            },
            {
                "pr": "12798",
                "title": "Fix gui loading from snippet",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12797",
                "title": "Fixing design issue with toolbar",
                "description": "Toolbar expanded to the left (into the panel) instead of to the right (into the artboard)",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/main.scss",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12794",
                "title": "Fix render method of RTT not using its active camera",
                "description": "Related forum issue: https://forum.babylonjs.com/t/how-to-manual-render-rendertargettexture/32398/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12793",
                "title": "Fix version sorting in changelog generator",
                "description": "Versions in CHANGELOG.md were incorrectly sorted because 5.2.0 is sorted higher than 5.16.0\n\nThis sorts the versions according go the right order",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/generateChangelog.js"
                ],
                "tags": []
            },
            {
                "pr": "12792",
                "title": "Vertex buffer override for native",
                "description": "fixes https://github.com/BabylonJS/BabylonNative/issues/1111\r\n\r\nVertexbuffer override was not supported in native. In our cases, this is issued for instancing.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "bug",
                    "native"
                ]
            },
            {
                "pr": "12791",
                "title": "Fix naming convention for parsing from File or snippet",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/loadAnimationComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/tools/playground/public/templates.json"
                ],
                "tags": []
            },
            {
                "pr": "12789",
                "title": "Fix distorted normals in large-radius flat IcoSpheres.",
                "description": "Prior to this commit, a subdivided IcoSphere with a large radius would have distorted normals\r\nfor the vertices that were in the original set prior to subdivision.\r\n\r\nHere is an example of a flat IcoSphere with `radius: 100`:\r\n\r\n![image](https://user-images.githubusercontent.com/4623870/180621057-ea6deece-ea68-475e-874b-460e0bc8e4f2.png)\r\n\r\nAfter some troubleshooting, I discovered that this problem was due to scaling at an inappropriate\r\npoint in the process of generating the mesh. After removing this inappropriate scaling,\r\nthe normals of the vertices now look as expected without distortion.\r\n\r\n![image](https://user-images.githubusercontent.com/4623870/180621074-52e1063a-6a1c-4de6-b077-4c74064f68a8.png)\r\n\r\nNon-flat icospheres are unaffected - they still look appropriately round, as they did before.\r\n\r\n![image](https://user-images.githubusercontent.com/4623870/180621092-0061c0ca-4e6c-4856-aa3d-95ab2a2e01bf.png)\r\n",
                "author": {
                    "name": "jemc",
                    "url": "https://github.com/jemc"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/icoSphereBuilder.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12717",
                "title": "Add tests for the DeviceSourceManager to check for memory leaks",
                "description": "This PR contains a reference to a specific PR ([#IC07YA#2](https://playground.babylonjs.com/#IC07YA#2)) that creates multiple instances of the DeviceSourceManager and runs through some inputs before tearing things down and measuring  memory usage after the test is run.  This is done via our Integration playground test file",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/tests/test/integration/leaks/playgrounds.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12788",
                "title": "pasted controls in the right container",
                "description": "Every pasted control was being pasted in the root container, rather than on the same layer as the selected control",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12775",
                "title": "Rolldown Hierarchy",
                "description": "shift+click for to see all elements in hierarchy. Also fixed issues with a previous PR about the scene tree not sticking",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12787",
                "title": "isPointerBlocker fixes",
                "description": "Related issues:\r\nhttps://forum.babylonjs.com/t/ispointerblocker-improvement/31152\r\nhttps://forum.babylonjs.com/t/on-inputtext-click-the-pointer-should-not-go-through-it/32336\r\n\r\n* Don't pass pointer events up the hierarchy if a control has isPointerBlocker set\r\n* Fix inputText always passing pointer events to the scene even when isPointerBlocker is set to true\r\n* Add some documentation to clarify which controls set isPointerBlocker to true by default",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/control.ts"
                ],
                "tags": []
            },
            {
                "pr": "12786",
                "title": "fix splice hook",
                "description": "https://forum.babylonjs.com/t/how-to-remove-node-in-rendertargettexture-renderlist/32375/5",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12782",
                "title": "Add thinInstance creation check if instanced arrays are not supported.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12785",
                "title": "Wait to add pending data to the scene before loading screen logic",
                "description": "Fix this issue: https://forum.babylonjs.com/t/sceneloader-append-breaks-the-loading-screen-in-5-0/32372",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Loading/sceneLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12776",
                "title": "Bump terser from 4.8.0 to 4.8.1",
                "description": "Bumps [terser](https://github.com/terser/terser) from 4.8.0 to 4.8.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/terser/terser/blob/master/CHANGELOG.md\">terser's changelog</a>.</em></p>\n<blockquote>\n<h2>v4.8.1 (backport)</h2>\n<ul>\n<li>Security fix for RegExps that should not be evaluated (regexp DDOS)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/terser/terser/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=terser&package-manager=npm_and_yarn&previous-version=4.8.0&new-version=4.8.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            },
            {
                "pr": "12779",
                "title": "Gizmo/camera fixes",
                "description": "https://forum.babylonjs.com/t/the-gizmo-uses-the-latest-cameras-in-inspector/31221\r\n\r\n- scene.activeCamera value is discarded during rendering when having multiple camera. The value set by the user was replaced. \r\n- set the rendering layer camera as the active camera for rendering\r\n\r\nfixes #12650 \r\nhttps://forum.babylonjs.com/t/can-non-uniform-scaling-be-disabled-on-the-bounding-box-gizmo/28735/7\r\n\r\n- simple accessor to get the scaling boxes so user can tweak them\r\n",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/sceneTreeItemComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector",
                    "new feature",
                    "gizmos"
                ]
            },
            {
                "pr": "12781",
                "title": "Fix crash on smooth shading for meshes with no index buffers on Babylon Native.",
                "description": "## Overview \r\n\r\nWhen forceSharedVertices is called on a mesh that does not have an index buffer, the forceSharedVertices will create empty arrays for its positions and normals vertex attributes. This will result in a NativeEngine::RecordVertexBuffer been called with undefined arguments been passed as VertexBuffer* argument on Native engine. \r\n\r\nThis problem does not happen on the web engine because it creates vertex attribute arrays of size zero when an empty array is provided, which results in no rendering for those meshes. \r\n\r\n## Issues\r\n- Fixes Native issue [#1108 ](https://github.com/BabylonJS/BabylonNative/issues/1108)",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12778",
                "title": "Add computeBoundingBox as a constructor option on SPS.",
                "description": "Closes #11892 \r\n\r\nThere was already support for setting the bounding box size as the SPS size on the code, but there wasn't an option to enable this on the constructor.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Particles/solidParticleSystem.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12773",
                "title": "move depth buffer to ThinEngine",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12774",
                "title": "Check autoClear for RTT to fix utility layer on native OpenXR",
                "description": "Illustration showing left and right eyes in a HoloLens 2 running BabylonNative:\r\n<img width=\"600\" alt=\"stereo-clear-artifacts\" src=\"https://user-images.githubusercontent.com/4724014/180064594-238f7fc0-6b3f-4aeb-bd45-9c7e5244362b.png\">\r\n\r\nfixes https://github.com/BabylonJS/BabylonNative/issues/1087\r\n\r\nThere were two issues going on here. The first is that we needed to render the utility layer _after_ rendering to both eyes in the target scene. By rendering the utility layer scene in between eye renders, we were getting weird clearing behavior that is hard to describe. The second is that we were double-clearing our output render target textures in cases where `RenderTargetTexture.skipInitialClear = false`.\r\n\r\nBy changing the observable used in `utilityLayerRenderer` from `onAfterCameraRenderObservable` to `onAfterRenderCameraObservable`, we're making sure to render the layer only once after finishing both eyes (instead of after the left and before the right and then again after both eyes). This doesn't meaningfully change any behavior in rendering scenarios with cameras without sub-cameras.\r\n\r\nBy checking `Scene.autoClear` when clearing the camera's output render target, we avoid clearing our render targets when rendering multiple scenes that are supposed to layer onto those render targets. This means that clearing behavior when rendering a scene to a render target matches the clearing behavior when rendering that same scene to the default frame buffer. **This is a breaking change for experiences that expected the scene not to honor `autoClear = false` when rendering to a RTT, but this is not documented/expected behavior as far as I know.**\r\n\r\nWe weren't seeing this bug in any other scenario (i.e. Oculus on Web, native iOS, native Android, etc) because on all other platforms `RenderTargetTexture.skipInitialClear = true`, and so we never saw any weird clearing behavior because the RTT's were never getting cleared in the first place, which on those platforms is totally acceptable because they get automatically cleared by either the WebXR runtime or the BabylonNative XR implementation at the top of the frame.\r\n\r\n",
                "author": {
                    "name": "rgerd",
                    "url": "https://github.com/rgerd"
                },
                "files": [
                    "packages/dev/core/src/Rendering/utilityLayerRenderer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.16.0": [
            {
                "pr": "12768",
                "title": "Native readPixels implementation",
                "description": "This change provides a native implementation for reading a texture to obtain an rbga8 buffer. It does not currently support cube maps.\r\n\r\nSee the corresponding Babylon Native change here: https://github.com/BabylonJS/BabylonNative/pull/1104",
                "author": {
                    "name": "ryantrem",
                    "url": "https://github.com/ryantrem"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12771",
                "title": "perf: Improve `MaterialHelper` tree-shaking with `LightConstants`",
                "description": "`MaterialHelper` don't need the whole `Light` class (only the `Light` TypeScript type).\r\n\r\nRelated to https://github.com/BabylonJS/Babylon.js/issues/10388",
                "author": {
                    "name": "yvele",
                    "url": "https://github.com/yvele"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12769",
                "title": "Skip some WebAPI calls when setting up VideoTexture in the context of Babylon Native",
                "description": "This change prevents `VideoTexture` from calling `window.URL.createObjectURL` during initialization when running in the context of Babylon Native. Somehow this WebAPI is defined in regular Babylon Native (there is no native polyfill, so is JSC/V8 providing this?), though it is unnecessary (the `src` property is unused in Babylon Native's `VideoTexture` implementation), and in React Native `window.URL.createObjectURL` is polyfilled partially and dies on this call. Avoiding this call makes `VideoTexture` work in Babylon React Native. The extra direct check for `video.isNative` in the BJS code is not great, but other code in this file already does it, so following the existing pattern.",
                "author": {
                    "name": "ryantrem",
                    "url": "https://github.com/ryantrem"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12766",
                "title": "Use only the mesh's enabled state, not its parent's, when cloning.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/cloned-objects-dont-seem-to-have-the-same-enabled-state-as-the-original-object/32311\r\n\r\nExample playground: https://playground.babylonjs.com/#48QWI6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12764",
                "title": "Always clone skinned meshes for AssetContainer.instantiateModelsToScene",
                "description": "See https://forum.babylonjs.com/t/programmatically-setting-separate-bone-transform-node-transforms-for-instances/31910",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12765",
                "title": "InputManager: Added mouse buttons 4 and 5 to InputManager mouse handling",
                "description": "A user in the forums brought an issue to our attention where the mouse 4 and 5 buttons (Browser Back and Browser Forward) weren't triggering `scene.onPointerObservable`.  This had worked previously in 4.2.  Upon further investigation, it was found that the code used in the InputManager to route the input calls had omitted these buttons.  This PR will add them back into the InputManager.\r\n\r\nForum Post: https://forum.babylonjs.com/t/scene-onpointerobservable-doesnt-catch-mouse4-and-mouse5-events-in-babylonjs-5/32225",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12755",
                "title": "toolbar can expand now",
                "description": "No previous functionality for expanding toolbar on smaller screens (scroll only) ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/imgs/toolbarCollapseIcon.svg",
                    "packages/tools/guiEditor/src/imgs/toolbarExpandIcon.svg",
                    "packages/tools/guiEditor/src/main.scss",
                    "packages/tools/guiEditor/src/workbenchEditor.tsx"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12762",
                "title": "ArcRotateCamera: Modify rotation logic to use invertRotation flag",
                "description": "The `invertRotation` flag is primarily used with the FreeCamera and any Cameras that inherit from it.  Since the ArcRotateCamera uses different rotation logic, it never actually makes use of the `invertRotation` flag or its numerical counterpart, the `invertRotationSpeed` property.  This PR allow the user to use this flag with the ArcRotateCamera and specify the inverted rotational speed.  The discrepancy was initially brought up in the forum thread: https://forum.babylonjs.com/t/inverting-arcrotatecamera-controls-for-photodome/32147/6.\r\n\r\n",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12754",
                "title": "fixed scene tree not sticking",
                "description": "When clicking arrow button in scene tree, children were not appearing unless the mouse was moved ",
                "author": {
                    "name": "amritanarasimhan",
                    "url": "https://github.com/amritanarasimhan"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/sceneExplorer/treeItemSelectableComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12760",
                "title": "Expose pendingData APIs publicly",
                "description": "Open pendingData management to the public\r\n\r\nhttps://forum.babylonjs.com/t/scene-external-readiness-checking/32179",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Audio/sound.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.cubeTexture.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12761",
                "title": "DeviceInputSystem: Made mousewheel passive option set to false when supported",
                "description": "Originally, in two PRs (https://github.com/BabylonJS/Babylon.js/pull/12696 and https://github.com/BabylonJS/Babylon.js/pull/12703) there was a violation warning that came up because the mouse wheel was not being treated as a passive event.  My original fixes addressed the original logic, which was incorrectly assigning the passive property, and makes the default value true.  This also includes removal of the preventDefault code from some of our cameras.\r\n\r\nThis current PR will accomplish two things.  One, it will revert the changes from 12703.  Second, it will set the default state of the passive property to false.  This should address an issue found in the forums where the original behavior would successfully allow for preventDefault but the newest one wouldn't.\r\n\r\nForum link: https://forum.babylonjs.com/t/camera-zoom-scrolling-the-page-introduced-in-5-13-1/32223/6",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "12759",
                "title": "Fix 3D slider observables and visibility",
                "description": "- https://forum.babylonjs.com/t/gui3d-slider3d-observables-are-not-triggered/32265\r\n- https://forum.babylonjs.com/t/gui3d-slider3d-isvisible-boolean-not-working/32264",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/gui/src/3D/controls/control3D.ts",
                    "packages/dev/gui/src/3D/controls/slider3D.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12758",
                "title": "Serialize getters instead of private vars",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "12756",
                "title": "WebGPU: Comply with variable naming restrictions",
                "description": "Fix errors starting in Canary Version 105.0.5183.0.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsGLSL.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12753",
                "title": "Fix camera cloning of ortho params",
                "description": "Related forum issue: https://forum.babylonjs.com/t/5-14-to-5-15-camera-clone-does-not-clone-camera-mode/32192/3",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "12750",
                "title": "Add engine option for using exact sRGB conversions in the shader.",
                "description": "This provides an option to use the more expensive but accurate conversion for transforming colors in the shader to and from linear and sRGB color spaces. The conversion constants and formulas are described in the Wikipedia article for sRGB: https://en.wikipedia.org/wiki/SRGB\r\n\r\nI opted to make this option a property passed into the engine, as it feels somewhat similar functionally to the engine option for high precision floats i.e., it affects many things (in this case, many shaders). IMO it would be odd to use the approximation in one shader and the exact formula in another. I think most of the time, you'd either want it always or never.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/imageProcessingConfiguration.ts",
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12751",
                "title": "Remove loading of GLTF files as the current architecture doesn't support them",
                "description": "Related forum issue: https://forum.babylonjs.com/t/nme-cant-upload-custom-gltf-for-preview/32172/2",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewMeshControlComponent.tsx"
                ],
                "tags": []
            }
        ],
        "5.15.1": [
            {
                "pr": "12749",
                "title": "Fix colorline incorrect use of hex line",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/colorLineComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12746",
                "title": "Add VirtualKeyboard support to InputTextArea",
                "description": "This PR adds VirtualKeyboard support to InputTextArea.\r\n\r\nI check  if `this._currentlyConnectedInputText instanceof InputTextArea` to call matching method `this._currentlyConnectedInputText.alternativeProcessKey`, or call `processKey` for InputText.\r\n\r\nBesides, pass different parameters for the input of `Enter` and `Backspace`.\r\n```\r\ninputText.processKey(8);\r\ninputTextArea.alternativeProcessKey('Backspace');\r\n```\r\n\r\n\r\nSo that an InputTextArea could be connected by a VirtualKeyboard and respond to virtual keyboard input.\r\n```\r\nconst textarea = new InputTextArea('Textarea');\r\nconst keyboard = new VirtualKeyboard('Keyboard');\r\nkeyboard.connect(textarea);\r\n\r\n```\r\n \r\nDiscussed in https://forum.babylonjs.com/t/improve-gui-virtualkeyboard-to-support-inputtextarea/32108.",
                "author": {
                    "name": "ycaptain",
                    "url": "https://github.com/ycaptain"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts"
                ],
                "tags": []
            },
            {
                "pr": "12747",
                "title": "Fix copy pasting of frames.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": []
            }
        ],
        "5.15.0": [
            {
                "pr": "12744",
                "title": "Make sure legacy support doesn't throw exceptions",
                "description": "When loading the framework twice on the same page an exception was thrown, as we were re-setting unsettable parameters.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/lts/core/src/Legacy/legacy.ts",
                    "packages/lts/gui/src/legacy/legacy.ts",
                    "packages/lts/loaders/src/legacy/legacy-objFileLoader.ts",
                    "packages/lts/loaders/src/legacy/legacy-stlFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12743",
                "title": "If controls are reordered, relink them to mesh",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-control-zindex-update-unlinks-mesh/32113",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": []
            },
            {
                "pr": "12738",
                "title": "Do not style overlay if custom buttons provided",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXREnterExitUI.ts"
                ],
                "tags": []
            },
            {
                "pr": "12741",
                "title": "Pass ortho camera values down to rigCameras",
                "description": "Related forum issue: https://forum.babylonjs.com/t/is-a-camera-able-to-be-both-anaglyphic-and-orthographic/31887/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts",
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Cameras/targetCamera.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12740",
                "title": "Fix internal plugins that use prepareDefines",
                "description": "Stemming from this [prev PR](https://github.com/BabylonJS/Babylon.js/pull/12643) prepareDefines is now called after PrepareDefinesForAttributes so that the plugin's defines aren't overwritten. However some of the built-in plugins rely on prepareDefines being called before PrepareDefinesForAttributes (in particular the ones that call PrepareDefinesForMergedUV which needs to be called before PrepareDefinesForAttributes).\r\n\r\nSo this PR just changes these plugins to use prepareDefinesBeforeAttributes, which is called before PrepareDefinesForAttributes to match the original behavior (this is the same fix that was created for the PBRAnisotropicConfiguration plugin in the original PR, which I thought was the only one affected).\r\n\r\nForum issue about the PBRSheenConfiguration plugin: https://forum.babylonjs.com/t/texture-not-displaying-for-sheen-extension/32110",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrClearCoatConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSheenConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSubSurfaceConfiguration.ts"
                ],
                "tags": []
            },
            {
                "pr": "12742",
                "title": "Shortcuts for search and placement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/portData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts"
                ],
                "tags": []
            },
            {
                "pr": "12725",
                "title": "Export method 'CreateDiscVertexData'",
                "description": "Exports the local method `CreateDiscVertexData` so it is accessible outside of `discBuilder.ts`",
                "author": {
                    "name": "chapmankyle",
                    "url": "https://github.com/chapmankyle"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/discBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12739",
                "title": "Fix gizmos on elements with padded parents",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/gizmoGeneric.tsx"
                ],
                "tags": [
                    "bug",
                    "gui editor"
                ]
            },
            {
                "pr": "12737",
                "title": "Automatically change hardware scaling based on browser zoom level",
                "description": "Fixes #12711\nThis does 2 things:\n1) If adapt to device ratio is turned on we are using the delta between the last recorded device pixel ratio and the current one to change the hardware scaling rate.\n2) adaptToDeviceRatio is not public and can be changed not only in the constructor.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12730",
                "title": "Check if the mouse is over canvas and if it is, stop the scroll from …",
                "description": "…happening.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/components/preview/previewAreaComponent.tsx",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12733",
                "title": "Remove icon from elbowblock in NME",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts"
                ],
                "tags": []
            },
            {
                "pr": "12734",
                "title": "Add scaleInPlace to Color3 and Color4",
                "description": "And fix some bugs in the existing documentation.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": []
            },
            {
                "pr": "12736",
                "title": "updated documentation of hoverRadius",
                "description": "fixes https://github.com/BabylonJS/Babylon.js/issues/12724",
                "author": {
                    "name": "marpro200",
                    "url": "https://github.com/marpro200"
                },
                "files": [
                    "packages/dev/gui/src/3D/materials/fluent/fluentMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12732",
                "title": "Fix frame linking",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12729",
                "title": "Fix delete key issue with NME",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/lines/quaternionLineComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationGroupPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/animationPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/arcRotateCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/commonCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/layers/layerPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonShadowLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/commonMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/nodeMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMetallicRoughnessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrSpecularGlossinessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/skeletonPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/coneEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/cylinderEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/hemisphericEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/sphereEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonPostProcessPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/lensRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssao2RenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/ssaoRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sounds/soundPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spritePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/tools/gltfComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/matrixLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/sliderLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/inputTextPropertyGridComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12731",
                "title": "Fix frame export",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerExportData.ts"
                ],
                "tags": []
            },
            {
                "pr": "12727",
                "title": "Volumetric post process: Add support for setMaterialForRendering",
                "description": "See https://forum.babylonjs.com/t/shadows-and-post-processing-with-custom-material/32034",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": []
            },
            {
                "pr": "12726",
                "title": "Create screenshot: Fix resources not recreated with the right sizes",
                "description": "See https://forum.babylonjs.com/t/babylonjs-5-0-5-5-5-ios-15-4-safari-15-4-issues/30195/27",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "12723",
                "title": "Nme improvements",
                "description": "Fix #12721\r\nFix #12722 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/elbowBlock.ts",
                    "packages/dev/sharedUiComponents/src/imgs/triangle.svg",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/imgs/square.svg",
                    "packages/tools/nodeEditor/src/imgs/triangle.svg"
                ],
                "tags": []
            },
            {
                "pr": "12662",
                "title": "Basis transcoder update",
                "description": "This is an update to the basis transcoder. This allows users to also take advantage of the `UASTC` option of the basis format. \r\n\r\nThe `basis_transcoder.js` and `basis_transcoder.wasm` are a direct copy from the [Basis Universal repository](https://github.com/BinomialLLC/basis_universal/tree/7a2094b/webgl/transcoder/build).",
                "author": {
                    "name": "vinhui",
                    "url": "https://github.com/vinhui"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/Loaders/basisTextureLoader.ts",
                    "packages/dev/core/src/Misc/basis.ts",
                    "packages/tools/babylonServer/public/basisTranscoder/1/basis_transcoder.js",
                    "packages/tools/babylonServer/public/basisTranscoder/1/basis_transcoder.wasm",
                    "packages/tools/testTools/src/utils.ts",
                    "packages/tools/testTools/src/visualizationUtils.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12702",
                "title": "Initial Device Input Test Pattern Setup: Unit Tests",
                "description": "This PR contains a set of tests to verify the functionality of the DeviceSource and DeviceSourceManager objects.  These tests will serve as a baseline for other tests coming up in the future.\r\n\r\nThis also contains a small fix to the DeviceSourceManager when a user tries to query for a device that has no active entries.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/internalDeviceSourceManager.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts",
                    "packages/dev/core/test/unit/DeviceInput/babylon.deviceInput.test.ts"
                ],
                "tags": [
                    "inputs"
                ]
            }
        ],
        "5.14.1": [
            {
                "pr": "12720",
                "title": "Move common controls out of NME",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/colorPickerComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/minus.svg",
                    "packages/tools/nodeEditor/src/sharedComponents/numericInputComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/plus.svg"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12719",
                "title": "Warning for protected block names pops while still typing",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/colorPicker/hexColor.tsx",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTab.scss"
                ],
                "tags": []
            },
            {
                "pr": "12686",
                "title": "Update GLTF Animation serializer to include Camera.",
                "description": "`Camera `and `Light` was not exported to GLTF due to single test about `TransformNode`. We introduce a test function, which encompass test for `TransformNode`, `Camera `and `Light`. This test function will evolve to add support for `KHR_animation_pointer`.\r\nSee [this](https://forum.babylonjs.com/t/gltf-bug-freecamera-animation-not-being-exported/31259) forum thread.",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFAnimation.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.14.0": [
            {
                "pr": "12714",
                "title": "Pasting hex color from one color3 to another actually pastes the original node as a new node",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/gradientStepComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/toolBar.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/colorGradientStepGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/colorComponentEntry.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/colorPicker.tsx",
                    "packages/dev/sharedUiComponents/src/colorPicker/hexColor.tsx",
                    "packages/dev/sharedUiComponents/src/lines/colorLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/colorPickerComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/colorPickerComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12706",
                "title": "Move lock object down the graph",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/lines/quaternionLineComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/arcRotateCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/freeCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/customPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/fogPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/directionalLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/hemisphericLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/pointLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/spotLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/nodeMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMetallicRoughnessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrSpecularGlossinessMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/bonePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/transformNodePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/boxEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/meshEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/pointEmitterGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/commonPostProcessPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/postProcesses/defaultRenderingPipelinePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spritePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/color3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/color4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/colorLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/matrixLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/numericInputComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector2LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/tabs/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/matrixPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector2PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/framePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12709",
                "title": "Created Visual Tests for GUI Input and Pick Testing",
                "description": "This PR adds two visual tests to our testing suite to check some higher level input functionality.\r\n\r\nPicking Visual Test: https://playground.babylonjs.com/#4J7Y7V#1\r\nThis test validates that picking should work for POINTERMOVE, POINTERDOWN, and POINTERUP.  Additionally, there are tests to verify that our skip booleans (eg. skipPointerUpPredicate) will prevent picking in scenarios where we don't want to pick.  As part of this process, we also can verify that the DeviceInputSystem/DeviceSourceManager can talk to the InputManager to propagate pointer events up.\r\n\r\nGUI Input Test: https://playground.babylonjs.com/#UB4F3B#7\r\nThis test validates that GUI elements such as TextBlocks, InputTexts, and Buttons are usable with Keyboard and Mouse input.  Furthermore, this will verify that the 6 observables will work with our buttons (move, up, down, out, enter, click).  While the first test verifies that the DIS/DSM can talk with the InputManager, this one will show that the InputManager can also talk with GUI elements.\r\n\r\nIt should be noted that all simulated input is done with Pointer/KeyboardEvent objects and the `dispatchEvent` function.  Some modifications will be needed if these tests are to run on Babylon Native.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/tools/tests/test/visualization/ReferenceImages/guiInputTest.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/pickingVisualTest.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "gui",
                    "picking",
                    "inputs",
                    "skip changelog"
                ]
            },
            {
                "pr": "12708",
                "title": "Fix some additional issues",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts"
                ],
                "tags": []
            },
            {
                "pr": "12691",
                "title": "move more code to shared-ui",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/nodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/checkBoxLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/floatLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/propertyChangedEvent.ts",
                    "packages/tools/nodeEditor/src/sharedComponents/sliderLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/textLineComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12703",
                "title": "Camera: Remove code execute preventDefault for wheel events",
                "description": "Recently, there was a fix done for mouse wheel events to allow them to properly be identified as supporting the passive flag.  Because of this, there was a side effect introduced where if preventDefault is enabled for camera wheel input objects, it will throw an error because passive events ignore preventDefault calls.  This was brought to our attention in this forum post: https://forum.babylonjs.com/t/updated-babylon-now-getting-unable-to-preventdefault-inside-passive-event-listener-invocation-error/31842\r\n\r\nThis PR removes the, now obsolete, preventDefault calls from our wheel inputs to prevent this error from popping up.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/BaseCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/arcRotateCameraMouseWheelInput.ts",
                    "packages/dev/core/src/Cameras/Inputs/followCameraMouseWheelInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12704",
                "title": "Fix command-drag multiselect for NME on Mac",
                "description": "When doing click-and-drag multiselect of NME nodes, check _multiKeyIsPressed which will be true if either ctrl or command (for Mac) key is pressed down, instead of just checking for ctrl key.\r\n\r\nForum: https://forum.babylonjs.com/t/is-it-possible-to-change-shoutcut-for-node-material-editor/31808/14",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx"
                ],
                "tags": []
            }
        ],
        "5.13.3": [
            {
                "pr": "12701",
                "title": "Fix loading skinned model with multiple primitives",
                "description": "https://forum.babylonjs.com/t/3d-model-not-showing-up-in-playground-or-sandbox/31821",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.13.2": [
            {
                "pr": "12700",
                "title": "Fix port duplication",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.13.1": [
            {
                "pr": "12697",
                "title": "Engine: Add event listener to disable right-click menu when there's a canvas element",
                "description": "There was an issue found on the forums where the right-click context menu was appearing when a user used custom mouse controls.  Upon closer investigation, it was determined that the reason the context menu didn't appear in other scenarios was that there was specific code to suppress it in all of our cameras' mouse input code.  This proposed fix will add code to suppress the context menu when the rendering canvas is set to a non-null HTMLElement.\r\n\r\nForum Post: https://forum.babylonjs.com/t/even-by-using-evt-preventdefault-the-browser-menu-pops-up-after-i-changed-from-bjs-5-0-to-5-10/31383/8",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12698",
                "title": "Fix node decomposing at drop time",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts"
                ],
                "tags": []
            },
            {
                "pr": "12699",
                "title": "Fix snippet loading on GUI Editor",
                "description": "Related forum issue: https://forum.babylonjs.com/t/gui-editor-loading-from-snippet-id-only-not-entering-full-link-is-incomplete/31803",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/public/index.js"
                ],
                "tags": []
            },
            {
                "pr": "12696",
                "title": "DeviceInputSystem: Fixed Passive Support Check to prevent Violation Warning",
                "description": "There was a warning found by a user on the forums that, in Verbose mode, a Violation warning was occurring:\r\n![image](https://user-images.githubusercontent.com/50599569/176553040-80f67f6f-a818-4494-9f8a-f36f5e4c4739.png)\r\nThis warning was happening because the `wheel` event listener didn't have the \"passive\" option set to true when able.  After closer investigation, it was found that the code used to determine if passive was supported was always returning false, causing this warning to occur.  This PR modifies the logic to fix this.\r\n\r\nForum link: https://forum.babylonjs.com/t/bjs-console-warnings-when-using-cleargizmoonemptypointerevent/31447/8",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.13.0": [
            {
                "pr": "12694",
                "title": "Only export material from mesh with geometry",
                "description": "See https://forum.babylonjs.com/t/scene-exporter-is-not-working-correctly/28591",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12695",
                "title": "Fix skeleton update cache",
                "description": "Related forum issue: https://forum.babylonjs.com/t/bone-wiring-display-bug/31755\r\nRelated playground: https://playground.babylonjs.com/#1EVNNB#15",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts",
                    "packages/dev/core/src/Debug/boneAxesViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12693",
                "title": "Added code to track buttons pressed while meta key is active on MacOS",
                "description": "There was an issue found on the forum where `keyup` events for keys weren't firing while the Meta key (Command) was pressed for all browsers on MacOS.  This has led to a scenario where said buttons weren't being properly treated as released.  Upon investigation, it has been determined that this issue occurs at an OS level and therefore, there isn't much we can do about it (https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser).  This PR contains a workaround so that if BJS is being run in a browser on MacOS, any buttons pressed while the Meta key is active will be tracked and have `keyup` events fired for them when the Meta key is released.  All other platforms will work as before without this tracking code.\r\n\r\nForum Link: https://forum.babylonjs.com/t/modifier-keyboard-shortcuts-with-devicesourcemanager-copy-to-clipboard/31743/7",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12690",
                "title": "Fix serialization when objects have InstancedMesh parents",
                "description": "Related forum issue: https://forum.babylonjs.com/t/sceneserializer-loses-hierarchy/31720\r\nRelated playground: https://playground.babylonjs.com/#6U1BYB#1\r\nSaving the playground as .babylon and loading it in another playground or sandbox will show the objects which previously were arranged in hierarchy as a flat structure.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts",
                    "packages/dev/core/src/Lights/light.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/node.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/serializeAndLoadInstancedHierarchy.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12692",
                "title": "Save the texture url in the name so its not overwritten on render.",
                "description": "Fix #12683",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12681",
                "title": "Turning on two eslint rules",
                "description": "The two rules are:\n\n* `import type` should be used instead of `import` when there is no need to import the file fully.\n* no `this` reassignment",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".eslintrc",
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/pathTransform.ts",
                    "packages/dev/core/src/Events/deviceInputEvents.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts",
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/sharedUiComponents/src/components/Label.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/propertyComponentProps.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/selectionChangedOptions.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/propertyLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/typeLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/types/framePortData.ts",
                    "packages/dev/sharedUiComponents/src/stories/Button.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Icon.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Label.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Toggle.stories.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/colorPickerPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/imagePropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoGeneric.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoLine.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoScalePoint.tsx",
                    "packages/tools/guiEditor/src/diagram/gizmoWrapper.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/conditionalDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/discardDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/outputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/pbrDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/colorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/conditionalNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/frameNodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/framePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightInformationPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/nodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/transformNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/trigonometryNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/vectorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerDefaultInput.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerElbowSupport.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerNodePortDesign.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts",
                    "packages/tools/nodeEditor/src/serializationTools.ts",
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12684",
                "title": "Fix issue with glTF skin node/mesh metadata",
                "description": "See https://forum.babylonjs.com/t/extrasasmetadata-bug/28097/13",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12688",
                "title": "Fix parallaxOcclusion not being reset",
                "description": "https://forum.babylonjs.com/t/removing-textures-with-useparallax-true-causes-material-to-be-black/31694/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12673",
                "title": "Move Node Graph System out of NME",
                "description": "Fix #11818 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/lines/meshPickerComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/commonCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/fogPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/variantsPropertyGridComponent.tsx",
                    "packages/dev/sharedUiComponents/src/imgs/triangle.svg",
                    "packages/dev/sharedUiComponents/src/lines/buttonLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/color3LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/matrixLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/optionsLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/vector4LineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/displayLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/frameNodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphCanvas.tsx",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphFrame.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/graphNode.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/displayManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeContainer.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/nodeLocationInfo.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/portData.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/propertyComponentProps.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/interfaces/selectionChangedOptions.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodeLink.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/nodePort.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/propertyLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/scss/graphCanvas.scss",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/stateManager.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/tools.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/typeLedger.ts",
                    "packages/dev/sharedUiComponents/src/nodeGraphSystem/types/framePortData.ts",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/commonControlPropertyGridComponent.tsx",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewAreaComponent.tsx",
                    "packages/tools/nodeEditor/src/components/preview/previewManager.ts",
                    "packages/tools/nodeEditor/src/components/preview/previewMeshControlComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/inputsPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/color4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/floatPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/matrixPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector2PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector3PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/properties/vector4PropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTab.scss",
                    "packages/tools/nodeEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/diagram/display/displayManager.ts",
                    "packages/tools/nodeEditor/src/diagram/display/outputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/diagram/display/pbrDisplayManager.ts",
                    "packages/tools/nodeEditor/src/diagram/displayLedger.ts",
                    "packages/tools/nodeEditor/src/diagram/nodePort.ts",
                    "packages/tools/nodeEditor/src/diagram/properties/propertyComponentProps.ts",
                    "packages/tools/nodeEditor/src/diagram/propertyLedger.ts",
                    "packages/tools/nodeEditor/src/globalState.ts",
                    "packages/tools/nodeEditor/src/graphEditor.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/blockNodeData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/connectionPointPortData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/clampDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/conditionalDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/discardDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/elbowDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/gradientDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/imageSourceDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/inputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/outputDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/pbrDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/remapDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/textureDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/display/trigonometryDisplayManager.ts",
                    "packages/tools/nodeEditor/src/graphSystem/properties/colorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/conditionalNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/frameNodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/framePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/genericNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/gradientStepComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/imageSourcePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/inputNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightInformationPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/lightPropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/nodePortPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/texturePropertyTabComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/transformNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/trigonometryNodePropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/properties/vectorMergerPropertyComponent.tsx",
                    "packages/tools/nodeEditor/src/graphSystem/registerDefaultInput.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerElbowSupport.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerExportData.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerNodePortDesign.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToDisplayLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToPropertyLedger.ts",
                    "packages/tools/nodeEditor/src/graphSystem/registerToTypeLedger.ts",
                    "packages/tools/nodeEditor/src/nodeEditor.ts",
                    "packages/tools/nodeEditor/src/serializationTools.ts",
                    "packages/tools/nodeEditor/src/sharedComponents/buttonLineComponent.tsx",
                    "packages/tools/nodeEditor/src/sharedComponents/color3LineComponent.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12685",
                "title": "Add support for clip planes to the depth renderer",
                "description": "See https://forum.babylonjs.com/t/ssao-and-clip-planes/4289\r\n\r\nVery similar to #11652",
                "author": {
                    "name": "fchoisy",
                    "url": "https://github.com/fchoisy"
                },
                "files": [
                    "packages/dev/core/src/Rendering/depthRenderer.ts",
                    "packages/dev/core/src/Shaders/depth.fragment.fx",
                    "packages/dev/core/src/Shaders/depth.vertex.fx"
                ],
                "tags": []
            },
            {
                "pr": "12682",
                "title": "Wrong rotation offset camera correction",
                "description": "When GLB export, camera rotation was set using WorldTransform matrix `camera.getAbsoluteRotation()` instead as local. Resulting on double every rotation from upper hierarchy.\r\nwe update it  using  `camera.rotationQuaternion` which is property of `TargetCamera`\r\nIn order to let other user custom Camera to be exported, we do not change the `Camera` parameter type but cast as `any` to allow the property test.\r\nSee this forum [question](https://forum.babylonjs.com/t/gltf-export-bug-freecamera-rotation-has-wrong-offset/31278).",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12675",
                "title": "Add support for more depth stencil formats.",
                "description": "This requires some rework of the logic in ThinEngine._createDepthStencilTexture, but it should be non-breaking. A similar change was made to extend MultiRenderTarget's depth-stencil texture handling too.\r\n\r\nI've also added visualization tests to exercise the createDepthStencilTexture code path.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/LibDeclarations/webgl2.d.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12680",
                "title": "Load shared-ui-components from src and not dist",
                "description": "In both gui editor and node material editor, the shared ui components are now loaded from source, as they are not served by the babylon server. any tool using it will require this change to make sure hot reload works as expected.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/guiEditor/webpack.config.js",
                    "packages/tools/nodeEditor/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "12679",
                "title": "Add warning to Bounding Box Gizmo",
                "description": "This reverts commit 15d670c61c29ee3922945bc937fdc9562fc94c66.\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/warning-logged-when-gizmomanagers-boundingboxgizmo-is-enabled/31644/4",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12551",
                "title": "Add warning to Bounding Box Gizmo",
                "description": "Related issue: https://forum.babylonjs.com/t/is-that-the-attachednode-setter-wrong/30473/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12674",
                "title": "createTexture onLoad callback passes the texture as arguments",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/colorMergerBlock.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "12676",
                "title": "Fix GL error originating from createDepthStencilTexture on WebGL1.",
                "description": "There is a WebGL1 extension that allows for creating a depth-stencil texture, but these specific APIs are unsupported and lead to GL errors when used. I don't see an extension-based alternative.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12677",
                "title": "Fix pointer up event on leave canvas",
                "description": "Fix #12627",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": []
            }
        ],
        "5.12.1": [],
        "5.12.0": [
            {
                "pr": "12664",
                "title": "Added referrer policy support to GUI Image to control xhr request header",
                "description": "This feature will allow user's to control the **header** in the **xhr request to load the image**, `Referrer Policy`.\r\n\r\nMore info here : \r\nThe Referrer-Policy [HTTP header](https://developer.mozilla.org/en-US/docs/Glossary/HTTP_header) \r\n\r\nDefault value is : `strict-origin-when-cross-origin`",
                "author": {
                    "name": "BrunevalPE",
                    "url": "https://github.com/BrunevalPE"
                },
                "files": [
                    "packages/dev/core/src/Engines/ICanvas.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": []
            },
            {
                "pr": "12672",
                "title": "fix cache miss with instances out of frustrum",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/materials/src/cell/cellMaterial.ts",
                    "packages/dev/materials/src/fire/fireMaterial.ts",
                    "packages/dev/materials/src/fur/furMaterial.ts",
                    "packages/dev/materials/src/gradient/gradientMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts",
                    "packages/dev/materials/src/lava/lavaMaterial.ts",
                    "packages/dev/materials/src/mix/mixMaterial.ts",
                    "packages/dev/materials/src/normal/normalMaterial.ts",
                    "packages/dev/materials/src/shadowOnly/shadowOnlyMaterial.ts",
                    "packages/dev/materials/src/simple/simpleMaterial.ts",
                    "packages/dev/materials/src/terrain/terrainMaterial.ts",
                    "packages/dev/materials/src/triPlanar/triPlanarMaterial.ts",
                    "packages/dev/materials/src/water/waterMaterial.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12671",
                "title": "webgpu update",
                "description": "https://forum.babylonjs.com/t/what-is-the-current-webgpu-support-status/31506/8",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12670",
                "title": "Lines array is generated later",
                "description": "this._lines is generated when the  control is in view. If you create a control that is not in view it will fail.\n\nThis makes sure it doesn't fail even when out of view. \n\nTest playground - https://www.babylonjs-playground.com/#XCPP9Y#13890",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12668",
                "title": "Add params scene, mesh to function getAttributes",
                "description": "For the class MaterialPluginBase,  add params scene and mesh to the function getAttributes so that they can be used to determine which attributes to use.\r\n\r\nForum: https://forum.babylonjs.com/t/using-custom-attribute-with-material-plugin/31142/7",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginEvent.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12659",
                "title": "Adds ExtrudeShape* options firstNormal and adjustFrame",
                "description": "firstNormal option allows one to pick the first normal of the underlying Path3D path, preventing, in some cases degenerate extrusions.\r\nadjustNormal option causes the underlying Path3D frame of tangents, normals, and binormals to be patched up when the they are either undefined (0,0,0) or reverse direction. This is useful for paths that reverse back on themselves.",
                "author": {
                    "name": "Lowclouds",
                    "url": "https://github.com/Lowclouds"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/shapeBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12669",
                "title": "Inspectable options fix",
                "description": "Custom inspectables could not be provided with an appropriate options array as the type was either undefined or empty array, this way it can be undefined or an array of IInspectableOptions\r\n\r\nHere is an example of being forced to use \"as any\" with current babylonjs in typescript when using the custom inspectable type options, when removing the \"as any\" this will break:\r\nhttps://playground.babylonjs.com/#LTH16U\r\n\r\nHere is an example with the snapshot where we aren't forced to use \"as any\":\r\nhttps://playground.babylonjs.com/?snapshot=refs/pull/12669/merge#TCE5N9\r\n",
                "author": {
                    "name": "GordonTombola",
                    "url": "https://github.com/GordonTombola"
                },
                "files": [
                    "packages/dev/core/src/Misc/iInspectable.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12656",
                "title": "Force render with just that camera on CreateScreenshot",
                "description": "If a camera is specified as an argument, fall back on the CreateScreenshotUsingRenderTarget function.\r\nRelated forum issue: https://forum.babylonjs.com/t/screenshot-tool-does-not-seem-to-respect-camera-argument/31167\r\nRelated Playground: https://playground.babylonjs.com/#M6HFGB",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts",
                    "packages/dev/core/src/Misc/tools.ts"
                ],
                "tags": []
            },
            {
                "pr": "11710",
                "title": "Creation of InputTextArea component",
                "description": "Based on fneitzel prototype ([Added prototype of InputTextArea](https://github.com/BabylonJS/Babylon.js/pull/8275)), I improved the component to support the margin, the deletion (backspace/del.), the highlighting, deadkeys and copy/paste/cut shortcuts.\r\n\r\nA lot of things remained to do :\r\n- fix the CR on last line\r\n- find why the text clip on single line during autostreching\r\n- resolve todos\r\n- clean/fix/update the code\r\n\r\nMy approach was highly naïve, so maybe a cleaner architecture will be necessery.",
                "author": {
                    "name": "Valerian-Perez-Wanadev",
                    "url": "https://github.com/Valerian-Perez-Wanadev"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/control.ts",
                    "packages/dev/gui/src/2D/controls/index.ts",
                    "packages/dev/gui/src/2D/controls/inputText.ts",
                    "packages/dev/gui/src/2D/controls/inputTextArea.ts"
                ],
                "tags": []
            },
            {
                "pr": "12667",
                "title": "changes to minZ and maxZ while a session is running should update the XR session",
                "description": "Fixes #12448\r\n\r\nmaxZ should be infinity, but when setting is to a very large number, both the XR emulator and native XR fail. This is why 10000 was chosed to be max (which is 10000 meters in VR).\r\n\r\nTest playground (when merged) https://playground.babylonjs.com/#F41V6N#913",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/webXRCamera.ts",
                    "packages/dev/core/src/XR/webXRExperienceHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12641",
                "title": "Added Quaternion support in `ShaderMaterial`",
                "description": "Last pull request about quaternions (until the next one maybe we never know ^^)\r\n\r\n- added `setQuaternion` as a method of `ShaderMaterial`\r\n- added `setQuaternionArray` as a method of `ShaderMaterial`\r\n- added `toArray` as a method of `Quaternion`",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            },
            {
                "pr": "12663",
                "title": "Bug Fix - Vector3 project on plane",
                "description": "This proposal fixes an apparent incorrect calculation in the `Vector3.projectOnPlaneToRef` method which returns confusing results for many planes, especially those not centered on the world origin.\r\n\r\nA couple of unit tests were added to logically demonstrate the failure of the existing code, as well as a new original implementation which seems to work correctly for various cases.\r\n\r\nPlayground demonstrating the behavior for testing:\r\nhttps://playground.babylonjs.com/#MHMIPM",
                "author": {
                    "name": "strutcode",
                    "url": "https://github.com/strutcode"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/test/unit/Math/babylon.math.vector.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12665",
                "title": "move core dependencies to peer dependencies",
                "description": "Addressing https://forum.babylonjs.com/t/babylon-materials-and-babylon-loaders-resolve-babylon-core-5-4-0-as-a-sub-dependency/30722",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/gui-editor/package.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/inspector/package.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/node-editor/package.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/serializers/package.json"
                ],
                "tags": []
            },
            {
                "pr": "12666",
                "title": "add support for custom attributes to convertToUnIndexedMesh",
                "description": "Add support for custom attributes to the function convertToUnIndexedMesh. Currently calling it on a mesh with custom attribute(s) set causes an error to be thrown since the attribute's stride can't be deduced.\r\n\r\nForum: https://forum.babylonjs.com/t/allow-converttounindexedmesh-to-support-custom-attributes/31486",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12658",
                "title": "update dependencies",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "package.json",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/public/@babylonjs/core/package.json",
                    "packages/public/@babylonjs/gui/package.json",
                    "packages/public/@babylonjs/loaders/package.json",
                    "packages/public/@babylonjs/materials/package.json",
                    "packages/public/@babylonjs/post-processes/package.json",
                    "packages/public/@babylonjs/procedural-textures/package.json",
                    "packages/public/@babylonjs/serializers/package.json",
                    "packages/public/@babylonjs/viewer/package.json",
                    "packages/public/babylonjs-viewer-assets/package.json",
                    "packages/public/umd/babylonjs-gui-editor/package.json",
                    "packages/public/umd/babylonjs-gui/package.json",
                    "packages/public/umd/babylonjs-inspector/package.json",
                    "packages/public/umd/babylonjs-ktx2decoder/package.json",
                    "packages/public/umd/babylonjs-loaders/package.json",
                    "packages/public/umd/babylonjs-materials/package.json",
                    "packages/public/umd/babylonjs-node-editor/package.json",
                    "packages/public/umd/babylonjs-post-process/package.json",
                    "packages/public/umd/babylonjs-procedural-textures/package.json",
                    "packages/public/umd/babylonjs-serializers/package.json",
                    "packages/public/umd/babylonjs-viewer/package.json",
                    "packages/public/umd/babylonjs/package.json",
                    "packages/tools/babylonServer/package.json",
                    "packages/tools/devHost/package.json",
                    "packages/tools/guiEditor/package.json",
                    "packages/tools/ktx2Decoder/package.json",
                    "packages/tools/nodeEditor/package.json",
                    "packages/tools/playground/package.json",
                    "packages/tools/reflector/package.json",
                    "packages/tools/sandbox/package.json",
                    "packages/tools/viewer/package.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12660",
                "title": "Fix bug that prevents subsequent elapsed time queries from completing",
                "description": "Due to the fact an elapsed time query does not typically have results upon the first call to engine.endTimeQuery(), the previous logic that seems intended to prevent overlapping elapsed time queries was causing any subsequent query to always return -1 for the time. Basically, you could only have one query in flight at a given time.\r\n\r\nMoving around the bookkeeping logic fixes my repro playground: https://playground.babylonjs.com/#KBS9I5#23200",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.query.ts"
                ],
                "tags": []
            },
            {
                "pr": "12657",
                "title": "Add meta key to the possible multi selection keys on NME",
                "description": "Related Forum Issue: https://forum.babylonjs.com/t/nme-multi-select-ux-unusable-on-mac/30517/8\r\nOn Mac, the CTRL key always opens the browser context menu, making multi-select impossible. This PR adds the meta keys (windows/cmd) to the keys that can perform multi-select.\r\n\r\nPR to test: https://playground.babylonjs.com/#99SQQW",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx"
                ],
                "tags": []
            }
        ],
        "5.11.0": [
            {
                "pr": "12652",
                "title": "Fix texture caching.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/got-wrong-mapping-in-equirectangularcubetexture/31329\r\nRelated playground: https://playground.babylonjs.com/#NIWPUI#1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/equiRectangularCubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/hdrCubeTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12655",
                "title": "Camera: Modified isMouseEvent bool logic for Safari",
                "description": "There was an issue found in the forum where movement of the UniversalCamera, using a mouse, on Safari wasn't stopping properly.  After investigating the issue, it was found that the mouse events were triggering both mouse and touch movement.  The main issue was that, in FreeCameraTouchInput, the `isMouseEvent` boolean was incorrect being evaluated as false for mouse because the assigning logic was looking for a parameter that isn't available to mouse events generated in Safari.  The fix was to modify the logic to work with Safari-specific mouse events.\r\n\r\nRelevant Forum Link: https://forum.babylonjs.com/t/keyboard-control-not-working-for-latest-universalcamera-in-desktop-safari/31314/8",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12653",
                "title": "Fix deletion of Grid items in Editor, also fix...",
                "description": "the width of the button panel, and fix an exception that was being thrown when changing the grid row/column of a grid element.\r\n\r\nRelated playground: https://playground.babylonjs.com/#9FW40S",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/parentingPropertyGridComponent.tsx",
                    "packages/tools/guiEditor/src/globalState.ts",
                    "packages/tools/guiEditor/src/main.scss"
                ],
                "tags": []
            },
            {
                "pr": "12643",
                "title": "Prepare plugin defines after material helper defines",
                "description": "For PBRBaseMaterial, this PR moves the call to _callbackPluginEventPrepareDefines to right after the calls to PrepareDefinesForFrameBoundValues and PrepareDefinesForAttributes instead of right before them. This way values set by the plugin for these defines won't be overwritten by these MaterialHelper functions. For StandardMaterial this is already the case (_callbackPluginEventPrepareDefines is called right after them).\r\n\r\nSince the anisotropy plugin is relying on the current order of these function calls, PrepareDefinesBeforeAttributes was added to allow defines to be set right before MaterialHelper.PrepareDefinesForAttributes is called.\r\n\r\nForum: https://forum.babylonjs.com/t/pbrbasematerial-overwrites-plugins-defines/31262\r\nTest PG: https://playground.babylonjs.com/#UIXTIF#6",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrAnisotropicConfiguration.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12651",
                "title": "make sure component init before render",
                "description": "Reproduction:\n\nThis playground fails - https://www.babylonjs-playground.com/#XCPP9Y#13718\n\nBecause when setting the radius we are setting everything as dirty (including the fontOffset-related function, even though fontOffset is not yet set).\n\nfontOffset is being set when the UI element is being rendered. In this playground the initial state of the component is hidden (it is outside of the frustum).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12646",
                "title": "Fix SSR and procedural textures clear order",
                "description": "https://forum.babylonjs.com/t/ssr-with-noiseproceduraltexture-caused-scene-not-refreshing/31290",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Rendering/prePassRendererSceneComponent.ts",
                    "packages/dev/core/src/sceneComponent.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12645",
                "title": "Fix dirty on inactive meshes",
                "description": "https://forum.babylonjs.com/t/texture-is-not-being-applied-to-out-of-view-meshes/31161/7",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12648",
                "title": "deprecate gltf 1.0 modules",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/1.0/glTFBinaryExtension.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFLoaderUtils.ts",
                    "packages/dev/loaders/src/glTF/1.0/glTFMaterialsCommonExtension.ts"
                ],
                "tags": []
            },
            {
                "pr": "12647",
                "title": "Use the errorcallback to report errors",
                "description": "Playground reproduction:\n\n#X2IZQ9#1\n\nwith this fix, the promise rejects correctly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Offline/database.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12649",
                "title": "Camera: Added divide by zero check FreeCameraTouchInput",
                "description": "In the forums, there was an issue raised where movement wasn't working on Safari.  After some investigation, it was found that the `touchMoveSensibility` property was being used in a denominator inside of the `checkInputs` function.  Because of this, if `touchMoveSensibility` was zero, it'd create a divide by zero scenario that would effectively render the camera's `cameraDirection` vector to be a vector of NaNs.  The fix for this was to just add a check to see if `touchMoveSensibility` was zero and handle things accordingly.\r\n\r\nForum link: https://forum.babylonjs.com/t/keyboard-control-not-working-for-latest-universalcamera-in-desktop-safari/31314",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12644",
                "title": "Fixed GPU Gems URL in API docs",
                "description": "The URL was broken, so I changed it to a URL that seems to be correct.",
                "author": {
                    "name": "cx20",
                    "url": "https://github.com/cx20"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": [
                    "bug",
                    "documentation"
                ]
            },
            {
                "pr": "12642",
                "title": "Material plugins: Allow group replacements in injected code when using regular expression",
                "description": "See https://forum.babylonjs.com/t/multiple-shadowgenerators-for-one-light-source/31236/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12640",
                "title": "Add custom attributes for material plugins",
                "description": "Allow material plugins to implement the method getAttributes which pushes the plugin's attribute names onto the array passed to it, similar to the getSamplers function.\r\n\r\nForum discussion: https://forum.babylonjs.com/t/using-custom-attribute-with-material-plugin/31142/3\r\nTest PG: https://playground.babylonjs.com/#UIXTIF",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/materialPluginBase.ts",
                    "packages/dev/core/src/Materials/materialPluginEvent.ts",
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Misc/computePressure.ts"
                ],
                "tags": [
                    "enhancement",
                    "materials"
                ]
            }
        ],
        "5.10.0": [
            {
                "pr": "12622",
                "title": "Disallow users to change the frame of the first key, ensuring that th…",
                "description": "…ere is always a frame at 0. It was already not possible to drag the first frame outside of 0, but this covers the top bar input.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/controls/textInputComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/rangeFrameBarComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/scss/curveEditor.scss",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/topBarComponent.tsx"
                ],
                "tags": []
            }
        ],
        "5.9.1": [
            {
                "pr": "12638",
                "title": "Add a catch",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/computePressure.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12637",
                "title": "Fix pointer hover on descendant controls when action manager is recursive",
                "description": "Related forum issue: https://forum.babylonjs.com/t/hovercursor-does-not-change-when-hovering-child-elements/31104\r\nPlayground: https://playground.babylonjs.com/#68S8IM",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts"
                ],
                "tags": []
            },
            {
                "pr": "12636",
                "title": "Support for extracting bloom highlights with luminance >1",
                "description": "This is useful for HDR bloom, where the desired, exposed luminance threshold could be greater than 1.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/extractHighlights.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12613",
                "title": "No need to clear (depth) in utility layer",
                "description": "This scene fails when in XR:\n\nhttps://playground.babylonjs.com/#HJZBRG#253\n\nForum reference - https://forum.babylonjs.com/t/button3d-in-vr-is-rendered-on-top-of-everything/30772\n\nI am not 100% sure why it was needed until now, so I am going to wait for reviews first before merging this.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Rendering/utilityLayerRenderer.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12632",
                "title": "Serialize iridescene in PBR materials",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12635",
                "title": "Fix where canvas could have a blue highlight effect on tap.",
                "description": "For #12634.\r\n\r\nAdded a line to also disable the webkitTapHighlight when touch actions are disabled.",
                "author": {
                    "name": "saaratrix",
                    "url": "https://github.com/saaratrix"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12633",
                "title": "Added ```setQuaternion``` to ```Effect```",
                "description": "I'm back with more Quaternion's stuff.\r\n\r\nI added ```setQuaternion``` to the Effect class.\r\n\r\nI updated the different pipeline contexts versions to make it possible to set a quaternion as a uniform variable in a shader.\r\nI created a IQuaternionLike interface, though it is the same as IVector4Like I think it makes the code easier to understand and read with this interface.",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    "packages/dev/core/src/Engines/IPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGL/webGLPipelineContext.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuPipelineContext.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Materials/effect.ts",
                    "packages/dev/core/src/Maths/math.like.ts"
                ],
                "tags": []
            },
            {
                "pr": "12629",
                "title": "Force createGlobalSubmesh in Mesh.SetVerticesData if Mesh is Unindexed",
                "description": "This a a fix for the bug reported in the forum here : https://forum.babylonjs.com/t/bug-when-calling-setverticesdata-on-a-unindexed-mesh/31009\r\n\r\nrepro here : https://www.babylonjs-playground.com/#JX7SUF",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Meshes/geometry.ts"
                ],
                "tags": []
            }
        ],
        "5.9.0": [
            {
                "pr": "12624",
                "title": "Fix NME dialog box styling",
                "description": "The dialog box styling wasn't being applied because of the class scope",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/main.scss"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12623",
                "title": "Fix Lines vertex alpha",
                "description": "https://forum.babylonjs.com/t/alpha-color-not-working-in-line-system-anymore/30947/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Meshes/linesMesh.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12617",
                "title": "Fix JPEG environment texture",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/materials/readme.md"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12625",
                "title": "Improve CheckIsReady in scene",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Misc/sceneSerializer.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12618",
                "title": "Enable iridescence map in MRDL backplate material",
                "description": "Simple fix, visually pleasing results\r\n![ezgif-3-4fa4eb9834](https://user-images.githubusercontent.com/4724014/171300738-97774c1e-bd8c-43d9-aad4-7ce79fdba313.gif)\r\n",
                "author": {
                    "name": "rgerd",
                    "url": "https://github.com/rgerd"
                },
                "files": [
                    "packages/dev/gui/src/3D/materials/mrdl/mrdlBackplateMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12598",
                "title": "Added a few methods to Quaternion and Vector3",
                "description": "I noticed there was a few useful methods not implemented regarding transformations of Vector3 by Quaternions.\r\n\r\n# Here is what I added :\r\n\r\n ## Quaternion\r\n\r\n- added ```subtractInPlace```\r\n- added ```invertInPlace```\r\n- added ```invert```\r\n- added ```normalizeToNew```\r\n- added ```lengthSquared```\r\n\r\n## Vector3\r\n\r\n- added ```applyRotationQuaternionToRef```\r\n- added ```applyRotationQuaternionInPlace```\r\n- added ```applyRotationQuaternion```\r\n\r\n## Other\r\n\r\n- Removed a few repetitions",
                "author": {
                    "name": "BarthPaleologue",
                    "url": "https://github.com/BarthPaleologue"
                },
                "files": [
                    ".gitignore",
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12620",
                "title": "deprecate action manager array in scene",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/abstractScene.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12616",
                "title": "added postinstall script to \"babylonjs\"",
                "description": "These lines will be presented to anyone installing \"bbylonjs\" package (umd).",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/umd/babylonjs/package.json",
                    "packages/public/umd/babylonjs/readme.md",
                    "packages/public/umd/babylonjs/scripts/postinstall.js"
                ],
                "tags": []
            },
            {
                "pr": "12621",
                "title": "Scene.multiPickWithRay signature correction",
                "description": "Fixes #12614",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Culling/ray.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12563",
                "title": "Removed IE support. It was long overdue ;)",
                "description": "Fix #12324 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Buffers/buffer.ts",
                    "packages/dev/core/src/Engines/Processors/shaderCodeNode.ts",
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts",
                    "packages/dev/core/src/Loading/sceneLoader.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterialBuildState.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/basisTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/ddsTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/envTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/hdrTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/ktxTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/tgaTextureLoader.ts",
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts",
                    "packages/dev/core/src/Meshes/abstractMesh.ts",
                    "packages/dev/core/src/Meshes/geometry.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts",
                    "packages/dev/core/src/Meshes/mesh.ts",
                    "packages/dev/core/src/Misc/deepCopier.ts",
                    "packages/dev/core/src/Misc/index.ts",
                    "packages/dev/core/src/Misc/promise.ts",
                    "packages/dev/core/src/Misc/reflector.ts",
                    "packages/dev/core/src/Misc/sliceTools.ts",
                    "packages/dev/core/src/Misc/stringTools.ts",
                    "packages/dev/core/src/Misc/tools.ts",
                    "packages/dev/core/src/Particles/solidParticleSystem.ts",
                    "packages/dev/core/src/Rendering/edgesRenderer.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/core/test/unit/Misc/babylon.promise.test.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts",
                    "packages/tools/sandbox/src/components/reflectorZone.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx",
                    "packages/tools/viewer/src/index.ts"
                ],
                "tags": []
            },
            {
                "pr": "12607",
                "title": "Grid children disappear once linked mesh is outside view",
                "description": "Fixes #12602\nThis forces resetting the clipping state of children when their matrix is set as dirty.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12609",
                "title": "Fix registerInstancedBuffer after Mesh creation",
                "description": "https://forum.babylonjs.com/t/disappearing-mesh-material-on-registerinstancedbuffer-and-instancedbuffers/30868",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Lights/shadowLight.ts",
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12612",
                "title": "Added forcedExtension option to textur creation",
                "description": "If the texture url does not contain any file extensoin (e.g. object url) we should be able to force the extension. Otherwise compressed textures like -dxt.ktx cannot be loaded.\r\nhttps://forum.babylonjs.com/t/loading-compressed-textures-from-object-url/30861",
                "author": {
                    "name": "MBecherKurz",
                    "url": "https://github.com/MBecherKurz"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": [
                    "enhancement",
                    "texture"
                ]
            },
            {
                "pr": "12590",
                "title": "Move frame bar on ACE to the top of the window",
                "description": "Previous:\r\n![image](https://user-images.githubusercontent.com/6002144/170536466-5e60d953-bea3-4ebc-ab42-30ef6100275a.png)\r\nWith the PR:\r\n![image](https://user-images.githubusercontent.com/6002144/170536574-e4784010-6794-4ca8-86a6-bd74ccd96c86.png)\r\n",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/context.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/canvasComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/playHeadComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/rangeFrameBarComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/scss/canvas.scss"
                ],
                "tags": []
            },
            {
                "pr": "12604",
                "title": "WebGPU: Allow running the standard viz tests with WebGPU",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/tests/test/visualization/visualization.webgpu.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12608",
                "title": "test all packages in modules test",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/tests/src/sceneWithInspector.ts"
                ],
                "tags": [
                    "new feature"
                ]
            }
        ],
        "5.8.2": [
            {
                "pr": "12605",
                "title": "Point Cloud System: Add getters",
                "description": "It can come in handy to get the position/colors/uvs of the particles generated by the point cloud system so I have added some getters.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Particles/pointsCloudSystem.ts"
                ],
                "tags": []
            },
            {
                "pr": "12603",
                "title": "Small fixes for gizmo and navigation",
                "description": "Small fixes for https://forum.babylonjs.com/t/pointlight-withouth-direction/30262/5\r\nhttps://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/48\r\nand\r\nhttps://forum.babylonjs.com/t/error-calling-getcorners-for-a-crowd-agents-path/30526",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Navigation/Plugins/recastJSPlugin.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.8.1": [
            {
                "pr": "12523",
                "title": "Add new prepass to compute the specularity-glossiness map whatever the material type",
                "description": "This is the PR following this issue:\r\nhttps://forum.babylonjs.com/t/prepass-get-accurate-reflectance-information/30351\r\n\r\nThe aim is to compute reflectance and glossiness information whatever the material type (standard, PBR, PBR Specular-Glossiness, PBR Metallic-Roughness). The architecture is based on the other PrePasses. The translation model from Metallic-Roughness to Specular-Glossiness is based on: https://marmoset.co/posts/pbr-texture-conversion.",
                "author": {
                    "name": "Mannns",
                    "url": "https://github.com/Mannns"
                },
                "files": [
                    "packages/dev/core/src/Rendering/geometryBufferRenderer.ts",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/core/src/Shaders/geometry.fragment.fx",
                    "packages/dev/core/src/Shaders/geometry.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12601",
                "title": "Add missing observer trigger - onLoadedObservable notify method for hdrCubeTexture",
                "description": "I found a minor issue during loading textures through `add task` of `asset manager`\r\nwhen I try to load the same texture files several times for different purposes, `cubeTextureTask` can be finished normally but `hdrCubeTextureTask` can't be finished even though it has been already finished\r\n\r\n* this playground can show task count on `console`\r\nhttps://playground.babylonjs.com/#M5L9FH\r\n\r\nSo, I have debugged and I found the creating function of hdrTexture has lost the `load observable notify` method that is included in the `creating function of cubeTexture`\r\n\r\n- `engine.cubeTexture.ts` \r\n<img width=\"385\" alt=\"스크린샷 2022-05-30 오후 3 57 43\" src=\"https://user-images.githubusercontent.com/70849655/170935258-89b47f42-e6a3-4366-bde0-003f602b558e.png\">\r\n<img width=\"473\" alt=\"스크린샷 2022-05-30 오후 3 57 36\" src=\"https://user-images.githubusercontent.com/70849655/170935273-108c1e51-48bf-4190-bcec-a38084b0ddb2.png\">\r\n\r\n- `engine.rawTexture.ts`\r\n<img width=\"820\" alt=\"스크린샷 2022-05-30 오후 3 57 57\" src=\"https://user-images.githubusercontent.com/70849655/170935403-edc25ad8-6a49-417f-bf9b-f6a6d9a0fbfd.png\">\r\n<img width=\"452\" alt=\"스크린샷 2022-05-30 오후 3 59 26\" src=\"https://user-images.githubusercontent.com/70849655/170935417-11a8b868-e752-4451-982f-4e99ad92b7c1.png\">\r\n\r\nI add above code in `raw texture` and then it worked well\r\n![스크린샷 2022-05-30 오후 4 06 10](https://user-images.githubusercontent.com/70849655/170936119-0438806d-e447-4027-ab92-7540e4c3c65e.png)\r\n",
                "author": {
                    "name": "slash9494",
                    "url": "https://github.com/slash9494"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12596",
                "title": "remove private variables from WebGPU declaration",
                "description": "The reason behind this is the documentation page that fails compilation because of this error:\r\n\r\n```\r\n Class 'GPUOutOfMemoryError' incorrectly implements class 'GPUError'. Did you mean to extend 'GPUError' and inherit its members as a subclass?\r\n  Types have separate declarations of a private property '__brand'.\r\nError: C:/Users/raweber/Documents/GitHub/Documentation/.temp/docdirectory/doc.d.ts(97057)\r\n Class 'GPUValidationError' incorrectly implements class 'GPUError'. Did you mean to extend 'GPUError' and inherit its members as a subclass?\r\n  Types have separate declarations of a private property '__brand'.\r\n```\r\n\r\nThe reason for the error is probably an older version of typedoc (work is being done to update that), which uses an older version of typescript to analyze the file.\r\n\r\nAs this private variable is not being used anywhere in the code I took delibery of suggesting to remove it, but I will wait for @Popov72 to approve this PR before merging",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12495",
                "title": "GLTFSerializer : Ext mesh gpu instancing",
                "description": "Add support to EXT_mesh_gpu_instancing to Babylon GLTF Serializer.\r\nThin instances are used to save transformation into GLTF buffer.\r\nThis extension is NOT official and not supported yet by many viewer. This may be used with caution while terminology between Local Transformation and World transformation are not consistent beetwen this Extension and the babylon Thin instances.\r\nTest has been conducted sucessfully with playground and sandbox, using respectively coding samples and imported gltf sample.\r\nThe main sample used was the \"official\" [gltf sample](https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/samples/teapots_galore)\r\nAlso add Visualization test.\r\nNote - deleted previous PR for configuration issues.",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts",
                    "packages/dev/serializers/src/glTF/2.0/glTFExporterExtension.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/glTFSerializerKhrGpuInstancing.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12597",
                "title": "Fix render frame identification issue with instances",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12595",
                "title": "Fix `AssetManager` `addTextureTask` resolving with `task.texture === undefined` when using `NullEngine`",
                "description": "This PR is a follow up on https://forum.babylonjs.com/t/using-assetsmanager-with-nullengine-to-load-textures/8758",
                "author": {
                    "name": "alvov-evo",
                    "url": "https://github.com/alvov-evo"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/test/unit/Misc/babylon.assetsManager.test.ts"
                ],
                "tags": []
            },
            {
                "pr": "12524",
                "title": "InputManager: Fix Picking on PointerUp and add bool to skip pointerup picking",
                "description": "Recently on the forums ([forum post](https://forum.babylonjs.com/t/no-api-to-disable-mesh-picking-for-some-buttons-and-keep-onpointerobservable/29887)), there was a user who found an issue with the pointerUpPredicate not being used by the InputManager properly.  When a dummy predicate was used (`() => false`), there was still a pickedmesh/point in the pickInfo object.  This PR does a couple of things:\r\n- Fix for the picking logic to use the `pointerUpPredicate` and actually call `scene.pick`\r\n- Add a boolean to scene that allows the user to skip picking on pointerup (same as move and down)",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12592",
                "title": "Make scene param optional for NodeMaterial.ParseFromSnippetAsync",
                "description": "Make scene param optional for NodeMaterial.ParseFromSnippetAsync\r\n\r\nForum: https://forum.babylonjs.com/t/make-scene-param-optional-for-nodematerial-parsefromsnippetasync/30747/7",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12594",
                "title": "fix memory leak",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/effect.ts"
                ],
                "tags": []
            },
            {
                "pr": "12589",
                "title": "WebGPU: fix typescript",
                "description": "See https://forum.babylonjs.com/t/gpuoutofmemoryerror-and-gpuvalidationerror-error-with-latest-5-8-0-release/30755",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12587",
                "title": "Fix readme.md CDN notes",
                "description": null,
                "author": {
                    "name": "dr-vortex",
                    "url": "https://github.com/dr-vortex"
                },
                "files": [
                    "readme.md"
                ],
                "tags": []
            },
            {
                "pr": "12579",
                "title": "make sure to watch changes in the assets lib",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/webpack.config.js"
                ],
                "tags": [
                    "skip changelog"
                ]
            }
        ],
        "5.8.0": [
            {
                "pr": "12588",
                "title": "minor improvements to `toEulerAnglesTo()`",
                "description": "- Reuse `zAxisY` to avoid unnecessary arithmetic\r\n- Moved some constants inside of the branch where they are used\r\n\r\nForum post: https://forum.babylonjs.com/t/some-tweaks-toeuleranglestoref/30738",
                "author": {
                    "name": "nmrugg",
                    "url": "https://github.com/nmrugg"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": []
            },
            {
                "pr": "12586",
                "title": "DeviceInputSystem: Add check for matchMedia in WebDeviceInputSystem",
                "description": "A user in the forum recently found an issue where the error `matchMedia is not defined` was occurring in an offscreen canvas.  Because the offscreen canvas was in a worker thread, it had no context of the `Window` interface and the `matchMedia` function.  This PR will add a check in the `WebDeviceInputSystem` to verify the existence of this function before attempting to execute it.\r\n\r\nForum Link: https://forum.babylonjs.com/t/offscreen-canvas-matchmedia/30682/10",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/InputDevices/webDeviceInputSystem.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12585",
                "title": "Fix memoryleak",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders",
                    "memory leak"
                ]
            },
            {
                "pr": "12584",
                "title": "Add missing interpolation to glTF animation key targeting weights",
                "description": "See https://forum.babylonjs.com/t/gltf-loader-animation-path-weights-ignores-step-interpolation/30719",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12565",
                "title": "Change glTF skinned mesh reference to a callback",
                "description": "See https://forum.babylonjs.com/t/converting-circular-structure-to-json/30641",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts",
                    "packages/dev/loaders/src/glTF/glTFFileLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12564",
                "title": "Fix ThinEngine.updateDynamicIndexBuffer",
                "description": "This is to fix a bug we ran into.\r\n\r\nTo repro :\r\n- at creation time, provide a mesh with indices of type `Array<number>`  => if all the indies are below 65535, the `Array<number>` is normallized into an `UInt16Array` in `ThinEngine._normalizeIndexData`\r\n\r\n- call `Mesh.updateIndices` with a `UInt32Array` => instead of converting to `UInt16Array` as if a `Array<number>` had been passed, the `UInt32Array` is forwarded to WebGL, leading to wrong indexing.\r\n\r\n",
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.dynamicBuffer.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.dynamicBuffer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12574",
                "title": "Add default formatter as prettier",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    ".vscode/settings.json"
                ],
                "tags": []
            },
            {
                "pr": "12567",
                "title": "Add sRGB handling for ETC texture formats",
                "description": "Because ETC2 is an extension of ETC1, we should also be able to use the ETC2 sRGB format when sRGB is requested for an ETC1 texture.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12551",
                "title": "Add warning to Bounding Box Gizmo",
                "description": "Related issue: https://forum.babylonjs.com/t/is-that-the-attachednode-setter-wrong/30473/6",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12571",
                "title": "Check if document is available before accessing it",
                "description": "##  Description\r\n\r\nHi,\r\n\r\nIn `ThinEngine` the `getHostDocument` method is not react-native \"safe\", when accessed from a react-native application, we try to access `document` without checking that it exists first, thus causing the app to crash.\r\n\r\n## Repro\r\n\r\nTo repro the issue, all you need is to create a `FollowCamera` and make it follow a target.\r\nI got this issue to repro by using this code in an Expo environment:\r\n\r\n```ts\r\n function initGame(gl: ExpoWebGLRenderingContext) {\r\n  const engine = new Engine(gl, true, {}, false);\r\n\r\n  const scene = new Scene(engine);\r\n  // Our built-in 'box' shape. Params: name, size, scene\r\n  const box = MeshBuilder.CreateBox(\"box\", { size: 2 }, scene);\r\n\r\n  new FollowCamera(\"ArcRotateCamera\", new Vector3(2, 0, 0), scene, box);\r\n  const light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\r\n\r\n  // Default intensity is 1. Let's dim the light a small amount\r\n  light.intensity = 0.7;\r\n\r\n  scene.registerBeforeRender(() => {\r\n    if (this.updatePan) {\r\n      (scene.activeCamera as any).alpha -= this._translateX / 6000;\r\n      (scene.activeCamera as any).beta -= this._translateY / 6000;\r\n    }\r\n    if (this.updatePinch) {\r\n      (scene.activeCamera as any).radius -= this._scale * 60;\r\n    }\r\n\r\n    gl.endFrameEXP();\r\n  });\r\n\r\n  engine.runRenderLoop(() => {\r\n    if (scene) {\r\n      scene.render();\r\n    }\r\n  });\r\n}\r\n\r\n```\r\n\r\n## Cause\r\n\r\nWhat happens here is that at some point, the `Effect` class (packages/dev/core/src/Materials/effect.ts) will try to access the host document by only checking if `IsWindowObjectExist` returns true:\r\n\r\n```ts\r\nconst hostDocument = IsWindowObjectExist() ? this._engine.getHostDocument() : null;\r\n```\r\n\r\nThis issue is, in this react-native context `window` will exist but not `document`, leading to this issue.\r\n\r\n## Fix\r\n\r\nTo fix this,  I added a check in `getHostDocument` to make sure that `document` actually exist before returning it. If it doesn't, I simply return `null`.\r\n\r\nThis is my first PR in this repo, please let me know if I forgot anything.",
                "author": {
                    "name": "antoine-gannat",
                    "url": "https://github.com/antoine-gannat"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12572",
                "title": "PBR refractionIntensityTexture in the inspector",
                "description": "https://forum.babylonjs.com/t/refractionintensitytexture-is-not-being-displayed-in-the-inspector/30697",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx"
                ],
                "tags": [
                    "enhancement",
                    "inspector"
                ]
            },
            {
                "pr": "12570",
                "title": "Prevent calling stop recursively",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/src/model/modelAnimation.ts"
                ],
                "tags": []
            },
            {
                "pr": "12569",
                "title": "WebGPU: Synchronize with spec",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.computeShader.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuConstants.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12562",
                "title": "Fix prepass view uniform",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/defaultFragmentDeclaration.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12525",
                "title": "Initial storybook setup",
                "description": "Initial PR to create a storybook with a few simple components. Mainly wanting to verify the architecture makes sense. Takes advantage of some nice features of CSS loader, like :local scopes rules and composition (importing classes from other CSS files).\r\n\r\nComponents right now:\r\n1. Toggle\r\n2. Label\r\n3. Button\r\n\r\nNOT IN THIS PR:\r\n- Snapshots\r\n- Jest testing",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/sharedUiComponents/.storybook/main.js",
                    "packages/dev/sharedUiComponents/.storybook/preview.js",
                    "packages/dev/sharedUiComponents/package.json",
                    "packages/dev/sharedUiComponents/readme.md",
                    "packages/dev/sharedUiComponents/src/components/Button.scss",
                    "packages/dev/sharedUiComponents/src/components/Button.tsx",
                    "packages/dev/sharedUiComponents/src/components/Colors.scss",
                    "packages/dev/sharedUiComponents/src/components/Fonts.scss",
                    "packages/dev/sharedUiComponents/src/components/Icon.scss",
                    "packages/dev/sharedUiComponents/src/components/Icon.tsx",
                    "packages/dev/sharedUiComponents/src/components/Label.scss",
                    "packages/dev/sharedUiComponents/src/components/Label.tsx",
                    "packages/dev/sharedUiComponents/src/components/Toggle.scss",
                    "packages/dev/sharedUiComponents/src/components/Toggle.tsx",
                    "packages/dev/sharedUiComponents/src/components/classNames.ts",
                    "packages/dev/sharedUiComponents/src/scssDeclaration.d.ts",
                    "packages/dev/sharedUiComponents/src/stories/Button.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Icon.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Introduction.stories.mdx",
                    "packages/dev/sharedUiComponents/src/stories/Label.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/Toggle.stories.tsx",
                    "packages/dev/sharedUiComponents/src/stories/assets/code-brackets.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/colors.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/comments.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/direction.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/flow.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/plugin.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/repo.svg",
                    "packages/dev/sharedUiComponents/src/stories/assets/stackalt.svg"
                ],
                "tags": [
                    "tools"
                ]
            },
            {
                "pr": "12561",
                "title": "Make setMaterialForRenderPass call resetDrawCache",
                "description": "Make setMaterialForRenderPass call resetDrawCache to prevent the error when switching e.g. between StandardMaterial and NodeMaterial.\r\n\r\nForum: https://forum.babylonjs.com/t/need-to-call-resetdrawcache-before-setmaterialforrendering/30642",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12559",
                "title": "Make Mesh.increaseVertices() work without uvs or normals; set default…",
                "description": "… additional vertex per edge to 1 (as per doc).\r\n\r\nPR discussed [here](https://forum.babylonjs.com/t/possibility-to-use-mesh-increasevertices-on-custom-meshes-without-vertexdata-uvs/30090).\r\n\r\nI took the liberty of also allowing the use of `Mesh.increaseVertices()` on meshes with no normals. (Only uv-less meshes were discussed on the forum.) I hope that's OK.",
                "author": {
                    "name": "OptiStrat",
                    "url": "https://github.com/OptiStrat"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12557",
                "title": "Fix return type for CreateGround",
                "description": "Just noticed that the return type for CreateGround is Mesh but it should be GroundMesh. :)",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/groundBuilder.ts"
                ],
                "tags": []
            },
            {
                "pr": "12560",
                "title": "Fix warning when cloning with instanced mesh",
                "description": null,
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12555",
                "title": "Fix Instances Color Alpha",
                "description": "https://forum.babylonjs.com/t/different-transparency-while-using-thin-instances/30574\r\n\r\nThe main issue is that instances color alpha value were not used with if vertex colors were not defined.\r\n\r\nThis playground can be tested on the snapshot once available: https://playground.babylonjs.com/#8L50Q3#129",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/vertexColorMixing.fx",
                    "packages/dev/core/src/Shaders/default.fragment.fx",
                    "packages/dev/materials/src/cell/cell.fragment.fx",
                    "packages/dev/materials/src/fire/fire.fragment.fx",
                    "packages/dev/materials/src/fur/fur.fragment.fx",
                    "packages/dev/materials/src/gradient/gradient.fragment.fx",
                    "packages/dev/materials/src/lava/lava.fragment.fx",
                    "packages/dev/materials/src/mix/mix.fragment.fx",
                    "packages/dev/materials/src/simple/simple.fragment.fx",
                    "packages/dev/materials/src/sky/sky.fragment.fx",
                    "packages/dev/materials/src/terrain/terrain.fragment.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.fragment.fx",
                    "packages/dev/materials/src/water/water.fragment.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12553",
                "title": "Add sRGB option to 2D RawTexture",
                "description": null,
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.rawTexture.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Textures/internalTexture.ts",
                    "packages/dev/core/src/Materials/Textures/rawTexture.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12556",
                "title": "Allow HDR texture types in DepthOfFieldBlurPostProcess",
                "description": "This increases the quality of the depth of field effect (note the banding in the before image below), but it comes with a slight perf cost since the intermediate blur textures are now an HDR texture format instead of RGBA8.\r\n\r\n![image](https://user-images.githubusercontent.com/20366429/169629876-195e808a-3359-40dd-96c3-27ab76bb965c.png)\r\n",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/depthOfFieldBlurPostProcess.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12550",
                "title": "Fix abstractMesh scaling overloads",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12552",
                "title": "if pick exists, make sure to return it",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts"
                ],
                "tags": []
            },
            {
                "pr": "12548",
                "title": "Add param skipBuild when parsing node material",
                "description": "Add parameter skipBuild to NodeMaterial functions ParseFromFileAsync and ParseFromSnippetAsync\r\nhttps://forum.babylonjs.com/t/parsefromsnippetasync-option-to-skip-build/30544",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12547",
                "title": "Fix nme tangents back compat and instance color",
                "description": "https://forum.babylonjs.com/t/how-to-make-nme-material-for-thin-instances-with-color-attribute/30469/11",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/loaders/src/OBJ/solidParser.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/diagram/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12537",
                "title": "fix wheel behaviour and overscroll",
                "description": "- fix #12536\r\n- disable horizontal scroll (handle return back/next page)\r\n- fix page overscroll\r\n\r\n<br/>\r\n\r\nB E F O R E\r\n![ezgif-2-d49c4d843b](https://user-images.githubusercontent.com/28831375/168671077-44c9ecbf-eb1d-4a69-a3c4-da9fe5fe09a2.gif)\r\n\r\nA F T E R\r\n![ezgif-2-6eac051240](https://user-images.githubusercontent.com/28831375/168673574-1bf514de-c0cf-4c4d-9af3-4effa334c546.gif)\r\n\r\n",
                "author": {
                    "name": "3GOMESz",
                    "url": "https://github.com/3GOMESz"
                },
                "files": [
                    "packages/tools/nodeEditor/public/index.html",
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/graphEditor.tsx"
                ],
                "tags": []
            }
        ],
        "5.7.0": [
            {
                "pr": "12546",
                "title": "Problems loading .obj with groups.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/loaders/src/OBJ/solidParser.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "12539",
                "title": "Fix ClearCoat Refraction V direction",
                "description": "https://forum.babylonjs.com/t/clear-coat-shader-compute-question/30440/4",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockClearcoat.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12541",
                "title": "Fixed Logic for FreeCameraTouchInput to properly detect when input is mouse input",
                "description": "A user in the forums found that there was no touch input working with the universal camera, which uses FreeCameraTouchInput as part of its attached inputs.  Upon closer inspection, it was determined that the logic that was used to detect if the input was from a mouse or not was incorrect.  It originally said that if the browser was a not from mobile browser and if the event was an instance of MouseEvent, that it was from the mouse.  The new logic just checks the pointer type and uses that, which is a much more reliable method and also works with touch devices using non-mobile browsers.\r\n\r\nForum Link: https://forum.babylonjs.com/t/guys-i-got-a-problem-with-on-some-android-pad-cant-use-universalcamera-to-move-on-touch/30448/3",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Cameras/Inputs/freeCameraTouchInput.ts"
                ],
                "tags": [
                    "bug",
                    "inputs"
                ]
            },
            {
                "pr": "12512",
                "title": "Add custom word divider for TextBlock",
                "description": "Some languages such as Japanese and Chinese has no \"word divider\" (the character between words).\r\nCurrently, when rendering Japanese in TextBlock, an unnecessary space is inserted between words.\r\njsfiddle: [https://jsfiddle.net/3ph9m0cx/](https://jsfiddle.net/3ph9m0cx/)\r\n\r\nThis PR makes it customizable.\r\nIn case of Japanese, setting `wordDivider = \"\"` resolves it.",
                "author": {
                    "name": "miudit",
                    "url": "https://github.com/miudit"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12540",
                "title": "remove remaining www.babylonjs.com references",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12532",
                "title": "Add modules compilation",
                "description": "This PR adds modules compilation using es6 syntax. It also adds module-file-size test that will run against the snapshot on every PR to make sure no extra code is being added and that tree shaking is still running correctly.\n\nNote that the CI needs to be changed in order for that to work correctly so mering this PR is only half of the solution.\n\nFixes #12350",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/prepareSnapshot.ts",
                    "packages/tools/guiEditor/package.json",
                    "packages/tools/nodeEditor/package.json",
                    "packages/tools/tests/package.json",
                    "packages/tools/tests/scripts/generateFileSizes.js",
                    "packages/tools/tests/src/engineOnly.ts",
                    "packages/tools/tests/src/minGridMaterial.ts",
                    "packages/tools/tests/src/minStandardMaterial.ts",
                    "packages/tools/tests/src/sceneOnly.ts",
                    "packages/tools/tests/src/sceneWithInspector.ts",
                    "packages/tools/tests/src/thinEngineOnly.ts",
                    "packages/tools/tests/test/unit/moduleFileSize.test.ts",
                    "packages/tools/tests/test/unit/packageSizeBaseline.json",
                    "packages/tools/tests/tsconfig.build.json",
                    "packages/tools/tests/tsconfig.json",
                    "packages/tools/tests/webpack.config.js",
                    "packages/tools/viewer/README-ES6.md",
                    "packages/tools/viewer/README.md",
                    "packages/tools/viewer/tests/commons/boot.ts",
                    "packages/tools/viewer/tests/commons/helper.ts",
                    "packages/tools/viewer/tests/commons/mockWebGL.ts",
                    "packages/tools/viewer/tests/karma.conf.js",
                    "packages/tools/viewer/tests/unit/src/configuration/loader.ts",
                    "packages/tools/viewer/tests/unit/src/configuration/mappers.ts",
                    "packages/tools/viewer/tests/unit/src/configuration/updateConfiguration.ts",
                    "packages/tools/viewer/tests/unit/src/helper.ts",
                    "packages/tools/viewer/tests/unit/src/index.ts",
                    "packages/tools/viewer/tests/unit/src/viewer/sceneManager.ts",
                    "packages/tools/viewer/tests/unit/src/viewer/viewer.ts",
                    "packages/tools/viewer/tests/unit/src/viewer/viewerManager.ts",
                    "packages/tools/viewer/tests/unit/src/viewerReference.ts",
                    "packages/tools/viewer/tests/unit/tsconfig.json",
                    "packages/tools/viewer/tests/unit/webpack.config.js",
                    "packages/tools/viewer/tests/validation/LogoV3.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/BrainStem.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/BrainStemEnv.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/BrainStemTransformation.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraContrast0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraContrast1.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraExposure0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/CameraExposure1.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Control.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/ControlDefault.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Diffuse.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Emissive.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv0-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv0-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv0-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv100-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv100-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv100-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv50-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv50-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/MainColorEnv50-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular0-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular100-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular25-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular50-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-25.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Specular75-75.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv0-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv0-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv0-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv100-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv100-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv100-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv50-0.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv50-100.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/SpecularEnv50-50.png",
                    "packages/tools/viewer/tests/validation/ReferenceImages/Transparency.png",
                    "packages/tools/viewer/tests/validation/config.json",
                    "packages/tools/viewer/tests/validation/index.css",
                    "packages/tools/viewer/tests/validation/index.html",
                    "packages/tools/viewer/tests/validation/integration.js",
                    "packages/tools/viewer/tests/validation/karma.conf.browserstack.js",
                    "packages/tools/viewer/tests/validation/karma.conf.js",
                    "packages/tools/viewer/tests/validation/loading.gif",
                    "packages/tools/viewer/tests/validation/validate.html",
                    "packages/tools/viewer/tests/validation/validation.js"
                ],
                "tags": []
            }
        ],
        "5.6.1": [
            {
                "pr": "12538",
                "title": "More fix for glTF loader skinning code",
                "description": "Previous code still had some weird issues as pointed out by the forum: https://forum.babylonjs.com/t/assetcontainer-dispose-throws-typeerror-r-metadata-is-null/30360/9",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12534",
                "title": "Add Safari 15.4 to Exception list",
                "description": "This adds two regexp to the exception list, setting antialia off and maxMSAASamples to 1 on safari 15.4 browsers.\nIt ain't pretty. But it'll fix a lot of issues with this version of safari.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12509",
                "title": "Add a warning when using ignored options with Dashed Lines update.",
                "description": "From: https://forum.babylonjs.com/t/dashed-line-not-correctly-updated/29250 this is to make the behavior clearer to users.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Builders/linesBuilder.ts"
                ],
                "tags": [
                    "documentation"
                ]
            },
            {
                "pr": "12515",
                "title": "Exposed Native Engine capabilities to Babylon.js, fixes morph targets on Babylon Native Android",
                "description": "## Overview\r\n\r\nMorph targets are currently failing on Babylon Native when running on Android since bgfx does not support Texture2D arrays for Android API BGFX_CONFIG_RENDERER_OPENGLES lower than 31 (currently set to 30). The appropriate way of handling this type of problem would be to check bgfx capabilities and handle it appropriately on the JS side by setting ```canUseTextureForTargets``` property at ```MorphTargetManager```. This PR exposes all capabilities info provided by the Native Engine so they can be accessed by the js NativeEngine and appropriately handled by Babylon.js \r\n\r\n## Aditions\r\n\r\n- Exposed Native engine caps to javascript. \r\n- After this PR gets merged the following [Babylon Native PR](https://github.com/BabylonJS/BabylonNative/pull/1075) can be merged.\r\n- Fixes [Android Morph Targets](https://github.com/BabylonJS/BabylonNative/issues/1049) issue on Babylon Native.  ",
                "author": {
                    "name": "SergioRZMasson",
                    "url": "https://github.com/SergioRZMasson"
                },
                "files": [
                    "packages/dev/core/src/Engines/Native/nativeInterfaces.ts",
                    "packages/dev/core/src/Engines/engineCapabilities.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/nullEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Morph/morphTargetManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12533",
                "title": "Fix inspector not working after download",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/scene.ts",
                    "packages/tools/playground/src/tools/downloadManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12529",
                "title": "Fix SubMesh IsGlobal",
                "description": "Currently IsGlobal returns true if the subMesh has all the vertices of the mesh but it should check if the subMesh also has all the indices of the mesh IMO.\r\n\r\nBecause otherwise the mesh's full bounding info is returned by getBoundingInfo when the subMesh has all the vertices **but only some of the indices** of the whole mesh. E.G. the subMeshes created by CreateTiledGround, which shouldn't return the bounding info for the whole mesh but currently are.\r\n\r\nForum discussion w/ test PGs: https://forum.babylonjs.com/t/find-or-define-center-point-of-submesh/30400/3",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/subMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12530",
                "title": "Fix doc for property \"bloomThreshold\"",
                "description": "Fix the documentation for the property [bloomThreshold](https://doc.babylonjs.com/typedoc/classes/babylon.defaultrenderingpipeline#bloomthreshold) to be the same as the documentation for the [BloomEffect property](https://doc.babylonjs.com/typedoc/classes/babylon.bloomeffect#threshold) that it wraps. Currently the documentation is mistakenly copied from the documentation for the [weight](https://doc.babylonjs.com/typedoc/classes/babylon.bloomeffect#weight) property.\r\n\r\nhttps://forum.babylonjs.com/t/white-texture-seems-overexposure-if-open-bloom-post-process/30384/8",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.ts"
                ],
                "tags": []
            },
            {
                "pr": "12498",
                "title": "Add getNormalsData to AbstractMesh and refactor common part with getP…",
                "description": "…ositionData\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/how-to-get-vertex-normals-of-mesh-with-skeleton-morph/29959/12\r\n\r\nPlayground: playground.babylonjs.com/#SYQW69#1061",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12526",
                "title": "Fix a bug in glTF loader when loading skins",
                "description": "See https://forum.babylonjs.com/t/assetcontainer-dispose-throws-typeerror-r-metadata-is-null/30360",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12527",
                "title": "Fixed easing function links in API docs",
                "description": "Ref https://forum.babylonjs.com/t/the-easing-function-link-in-the-api-documentation-may-be-incorrect/30377",
                "author": {
                    "name": "cx20",
                    "url": "https://github.com/cx20"
                },
                "files": [
                    "packages/dev/core/src/Animations/easing.ts"
                ],
                "tags": []
            },
            {
                "pr": "12522",
                "title": "disable antialias in safari 15.4",
                "description": "Fixing #12507\n\nThis will match all ua strings that have both AppleWebKit and Safari, and has a reference to the version 15.4\n\nAmong others, the following were (positivly) tested:\n\n```\n// iOS 15.4.1 Chrome 101\nMozilla/5.0 (iPhone; CPU iPhone OS 15_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/101.0.4951.44 Mobile/15E148 Safari/604.1\n// iOS 15.4.1 Safari 15.4.1\nMozilla/5.0 (iPhone; CPU iPhone OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15E148 Safari/604.1\n\n// iPadOS 15.4.1 Chrome 101\nMozilla/5.0 (iPad; CPU OS 15_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/101.0.4951.44 Mobile/15E148 Safari/604.1\n// iPadOS 15.4.1 Safari 15.4.1\nMozilla/5.0 (iPad; CPU OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Mobile/15H321 Safari/604.1\n\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Safari/605.1.15\n```",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/src/components/rendererComponent.tsx",
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12521",
                "title": "Fix Mirror Reflection in right handed system",
                "description": "https://forum.babylonjs.com/t/bugs-on-mirrortexture-caused-by-userighthandedsystem-true-flag/29474/7",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12520",
                "title": "Add a constant for the Snippet Server URL in all dev packages.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Animations/animation.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Materials/Node/nodeMaterial.ts",
                    "packages/dev/core/src/Materials/shaderMaterial.ts",
                    "packages/dev/core/src/Particles/particleHelper.ts",
                    "packages/dev/core/src/Sprites/spriteManager.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/particleSystems/particleSystemPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/sprites/spriteManagerPropertyGridComponent.tsx",
                    "packages/tools/playground/src/globalState.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12519",
                "title": "Fix: NME TBNBlock world input doesn't work if connected to a vertex node",
                "description": "This fixes: https://forum.babylonjs.com/t/nme-tbnblock-world-input-doesnt-work-if-connected-to-another-vertex-node-block/30322\r\n\r\nWhole TNBBlock is switched to `Fragment` target type as it already kind of was. And moved to Fragment nodes folder where it now belongs.\r\n\r\nWith this fix in place Playground example [#VL1FPT#8](https://playground.babylonjs.com/#VL1FPT#8) should now work without a shader error.",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12516",
                "title": "Add sRGB option to MultiRenderTarget",
                "description": null,
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.multiRender.ts",
                    "packages/dev/core/src/Materials/Textures/multiRenderTarget.ts"
                ],
                "tags": []
            },
            {
                "pr": "12518",
                "title": "Fix Scissor Doc",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/engineFactory.ts"
                ],
                "tags": [
                    "bug",
                    "documentation"
                ]
            }
        ],
        "5.6.0": [
            {
                "pr": "12517",
                "title": "switch to enum (instead of const-enum)",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12511",
                "title": "Plumb through useSRGBBuffer for _createInternalTexture.",
                "description": "This is a follow up change to #12486; A little more plumbing is required to get the useSRGBBuffer value applied to the texture format. With current logic, `fullOptions.useSRGBBuffer` is always undefined.\r\n",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12510",
                "title": "Make NME TBNBlock fragment compatible",
                "description": "Allows using fragment as well as vertex inputs with the TBNBlock node. This can for example be used to flip backface normals.\r\n\r\nThis change still works with vertex normal/tangent inputs, like this playground example: https://playground.babylonjs.com/#VL1FPT#5\r\n\r\nBut now it also works with fragment inputs, such as this Playground that flips backface normals and tangents and therefore rendering the backside correctly: https://playground.babylonjs.com/#VL1FPT#7\r\nThis one currently fails with `Uncaught (in promise) FrontFacingBlock must only be used in a fragment shader` error in the master branch but works with this PR change.",
                "author": {
                    "name": "MiikaH",
                    "url": "https://github.com/MiikaH"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/TBNBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12493",
                "title": "Fix NME Morph block with tangents",
                "description": "https://forum.babylonjs.com/t/nodematerial-renders-incorrectly-when-using-mesh-tangents/29784/12?u=sebavan",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.ts"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12499",
                "title": "Fix PointerDragBehavior to account for button context, add button filter",
                "description": "This PR contains two changes to `PointerDragBehavior`.\r\n- When a mouse button is pressed to initiate a drag, the button is stored and only a `pointerup` event from that button can release the drag (except for detach and other non-input behaviors).\r\n- There is now an array of mouse buttons that are used to define what buttons are eligible to start a drag behavior.  This can be changed by the user (LMB, MMB, and RMB are set as defaults).\r\n\r\nTested on Chrome, Firefox, Edge, and Safari (MacOS only).",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "bug",
                    "enhancement"
                ]
            },
            {
                "pr": "12506",
                "title": "Add skinned mesh reference when loading glTF skins",
                "description": "See https://forum.babylonjs.com/t/gltf-parsing-is-creating-doubles-and-reparenting-meshes/30079",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12505",
                "title": "Fix BoundingBoxGizmo rotate incorrectly when using RightHand system.",
                "description": "This PR fix a bug of BoundingBoxGizmo. when scene.useRightHandedSystem = true, BoundingBoxGizmo rotate to opposite direction.\r\nRelated issue: [https://forum.babylonjs.com/t/bounding-box-gizmo-rotate-incorrectly-when-scene-is-using-right-hand-system/30206](url)\r\nPlayground: [https://playground.babylonjs.com/#SG9ZZB#15](url)",
                "author": {
                    "name": "gongsiyi123",
                    "url": "https://github.com/gongsiyi123"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts"
                ],
                "tags": []
            },
            {
                "pr": "12487",
                "title": "Still test disable meshes because gltf loaders them them on later",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "bug"
                ]
            }
        ],
        "5.5.6": [
            {
                "pr": "12504",
                "title": "Fix a stupid bug",
                "description": "@RaananW can you generate a new release after that?\r\n\r\nthanks a ton",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12503",
                "title": "Skip modifications of babylon CDN web requests",
                "description": "When setting headers and loading files from our CDN, the CDN throws a 405 error and refuses to send the file.\nApart from making sure our CDN is configured correctly, we should also ignore modifications of web requests sent to either one of our CDNs. No headers should be sent to the CDNs, only simple GET (and OPTIONS) requests",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Misc/webRequest.ts"
                ],
                "tags": []
            },
            {
                "pr": "12497",
                "title": "A couple of minor fixes",
                "description": "- Fix the PG link for Draco Compression doc comment as the path to the bin path changed in the glTF-Sample-Models repo.\r\n- Allow empty morph targets in the glTF loader (see [here](https://github.com/KhronosGroup/glTF/issues/2154#issuecomment-1116701277))",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/core/src/Meshes/Compression/dracoCompression.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12502",
                "title": "Fix ubo not of the right size when using material plugins",
                "description": "See https://forum.babylonjs.com/t/pluginmaterial-bug/30098\r\n\r\nTo fix the problem I simply generate a specific #define for each plugin and use this define in the vertex/fragment shaders when the plugin is used.\r\n\r\nI have also added a visualization test to test this case.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialPluginManager.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/materialPlugin.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12496",
                "title": "test tools initial support",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/public/@babylonjs/test-tools/license.md",
                    "packages/public/@babylonjs/test-tools/package.json",
                    "packages/public/@babylonjs/test-tools/readme.md",
                    "packages/public/@babylonjs/test-tools/tsconfig.build.json",
                    "packages/public/@babylonjs/test-tools/tsconfig.json"
                ],
                "tags": [
                    "skip changelog"
                ]
            },
            {
                "pr": "12501",
                "title": "allow skipping a PR in the changelog",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/generateChangelog.js"
                ],
                "tags": []
            },
            {
                "pr": "12489",
                "title": "GLTFSerializer : Prevent empty skin to export invalid GLTF",
                "description": "If for any reason, skeletons.length is corrupted, then exported GLTF was invalid. This is a very unlikely situation, but because of the public nature of the serializer, putting a guard in place is always usefull ",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "12480",
                "title": "fix viewer import from loaders",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/src/index.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12490",
                "title": "Changed rendering group for local axes to make them render on top.",
                "description": "Not sure this is the right way to do it, but it seems to do the trick.",
                "author": {
                    "name": "reimund",
                    "url": "https://github.com/reimund"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12494",
                "title": "NME Generate code has error on ColorMergerBlock",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/colorMergerBlock.ts"
                ],
                "tags": []
            },
            {
                "pr": "12488",
                "title": "Add support for COMPRESSED_SRGB_S3TC_DXT1_EXT",
                "description": "If requesting sRGB for an ST3C **RGB** texture, the previous logic was using an sRGB + **ALPHA** format. This change will use RGB (no alpha) instead.",
                "author": {
                    "name": "kircher1",
                    "url": "https://github.com/kircher1"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgl.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12486",
                "title": "Add creation of sRGB Render Targets",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureCreationOptions.ts"
                ],
                "tags": [
                    "rendering engine",
                    "new feature"
                ]
            },
            {
                "pr": "12482",
                "title": "warning and checks for noimpostor children",
                "description": "fixes #12446 \r\n\r\n2 issues :\r\n- when creating impostor for children mesh, their impostor will effectively be created with the NoImpostor. So shapes are not available and you get the crash. I've added a check and log a warning\r\n- The correct way to debugdisplay impostor in this case is to do the call on the NoImpostor parent. But you have to provide a 2nd parameter or nothing appears. I've also added a warning in that particular case.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Debug/physicsViewer.ts"
                ],
                "tags": [
                    "bug",
                    "enhancement"
                ]
            },
            {
                "pr": "12485",
                "title": "Fixed wrong matrix used when creating local rotation axes.",
                "description": "Only the first bone got the correct orientation before this change, now the entire chain of rotations in taken into account.\r\n<img width=\"550\" alt=\"Screenshot 2022-05-05 at 21 41 15\" src=\"https://user-images.githubusercontent.com/83687/167014155-4b2f3de2-6ffb-40c9-bbc0-a459b100bf21.png\">\r\n\r\n",
                "author": {
                    "name": "reimund",
                    "url": "https://github.com/reimund"
                },
                "files": [
                    "packages/dev/core/src/Debug/skeletonViewer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12477",
                "title": "Optimize rendering to reuse material as much as possible",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Rendering/renderingGroup.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12483",
                "title": "Antialias for Sarafi 15.4 is turned of per default.",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12475",
                "title": "reduce the call to dirty",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/material.ts"
                ],
                "tags": []
            }
        ],
        "5.5.5": [
            {
                "pr": "12476",
                "title": "More perf improvements",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/transformNode.ts",
                    "packages/dev/core/src/Rendering/renderingGroup.ts"
                ],
                "tags": []
            },
            {
                "pr": "12478",
                "title": "Make AbstractMesh props protected instead of private",
                "description": null,
                "author": {
                    "name": "barroij",
                    "url": "https://github.com/barroij"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12472",
                "title": "Instance color mixing",
                "description": "Follow up https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492\r\n\r\nMixing color instances from thin instances and vertex colors from mesh.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts",
                    "packages/dev/core/src/Materials/standardMaterial.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/vertexColorMixing.fx",
                    "packages/dev/core/src/Shaders/color.vertex.fx",
                    "packages/dev/core/src/Shaders/default.vertex.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/materials/src/cell/cell.vertex.fx",
                    "packages/dev/materials/src/fire/fire.vertex.fx",
                    "packages/dev/materials/src/fur/fur.vertex.fx",
                    "packages/dev/materials/src/gradient/gradient.vertex.fx",
                    "packages/dev/materials/src/lava/lava.vertex.fx",
                    "packages/dev/materials/src/mix/mix.vertex.fx",
                    "packages/dev/materials/src/simple/simple.vertex.fx",
                    "packages/dev/materials/src/terrain/terrain.vertex.fx",
                    "packages/dev/materials/src/triPlanar/triplanar.vertex.fx",
                    "packages/dev/materials/src/water/water.vertex.fx"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12479",
                "title": "typescript update, fix build",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json",
                    "packages/dev/inspector/tsconfig.build.json",
                    "packages/tools/guiEditor/tsconfig.build.json",
                    "packages/tools/nodeEditor/tsconfig.build.json",
                    "tsconfig.devpackages.json"
                ],
                "tags": []
            }
        ],
        "5.5.0": [
            {
                "pr": "12474",
                "title": "better isReadyCheck",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": []
            },
            {
                "pr": "12473",
                "title": "remove prototype morph",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/instancedMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12469",
                "title": "Fix infinite recursion with glTF skeleton",
                "description": "See forum: https://forum.babylonjs.com/t/sandbox-cant-open-glb-file/29859\r\n\r\nThis fixes a bug where the parent of a node will be assigned to itself which causes the code to infinite recurse.",
                "author": {
                    "name": "bghgary",
                    "url": "https://github.com/bghgary"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12461",
                "title": "Create a TBN NME node to handle tangent space orientation",
                "description": "https://forum.babylonjs.com/t/nodematerial-renders-incorrectly-when-using-mesh-tangents/29784/7",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/TBNBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Dual/index.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Fragment/perturbNormalBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Input/inputBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/anisotropyBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/Vertex/morphTargetsBlock.ts",
                    "packages/tools/nodeEditor/src/blockTools.ts",
                    "packages/tools/nodeEditor/src/components/nodeList/nodeListComponent.tsx",
                    "packages/tools/nodeEditor/src/diagram/properties/inputNodePropertyComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12470",
                "title": "Tiny perf improvement",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderProcessor.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12463",
                "title": "fix default material init",
                "description": "If a mesh has no material the default material would initialize too late, not being applied correctly.\n\nThis PR fixes that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/viewer/src/viewer/defaultViewer.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12468",
                "title": "no plane update for axis gizmos",
                "description": "follow up https://forum.babylonjs.com/t/breaking-change-in-axisscalegizmo/4167/3\r\n\r\nAxis scale and axis drag gizmo used to update plane for pointerDragBehavior. This leads to instability when gizmo gets out of screen.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisDragGizmo.ts",
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12458",
                "title": "Remove BABYLON namespace references in the Inspector",
                "description": "Fixes #12343\n\nThe build system now allows to set dependencies to both the es6 and the umd packages, so importing from gui-editor is enough",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureEditorComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/toolsTabComponent.tsx",
                    "packages/dev/inspector/src/components/sceneExplorer/entities/gui/guiTools.ts",
                    "packages/tools/devHost/webpack.config.js",
                    "packages/tools/guiEditor/src/guiEditor.ts",
                    "packages/tools/guiEditor/src/legacy/legacy.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12464",
                "title": "Nine patch overlap fix",
                "description": "https://forum.babylonjs.com/t/nine-patch-showing-gaps-with-alpha-png/29365/7\r\n\r\n![image](https://user-images.githubusercontent.com/1538857/166270139-4cf3bba8-3795-4828-8f41-982779757ec9.png)\r\nThe edges look weird because I edited it in photoshop before converting it to a blob for testing inline.  I have tested on firefox and brave that the interior artifacts are gone.",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/image.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12462",
                "title": "Add the possibility to pass forcedExtension for a serialized environment texture",
                "description": null,
                "author": {
                    "name": "ton-solutions",
                    "url": "https://github.com/ton-solutions"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12466",
                "title": "Fix light selection in Light Information Block",
                "description": "Forum issue: https://forum.babylonjs.com/t/nme-lightinformationblock-properties-cant-select-light-1-or-light-2/29888\r\n\r\nThe light property was correctly selected, but the options element wasn't updated.\r\nSimple NME example: https://nme.babylonjs.com/#KDHJPM",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/properties/lightInformationPropertyTabComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "nme"
                ]
            },
            {
                "pr": "12467",
                "title": "Add feature testing to text metrics width",
                "description": "In between 4.2 and 5.0, we switched to calculating text width using the `actualBoundingBox` properties rather than the `width`. These properties are more accurate, but they are not available in older browsers. This means that text would no longer render correctly on older browsers.\r\n\r\nThe simple fix here is to add feature testing so that we fallback to using `width` if `actualBoundingBox` is not defined.\r\n\r\nSome playgrounds to demonstrate this:\r\nhttps://playground.babylonjs.com/#44KYLP\r\nhttps://playground.babylonjs.com/#XCPP9Y#1\r\n\r\nThese were previously broken on Chrome/73.0.3683.75 but will now render the text correctly.\r\n\r\nSee forum issue: https://forum.babylonjs.com/t/babylonjs-v5-0-and-chromium/29938",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/textBlock.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12465",
                "title": "Missing null for First go to frame in Animation",
                "description": "Follow up https://forum.babylonjs.com/t/issue-animation-gotoframe/29493/3\r\n\r\n`_frameToSyncFromJump` for was null and was not used correctly for 1st go to frame. After the 1st go to frame, it's set to null and everything is fine.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Animations/animatable.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12459",
                "title": "WebGPU: Fix terrain erosion visualization test",
                "description": null,
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/tools/tests/test/visualization/webgpu.json"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12460",
                "title": "Fix GetAngleBetweenVectors precision issue",
                "description": "https://forum.babylonjs.com/t/need-some-help-with-vector/29865",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12433",
                "title": "Add backward compatibability for param kind to be \"color\" for thin instance methods",
                "description": "If kind \"color\" is passed to the function thinInstanceSetAttributeAt, it will be converted to \"instanceColor\", for back compat.\r\nForum: https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492/19\r\n\r\n(Update: added this back compat to all thin instance methods that accept param kind)",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12456",
                "title": "fix tsdoc and add an entry point to set improvementMode for SceneOpti…",
                "description": "…mizer",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Misc/sceneOptimizer.ts"
                ],
                "tags": []
            },
            {
                "pr": "12455",
                "title": "Save resources by not binding a color texture to a render target",
                "description": "This PR allows the user to indicate that the color texture should not be created/bound when creating a render target.\r\n\r\nIt's a waste of resources (a texture the size of the render target) if all you want is generating the depth buffer/texture and don't have anything to write in a color texture.\r\n\r\nHere's a PG to test it: https://playground.babylonjs.com/#0PYWXZ#1\r\n\r\nWith Spector, you will see that only the depth buffer is bound:\r\n![image](https://user-images.githubusercontent.com/4152247/165773484-5532cab3-989b-470e-8474-6dbdafe03b8e.png)\r\n\r\nWithout the PR, a color texture is also bound:\r\n![image](https://user-images.githubusercontent.com/4152247/165773612-9ef55b45-f03a-45be-af14-3d92cf15e5d5.png)\r\n",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuBundleList.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuCacheRenderPipeline.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuClearQuad.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuRenderPassWrapper.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/renderTargetTexture.ts",
                    "packages/dev/core/src/Materials/Textures/textureCreationOptions.ts"
                ],
                "tags": []
            },
            {
                "pr": "12454",
                "title": "Fix PBR input textures typings.",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseSimpleMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrMetallicRoughnessMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrSpecularGlossinessMaterial.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.ts",
                    "packages/dev/loaders/src/glTF/2.0/glTFLoader.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12453",
                "title": "Bump ejs from 3.1.6 to 3.1.7",
                "description": "Bumps [ejs](https://github.com/mde/ejs) from 3.1.6 to 3.1.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mde/ejs/releases\">ejs's releases</a>.</em></p>\n<blockquote>\n<h2>v3.1.7</h2>\n<p>Version 3.1.7</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mde/ejs/commit/820855ad75034e303be82c482c5eb8c6616da5c5\"><code>820855a</code></a> Version 3.1.7</li>\n<li><a href=\"https://github.com/mde/ejs/commit/076dcb643c5aed2e10c2847639c98fd923b72854\"><code>076dcb6</code></a> Don't use template literal</li>\n<li><a href=\"https://github.com/mde/ejs/commit/faf8b849a4e46db21fa813a08a7cbe00256a188a\"><code>faf8b84</code></a> Skip test -- error message vary depending on JS runtime</li>\n<li><a href=\"https://github.com/mde/ejs/commit/c028c343c127859f7189c3feee1e5239c199fec9\"><code>c028c34</code></a> Update packages</li>\n<li><a href=\"https://github.com/mde/ejs/commit/e4180b4fa2dd0e06d811f2c155f9d993ee9d8edd\"><code>e4180b4</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/629\">#629</a> from markbrouwer96/main</li>\n<li><a href=\"https://github.com/mde/ejs/commit/d5404d6e68d64c165580d238e7562ea6532c2541\"><code>d5404d6</code></a> Updated jsdoc to 3.6.7</li>\n<li><a href=\"https://github.com/mde/ejs/commit/7b0845d6aab044d244e8ec3818f0f70d05ef13c1\"><code>7b0845d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/609\">#609</a> from mde/dependabot/npm_and_yarn/glob-parent-5.1.2</li>\n<li><a href=\"https://github.com/mde/ejs/commit/32fb8ee387383c67eaa5feff05347ef0504f3b15\"><code>32fb8ee</code></a> Bump glob-parent from 5.1.1 to 5.1.2</li>\n<li><a href=\"https://github.com/mde/ejs/commit/f21a9e464337032af5e61352c54b9dd8dae8fd1b\"><code>f21a9e4</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/603\">#603</a> from mde/mde-null-proto-where-possible</li>\n<li><a href=\"https://github.com/mde/ejs/commit/a50e46f002a78544e10982a037742cfb67fc7b80\"><code>a50e46f</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mde/ejs/issues/606\">#606</a> from akash-55/main</li>\n<li>Additional commits viewable in <a href=\"https://github.com/mde/ejs/compare/v3.1.6...v3.1.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ejs&package-manager=npm_and_yarn&previous-version=3.1.6&new-version=3.1.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/BabylonJS/Babylon.js/network/alerts).\n\n</details>",
                "author": {
                    "name": "dependabot[bot]",
                    "url": "https://github.com/apps/dependabot"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": [
                    "dependencies"
                ]
            }
        ],
        "5.4.0": [
            {
                "pr": "12452",
                "title": "WebGPU: more changes and fixes for stencil support",
                "description": "When a texture has both a depth and stencil aspects, only one of these can be used in a texture lookup. So, when creating a texture view, we must choose between depth and stencil.\r\n\r\nWe currently choose \"depth\" as it is what the user would most likely want, but we will need to come up with a way to be able to specify \"stencil\" instead. However, I don't know how we can do that, that would require some annotations in the shader so that we know a texture should be bound with the stencil aspect...",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.renderTarget.ts",
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts",
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "WebGPU"
                ]
            },
            {
                "pr": "12450",
                "title": "WebGPU: Fix crash when creating the engine without stencil buffer support",
                "description": "Also fix a warning when setting a value in gl_FragDepth.",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/LibDeclarations/webgpu.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12429",
                "title": "Allow arc rotate auto rotation to rotate to a certain alpha value",
                "description": "add `targetAlpha` to autoRotateBehavior to serve as a limit. When the limit is reached, the autoRotateBehavoir would stop.\r\n",
                "author": {
                    "name": "TheCrowd",
                    "url": "https://github.com/TheCrowd"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Cameras/autoRotationBehavior.ts"
                ],
                "tags": []
            },
            {
                "pr": "12445",
                "title": "move tests to the cdn instead of main page",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/testTools/src/visualizationUtils.ts",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12443",
                "title": "Fix camera cloning by adding newParent parameter",
                "description": "Related forum issue: https://forum.babylonjs.com/t/invoke-clone-with-camera-childnode-can-not-keep-structure/29648 and Playground: https://playground.babylonjs.com/#FZPMS1",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12440",
                "title": "make sure pointer up only triggers once",
                "description": "Adressing this:\n\nhttps://forum.babylonjs.com/t/webxr-pointer-up-event-trigger-twice-on-one-single-touch/29370?u=raananw",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRControllerPointerSelection.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12432",
                "title": "Fix iridescence texture transform",
                "description": "Fix #12431 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12442",
                "title": "Fix OimoJS plugin syncMeshWithImpostor method.",
                "description": "Related forum issue: https://forum.babylonjs.com/t/physicsviewer-working-only-with-meshimposter/29654 and Playground: https://playground.babylonjs.com/#WIR77Z#1317",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Physics/Plugins/oimoJSPlugin.ts"
                ],
                "tags": [
                    "bug",
                    "physics"
                ]
            },
            {
                "pr": "12434",
                "title": "Fix thinInstanceCount setter to work with mesh clone",
                "description": "After cloning a mesh that has thin instances, setting thinInstanceCount on the clone currently doesn't work (unless it is set to 0 the setter will return without updating the internal instanceCount).\r\n\r\nWith this PR, if a mesh doesn't have the thin instance matrixData, then it checks to see if the mesh's source has it before defaulting the max instance count to 0.\r\n\r\nPG Repro: https://playground.babylonjs.com/#217750#76\r\nForum: https://forum.babylonjs.com/t/cant-set-thininstancecount-for-clone/29674\r\n",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/thinInstanceMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12436",
                "title": "Fix crash when cloning meshes with thin instances that are using instance color",
                "description": "See https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492/23",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Materials/materialHelper.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12428",
                "title": "Fix GridMaterial serialization",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts",
                    "packages/dev/core/src/Materials/Background/backgroundMaterial.ts",
                    "packages/dev/materials/src/grid/gridMaterial.ts"
                ],
                "tags": [
                    "bug",
                    "materials"
                ]
            },
            {
                "pr": "12437",
                "title": "Fix audit issues",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": []
            },
            {
                "pr": "12427",
                "title": "Fix effectLayer vertex alpha detection",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Layers/effectLayer.ts"
                ],
                "tags": [
                    "bug",
                    "rendering engine"
                ]
            },
            {
                "pr": "12424",
                "title": "Enable more features for PG in JS mode",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/playground/src/tools/monacoManager.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12425",
                "title": "NME: uploading a static cube texture in a Reflection block does not work",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/cubeTexture.ts",
                    "packages/tools/nodeEditor/src/diagram/display/textureDisplayManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12389",
                "title": "Export KHR extensions: IOR, Transmission and Volume",
                "description": "GLTF 2.0 Serializer is missing the \r\n\r\n- KHR_materials_ior \r\n- KHR_materials_volume \r\n- KHR_materials_transmissions\r\n\r\nextensions\r\n\r\nThis PR add support for these extensions to the GLTF2.0 serializer.\r\nAlso, some minor modification has been made into the GLTF Loader extensions to be consistant with the GLTF definitions.\r\nTest has been conducted using [this](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/StainedGlassLamp) standard sample model\r\nMaterials has been loaded and serialized succesfully without any diff.",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_draco_mesh_compression.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_volume.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_lights_punctual.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_ior.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_specular.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_transmission.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_volume.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12421",
                "title": "Remove some unnecessary computations",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.vector.ts",
                    "packages/dev/core/src/Meshes/subMesh.ts",
                    "packages/dev/core/src/Rendering/renderingGroup.ts",
                    "packages/dev/core/src/scene.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12420",
                "title": "WebGPU: Fix RenderAttachment flag for 3D textures",
                "description": "See https://forum.babylonjs.com/t/how-to-get-error-callback-when-computeshader-dispatch-work-wrong/29571/6",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuTextureHelper.ts"
                ],
                "tags": []
            },
            {
                "pr": "12419",
                "title": "ShaderMaterial: keep uniqueId in serialize()",
                "description": "Like Material here: https://github.com/BabylonJS/Babylon.js/blob/c654c7303965a43f340f8c1e0eab3fc804c566f1/packages/dev/core/src/Materials/material.ts#L1719\r\nRelated commit: https://github.com/BabylonJS/Babylon.js/commit/738236a7578d1c6dfcae4f93cfffeb768ea5a826",
                "author": {
                    "name": "lxq100",
                    "url": "https://github.com/lxq100"
                },
                "files": [
                    "packages/dev/core/src/Materials/shaderMaterial.ts"
                ],
                "tags": []
            }
        ],
        "5.3.0": [
            {
                "pr": "12418",
                "title": "Added function call to focus on canvas when setting PointerLock",
                "description": "In this PR, I've added a line to `_RequestPointerlock` called by `enterPointerlock` in the Engine that will set focus on the canvas when a pointerlock is set with `enterPointerlock`.  This reason for this fix was because a user had identified an issue where the pointerlock was successfully being set but keyboard input wasn't working.  This was due to the fact that requestPointerlock does not set focus when setting the pointerlock element so no keyboard input was being routed to the canvas.  This fix simply sets focus once the pointerlock element has been set.\r\n\r\nThis fix is in reference to this Forum post: https://forum.babylonjs.com/t/input-not-recognised-until-window-resize-triggered-or-change-focus/15653",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12417",
                "title": "width height swizzle",
                "description": "fix per\r\nhttps://forum.babylonjs.com/t/height-and-width-mean-the-opposite-thing/29401/3\r\n\r\n",
                "author": {
                    "name": "Pryme8",
                    "url": "https://github.com/Pryme8"
                },
                "files": [
                    "packages/dev/core/src/Shaders/spriteMap.fragment.fx"
                ],
                "tags": []
            },
            {
                "pr": "12416",
                "title": "Volumetric light scattering post process: Fix support for thin instances",
                "description": "See https://forum.babylonjs.com/t/how-i-can-use-volumetric-rendering-pipeline-vrp-with-thininstances/29544",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/volumetricLightScatteringPostProcess.ts"
                ],
                "tags": []
            },
            {
                "pr": "12410",
                "title": "Fix uninitialized last ray for PointerDragBehavior",
                "description": "Follow up https://forum.babylonjs.com/t/pointerdragbehavior-ghost-movement-on-click-bug/29512\r\n`this._lastPointerRay` was not reinitialized when detaching a mesh.\r\nSo, when a new mesh is attached, the previous ray is still active a newly picked mesh translates to the previous position.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Behaviors/Meshes/pointerDragBehavior.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12413",
                "title": "Do not use determinant when preserving scaling",
                "description": "Yet another fix for scaling perservation with Gizmos. https://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/35\r\nMesh Matrix determinant is used to check if Y axis should be inverted. This should not happen with PreverseScaling.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/gizmo.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12414",
                "title": "Fix typo in warning message",
                "description": "back-face culling and two-sided lighting warning message was erroneous.\r\n\r\nfor more info, check [this forum thread](https://forum.babylonjs.com/t/warning-in-gltfexporter-about-double-sided-lighting-and-backface-culling/29395)",
                "author": {
                    "name": "Krenodeno",
                    "url": "https://github.com/Krenodeno"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "12415",
                "title": "Skeleton._sortBones() crash for bones with parents from other skeletons",
                "description": "It is possible for a bone to have a parent bone from a skeleton different from the original one.\r\nCurrently, the method crashes when this is the case.\r\nThis simple check fixes it. Notice that \"index\" might be -1 when the parent is from another skeleton in the previous iteration.",
                "author": {
                    "name": "EvgenyRodygin",
                    "url": "https://github.com/EvgenyRodygin"
                },
                "files": [
                    "packages/dev/core/src/Bones/skeleton.ts"
                ],
                "tags": []
            },
            {
                "pr": "12409",
                "title": "Inspector: render N/A for internal texture unique ID when internal texture is undefined",
                "description": "Fixes an issue where the internal texture being undefined could lead to an inspector crash due to rendering call throwing. Will now render \"N/A\" if there is no internal texture.\r\n\r\nSee PG: https://playground.babylonjs.com/#436DIW#2",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug",
                    "inspector"
                ]
            },
            {
                "pr": "12408",
                "title": "Remove dead code",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/glTFMaterialExporter.ts"
                ],
                "tags": []
            },
            {
                "pr": "12397",
                "title": "DeviceInputSystem: Remove pollInput calls for MouseWheel from EventFactory",
                "description": "This PR contains two changes.  First, all pollInput calls that reference MouseWheelX/Y/Z as it's not necessary for Native to get that value.  Additionally, the Move conditional has been removed from NativeDeviceInputSystem as it's not needed.",
                "author": {
                    "name": "PolygonalSun",
                    "url": "https://github.com/PolygonalSun"
                },
                "files": [
                    "packages/dev/core/src/DeviceInput/Helpers/eventFactory.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/deviceTypes.ts",
                    "packages/dev/core/src/DeviceInput/InputDevices/nativeDeviceInputSystem.ts"
                ],
                "tags": [
                    "inputs",
                    "breaking change"
                ]
            },
            {
                "pr": "12404",
                "title": "fix container regression",
                "description": "Fixes a regression in GUI introduced by #12392. Invisible children were not being laid out correctly. See forum thread: https://forum.babylonjs.com/t/2d-gui-elements-not-hiding-in-5-2-0/29390/6\r\n\r\nNow, we still call layout, but we just don't count them towards the computedWidth/computedHeight of the parent container.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12406",
                "title": "Fix Transparent shadows",
                "description": "Fix #12405 ",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts",
                    "packages/dev/core/src/Materials/uniformBuffer.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": [
                    "bug",
                    "materials",
                    "shadows"
                ]
            },
            {
                "pr": "12403",
                "title": "Scaling preservation fix for boundingBoxGizmo",
                "description": "More use cases fixed for scaling perservation. follow up https://forum.babylonjs.com/t/gizmo-use-tmpparent-but-do-not-preserve-scaling-sign/29270/29",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/axisScaleGizmo.ts",
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts",
                    "packages/dev/core/src/Gizmos/planeRotationGizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12400",
                "title": "Block pointer events to scene when pointer is captured",
                "description": "When a pointer is captured (for example, if the user is dragging a scrollbar), pointer events should not be passed to the scene.\r\n\r\nThis matches the behavior of setPointerCapture() on the web, which forces all pointer events to fire on a particular element.\r\n\r\nResolves forum issue: https://forum.babylonjs.com/t/scrollbar-and-pointerblocker/28732\r\nSee playground: #XNY77K#3",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12402",
                "title": "Fix empty screenshot when enabling antialiasing",
                "description": "See https://forum.babylonjs.com/t/chrome-issue-with-create-screenshot-using-render-target/29367/2",
                "author": {
                    "name": "Popov72",
                    "url": "https://github.com/Popov72"
                },
                "files": [
                    "packages/dev/core/src/Misc/screenshotTools.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12401",
                "title": "Add the possibility to pass forcedExtension for an environment texture",
                "description": null,
                "author": {
                    "name": "ton-solutions",
                    "url": "https://github.com/ton-solutions"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            },
            {
                "pr": "12399",
                "title": "Deselect keys when active channels are changed.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/context.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12396",
                "title": "Add the possibility to pass prefilterOnLoad flag for an environment texture",
                "description": null,
                "author": {
                    "name": "ton-solutions",
                    "url": "https://github.com/ton-solutions"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": []
            }
        ],
        "5.2.0": [
            {
                "pr": "12362",
                "title": "ktxTextureLoader: Mark _useSRGBBuffers when loading an SRGB-enabled texture format",
                "description": "Also set texture.format to the correct value,\r\nsince it seems the code elsewhere, like in the WebGPU engine, would\r\nlike a \"base\" texture format.\r\n\r\nCompletely untested patch to try and fix https://forum.babylonjs.com/t/compressed-ktx-texture-appears-too-dark/29060/4",
                "author": {
                    "name": "magcius",
                    "url": "https://github.com/magcius"
                },
                "files": [
                    "packages/dev/core/src/Engines/constants.ts",
                    "packages/dev/core/src/Materials/Textures/Loaders/ktxTextureLoader.ts",
                    "packages/dev/core/src/Misc/khronosTextureContainer.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12395",
                "title": "DebugLayer : Accessors onNodeSelectedObservable",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Debug/debugLayer.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12392",
                "title": "Skip invisible or unrenderable children in layout calculations",
                "description": "When doing layout calculations on a container, we should skip over children which are invisible or un-renderable. This will fix the case where a visible child would cause a container with `adaptWidthToChildren` to extend its width, even though it shouldn't.\r\n\r\nAs a general principle, invisible children should not take up any space in the layout. (This is what we are already doing for stack panel.)\r\n\r\nRelated forum issue: https://forum.babylonjs.com/t/gui-stackpanel-not-settings-correct-width-height-when-it-has-invisible-child-controls/29149",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12388",
                "title": "Add normal input to clear coat Block",
                "description": "https://forum.babylonjs.com/t/expose-worldnormal-input-in-nodematerial-clearcoatblock/29225/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/clearCoatBlock.ts"
                ],
                "tags": [
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "12390",
                "title": "Add a flag to use opacity instead of diffuse texture for transparent shadows.",
                "description": "Associated forum topic: https://forum.babylonjs.com/t/shadows-and-opacity-texture/28609/9\r\n\r\nExample playground: https://playground.babylonjs.com/#ICLAU3#10",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/core/src/Lights/Shadows/shadowGenerator.ts"
                ],
                "tags": [
                    "enhancement",
                    "rendering engine"
                ]
            },
            {
                "pr": "12391",
                "title": "Unicode/emoji characters in Playground are lost upon Save",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/playground/src/tools/loadManager.ts",
                    "packages/tools/playground/src/tools/saveManager.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12393",
                "title": "Fix wrong PG key saving",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/components/commandDropdownComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12387",
                "title": "switch sandbox to double (and fix a tiny GC issue with audio)",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Audio/audioSceneComponent.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/tools/sandbox/src/components/renderingZone.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12386",
                "title": "include loaders and serializers in typedoc definition",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/public/umd/babylonjs-loaders/config.json",
                    "packages/public/umd/babylonjs-serializers/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12385",
                "title": "New flag to preserve scaling when using gizmos",
                "description": "Followup https://forum.babylonjs.com/t/mesh-with-scaling-1-1-1-will-set-an-unbelievable-scaling-when-drag-positiongizmo/28850/13\r\nand https://forum.babylonjs.com/t/how-can-i-get-the-correct-scaling-and-rotation-with-boundingboxgizmo/29243/3\r\n\r\nOption to preserve TransformNode scaling when using Gizmos.\r\nOff by default to preserve back compat.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Gizmos/boundingBoxGizmo.ts",
                    "packages/dev/core/src/Gizmos/gizmo.ts"
                ],
                "tags": [
                    "enhancement"
                ]
            },
            {
                "pr": "12384",
                "title": "remove legacy directory",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "legacy/.gitpod.Dockerfile",
                    "legacy/.gitpod.yml",
                    "legacy/.vscode/launch.json",
                    "legacy/.vscode/settings.json",
                    "legacy/.vscode/tasks.json",
                    "legacy/Exporters/readme.md",
                    "legacy/Tools/CompressedTextured/ktx-files.bat",
                    "legacy/Tools/CompressedTextured/make-ktx-batch.bat",
                    "legacy/Tools/Config/config.js",
                    "legacy/Tools/Config/config.json",
                    "legacy/Tools/DevLoader/BabylonLoader.js",
                    "legacy/Tools/Gulp/gulpfile.js",
                    "legacy/Tools/Gulp/helpers/gulp-addModuleExports.js",
                    "legacy/Tools/Gulp/helpers/gulp-importFromJsFiles.js",
                    "legacy/Tools/Gulp/helpers/gulp-karmaJunitPlugin.js",
                    "legacy/Tools/Gulp/helpers/gulp-processAmdDeclarationToModule.js",
                    "legacy/Tools/Gulp/helpers/gulp-processConstants.js",
                    "legacy/Tools/Gulp/helpers/gulp-processImportsToEs6.js",
                    "legacy/Tools/Gulp/helpers/gulp-processLooseDeclarationsEs6.js",
                    "legacy/Tools/Gulp/helpers/gulp-processModuleDeclarationToNamespace.js",
                    "legacy/Tools/Gulp/helpers/gulp-processShaders.js",
                    "legacy/Tools/Gulp/helpers/gulp-remapPaths.js",
                    "legacy/Tools/Gulp/helpers/gulp-removeShaderComments.js",
                    "legacy/Tools/Gulp/helpers/gulp-validateImports.js",
                    "legacy/Tools/Gulp/helpers/gulp-validateTypedoc.js",
                    "legacy/Tools/Gulp/profiling.html",
                    "legacy/Tools/Gulp/readme.md",
                    "legacy/Tools/Gulp/tasks/gulpTasks-apps.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-dependencies.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-documentation.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-importLint.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-libraries.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-librariesES6.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-localRun.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-netlify.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-npmPackages.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-remapPaths.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-symlink.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-tests.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-testsES6.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-tsLint.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-typedoc.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-viewerLibraries.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-watchApps.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-watchCore.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-watchLibraries.js",
                    "legacy/Tools/Gulp/tasks/gulpTasks-whatsNew.js",
                    "legacy/Tools/NodeHelpers/colorConsole.js",
                    "legacy/Tools/NodeHelpers/rmDir.js",
                    "legacy/Tools/Publisher/helpers/getFiles.js",
                    "legacy/Tools/Publisher/helpers/publish.js",
                    "legacy/Tools/Publisher/index.js",
                    "legacy/Tools/Publisher/production.js",
                    "legacy/Tools/Publisher/tasks/buildBabylonJSAndDependencies.js",
                    "legacy/Tools/Publisher/tasks/main.js",
                    "legacy/Tools/Publisher/tasks/prepareAdditionalDevPackages.js",
                    "legacy/Tools/Publisher/tasks/prepareEs6DevPackages.js",
                    "legacy/Tools/Publisher/tasks/prepareUMDDevPackages.js",
                    "legacy/Tools/Publisher/tasks/processAdditionalPackages.js",
                    "legacy/Tools/Publisher/tasks/processEs6Packages.js",
                    "legacy/Tools/Publisher/tasks/processUMDPackages.js",
                    "legacy/Tools/Publisher/tasks/processUMDViewer.js",
                    "legacy/Tools/Publisher/tasks/versionNumberManager.js",
                    "legacy/Tools/WebpackPlugins/babylonExternals.js",
                    "legacy/Tools/WebpackPlugins/babylonWebpackConfig.js",
                    "legacy/Tools/WebpackPlugins/viewerResolve.js",
                    "legacy/azure-pipelines-cd.yml",
                    "legacy/azure-pipelines.yml",
                    "legacy/babel.config.json",
                    "legacy/bower.json",
                    "legacy/dist/Oimo.js",
                    "legacy/dist/Oimo.license",
                    "legacy/dist/ammo.js",
                    "legacy/dist/ammo.wasm.js",
                    "legacy/dist/ammo.wasm.wasm",
                    "legacy/dist/babylon.d.ts",
                    "legacy/dist/babylon.js",
                    "legacy/dist/babylon.ktx2Decoder.js",
                    "legacy/dist/babylon.max.js",
                    "legacy/dist/babylon.max.js.map",
                    "legacy/dist/babylon.module.d.ts",
                    "legacy/dist/basisTranscoder/basis_transcoder.js",
                    "legacy/dist/basisTranscoder/basis_transcoder.wasm",
                    "legacy/dist/cannon.js",
                    "legacy/dist/cannon.license",
                    "legacy/dist/documentation.d.ts",
                    "legacy/dist/draco.license",
                    "legacy/dist/draco_decoder_gltf.js",
                    "legacy/dist/draco_decoder_gltf.wasm",
                    "legacy/dist/draco_wasm_wrapper_gltf.js",
                    "legacy/dist/earcut.license",
                    "legacy/dist/earcut.min.js",
                    "legacy/dist/glslang/glslang.js",
                    "legacy/dist/glslang/glslang.wasm",
                    "legacy/dist/gltf2Interface/babylon.glTF2Interface.d.ts",
                    "legacy/dist/gltf_validator.js",
                    "legacy/dist/gui/babylon.gui.d.ts",
                    "legacy/dist/gui/babylon.gui.js",
                    "legacy/dist/gui/babylon.gui.js.map",
                    "legacy/dist/gui/babylon.gui.min.js"
                ],
                "tags": []
            },
            {
                "pr": "12383",
                "title": "update package lock",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "package-lock.json"
                ],
                "tags": []
            },
            {
                "pr": "12373",
                "title": "Different selection priorities for nodes and frames dependent of marquee or click selecting",
                "description": "Closes #12355 ",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx",
                    "packages/tools/nodeEditor/src/diagram/graphFrame.ts",
                    "packages/tools/nodeEditor/src/diagram/graphNode.ts",
                    "packages/tools/nodeEditor/src/globalState.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12378",
                "title": "add overrideCloneAlphaBetaRadius to ArcRotateCamera",
                "description": "Adds new property overrideCloneAlphaBetaRadius to the class ArcRotateCamera. This allows the parameter to setTarget to be specified when animating the camera's target property.\r\n\r\nFor example, when using FramingBehavior the override can be set to true, which then allows the framingTime (i.e. speed) of the framing animation to be changed independently, without altering anything else about the animation.\r\n\r\nForum discussion: https://forum.babylonjs.com/t/zoomonmesheshierarchy-inconsistent-camera-rotation/29100/8",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Cameras/arcRotateCamera.ts"
                ],
                "tags": [
                    "breaking change"
                ]
            },
            {
                "pr": "12382",
                "title": "gltf2interface must be transpiled, otherwise it's not available.",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/tools/babylonServer/src/loaders/index-dev.ts",
                    "packages/tools/babylonServer/webpack.config.js"
                ],
                "tags": []
            },
            {
                "pr": "12377",
                "title": "support debug in older versions",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js"
                ],
                "tags": []
            },
            {
                "pr": "12376",
                "title": "Add some missing onPropertyChangedObservable to inspector…",
                "description": "… components.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12375",
                "title": "fix: getPositionData missing slice of vertex positions",
                "description": "Change getPositionData  to slice the vertex position array after getting it from the geometry to fix the issue that when getPositionData is called repeatedly it only worked correctly the first time.\r\n\r\nPG: https://playground.babylonjs.com/#SYQW69#1034\r\nForum: https://forum.babylonjs.com/t/bug-mesh-getpositiondata-blows-up-everytime-you-run-it/29246\r\n",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12176",
                "title": "Additional WebXR image tracking changes for native integration",
                "description": "This PR includes some more changes for WebXR Image Tracking integration for BabylonNative. and some cleanup from the previous change: https://github.com/BabylonJS/Babylon.js/pull/12097\r\n\r\nThe primary change is to  update nativeXRFrame to pull the results array directly from the frame object rather than marshalling back to native code every time.  This should improve per-frame CPU load.\r\n\r\nSee: https://github.com/BabylonJS/BabylonNative/pull/1032 for the consuming BabylonNative change.",
                "author": {
                    "name": "Alex-MSFT",
                    "url": "https://github.com/Alex-MSFT"
                },
                "files": [
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/XR/features/WebXRImageTracking.ts",
                    "packages/dev/core/src/XR/native/nativeXRFrame.ts"
                ],
                "tags": []
            },
            {
                "pr": "12332",
                "title": "Add support for GLTF 2.0 Serializer KHR_materials_specular",
                "description": "GLTF 2.0 Serializer is missing the KHR_materials_specular extension\r\nThis PR add support for the KHR_materials_specular to the GLTF2.0 serializer.\r\nValues are mapped as\r\n\r\n- specularFactor : metallicF0Factor \r\n- specularTexture : metallicReflectanceTexture \r\n- specularColorFactor : metallicReflectanceColor\r\n- specularColorTexture : reflectanceTexture\r\n\r\nusing default value or `undefined ` to decide wether or not the data should be serialized.\r\ndefault values are \r\n- specularFactor : 1.0f \r\n- specularColorFactor : [1.0f,1.0f,1.0f] \r\n\r\nTest has been conducted using this standard sample [model](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/SpecularTest)\r\nMaterials has been loaded and serialized succesfully without any diff.\r\nclose #8968\r\n",
                "author": {
                    "name": "pandaGaume",
                    "url": "https://github.com/pandaGaume"
                },
                "files": [
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_specular.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts"
                ],
                "tags": []
            },
            {
                "pr": "12372",
                "title": "Fixing typings for camera detachControl",
                "description": null,
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Cameras/camera.ts"
                ],
                "tags": []
            },
            {
                "pr": "12374",
                "title": "Physics,scene Bug fixes",
                "description": "- Bug fix https://forum.babylonjs.com/t/inspector-bug-with-wireframe-not-being-aligned-on-mesh/29021/10\r\nClone for wireframe mesh was also cloning physics impostor. And the impostor having a delta rotation, it was applied twice (parent's delta + delta) causing invalid rendering\r\n- Bug fix https://forum.babylonjs.com/t/physicsimpostor-ignoreparent-causes-crash/29194/4\r\n- scene `skipPointerDownPicking` : do not pick ray in scene when not appropriate. This is causing massive performance drop on native.",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Inputs/scene.inputManager.ts",
                    "packages/dev/core/src/Physics/physicsImpostor.ts",
                    "packages/dev/core/src/scene.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12369",
                "title": "Fix minor shader compiler issues",
                "description": "Changes:\r\n - Allow semicolons in shader single line comments\r\n - ~~Allow indented multiline macros~~\r\n \r\nRelated post in forum showing reproduction for the single line comment issue:\r\n- https://forum.babylonjs.com/t/possible-shader-compiler-bug-with-single-line-comments/29182\r\n\r\n~~There are no reports for the indented multiline macro issue, but I verified locally that indenting a multiline macro would break compiler, and with this fix, it works.~~\r\n",
                "author": {
                    "name": "kaliatech",
                    "url": "https://github.com/kaliatech"
                },
                "files": [
                    "packages/dev/core/src/Engines/Processors/shaderCodeCursor.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12370",
                "title": "Fix babylon mesh parsing, materials were not reattached.",
                "description": "https://forum.babylonjs.com/t/serialized-object-then-reload-without-material/29193/3",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Loading/Plugins/babylonFileLoader.ts"
                ],
                "tags": [
                    "bug",
                    "loaders"
                ]
            },
            {
                "pr": "12363",
                "title": "Move the local server to compile using ts-loader",
                "description": "Webpack will now compile typescript using ts-loader and will not use the compiled sources from the dist folders of the dev / lts packages.\nNote that this might break LTS development, but as this hasn't started yet it is not urgent.\n\nThe time it takes to compile is actually the same (might be a little slower this way), but the server won't let you load the resources while compiling.\n\nThe server will now wait before reloading the resources while compiling.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/tasks.json",
                    "package.json",
                    "packages/dev/buildTools/src/devWatcher.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/gui/src/2D/advancedDynamicTexture.ts",
                    "packages/dev/gui/src/2D/controls/index.ts",
                    "packages/dev/inspector/src/components/actionTabs/actionTabsComponent.tsx",
                    "packages/tools/babylonServer/src/core/index-dev.ts",
                    "packages/tools/babylonServer/src/core/index-lts.ts",
                    "packages/tools/babylonServer/src/gui/index-dev.ts",
                    "packages/tools/babylonServer/src/gui/index-lts.ts",
                    "packages/tools/babylonServer/src/guiEditor/index.ts",
                    "packages/tools/babylonServer/src/inspector/index.ts",
                    "packages/tools/babylonServer/src/loaders/index-dev.ts",
                    "packages/tools/babylonServer/src/loaders/index-lts.ts",
                    "packages/tools/babylonServer/src/loaders/index.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF1FileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF2.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTF2FileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-glTFFileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-objFileLoader.ts",
                    "packages/tools/babylonServer/src/loaders/legacy-stlFileLoader.ts",
                    "packages/tools/babylonServer/src/materials/index-dev.ts",
                    "packages/tools/babylonServer/src/materials/index-lts.ts",
                    "packages/tools/babylonServer/src/nodeEditor/index.ts",
                    "packages/tools/babylonServer/src/postProcesses/index-dev.ts",
                    "packages/tools/babylonServer/src/postProcesses/index-lts.ts",
                    "packages/tools/babylonServer/src/proceduralTextures/index-dev.ts",
                    "packages/tools/babylonServer/src/proceduralTextures/index-lts.ts",
                    "packages/tools/babylonServer/src/sceneJs.js",
                    "packages/tools/babylonServer/src/serializers/index-dev.ts",
                    "packages/tools/babylonServer/src/serializers/index-lts.ts",
                    "packages/tools/babylonServer/src/serializers/legacy-dev.ts",
                    "packages/tools/babylonServer/src/serializers/legacy-lts.ts",
                    "packages/tools/babylonServer/src/serializers/legacy-stlSerializer.ts",
                    "packages/tools/babylonServer/src/serializers/legacy.ts",
                    "packages/tools/babylonServer/tsconfig.build.json",
                    "packages/tools/babylonServer/webpack.config.js",
                    "packages/tools/babylonServer/webpack.config.snapshot.js"
                ],
                "tags": [
                    "build",
                    "new feature"
                ]
            },
            {
                "pr": "12367",
                "title": "Revert the missing fix and add some logs",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12365",
                "title": "Add support for Iridescence in PBR and GLTF",
                "description": "* Support iridescence in PBR Material\r\n* Support iridescence in NME PBR Material\r\n* Support iridescence in GLTF Loader\r\n* Support iridescence in GLTF Exporter\r\n\r\nDoc is available here: https://documentation-git-iridescence-babylonjs.vercel.app/divingDeeper/materials/using/masterPBR#iridescence on PR https://github.com/BabylonJS/Documentation/pull/521\r\n\r\n![iridescence_nme](https://user-images.githubusercontent.com/16655165/162496948-0509c192-58d0-44ab-9358-a23565ef8bcd.png)\r\n\r\nCan Be tested on Playgrounds:\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/12365/merge/index.html#2FDQT5#1505\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/12365/merge/index.html#2FDQT5#1507\r\nhttps://babylonsnapshots.z22.web.core.windows.net/refs/pull/12365/merge/index.html#2FDQT5#1508\r\n\r\n",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/iridescenceBlock.ts",
                    "packages/dev/core/src/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.ts",
                    "packages/dev/core/src/Materials/PBR/index.ts",
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts",
                    "packages/dev/core/src/Materials/PBR/pbrIridescenceConfiguration.ts",
                    "packages/dev/core/src/Materials/materialFlags.ts",
                    "packages/dev/core/src/Materials/materialPluginFactoryExport.ts",
                    "packages/dev/core/src/Rendering/boundingBoxRenderer.ts",
                    "packages/dev/core/src/Shaders/ShadersInclude/boundingBoxRendererUboDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/lightFragment.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBRDFFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrBlockIridescence.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDirectLightingFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrDirectLightingSetupFunctions.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrFragmentSamplersDeclaration.fx",
                    "packages/dev/core/src/Shaders/ShadersInclude/pbrVertexDeclaration.fx",
                    "packages/dev/core/src/Shaders/pbr.fragment.fx",
                    "packages/dev/core/src/Shaders/pbr.vertex.fx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/tools/gltfComponent.tsx",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/loaders/src/glTF/2.0/Extensions/index.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/KHR_materials_iridescence.ts",
                    "packages/dev/serializers/src/glTF/2.0/Extensions/index.ts",
                    "packages/public/glTF2Interface/babylon.glTF2Interface.d.ts",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence_gltf.png",
                    "packages/tools/tests/test/visualization/ReferenceImages/iridescence_nme.png",
                    "packages/tools/tests/test/visualization/config.json"
                ],
                "tags": [
                    "materials",
                    "glTF",
                    "new feature",
                    "nme"
                ]
            },
            {
                "pr": "12366",
                "title": "Reset cached vertex data after CPU skinning is turned off",
                "description": "When CPU skinning is turned off (by setting computeBonesUsingShaders to true), then the vertex positions and normals are reset to cached values. With this PR the cached values are then nulled so that if CPU skinning is later enabled again, the cache will be re-populated with the latest values.\r\n\r\nIssue: https://github.com/BabylonJS/Babylon.js/issues/12364\r\nForum: https://forum.babylonjs.com/t/computebonesusingshaders-on-off-on-is-causing-a-major-bug/29162/18\r\n\r\nTest PGs: https://playground.babylonjs.com/#SYQW69#1031\r\nhttps://playground.babylonjs.com/#SYQW69#1014",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12361",
                "title": "make param defaults explicit for function getPositionData",
                "description": "For the function getPositionData that I PR'ed a few months ago, the params applySkeleton and applyMorph default to false implicitly (an oversight). This PR just makes those param defaults explicit for clarity and proper typing (e.g. for TS).",
                "author": {
                    "name": "BlakeOne",
                    "url": "https://github.com/BlakeOne"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12359",
                "title": "Prevent alt+click shortcut to drop elbow on complex node connections",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/nodeLink.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12356",
                "title": "Fix default settings in video texture",
                "description": "Fixing this - https://forum.babylonjs.com/t/babylon-5-0-video-not-playing/29132",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/videoTexture.ts"
                ],
                "tags": [
                    "bug",
                    "texture"
                ]
            },
            {
                "pr": "12357",
                "title": "Avoid double loading a scene when the playground is saved.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/playground/src/tools/saveManager.ts"
                ],
                "tags": []
            }
        ],
        "5.1.0": [
            {
                "pr": "12353",
                "title": "add timestamp to CDN assets",
                "description": "Every time a snapshot is created a timestamp.js file willbe updated. this timestamp will be loaded before all babylon resources, and it is never cached.\nThe timestamp will be used to load from the CDN, which will cache for longer time with the query string included in the cache, meaning - the resources will be cached until a new timestamp is generated.\n\nThis way we will not have to force-refresh anymore after a nightly.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/prepareSnapshot.ts",
                    "packages/tools/guiEditor/public/index.js",
                    "packages/tools/nodeEditor/public/index.js",
                    "packages/tools/playground/public/index.js",
                    "packages/tools/playground/src/tools/monacoManager.ts",
                    "packages/tools/sandbox/public/index.js"
                ],
                "tags": [
                    "build",
                    "new feature"
                ]
            }
        ],
        "5.0.4": [
            {
                "pr": "12348",
                "title": "On parse, reconnects the keys of the virtual keyboard",
                "description": "Forum thread: https://forum.babylonjs.com/t/webxr-gui-editor-and-virtualkeyboard/27826\r\n\r\nWhen parsing a virtual keyboard, we can scan the children for any key buttons and reconnect them to the keyboard. This PR uses the name of the button to do this - this will work unless they have renamed the control. We could also consider using the text of the button instead.\r\n\r\n@RaananW curious about your thoughts on this. I know we debated whether or not this was worth supporting but I think it's a small enough change that it might be worth having.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/virtualKeyboard.ts"
                ],
                "tags": [
                    "gui"
                ]
            },
            {
                "pr": "12352",
                "title": "Fix SSAORenderingPipeline with multi cameras",
                "description": "https://forum.babylonjs.com/t/ssao-pipeline-not-working-properly-when-2-different-cameras-involved/29069",
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.ts"
                ],
                "tags": [
                    "bug"
                ]
            },
            {
                "pr": "12351",
                "title": "Allow editors packages to be included in a single project",
                "description": "Due to the way the shared ui components were declared it was not possible to include both editors in a single typescript project.\nThis generates a different namespace to the shared ui components so they are not declared twice.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/packageMapping.ts"
                ],
                "tags": [
                    "bug",
                    "build"
                ]
            },
            {
                "pr": "12345",
                "title": "use ignoreAdaptiveScaling on containers width adaptWidthToChildren or adaptHeightToChildren",
                "description": "See forum thread: https://forum.babylonjs.com/t/gui-adaptwidthtochildren-not-working-with-adaptive-scaling/28911/7\r\n\r\nContainers with adaptWidthToChildren or adaptHeightToChildren currently have adaptative scaling applied twice, once when their children's dimensions are computed and once when their own dimensions are computed. This PR simply turns off adaptive scaling on the relevant property when it's being adapted to the children's dimensions.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/gui/src/2D/controls/container.ts"
                ],
                "tags": [
                    "bug",
                    "gui"
                ]
            },
            {
                "pr": "12346",
                "title": "Fix Color3.asArray, Color4.asArray, Color4.toArray and docs for Color…",
                "description": "…4.fromHexString.\r\n\r\nAs proposed in the forum: https://forum.babylonjs.com/t/several-small-issues-with-color3-and-color4/29092/2\r\n\r\nThree small fixes for Color3 and Color4:\r\n- Simpler implementation of Color3.asArray and Color4.asArray as the original implementation was slow in my experience.\r\n- Use FloatArray as first argument of Color4.toArray so it can write to Float32Array.\r\n- Improve documentation for Color4.fromHexString to document behaviour, including the change introduced in Babylon 5.",
                "author": {
                    "name": "axeljaeger",
                    "url": "https://github.com/axeljaeger"
                },
                "files": [
                    "packages/dev/core/src/Maths/math.color.ts"
                ],
                "tags": [
                    "bug",
                    "math"
                ]
            },
            {
                "pr": "12337",
                "title": "fix physics regression",
                "description": "followup https://forum.babylonjs.com/t/compound-to-empty-mesh-demo-works-differently-for-cannon-omio-vs-ammo/29062\r\n\r\nWhen computing bounding info from scratch, before this change, the min and max position was `mesh.position`. So, in this case:\r\n```\r\nvar compoundBody = new BABYLON.Mesh(\"compoundBody\", scene);\r\ncompoundBody.position.y=3;\r\n\r\ncompoundBody.computeWorldMatrix(true);\r\nconsole.log(compoundBody.getBoundingInfo().boundingSphere.centerWorld.y);\r\nconsole.log(compoundBody.position.y);\r\n```\r\nmin and max are (0,3,0), bouding sphere local center is (0,3,0).\r\nworld bounding sphere center is local center transformed by world matrix and its value is (0,6, 0) which is not correct. It breaks the physics for oimo and cannon. Computation is different with ammo and was not touched by this issue.\r\n\r\n\r\n@RaananW Git blame indicates you changed it last. Do you remember why/what it fixed?",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Meshes/abstractMesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12344",
                "title": "Let AssetContainer add/instantiate/remove individual components",
                "description": "Fix #12152 ",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/assetContainer.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12340",
                "title": "assign the number of textures correctly",
                "description": "The number of samples was not assigned correctly and was always 1 when binding to multisampled multiview (i.e. the oculus browser).\n\nThis PR fixes that.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/Materials/Textures/MultiviewRenderTarget.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12339",
                "title": "rotate the hand mesh opposed to the based transform node.",
                "description": "Fixing #12338",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/core/src/XR/features/WebXRHandTracking.ts"
                ],
                "tags": [
                    "bug",
                    "VR/AR/XR"
                ]
            },
            {
                "pr": "12342",
                "title": "Update the GLTF breaking change in What's new with a workaround.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "what's new.md"
                ],
                "tags": []
            },
            {
                "pr": "12341",
                "title": "Playground fails permanently when Babylon.js 3.3 is selected",
                "description": "Fixes #12336\nRemoves 3.3,\nmoves the 4.2.X branch to 4.2.1",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/tools/playground/public/index.js"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12325",
                "title": "Fix item duplication when gui editor is opened through the playground.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": []
            }
        ],
        "5.0.3": [
            {
                "pr": "12334",
                "title": "fix mergemesh when using RH",
                "description": "We are already taking in account the worldmatrix as the vertices are transformed by it in the process\r\nWe are also inverting indices in that case\r\n\r\nSo there is no need for a side override as the mesh will be left handed",
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/core/src/Meshes/mesh.ts"
                ],
                "tags": []
            },
            {
                "pr": "12333",
                "title": "Fix instance color forwarding for PBR Instances",
                "description": "Followup https://forum.babylonjs.com/t/vertex-error-and-no-colors-on-thin-instances-after-upgrade/28492/13\r\nInstance colors were not properly forwarded for PBR materials",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Materials/PBR/pbrBaseMaterial.ts"
                ],
                "tags": []
            },
            {
                "pr": "12328",
                "title": "Native textures",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    ".gitignore",
                    "packages/dev/core/src/Engines/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/WebGPU/Extensions/engine.readTexture.ts",
                    "packages/dev/core/src/Engines/engine.ts",
                    "packages/dev/core/src/Engines/nativeEngine.ts",
                    "packages/dev/core/src/Engines/thinEngine.ts",
                    "packages/dev/core/src/Engines/webgpuEngine.ts",
                    "packages/dev/core/src/Materials/Textures/baseTexture.ts",
                    "packages/dev/core/src/Materials/Textures/texture.ts"
                ],
                "tags": []
            },
            {
                "pr": "12329",
                "title": "Get error",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/thinEngine.ts"
                ],
                "tags": []
            }
        ],
        "5.0.1": [
            {
                "pr": "12319",
                "title": "revamp declarations",
                "description": "Making declaration build a bit more future-safe\n",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/generateDeclaration.ts",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/buildTools/src/webpackTools.ts",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/materials/textures/textureEditorComponent.tsx",
                    "packages/dev/inspector/src/components/globalState.ts",
                    "packages/public/@babylonjs/inspector/package.json",
                    "packages/public/umd/babylonjs-gui/config.json"
                ],
                "tags": []
            },
            {
                "pr": "12320",
                "title": "empty loadingUIText setter for null engine",
                "description": "using null engine and setting loading ui text to it causes crash...\nadded 'do nothing' setter for `loadingUIText`",
                "author": {
                    "name": "nekochanoide",
                    "url": "https://github.com/nekochanoide"
                },
                "files": [
                    "packages/dev/core/src/Engines/nullEngine.ts"
                ],
                "tags": []
            },
            {
                "pr": "12312",
                "title": "WebGPU Update",
                "description": null,
                "author": {
                    "name": "sebavan",
                    "url": "https://github.com/sebavan"
                },
                "files": [
                    "packages/dev/core/src/Engines/WebGPU/webgpuShaderProcessorsWGSL.ts",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/meshUboDeclaration.fx",
                    "packages/dev/core/src/ShadersWGSL/ShadersInclude/sceneUboDeclaration.fx",
                    "packages/dev/core/src/ShadersWGSL/gpuUpdateParticles.compute.fx",
                    "packages/tools/babylonServer/public/twgsl/twgsl.js",
                    "packages/tools/babylonServer/public/twgsl/twgsl.wasm"
                ],
                "tags": []
            },
            {
                "pr": "12311",
                "title": "Only update the GUI size when arrow control's drag is stopped.",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12314",
                "title": "Update Display Grid Parameters",
                "description": "Updates the display grid parameters to bring it into line with the other controls. Introduces three new icons as part of this change",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/imgs/displayGridLine1Icon.svg",
                    "packages/dev/sharedUiComponents/src/imgs/displayGridLine2Icon.svg",
                    "packages/dev/sharedUiComponents/src/imgs/frequencyIcon.svg",
                    "packages/tools/guiEditor/src/components/propertyTab/propertyGrids/gui/displayGridPropertyGridComponent.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12315",
                "title": "Fix overflows on left panel",
                "description": "Fixes issue where the tree view and the creation buttons could overflow and disappear. This is a temporary solution which just adds scrollbars when necessary. We will want to explore other design solutions in future.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/main.scss"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12313",
                "title": "update the give feedback link to the beta thread",
                "description": "Feedback link now points to the beta thread instead of the alpha thread.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12316",
                "title": "Removed outdated section about building from readme.md.",
                "description": null,
                "author": {
                    "name": "syntheticmagus",
                    "url": "https://github.com/syntheticmagus"
                },
                "files": [
                    "readme.md"
                ],
                "tags": []
            },
            {
                "pr": "12318",
                "title": "Added a new flag for checking double sided mesh in collision",
                "description": "Added a new flag for checking double sided mesh in collision detection (disable by default)\r\n\r\nfollow up https://forum.babylonjs.com/t/movewithcollisions-cant-handle-doublesided-meshes/28928\r\ndouble sided face are evaluated 2 times, by design. With this change, they are only evaluated once.\r\nTo not break back compat, it's hidden behind a flag.\r\nTo enable it :\r\n```\r\nBABYLON.Collider.DoubleSidedCheck = true;\r\n```",
                "author": {
                    "name": "CedricGuillemet",
                    "url": "https://github.com/CedricGuillemet"
                },
                "files": [
                    "packages/dev/core/src/Collisions/collider.ts"
                ],
                "tags": [
                    "new feature"
                ]
            },
            {
                "pr": "12301",
                "title": "Changes to saving and cleanup",
                "description": "Fixes a bug where saving the GUI multiple times would trigger a crash.\r\n\r\nAlso modifies the behavior around saving and restoring GUI properties when opening a live GUI scene. Now we store a list of all observers attached to the control, remove them all, and then restore them when the editor is closed. This seems like the best way to handle observers - they should not trigger while the GUI editor is open.",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/propertyTab/propertyTabComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12290",
                "title": "Beta release",
                "description": "Turns off the alpha warning message and adds the beta flag to signify the release of the GUI editor beta! Will merge it tomorrow assuming all is well :)",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/scss/commandBar.scss"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12300",
                "title": "Update components on unit change",
                "description": "Adds back in the units comparison in shouldComponentUpdate, which allows the input components to re-render if units change. (unitLocked is still removed as this is now part of the UnitButton component rather than the input itself)",
                "author": {
                    "name": "darraghjburke",
                    "url": "https://github.com/darraghjburke"
                },
                "files": [
                    "packages/dev/sharedUiComponents/src/lines/floatLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/sliderLineComponent.tsx",
                    "packages/dev/sharedUiComponents/src/lines/textInputLineComponent.tsx"
                ],
                "tags": [
                    "gui editor"
                ]
            },
            {
                "pr": "12271",
                "title": "Fix deletion of descendant controls in the gui editor",
                "description": "Without this change, deleting a button, for example, would only delete it on the live texture but not on the linked GUI editor",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "12299",
                "title": "Separate reframing with selected controls and the entire screen",
                "description": null,
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/guiEditor/src/components/commandBarComponent.tsx",
                    "packages/tools/guiEditor/src/diagram/workbench.tsx",
                    "packages/tools/guiEditor/src/globalState.ts"
                ],
                "tags": []
            },
            {
                "pr": "12309",
                "title": "update build config script",
                "description": "\nHow to use:\n\nFrom the command line run the following:\nnode ./scripts/updateBuildConfig.js versionType\nversionType can be either \"major\", \"minor\", \"patch\", or \"prerelease\"\nWhen prerelease the second argument is the prerelease id (alpha, beta, rc). keep empty to keep the same one.\n \nThis will be triggered by the CI when running the right pipeline (publish minor, publish major, publish patch)\n\nCommit the file change afterwards and submit a pull request to first allow the tests to run.\n ",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "scripts/updateBuildConfig.js"
                ],
                "tags": []
            },
            {
                "pr": "12296",
                "title": "Add the viewer to the automated build process",
                "description": "**To be merged after 5.0 release!**\r\n\r\nThis adds the viewer to the automated build process.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    ".vscode/settings.json",
                    "package-lock.json",
                    "package.json",
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/public/@babylonjs/viewer/license.md",
                    "packages/public/@babylonjs/viewer/package.json",
                    "packages/public/@babylonjs/viewer/readme.md",
                    "packages/public/@babylonjs/viewer/tsconfig.build.json",
                    "packages/public/@babylonjs/viewer/tsconfig.json",
                    "packages/public/umd/babylonjs-viewer/.npmignore",
                    "packages/public/umd/babylonjs-viewer/config.json",
                    "packages/public/umd/babylonjs-viewer/license.md",
                    "packages/public/umd/babylonjs-viewer/package.json",
                    "packages/public/umd/babylonjs-viewer/readme.md",
                    "packages/public/umd/babylonjs-viewer/src/index.ts",
                    "packages/public/umd/babylonjs-viewer/tsconfig.build.json",
                    "packages/public/umd/babylonjs-viewer/tsconfig.json",
                    "packages/public/umd/babylonjs-viewer/webpack.config.js",
                    "packages/tools/viewer/package.json",
                    "packages/tools/viewer/src/assets/font.ts",
                    "packages/tools/viewer/src/assets/img.ts",
                    "packages/tools/viewer/src/assets/index.ts",
                    "packages/tools/viewer/src/assets/templates.ts",
                    "packages/tools/viewer/src/configuration/configuration.ts",
                    "packages/tools/viewer/src/configuration/interfaces/sceneConfiguration.ts",
                    "packages/tools/viewer/src/configuration/interfaces/vrConfiguration.ts",
                    "packages/tools/viewer/src/configuration/mappers.ts",
                    "packages/tools/viewer/src/helper/index.ts",
                    "packages/tools/viewer/src/index.ts",
                    "packages/tools/viewer/src/initializer.ts",
                    "packages/tools/viewer/src/labs/viewerLabs.ts",
                    "packages/tools/viewer/src/loader/modelLoader.ts",
                    "packages/tools/viewer/src/loader/plugins/loaderPlugin.ts",
                    "packages/tools/viewer/src/managers/sceneManager.ts",
                    "packages/tools/viewer/src/managers/telemetryManager.ts",
                    "packages/tools/viewer/src/model/viewerModel.ts",
                    "packages/tools/viewer/src/templating/templateManager.ts",
                    "packages/tools/viewer/src/templating/viewerTemplatePlugin.ts",
                    "packages/tools/viewer/src/viewer/defaultViewer.ts",
                    "packages/tools/viewer/src/viewer/viewer.ts",
                    "packages/tools/viewer/webpack.config.js",
                    "tsconfig.build.json",
                    "tsconfig.json"
                ],
                "tags": []
            }
        ],
        "5.0.2": [
            {
                "pr": "12327",
                "title": "Adjust behavior of NME selection to only select a frame if there aren…",
                "description": "…'t nodes selected. Also fix an error that showed up on compile.",
                "author": {
                    "name": "carolhmj",
                    "url": "https://github.com/carolhmj"
                },
                "files": [
                    "packages/tools/nodeEditor/src/diagram/graphCanvas.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12326",
                "title": "make sure externals are only the public dev packages",
                "description": "Shared UI components were considered as external package instead of embedded. due to a recent change I have made.\n\nThis fixes the issue.",
                "author": {
                    "name": "RaananW",
                    "url": "https://github.com/RaananW"
                },
                "files": [
                    "packages/dev/buildTools/src/packageMapping.ts",
                    "packages/dev/buildTools/src/webpackTools.ts"
                ],
                "tags": []
            },
            {
                "pr": "12323",
                "title": "add ability to change node parent in inspector",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/cameras/commonCameraPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/lights/commonLightPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/meshPropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/meshes/transformNodePropertyGridComponent.tsx",
                    "packages/dev/inspector/src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx"
                ],
                "tags": []
            },
            {
                "pr": "12321",
                "title": "Inspector - Empty mesh nodes should display with the mesh icon",
                "description": null,
                "author": {
                    "name": "deltakosh",
                    "url": "https://github.com/deltakosh"
                },
                "files": [
                    "packages/dev/inspector/src/components/sceneExplorer/treeItemSpecializedComponent.tsx"
                ],
                "tags": []
            }
        ]
    }
}