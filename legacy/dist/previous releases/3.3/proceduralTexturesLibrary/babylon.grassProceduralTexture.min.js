var BABYLON,__extends=this&&this.__extends||(function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,o){r.__proto__=o}||function(r,o){for(var e in o)o.hasOwnProperty(e)&&(r[e]=o[e])})(r,o)};return function(r,o){function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}})(),__decorate=this&&this.__decorate||function(r,o,e,t){var n,s=arguments.length,i=s<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(r,o,e,t);else for(var l=r.length-1;0<=l;l--)(n=r[l])&&(i=(s<3?n(i):3<s?n(o,e,i):n(o,e))||i);return 3<s&&i&&Object.defineProperty(o,e,i),i};!(function(a){var r=(function(i){function l(r,o,e,t,n){var s=i.call(this,r,o,"grassProceduralTexture",e,t,n)||this;return s._groundColor=new a.Color3(1,1,1),s._grassColors=[new a.Color3(.29,.38,.02),new a.Color3(.36,.49,.09),new a.Color3(.51,.6,.28)],s.updateShaderUniforms(),s}return __extends(l,i),l.prototype.updateShaderUniforms=function(){this.setColor3("herb1Color",this._grassColors[0]),this.setColor3("herb2Color",this._grassColors[1]),this.setColor3("herb3Color",this._grassColors[2]),this.setColor3("groundColor",this._groundColor)},Object.defineProperty(l.prototype,"grassColors",{get:function(){return this._grassColors},set:function(r){this._grassColors=r,this.updateShaderUniforms()},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"groundColor",{get:function(){return this._groundColor},set:function(r){this._groundColor=r,this.updateShaderUniforms()},enumerable:!0,configurable:!0}),l.prototype.serialize=function(){var r=a.SerializationHelper.Serialize(this,i.prototype.serialize.call(this));r.customType="BABYLON.GrassProceduralTexture",r.grassColors=[];for(var o=0;o<this._grassColors.length;o++)r.grassColors.push(this._grassColors[o].asArray());return r},l.Parse=function(r,o,e){for(var t=a.SerializationHelper.Parse((function(){return new l(r.name,r._size,o,void 0,r._generateMipMaps)}),r,o,e),n=[],s=0;s<r.grassColors.length;s++)n.push(a.Color3.FromArray(r.grassColors[s]));return t.grassColors=n,t},__decorate([a.serializeAsColor3()],l.prototype,"groundColor",null),l})(a.ProceduralTexture);a.GrassProceduralTexture=r})(BABYLON||(BABYLON={})),BABYLON.Effect.ShadersStore.grassProceduralTexturePixelShader="precision highp float;\nvarying vec2 vPosition;\nvarying vec2 vUV;\nuniform vec3 herb1Color;\nuniform vec3 herb2Color;\nuniform vec3 herb3Color;\nuniform vec3 groundColor;\nfloat rand(vec2 n) {\nreturn fract(cos(dot(n,vec2(12.9898,4.1414)))*43758.5453);\n}\nfloat noise(vec2 n) {\nconst vec2 d=vec2(0.0,1.0);\nvec2 b=floor(n),f=smoothstep(vec2(0.0),vec2(1.0),fract(n));\nreturn mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);\n}\nfloat fbm(vec2 n) {\nfloat total=0.0,amplitude=1.0;\nfor (int i=0; i<4; i++) {\ntotal+=noise(n)*amplitude;\nn+=n;\namplitude*=0.5;\n}\nreturn total;\n}\nvoid main(void) {\nvec3 color=mix(groundColor,herb1Color,rand(gl_FragCoord.xy*4.0));\ncolor=mix(color,herb2Color,rand(gl_FragCoord.xy*8.0));\ncolor=mix(color,herb3Color,rand(gl_FragCoord.xy));\ncolor=mix(color,herb1Color,fbm(gl_FragCoord.xy*16.0));\ngl_FragColor=vec4(color,1.0);\n}";