.ConfiguratorContainer {
    $line-height: 30px;
    $line-padding-sides: 5px;
    $line-padding-top-bottom: 10px;
    $line-content-gap: 0.8rem;
    $line-content-spacing: "space-between";
    $border-radius: 5px;
    color: white;
    background: #333333;
    grid-row: 1;
    grid-column: 1;
    overflow-y: auto;
    height: 100%;
    overflow: hidden;
    width: 100%;
    box-sizing: border-box;

    // Wrappers to help with row flex for lines
    .FlexLine {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: $line-content-gap;
        height: $line-height;
        padding: $line-padding-top-bottom $line-padding-sides;
        justify-content: $line-content-spacing;
    }
    .FlexItem {
        height: 100%;
        align-content: center;
        text-align: center;
    }

    // Overriding web defaults for input. At root because many components use it.
    input {
        padding: $line-padding-sides;
        border: 0;
        border-radius: $border-radius;
        box-sizing: border-box;
        width: 100%;
        font: inherit; // Forms don't inherit the font-family by default
    }

    // Overriding multiline version of BJS TextInputLineComponent. Is bespoke, so fine to do like this.
    .textInputArea {
        height: 4 * $line-height;

        textarea {
            padding: $line-padding-sides;
            width: 100%;
            height: 100%;
            resize: none;
            border-radius: $border-radius;
            box-sizing: border-box;
            width: 100%;
            font: inherit;
        }

        textarea:disabled {
            opacity: 1;
            color: black;
            background: white;
            cursor: text;
            border: inherit;
        }
    }

    // Overriding BJS TextInputLineComponent, single line
    .textInputLine {
        height: 100%;
        .value {
            height: 100%;
            input {
                height: 100%;
            }
        }
    }

    // Overriding BJS ButtonLineComponent
    button {
        background: #222222;
        outline: 1px solid rgb(51, 122, 183);
        outline-offset: -1px;
        border-radius: $border-radius;
        color: white;
        padding: 4px 5px;
        opacity: 0.9;
        width: 100%;
        box-sizing: border-box;
    }
    button:hover {
        opacity: 1;
    }
    button:active {
        background: #282828;
    }
    button:focus {
        border: 1px solid rgb(51, 122, 183);
        outline: 0px;
    }

    // Overriding SliderLine BJS component
    .sliderLine {
        align-self: center;
        display: flex;
        flex-direction: row;
        justify-content: $line-content-spacing;
        gap: $line-content-gap;

        .label {
            flex: 1;
            align-self: center;
            text-align: left;
        }

        .slider {
            align-content: center;
            flex: 2;

            .range {
                -webkit-appearance: none;
                width: 100%;
                height: 20%;
                background: #d3d3d3;
                border-radius: 5px;
                outline: none;
                opacity: 0.7;
                transition: opacity 0.2s;
            }

            .range:hover {
                opacity: 1;
            }

            .range::-webkit-slider-thumb {
                -webkit-appearance: none;
                appearance: none;
                width: 14px;
                height: 14px;
                border-radius: 50%;
                background: rgb(51, 122, 183);
                cursor: pointer;
            }

            .range::-moz-range-thumb {
                width: 14px;
                height: 14px;
                border-radius: 50%;
                background: rgb(51, 122, 183);
                cursor: pointer;
            }
        }

        // Hide the float text input
        .floatLine {
            display: none;
        }

        // Hide the copy button
        .copy {
            display: none;
        }
    }

    // Custom image button
    // Hack: since the svgs are dark, use inverted colors
    .ImageButton {
        border-radius: $border-radius;
        background: rgb(221, 221, 221);
        outline: 1px solid rgb(204, 133, 72);
        filter: invert(1);
        outline-offset: -1px;
        opacity: 0.9;
    }
    .ImageButton:hover {
        opacity: 1;
    }
    .ImageButton:active {
        background: rgb(215, 215, 215);
    }

    // OptionsLine component
    .listLine {
        align-self: center;
        display: flex;
        flex-direction: row;
        justify-content: $line-content-spacing;
        gap: $line-content-gap;

        .label {
            flex: 1;
            align-self: center;
            text-align: left;
        }

        .options {
            align-content: center;
            flex: 1.5;

            select {
                width: 100%;
            }
        }

        .copy {
            display: none;
        }
    }

    #header {
        height: 30px;
        font-size: 16px;
        color: white;
        background: #222222;
        grid-row: 1;
        text-align: center;
        display: grid;
        grid-template-columns: 30px 1fr;
        user-select: none;

        #logo {
            position: relative;
            grid-column: 1;
            width: 24px;
            height: 24px;
            left: 0;
            display: flex;
            align-self: center;
            justify-self: center;
        }

        #title {
            grid-column: 2;
            display: grid;
            align-items: center;
            text-align: center;
        }
    }

    input[type="color"] {
        -webkit-appearance: none;
        border: 1px solid rgba(255, 255, 255, 0.5);
        padding: 0;
        width: 30px;
        height: 20px;
    }
    input[type="color"]::-webkit-color-swatch-wrapper {
        padding: 0;
    }
    input[type="color"]::-webkit-color-swatch {
        border: none;
    }

    .paneContainer {
        margin-top: 3px;
        display: grid;
        grid-template-rows: 100%;
        grid-template-columns: 100%;

        .paneList {
            border-left: 3px solid transparent;
        }

        &:hover {
            .paneList {
                border-left: 3px solid rgba(51, 122, 183, 0.8);
            }

            .paneContainer-content {
                .header {
                    .title {
                        border-left: 3px solid rgb(51, 122, 183);
                    }
                }
            }
        }

        .paneContainer-highlight-border {
            grid-row: 1;
            grid-column: 1;
            opacity: 1;
            border: 3px solid red;
            transition: opacity 250ms;
            pointer-events: none;

            &.transparent {
                opacity: 0;
            }
        }

        .paneContainer-content {
            grid-row: 1;
            grid-column: 1;

            .header {
                display: grid;
                grid-template-columns: 1fr auto;
                background: #555555;
                height: 30px;
                padding-right: 5px;
                cursor: pointer;

                .title {
                    border-left: 3px solid transparent;
                    padding-left: 5px;
                    grid-column: 1;
                    display: flex;
                    align-items: center;
                }

                .collapse {
                    grid-column: 2;
                    display: flex;
                    align-items: center;
                    justify-items: center;
                    transform-origin: center;

                    &.closed {
                        transform: rotate(180deg);
                    }
                }
            }

            .paneList > div:not(:last-child) {
                border-bottom: 0.5px solid rgba(255, 255, 255, 0.1);
            }

            .fragment > div:not(:last-child) {
                border-bottom: 0.5px solid rgba(255, 255, 255, 0.1);
            }
        }
    }

    .color-picker {
        height: calc(100% - 8px);
        margin: 4px;
        width: calc(100% - 8px);

        .color-rect {
            height: calc(100% - 4px);
            border: 2px white solid;
            cursor: pointer;
            min-height: 18px;
        }

        .color-picker-cover {
            position: fixed;
            top: 0px;
            right: 0px;
            bottom: 0px;
            left: 0px;
            z-index: 1;
        }

        .color-picker-float {
            z-index: 2;
            position: absolute;
        }
    }

    .gradient-step {
        display: grid;
        grid-template-rows: 100%;
        grid-template-columns: 20px 30px 40px auto 20px 30px;
        padding-top: 5px;
        padding-left: 5px;
        padding-bottom: 5px;

        .step {
            grid-row: 1;
            grid-column: 1;
        }

        .color {
            grid-row: 1;
            grid-column: 2;
            cursor: pointer;
        }

        .step-value {
            margin-left: 5px;
            grid-row: 1;
            grid-column: 3;
            text-align: right;
            margin-right: 5px;
        }

        .step-slider {
            grid-row: 1;
            grid-column: 4;
            display: grid;
            justify-content: stretch;
            align-content: center;
            margin-right: -5px;
            padding-left: 12px;

            input {
                width: 90%;
            }
        }

        .gradient-copy {
            grid-row: 1;
            grid-column: 5;
            display: grid;
            align-content: center;
            justify-content: center;

            .img {
                height: 20px;
                width: 20px;
            }
            .img:hover {
                cursor: pointer;
            }
        }
        .gradient-delete {
            grid-row: 1;
            grid-column: 6;
            display: grid;
            align-content: center;
            justify-content: center;
            .img {
                height: 20px;
                width: 20px;
            }
            .img:hover {
                cursor: pointer;
            }
        }
    }

    .floatLine {
        padding-left: $line-padding-sides;
        height: 30px;
        display: grid;
        grid-template-columns: 1fr 120px;

        .label {
            grid-column: 1;
            display: flex;
            align-items: center;
        }

        .value {
            grid-column: 2;

            display: flex;
            align-items: center;

            input {
                width: 110px;
            }
        }

        .short {
            grid-column: 2;

            display: flex;
            align-items: center;

            input {
                width: 27px;
            }

            input::-webkit-outer-spin-button,
            input::-webkit-inner-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }
        }

        .copy {
            display: none;
        }
    }

    .vector3Line {
        padding-left: $line-padding-sides;
        display: grid;

        .firstLine {
            display: grid;
            grid-template-columns: 1fr auto 20px;
            height: 30px;

            .label {
                grid-column: 1;
                display: flex;
                align-items: center;
            }

            .vector {
                grid-column: 2;
                display: flex;
                align-items: center;
                text-align: right;
                opacity: 0.8;
            }

            .expand {
                grid-column: 3;
                display: grid;
                align-items: center;
                justify-items: center;
                cursor: pointer;
            }

            .copy {
                display: none;
            }
        }

        .secondLine {
            display: grid;
            padding-right: 5px;
            border-left: 1px solid rgb(51, 122, 183);

            .no-right-margin {
                margin-right: 0;
            }

            .numeric {
                display: grid;
                grid-template-columns: 1fr auto;
            }

            .numeric-label {
                text-align: right;
                grid-column: 1;
                display: flex;
                align-items: center;
                justify-self: right;
                margin-right: 10px;
            }

            .numeric-value {
                width: 120px;
                grid-column: 2;
                display: flex;
                align-items: center;
                border: 1px solid rgb(51, 122, 183);
            }
        }
    }

    .checkBoxLine {
        padding-left: $line-padding-sides;
        height: 30px;
        display: grid;
        grid-template-columns: 1fr auto;

        .label {
            grid-column: 1;
            display: flex;
            align-items: center;
        }

        .checkBox {
            grid-column: 2;

            display: flex;
            align-items: center;

            .lbl {
                position: relative;
                display: block;
                height: 14px;
                width: 34px;
                margin-right: 5px;
                background: #898989;
                border-radius: 100px;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .lbl:after {
                position: absolute;
                left: 3px;
                top: 2px;
                display: block;
                width: 10px;
                height: 10px;
                border-radius: 100px;
                background: #fff;
                box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);
                content: "";
                transition: all 0.15s ease;
            }

            .lbl:active:after {
                transform: scale(1.15, 0.85);
            }

            .cbx:checked ~ label {
                background: rgb(51, 122, 183);
            }

            .cbx:checked ~ label:after {
                left: 20px;
                background: rgb(22, 73, 117);
            }

            .cbx:checked ~ label.disabled {
                background: rgb(22, 73, 117);
                cursor: pointer;
            }

            .cbx:checked ~ label.disabled:after {
                left: 20px;
                background: rgb(85, 85, 85);
                cursor: pointer;
            }

            .cbx ~ label.disabled {
                background: rgb(85, 85, 85);
                cursor: pointer;
            }

            .hidden {
                display: none;
            }
        }

        .copy {
            display: none;
        }
    }

    .color3Line {
        padding-left: $line-padding-sides;
        display: grid;

        .firstLine {
            height: 30px;
            display: grid;
            grid-template-columns: 1fr auto 20px;

            .label {
                grid-column: 1;
                display: flex;
                align-items: center;
            }

            .textInputLine {
                display: none;
            }

            .color3 {
                grid-column: 2;
                width: 50px;

                display: flex;
                align-items: center;

                input {
                    margin-right: 5px;
                }
            }

            .expand {
                grid-column: 3;
                display: grid;
                align-items: center;
                justify-items: center;
                cursor: pointer;
            }

            .copy {
                grid-column: 4;
                display: grid;
                align-items: center;
                justify-items: center;
                cursor: pointer;
                img {
                    height: 100%;
                }
            }
        }

        .secondLine {
            display: grid;
            padding-right: 5px;
            border-left: 1px solid rgb(51, 122, 183);

            .numeric {
                display: grid;
                grid-template-columns: 1fr auto;
            }

            .numeric-label {
                text-align: right;
                grid-column: 1;
                display: flex;
                align-items: center;
                justify-self: right;
                margin-right: 10px;
            }

            .numeric-value {
                width: 120px;
                grid-column: 2;
                display: flex;
                align-items: center;
                border: 1px solid rgb(51, 122, 183);
            }
        }
    }

    .textLine {
        padding-left: $line-padding-sides;
        height: 30px;
        display: grid;
        grid-template-columns: 1fr auto;

        .label {
            grid-column: 1;
            display: flex;
            align-items: center;
        }

        .link-value {
            grid-column: 2;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
            text-align: end;
            opacity: 0.8;
            margin: 5px;
            margin-top: 6px;
            max-width: 140px;
            text-decoration: underline;
            cursor: pointer;
        }

        .value {
            grid-column: 2;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
            text-align: end;
            opacity: 0.8;
            margin: 5px;
            margin-top: 6px;
            max-width: 200px;
            user-select: text;

            &.check {
                color: green;
            }

            &.uncheck {
                color: red;
            }
        }
    }
}
